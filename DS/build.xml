<project name="version-update" default="info">

	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>
	
	<target name="info">
		<echo message="Usage:"/>
		<echo message="target update-ds: Updates the DS version. First edit the version.properties and launch this target."/>
		<echo message="target update-ocs: Update the OCS version."/>
	</target>

	<target name="update-ds">
		<property file="version.properties"/>
		<echo message="Updating DS version to ${ds.release}.${ds.patch}, target platform: ${ds.target.platform.version} and marketting version ${ds.mkt.version}..."/>
		
		<!-- default values -->
		<property name="Bundle-Version" value="${ds.release}.${ds.patch}"/>
		<property name="module-xml-version" value="${Bundle-Version}-SNAPSHOT"/>
		
		<!-- replace version in version.properties -->
		<echo message="Updating version.properties"/>
		<replace.version.in.properties.file property="ds.release">
			<fileset file="version.properties"/>
		</replace.version.in.properties.file>
		<replace.version.in.properties.file property="ds.patch">
			<fileset file="version.properties"/>
		</replace.version.in.properties.file>
		<replace.version.in.properties.file property="ds.target.platform.version">
			<fileset file="version.properties"/>
		</replace.version.in.properties.file>
		<replace.version.in.properties.file property="ds.mkt.version">
			<fileset file="version.properties"/>
		</replace.version.in.properties.file>
		
		<!-- replace version in manifests -->
		<echo message="Updating version in MANIFEST.MF"/>
		<replace.version.in.manifest.file property="Bundle-Version">
			<fileset dir=".">
				<include name="**/MANIFEST.MF"/>
			</fileset>
		</replace.version.in.manifest.file>
		
		<!-- replace version in product files -->
		<echo message="Updating version in product files"/>
		<replace.version.in.attribute.of.xml.file attribute="version" new-value="${Bundle-Version}.qualifier">
			<fileset dir=".">
				<include name="designstudio/products/**/*.product"/>
				<include name="products-build/**/products/**/*.product"/>
				<include name="products-build/product-validation/**/*.product"/>
			</fileset>
		</replace.version.in.attribute.of.xml.file>
		
		<!-- replace target platform version in product files -->
		<replace.target.platform.version.in.product.file new-value="${ds.target.platform.version}">
			<fileset dir=".">
				<include name="designstudio/products/**/*.product"/>
				<include name="products-build/**/products/**/*.product"/>
				<include name="products-build/product-validation/**/*.product"/>
			</fileset>
		</replace.target.platform.version.in.product.file>

		<!-- replace version in module.xmls -->
		<echo message="Updating version in module.xml (b2)"/>
		<replace.version.in.pom.xml.file new-value="${module-xml-version}">
			<fileset dir=".">
				<include name="**/module.xml"/>
			</fileset>
		</replace.version.in.pom.xml.file>

		<!-- update poms of test -->
		<echo message="Updating pom of tests (except poms related to OCS)"/>
		<replace.version.in.pom.xml.file new-value="${Bundle-Version}-SNAPSHOT">
			<fileset dir=".">
				<exclude name="tests/ocs-gen-unit/ocs-models/visualrules/pom.xml"/>
				<exclude name="tests/ocs-refapp-integration/**/pom.xml"/>
				<exclude name="tests/ocs-models-integration-tests/**/pom.xml"/>
				<exclude name="tests/ds-ui-integration/eclipse/plugins/com.odcgroup.workbench.integration.tests/resources/serverProject/pom.xml"/>
				<include name="tests/**/pom.xml"/>
			</fileset>
		</replace.version.in.pom.xml.file>
		
		<!-- update feature.xml -->
		<echo message="Updating tests/**/feature.xml"/>
		<replace.version.in.feature.xml.file new-value="${Bundle-Version}.qualifier">
			<fileset dir=".">
				<include name="tests/**/feature.xml"/>
			</fileset>
		</replace.version.in.feature.xml.file>
		
		<!-- update site.xml -->
		<replace.site.xml.file new-value="${Bundle-Version}.qualifier">
			<fileset dir=".">
				<include name="tests/**/site.xml"/>
			</fileset>
		</replace.site.xml.file>

		<!-- Replace the version in the pom.xmls of the b2 templates -->
		<echo message="Updating b2-templates/pom.xml"/>
		<replace.version.in.pom.xml.file new-value="${Bundle-Version}-SNAPSHOT">
			<fileset dir=".">
				<include name="b2-templates/pom.xml"/>
				<include name="dependencies/**/*pom.xml"/>
			</fileset>
		</replace.version.in.pom.xml.file>

		<!-- Replace pom property -->
		<echo message="Updating pom property"/>
		<replace.property.in.pom.xml.file property="ds.generator.version.for.pms" new-value="${Bundle-Version}">
			<fileset dir=".">
				<include name="tests/pms-packager-test/pms-custo-models/pom.xml"/>
				<include name="tests/pms-packager-test/pms-models-gen/pom.xml"/>
			</fileset>
		</replace.property.in.pom.xml.file>
		<replace.property.in.pom.xml.file property="designStudio.generatorT24.version" new-value="${Bundle-Version}-SNAPSHOT">
			<fileset dir=".">
				<include name="tests/ds-ui-integration/eclipse/site/pom.xml"/>
			</fileset>
		</replace.property.in.pom.xml.file>

		<!-- update poms of t24-maven -->
		<echo message="Updating pom of t24-maven"/>
		<replace.version.in.pom.xml.file new-value="${ds.target.platform.version}">
			<fileset dir=".">
				<include name="t24-maven/**/pom.xml"/>
			</fileset>
		</replace.version.in.pom.xml.file>
		<replace.property.in.pom.xml.file property="designStudio.generatorT24.version" new-value="${Bundle-Version}-SNAPSHOT">
			<fileset dir=".">
				<include name="t24-maven/t24-core/pom.xml"/>
			</fileset>
		</replace.property.in.pom.xml.file>
		<replace.property.in.pom.xml.file property="com.odcgroup.maven.plugin.t24-extensions" new-value="${ds.target.platform.version}">
			<fileset dir=".">
				<include name="t24-maven/t24-core/pom.xml"/>
			</fileset>
		</replace.property.in.pom.xml.file>
		
		<!-- update t24-maven -->
		<echo message="Updating reference in t24-maven"/>
		<replace.version.in.pom.xml.file new-value="${ds.target.platform.version}">
			<fileset dir=".">
				<include name="t24-maven/**/pom.xml"/>
			</fileset>
		</replace.version.in.pom.xml.file>
		
		<!-- update pom of t24-binaries -->
		<echo message="Updating pom of t24-binaries"/>
		<replace.version.in.pom.xml.file new-value="${ds.target.platform.version}">
			<fileset dir=".">
				<include name="t24-binaries/additionnal-artifact-template.xml"/>
			</fileset>
		</replace.version.in.pom.xml.file>

	</target>


	<macrodef name="replace.version.in.pom.xml.file">
		<attribute name="new-value"/>
		<element name="some-fileset" implicit="true"/>
		
		<sequential>
			<echo message="[POM] Updating pom version (and parent version) in the following pom.xml files:"/>
			
			<local name="echo.path"/>
			<pathconvert pathsep="${line.separator}|   |-- "             
			        property="echo.path">
				<some-fileset/>
		    </pathconvert>
			<echo message="${echo.path}"/>
			<echo message="(Please note this is the list of processed files but not the list of MODIFIED files.)"/>

			<xmltask todir=".">
				<replace path="/:project/:parent/:version/text()" withText="@{new-value}"/>
				<replace path="/:project/:version/text()" withText="@{new-value}"/>
				<some-fileset/>
			</xmltask>
		</sequential>
	</macrodef>

	<macrodef name="replace.property.in.pom.xml.file">
		<attribute name="property"/>
		<attribute name="new-value"/>
		<element name="some-fileset" implicit="true"/>
		
		<sequential>
			<echo message="[POM] Updating pom version (and parent version) in the following pom.xml files:"/>
			
			<local name="echo.path"/>
			<pathconvert pathsep="${line.separator}|   |-- "             
			        property="echo.path">
				<some-fileset/>
		    </pathconvert>
			<echo message="${echo.path}"/>
			<echo message="(Please note this is the list of processed files but not the list of MODIFIED files.)"/>

			<xmltask todir=".">
				<replace path="/:project/:properties/:@{property}/text()" withText="@{new-value}"/>
				<some-fileset/>
			</xmltask>
		</sequential>
	</macrodef>

	<macrodef name="replace.version.in.feature.xml.file">
		<attribute name="new-value"/>
		<element name="some-fileset" implicit="true"/>
		
		<sequential>
			<echo message="[FEATURE] Updating feature version in the following files:"/>
			
			<local name="echo.path"/>
			<pathconvert pathsep="${line.separator}|   |-- "             
			        property="echo.path">
				<some-fileset/>
		    </pathconvert>
			<echo message="${echo.path}"/>
			<echo message="(Please note this is the list of processed files but not the list of MODIFIED files.)"/>

			<xmltask todir="." failWithoutMatch="true">
				<replace path="/feature/@version" withText="@{new-value}"/>
				<some-fileset/>
			</xmltask>
		</sequential>
	</macrodef>

	<macrodef name="replace.site.xml.file">
		<attribute name="new-value"/>
		<element name="some-fileset" implicit="true"/>
		
		<sequential>
			<echo message="[FEATURE] Updating feature version in the following files:"/>
			
			<local name="echo.path"/>
			<pathconvert pathsep="${line.separator}|   |-- "             
			        property="echo.path">
				<some-fileset/>
		    </pathconvert>
			<echo message="${echo.path}"/>
			<echo message="(Please note this is the list of processed files but not the list of MODIFIED files.)"/>

			<!-- <feature url="features/com.odcgroup.integrationtests_15.0.1.qualifier.jar" id="com.odcgroup.integrationtests" version="15.0.1.qualifier"> -->
			<replaceregexp byline="true">
				<regexp pattern="url=&quot;(.*)_(.*).jar&quot;(.*)version=&quot;(.*)&quot;"/>
				<substitution expression="url=&quot;\1_@{new-value}.jar&quot;\3version=&quot;@{new-value}&quot;"/>
				<some-fileset/>
			</replaceregexp>
		</sequential>
	</macrodef>

	<macrodef name="replace.version.in.attribute.of.xml.file">
		<attribute name="attribute"/>
		<attribute name="new-value"/>
		<element name="some-fileset" implicit="true"/>
		
		<sequential>
			<echo message="[XML ATTRIBUTE] Updating @{attribute} to @{new-value} in the following XML files:"/>
			
			<local name="echo.path"/>
			<pathconvert pathsep="${line.separator}|   |-- "             
			        property="echo.path">
				<some-fileset/>
		    </pathconvert>
			<echo message="${echo.path}"/>
			<echo message="(Please note this is the list of processed files but not the list of MODIFIED files.)"/>

			<replaceregexp byline="true">
				<regexp pattern="&lt;product (.*)@{attribute}=&quot;([\w\.]*)&quot;(.*)&gt;"/>
				<substitution expression="&lt;product \1@{attribute}=&quot;@{new-value}&quot;\3&gt;"/>
				<some-fileset/>
			</replaceregexp>
		</sequential>
	</macrodef>

	<macrodef name="replace.target.platform.version.in.product.file">
		<attribute name="new-value"/>
		<element name="some-fileset" implicit="true"/>
		
		<sequential>
			<echo message="[PRODUCT] Updating ds.target.plateform.version to @{new-value} in the following files:"/>
			
			<local name="echo.path"/>
			<pathconvert pathsep="${line.separator}|   |-- "             
			        property="echo.path">
				<some-fileset/>
		    </pathconvert>
			<echo message="${echo.path}"/>
			<echo message="(Please note this is the list of processed files but not the list of MODIFIED files.)"/>

			<replaceregexp byline="true">
				<regexp pattern="-Dds.target.platform.version=([\w\.\-]*)"/>
				<substitution expression="-Dds.target.platform.version=@{new-value}"/>
				<some-fileset/>
			</replaceregexp>
		</sequential>
	</macrodef>

	<macrodef name="replace.version.in.properties.file">
		<attribute name="property"/>
		<element name="some-fileset" implicit="true"/>
		
		<sequential>
			<echo message="[PROPERTIES] Updating @{property} to ${@{property}} in the following PROPERTIES files:"/>
			<fail message="No value provided for @{property}" unless="@{property}"/>

			<local name="echo.path"/>
			<pathconvert pathsep="${line.separator}|   |-- "             
			        property="echo.path">
				<some-fileset/>
		    </pathconvert>
			<echo message="${echo.path}"/>
			<echo message="(Please note this is the list of processed files but not the list of MODIFIED files.)"/>

			<replaceregexp byline="true">
				<regexp pattern="@{property}=(.*)"/>
				<substitution expression="@{property}=${@{property}}"/>
				<some-fileset/>
			</replaceregexp>
		</sequential>
	</macrodef>

	<macrodef name="replace.version.in.manifest.file">
		<attribute name="property"/>
		<element name="some-fileset" implicit="true"/>
		
		<sequential>
			<echo message="[MANIFEST] Updating @{property} to ${@{property}} in the following MANIFEST files:"/>
			<fail message="No value provided for @{property}" unless="@{property}"/>

			<local name="echo.path"/>
			<pathconvert pathsep="${line.separator}|   |-- "             
			        property="echo.path">
				<some-fileset/>
		    </pathconvert>
			<echo message="${echo.path}"/>
			<echo message="(Please note this is the list of processed files but not the list of MODIFIED files.)"/>

			<replaceregexp byline="true">
				<regexp pattern="@{property}: (.*)"/>
				<substitution expression="@{property}: ${@{property}}.qualifier"/>
				<some-fileset/>
			</replaceregexp>
		</sequential>
	</macrodef>

	<target name="check-params-ocs">
		<fail message="from.ocs not set" unless="from.ocs" />
		<fail message="to.ocs not set" unless="to.ocs" />
	</target>

	<target name="update-ocs" depends="check-params-ocs">
		<!-- Replace the version in the deps-pom.xmls -->
		<echo message="Updating designstudio/**/deps-pom.xml..."/>
		<replace dir="designstudio" token="${from.ocs}" value="${to.ocs}" summary="true">
			<include name="**/deps-pom.xml"/>
		</replace>
		<!-- Replace the version in the pom.xmls of the dependencies folder -->
		<echo message="Updating dependencies/**/pom.xml..."/>
		<replace dir="dependencies" token="${from.ocs}" value="${to.ocs}" summary="true">
			<include name="**/pom.xml"/>
		</replace>

		<!-- Replace the version in the pom.xmls of the test using ocs binaries -->
		<echo message="Updating tests/ocs-models-integration-tests/**/pom.xml..."/>
		<replace dir="tests/ocs-models-integration-tests" token="${from.ocs}-SNAPSHOT" value="${to.ocs}-SNAPSHOT" summary="true">
			<include name="**/pom.xml"/>
		</replace>
		<echo message="Updating tests/ocs-refapp-integration/**/pom.xml..."/>
		<replace dir="tests/ocs-refapp-integration" token="${from.ocs}-SNAPSHOT" value="${to.ocs}-SNAPSHOT" summary="true">
			<include name="**/pom.xml"/>
		</replace>
	</target>
	
</project>
