package com.odcgroup.aaa.connector.domainmodel.ids;

import java.io.Serializable;

import com.odcgroup.aaa.connector.domainmodel.ScriptDefinitionEntity;


/**
 * ScriptDefinitionEntity's JPA Application identity class (AKA *Ref class, the PK as object).
 * 
 * Hand-written, but strongly inspired by an example generated by the org.apache.openjpa.enhance.ApplicationIdTool.
 * 
 * @see ScriptDefinitionEntity
 * 
 * @author Michael Vorburger
 */
public class ScriptDefinitionEntityId implements Serializable
{
    private static final long serialVersionUID = -4474165050313751116L;

    public long attribute;
    public Long object;
    
    public int nature;
    public int rank;

    static {
        // register persistent class in JVM (the OpenJPA ApplicationIdTool gen. this; seemed like a good idea)
        try {
            Class.forName(ScriptDefinitionEntity.class.getName());
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        } 
    }

    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + (int) (attribute ^ (attribute >>> 32));
        result = prime * result + nature;
        result = prime * result + ((object == null) ? 0 : object.hashCode());
        result = prime * result + rank;
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;
        final ScriptDefinitionEntityId other = (ScriptDefinitionEntityId) obj;
        if (attribute != other.attribute) return false;
        if (nature != other.nature) return false;
        if (object == null) {
            if (other.object != null) return false;
        } else if (!object.equals(other.object)) return false;
        if (rank != other.rank) return false;
        return true;
    }

}
