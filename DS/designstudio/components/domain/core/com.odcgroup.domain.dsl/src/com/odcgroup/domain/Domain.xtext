grammar com.odcgroup.domain.Domain with com.odcgroup.workbench.dsl.Common hidden(WS, SL_COMMENT)

import "platform:/resource/com.odcgroup.mdf.ecore/src/main/model/mdf.ecore" 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

MdfDomain returns MdfDomain:
	(documentation=Documentation)?
	'Domain' name=ID 
	(annotations+=MdfAnnotation)*
	'namespace' namespace=String_Value
	'metamodelVersion' metamodelVersion=String_Value
	('deprecationInfo' MdfDeprecationInfo)? 
	('Classes' '{' (classes+=MdfClass)+ '}' )?
	('Datasets' '{' (datasets+=MdfDataset)+ '}')?
	('BusinessTypes' '{' (businessTypes+=MdfBusinessType)+ '}')?
	('Enumerations' '{' (enumerations+=MdfEnumeration)+ '}')?
;

MdfPrimitive returns MdfPrimitive:
	MdfPrimitive_Impl | MdfEnumeration | MdfBusinessType;

MdfProperty returns MdfProperty:
	MdfAttribute | MdfAssociation | MdfReverseAssociation;

MdfDatasetProperty returns MdfDatasetProperty:
	MdfDatasetDerivedProperty | MdfDatasetMappedProperty;

MdfEntity returns MdfEntity:
	MdfClass | MdfPrimitive_Impl | MdfEnumeration | MdfDataset | MdfBusinessType;

MdfDeprecationInfo:
	'version=' String_Value 'comment=' String_Value;

MdfAnnotation returns MdfAnnotation:
	'@'	namespace=Namespace ':' name=ID ('(' properties+=MdfAnnotationProperty (',' properties+=MdfAnnotationProperty)* ')')?;

Namespace returns ecore::EString :
	String_Value;

Documentation returns ecore::EString :
	ML_DOC
;

MdfClass returns MdfClass:
	(documentation=Documentation)?
	(abstract?='abstract')? ('secured')? name=String_Value ('extends' baseClass=[MdfClass|Ref])?
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
	('{' (properties+=MdfProperty)* '}' )
;

MdfDataset returns MdfDataset:
	(documentation=Documentation)?
	name=String_Value ('basedOn' baseClass=[MdfClass|Ref])? (linked?='default')? (sync?='synchronized')?
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
	('{' (properties+=MdfDatasetProperty)* '}' )?
;

MdfBusinessType returns MdfBusinessType:
	(documentation=Documentation)?
	name=String_Value ':' (type=[MdfPrimitive|Ref])?
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
;

MdfEnumeration returns MdfEnumeration:
	(documentation=Documentation)?
	name=String_Value ':' (type=[MdfPrimitive|Ref])? (acceptNullValue?='acceptNullValue')?
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
	(values+=MdfEnumValue)* 
;

MdfPrimitive_Impl returns MdfPrimitive:
	{MdfPrimitive}
	name=ID;

MdfAnnotationProperty returns MdfAnnotationProperty:
	(cDATA?='cDATA')? name=String_Value ('=' value=String_Value)?;

enum MdfMultiplicity returns MdfMultiplicity:
	MANY = '*' | ONE = 'ONE';

MdfAttribute returns MdfAttribute:
	(documentation=Documentation)?
	name=String_Value ':' type=[MdfPrimitive|Ref]? (multiplicity=MdfMultiplicity)? (businessKey?='BK')? (primaryKey?='PK')? (required?='required')? ('default' '=' default=String_Value)?
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
;

MdfAssociation returns MdfAssociation:
	(documentation=Documentation)?
	name=String_Value '->' (containment=MdfContainment)? (type=[MdfClass|Ref])? (multiplicity=MdfMultiplicity)? (businessKey?='BK')? (primaryKey?='PK')? (required?='required')?
	('reverse' '{' reverse=MdfReverseAssociation '}')?
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
;

MdfReverseAssociation returns MdfReverseAssociation:
	(documentation=Documentation)?
	name=String_Value '<-' reversedAssociationType=[MdfClass|Ref] ':' reversedAssociation=[MdfAssociation] (multiplicity=MdfMultiplicity)? (businessKey?='BK')? (primaryKey?='PK')? (required?='required')?
	
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
;

enum MdfContainment returns MdfContainment:
	BY_REFERENCE = 'byReference' | BY_VALUE = 'byValue';

MdfDatasetDerivedProperty returns MdfDatasetDerivedProperty:
	(documentation=Documentation)?
	name=String_Value ':' (type=[MdfEntity|Ref])? ('default' '=' default=String_Value)? (multiplicity=MdfMultiplicity)?
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
;

MdfDatasetMappedProperty returns MdfDatasetMappedProperty:
	(documentation=Documentation)?
	name=String_Value (unique=UniqueBoolean)? (singleValued?='singleValued')? '->' (path=String_Value)? ('[' linkDataset=[MdfDataset|Ref] ']')?
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
;

MdfEnumValue returns MdfEnumValue:
	(documentation=Documentation)?
	name=String_Value '=' value=String_Value
	(annotations+=MdfAnnotation)*
	('deprecationInfo' MdfDeprecationInfo)? 
;

// Data type rules
Ref :
	ID (':' ID)?;

UniqueBoolean returns ecore::EBoolean :
	'notUnique';

// Terminals

terminal ML_DOC	: '/*' -> '*/';

terminal SL_COMMENT : '#' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS			: (' '|'\t' | '\r'|'\n')+;
