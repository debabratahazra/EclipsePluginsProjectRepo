/*
 * generated by Xtext
 */
package com.odcgroup.domain.formatting;

import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.util.Pair;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an
 * example
 */
public class DomainFormatter extends AbstractDeclarativeFormatter {

	@Override
	protected void configureFormatting(FormattingConfig c) {
		// we do not want any auto linewrapping, so we set a very big value in here
		c.setAutoLinewrap(1000000);

		com.odcgroup.domain.services.DomainGrammarAccess f = (com.odcgroup.domain.services.DomainGrammarAccess) getGrammarAccess();

		c.setLinewrap().after(f.getMdfDomainAccess().getDocumentationAssignment_0());
		c.setLinewrap().after(f.getMdfDomainAccess().getNameAssignment_2());
		c.setLinewrap().after(f.getMdfDomainAccess().getNamespaceAssignment_5());
		c.setLinewrap().after(f.getMdfDomainAccess().getMetamodelVersionAssignment_7());
		c.setLinewrap().before(f.getMdfDomainAccess().getDatasetsKeyword_10_0());
				
		c.setLinewrap().before(f.getMdfDomainAccess().getClassesAssignment_9_2());
		c.setLinewrap().after(f.getMdfDomainAccess().getRightCurlyBracketKeyword_9_3());
		
		c.setLinewrap().before(f.getMdfDomainAccess().getDatasetsAssignment_10_2());
		c.setLinewrap().after(f.getMdfDomainAccess().getRightCurlyBracketKeyword_10_3());
		
		c.setLinewrap().before(f.getMdfDomainAccess().getBusinessTypesAssignment_11_2());
		c.setLinewrap().after(f.getMdfDomainAccess().getRightCurlyBracketKeyword_11_3());

		c.setLinewrap().before(f.getMdfDomainAccess().getEnumerationsMdfEnumerationParserRuleCall_12_2_0());

		c.setLinewrap().before(f.getMdfDomainAccess().getRightCurlyBracketKeyword_11_3());

		c.setLinewrap().after(f.getMdfAnnotationAccess().getGroup_4());
		c.setLinewrap().before(f.getMdfAnnotationAccess().getCommercialAtKeyword_0());
		
		c.setLinewrap().after(f.getMdfClassAccess().getDocumentationAssignment_0());
		// surprisingly doesn't work: c.setLinewrap().after(f.getMdfClassAccess().getGroup_4());
		c.setLinewrap().before(f.getMdfClassAccess().getAnnotationsAssignment_5());
		c.setLinewrap().after(f.getMdfClassAccess().getGroup());
		c.setLinewrap().before(f.getMdfClassAccess().getRightCurlyBracketKeyword_7_2());
		c.setLinewrap().before(f.getMdfClassAccess().getLeftCurlyBracketKeyword_7_0());
		
		c.setLinewrap().after(f.getMdfDatasetAccess().getDocumentationAssignment_0());
		c.setLinewrap().after(f.getMdfDatasetAccess().getSyncAssignment_4());
		c.setLinewrap().after(f.getMdfDatasetAccess().getLeftCurlyBracketKeyword_7_0());
		c.setLinewrap().after(f.getMdfDatasetAccess().getGroup());
		
		c.setLinewrap().after(f.getMdfBusinessTypeAccess().getDocumentationAssignment_0());
		c.setLinewrap().after(f.getMdfBusinessTypeAccess().getTypeAssignment_3());
		c.setLinewrap().after(f.getMdfBusinessTypeAccess().getGroup());

		c.setLinewrap().after(f.getMdfEnumerationAccess().getDocumentationAssignment_0());
		c.setLinewrap().after(f.getMdfEnumerationAccess().getAcceptNullValueAssignment_4());
		c.setLinewrap().after(f.getMdfEnumerationAccess().getGroup());
		c.setLinewrap().before(f.getMdfEnumerationAccess().getValuesAssignment_7());

		c.setLinewrap().before(f.getMdfAttributeAccess().getGroup());
		c.setLinewrap().after(f.getMdfAttributeAccess().getDocumentationAssignment_0());
		// surprisingly doesn't work: c.setLinewrap().after(f.getMdfAttributeAccess().getGroup_8());
		c.setLinewrap().before(f.getMdfAttributeAccess().getAnnotationsAssignment_9());

		c.setLinewrap().before(f.getMdfAssociationAccess().getGroup());
		c.setLinewrap().after(f.getMdfAssociationAccess().getDocumentationAssignment_0());
		c.setLinewrap().after(f.getMdfAssociationAccess().getRequiredAssignment_8());
		c.setLinewrap().before(f.getMdfAssociationAccess().getReverseKeyword_9_0());
		c.setLinewrap().after(f.getMdfAssociationAccess().getReverseKeyword_9_0());
		c.setLinewrap().before(f.getMdfAssociationAccess().getReverseAssignment_9_2());
		// surprisingly doesn't work: c.setLinewrap().after(f.getMdfAssociationAccess().getRightCurlyBracketKeyword_9_3());
		c.setLinewrap().before(f.getMdfAssociationAccess().getAnnotationsAssignment_10());
		c.setLinewrap().before(f.getMdfAssociationAccess().getRightCurlyBracketKeyword_9_3());
		
		c.setLinewrap().after(f.getMdfReverseAssociationAccess().getDocumentationAssignment_0());
		c.setLinewrap().before(f.getMdfReverseAssociationAccess().getAnnotationsAssignment_10());

		c.setLinewrap().before(f.getMdfDatasetAccess().getAnnotationsAssignment_5());
		c.setLinewrap().before(f.getMdfDatasetAccess().getPropertiesAssignment_7_1());
		
		c.setLinewrap().before(f.getMdfDatasetAccess().getRightCurlyBracketKeyword_7_2());
		c.setLinewrap().before(f.getMdfDatasetAccess().getLeftCurlyBracketKeyword_7_0());
		
//		c.setLinewrap().after(f.getMdfDatasetPropertyAccess().getRule());
//		c.setLinewrap().after(f.getMdfDatasetPropertyAccess().getAlternatives());
		
		c.setLinewrap().after(f.getMdfDatasetDerivedPropertyAccess().getDocumentationAssignment_0());
		c.setLinewrap().after(f.getMdfDatasetDerivedPropertyAccess().getMultiplicityAssignment_5());
		c.setLinewrap().before(f.getMdfDatasetDerivedPropertyAccess().getAnnotationsAssignment_6());
		c.setLinewrap().before(f.getMdfDatasetDerivedPropertyAccess().getNameAssignment_1());

		c.setLinewrap().after(f.getMdfDatasetMappedPropertyAccess().getDocumentationAssignment_0());
		c.setLinewrap().after(f.getMdfDatasetMappedPropertyAccess().getGroup_6());
		c.setLinewrap().before(f.getMdfDatasetMappedPropertyAccess().getAnnotationsAssignment_7());
		c.setLinewrap().before(f.getMdfDatasetMappedPropertyAccess().getNameAssignment_1());

		c.setLinewrap().before(f.getMdfEnumValueAccess().getDocumentationAssignment_0());
		c.setLinewrap().after(f.getMdfEnumValueAccess().getDocumentationAssignment_0());
		c.setLinewrap().after(f.getMdfEnumValueAccess().getValueAssignment_3());

		c.setNoSpace().before(f.getMdfAnnotationAccess().getColonKeyword_2());
		c.setNoSpace().after(f.getMdfAnnotationAccess().getColonKeyword_2());
		
		c.setIndentationIncrement().before(f.getMdfEnumValueAccess().getGroup());
		c.setIndentationDecrement().after(f.getMdfEnumValueAccess().getGroup());

		c.setIndentationIncrement().after(f.getMdfAssociationAccess().getLeftCurlyBracketKeyword_9_1());
		c.setIndentationDecrement().before(f.getMdfAssociationAccess().getRightCurlyBracketKeyword_9_3());
		
		for (Pair<Keyword, Keyword> pair : f.findKeywordPairs("{", "}")) {
			c.setIndentation(pair.getFirst(), pair.getSecond());
		}

		for (Pair<Keyword, Keyword> pair : f.findKeywordPairs("[", "]")) {
			c.setNoSpace().after(pair.getFirst());
			c.setNoSpace().before(pair.getSecond());
		}

		for (Keyword comma : f.findKeywords(",")) {
			c.setNoSpace().before(comma);
		}

		for (Keyword at : f.findKeywords("@")) {
			c.setNoSpace().after(at);
			c.setIndentationIncrement().before(at);
			c.setIndentationDecrement().after(at);
		}

		for (Keyword eq : f.findKeywords("=")) {
			c.setNoSpace().before(eq);
			c.setNoSpace().after(eq);
		}

		for (Keyword openingP : f.findKeywords("(")) {
			c.setNoSpace().after(openingP);
		}

		for (Keyword closingP : f.findKeywords(")")) {
			c.setNoSpace().before(closingP);
		}

		c.setNoSpace().after(f.getMdfReverseAssociationAccess().getReversedAssociationTypeAssignment_3());
		c.setNoSpace().before(f.getMdfReverseAssociationAccess().getReversedAssociationAssignment_5());
		
	}
}
