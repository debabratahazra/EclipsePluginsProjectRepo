package com.odcgroup.domain.derived;

import com.google.inject.Inject;
import com.odcgroup.domain.DomainInjectorProvider;
import com.odcgroup.mdf.ecore.MdfDomainImpl;
import java.util.Map;
import java.util.Set;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.InMemoryFileSystemAccess;
import org.eclipse.xtext.junit4.InjectWith;
import org.eclipse.xtext.junit4.XtextRunner;
import org.eclipse.xtext.junit4.util.ParseHelper;
import org.eclipse.xtext.junit4.validation.ValidationTestHelper;
import org.eclipse.xtext.xbase.compiler.JvmModelGenerator;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.Extension;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(XtextRunner.class)
@InjectWith(DomainInjectorProvider.class)
@SuppressWarnings("all")
public class DomainJvmModelInferrerTest {
  @Inject
  @Extension
  private JvmModelGenerator _jvmModelGenerator;
  
  @Inject
  @Extension
  private ValidationTestHelper _validationTestHelper;
  
  @Inject
  @Extension
  private ParseHelper<MdfDomainImpl> _parseHelper;
  
  @Test
  public void inferMdfClass() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Domain Foo");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@java:Package (value=test)");
    _builder.newLine();
    _builder.append("namespace \"http://www.odcgroup.com/foo\"");
    _builder.newLine();
    _builder.append("metamodelVersion 4.3.0.20110527");
    _builder.newLine();
    _builder.append("Classes {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/* class Foo */");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Foo {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("id : mml:string PK");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* attribute of type short */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("attributeFoo : short");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* association of type Foo */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("associationFoo -> Foo:Foo");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("reverse {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("/* reverse association of type Foo */ ");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("reverseAssociationFoo <- Foo:Foo:associationFoo");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/* class Bar which extends class Foo */");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Bar extends Foo:Foo {}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("=== DEFAULT_OUTPUTFoo/Bar.java ===");
    _builder_1.newLine();
    _builder_1.append("package Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("import Foo.Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* class Bar which extends class Foo");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("public class Bar extends Foo {");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("=== DEFAULT_OUTPUTFoo/Foo.java ===");
    _builder_1.newLine();
    _builder_1.append("package Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("import java.math.BigDecimal;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* class Foo");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("public class Foo {");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("public String id;");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* attribute of type short");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("public BigDecimal attributeFoo;");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* association of type Foo");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("public Foo associationFoo;");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* reverse association of type Foo");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("public Foo reverseAssociationFoo;");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    this.generateJvmModel(_builder, _builder_1.toString());
  }
  
  @Test
  public void inferMdfDataset() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Domain Foo");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@java:Package (value=test)");
    _builder.newLine();
    _builder.append("namespace \"http://www.odcgroup.com/foo\"");
    _builder.newLine();
    _builder.append("metamodelVersion 4.3.0.20110527");
    _builder.newLine();
    _builder.append("Classes {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Foo {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("id : mml:string PK required");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("attributeFoo : URI");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("Datasets {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/* dataset Bar */");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Bar basedOn Foo:Foo {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* derived property of type Foo */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("deriverdPropertyFoo : Foo:Foo");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* property mapped to property attributeFoo of base type Bar */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mappedPropertyFoo -> attributeFoo");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* mapped property of type Bar */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("otherMappedPropertyFoo -> lalalaProperty [Foo:Bar]");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("=== DEFAULT_OUTPUTFoo/Bar.java ===");
    _builder_1.newLine();
    _builder_1.append("package Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("import Foo.Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* dataset Bar");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("public class Bar {");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* derived property of type Foo");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("public Foo deriverdPropertyFoo;");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* property mapped to property attributeFoo of base type Bar");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("public String mappedPropertyFoo;");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* mapped property of type Bar");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("public Bar otherMappedPropertyFoo;");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("=== DEFAULT_OUTPUTFoo/Foo.java ===");
    _builder_1.newLine();
    _builder_1.append("package Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("public class Foo {");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("public String id;");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("public String attributeFoo;");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    this.generateJvmModel(_builder, _builder_1.toString());
  }
  
  @Test
  public void inferMdfEnumeration() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Domain Foo");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@java:Package (value=test)");
    _builder.newLine();
    _builder.append("namespace \"http://www.odcgroup.com/foo\"");
    _builder.newLine();
    _builder.append("metamodelVersion 4.3.0.20110527");
    _builder.newLine();
    _builder.append("Enumerations {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/* enumeration Foo */");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Foo : mml:integer");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* enum literal literalFoo */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("literalFoo = 1");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* enum literal literalFoo2 */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("literalFoo2 = 2");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* enum literal literalFoo3 */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("literalFoo3 = 3");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/* enumeration Switch */");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Switch : boolean");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* enum literal on */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("on = true");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("/* enum literal off */");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("off = false");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("=== DEFAULT_OUTPUTFoo/Foo.java ===");
    _builder_1.newLine();
    _builder_1.append("package Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* enumeration Foo");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("public enum Foo {");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* enum literal literalFoo");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("literalFoo,");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* enum literal literalFoo2");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("literalFoo2,");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* enum literal literalFoo3");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("literalFoo3;");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("=== DEFAULT_OUTPUTFoo/Switch.java ===");
    _builder_1.newLine();
    _builder_1.append("package Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* enumeration Switch");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("public enum Switch {");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* enum literal on");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("on,");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("/**");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("* enum literal off");
    _builder_1.newLine();
    _builder_1.append("   ");
    _builder_1.append("*/");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("off;");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    this.generateJvmModel(_builder, _builder_1.toString());
  }
  
  @Test
  public void inferMdfBusinessType() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Domain Foo");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@java:Package (value=test)");
    _builder.newLine();
    _builder.append("namespace \"http://www.odcgroup.com/foo\"");
    _builder.newLine();
    _builder.append("metamodelVersion 4.3.0.20110527");
    _builder.newLine();
    _builder.append("BusinessTypes {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/* business type Foo */");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Foo : dateTime");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/* business type Bar */");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Bar : mml:string");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("=== DEFAULT_OUTPUTFoo/Bar.java ===");
    _builder_1.newLine();
    _builder_1.append("package Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("public class Bar {");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("=== DEFAULT_OUTPUTFoo/Foo.java ===");
    _builder_1.newLine();
    _builder_1.append("package Foo;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("@SuppressWarnings(\"all\")");
    _builder_1.newLine();
    _builder_1.append("public class Foo {");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    this.generateJvmModel(_builder, _builder_1.toString());
  }
  
  public void generateJvmModel(final CharSequence domainCode, final String expectedJavaCode) {
    try {
      final MdfDomainImpl domain = this._parseHelper.parse(domainCode);
      this._validationTestHelper.assertNoErrors(domain);
      this._validationTestHelper.assertNoIssues(domain);
      final InMemoryFileSystemAccess fsa = new InMemoryFileSystemAccess();
      Resource _eResource = domain.eResource();
      this._jvmModelGenerator.doGenerate(_eResource, fsa);
      StringConcatenation _builder = new StringConcatenation();
      {
        Map<String, Object> _allFiles = fsa.getAllFiles();
        Set<Map.Entry<String, Object>> _entrySet = _allFiles.entrySet();
        for(final Map.Entry<String, Object> file : _entrySet) {
          _builder.append("=== ");
          String _key = file.getKey();
          _builder.append(_key, "");
          _builder.append(" ===");
          _builder.newLineIfNotEmpty();
          Object _value = file.getValue();
          _builder.append(_value, "");
          _builder.newLineIfNotEmpty();
        }
      }
      String _string = _builder.toString();
      Assert.assertEquals(expectedJavaCode, _string);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
