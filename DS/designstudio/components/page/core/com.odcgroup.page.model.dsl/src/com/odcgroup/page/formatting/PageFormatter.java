/*
 * generated by Xtext
 */
package com.odcgroup.page.formatting;

import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.util.Pair;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class PageFormatter extends AbstractDeclarativeFormatter {
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
		c.setAutoLinewrap(1000000);

		com.odcgroup.page.services.PageGrammarAccess f = (com.odcgroup.page.services.PageGrammarAccess) getGrammarAccess();

		//Model
		c.setLinewrap(2).after(f.getModelAccess().getMetamodelVersionAssignment_3());
		
		// Widget
		c.setLinewrap().after(f.getWidgetAccess().getHyphenMinusHyphenMinusHyphenMinusKeyword_4());
		c.setLinewrap().after(f.getWidgetAccess().getLabelsAssignment_5_1());
		c.setLinewrap().after(f.getWidgetAccess().getToolTipsAssignment_6_1());

		c.setIndentationIncrement().before(f.getWidgetAccess().getPropertiesAssignment_7());
		c.setIndentationDecrement().after(f.getWidgetAccess().getPropertiesAssignment_7());	
		c.setIndentationIncrement().before(f.getWidgetAccess().getLabelsKeyword_5_0());
		c.setIndentationDecrement().after(f.getWidgetAccess().getLabelsKeyword_5_0());
		c.setIndentationIncrement().before(f.getWidgetAccess().getToolTipsKeyword_6_0());
		c.setIndentationDecrement().after(f.getWidgetAccess().getToolTipsKeyword_6_0());

		// Event
		c.setLinewrap().after(f.getEventAccess().getNatureAssignment_5());
		c.setLinewrap().before(f.getEventAccess().getLeftCurlyBracketKeyword_9_0());

		// Snippet
		c.setLinewrap().before(f.getSnippetAccess().getLeftCurlyBracketKeyword_4_0());
		
		// Property
		c.setLinewrap().before(f.getPropertyAccess().getGroup());
		c.setLinewrap().after(f.getPropertyAccess().getGroup());
		c.setLinewrap().before(f.getPropertyAccess().getModelAssignment_6_1());		
		
		// Parameter
		c.setLinewrap().after(f.getParameterAccess().getGroup());
		
		// General formatting
		for(Pair<Keyword, Keyword> pair: f.findKeywordPairs("{", "}")) {
			c.setIndentation(pair.getFirst(), pair.getSecond());
			c.setLinewrap(1).after(pair.getFirst());
			c.setLinewrap(1).before(pair.getSecond());
			c.setLinewrap(1).after(pair.getSecond());
		}

		for(Pair<Keyword, Keyword> pair: f.findKeywordPairs("(", ")")) {
			c.setNoSpace().after(pair.getFirst());
			c.setNoSpace().before(pair.getSecond());
		}

		for(Keyword comma: f.findKeywords(",")) {
			c.setNoLinewrap().before(comma);
			c.setNoLinewrap().after(comma);
			c.setNoSpace().before(comma);
		}

		for(Keyword colon: f.findKeywords(":")) {
			c.setNoSpace().before(colon);
			c.setNoSpace().after(colon);
		}
	}
}
