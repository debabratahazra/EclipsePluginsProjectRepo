«IMPORT pageflow»

«EXTENSION com::odcgroup::pageflow::generation::ocs::ext::pageflowHelper» 

«DEFINE PageflowConfigRoot FOR Pageflow»
	«EXPAND PageflowRoot»
	«EXPAND GraphRoot»
«ENDDEFINE»

«DEFINE GraphRoot FOR Pageflow»    
	<!--
		*************************************
		«name» graph
		*************************************
	-->
	
	<wf:graph name="«name»Graph">
		<!-- ============================== -->	
	    <!-- declaration of the used states -->
	    <!-- ============================== -->
	    «FOREACH states.typeSelect(EndState) AS s-»
	    <wf:state key="«s.name»" is-terminal="true"/>
	    «ENDFOREACH-»
	    «FOREACH states.typeSelect(ViewState) AS s-»
	    <wf:state key="«s.name»"/>
	    «ENDFOREACH-»
   
    	<!-- ============================== -->
        <!-- declaration of init transition -->
        <!-- ============================== -->
        «FOREACH transitions.typeSelect(Transition).select(t|t.fromState.metaType==InitState) AS t-»
        «IF t.toState.metaType!=DecisionState-»
        <wf:init-transition name="«t.name»" to-state="«t.toState.name»">        
        «ELSE-»
        <wf:init-transition name="«t.name»" to-redirector="true">        
        «ENDIF-»
        	«FOREACH t.actions AS p-»
        	«IF p.problemManagement.toString()=='Validation'-»
        	«IF p.uri==null || p.uri.length==0-»
        	<wf:validation/>
        	«ELSE-»
	      	«IF p.property.size == 0-»
	      	<wf:validation class-name="«p.uri.resolveActionUrl()»"/>
	      	«ELSE-»
	      	<wf:validation class-name="«p.uri.resolveActionUrl()»">
	      	«FOREACH p.property AS pr-»
		      	<wf:property name="«pr.name»" value="«escape(pr.value)»"/>
	      	«ENDFOREACH-»
	      	</wf:validation>
	      	«ENDIF-»        	
	      	«ENDIF-»
        	«ELSE-»
	      	«IF p.property.size == 0-»
	      	<wf:process class-name="«p.uri.resolveActionUrl()»"«IF !p.stopOnFailure -» stop-on-failure="false"«ENDIF-»/>
	      	«ELSE-»
	      	<wf:process class-name="«p.uri.resolveActionUrl()»"«IF !p.stopOnFailure -» stop-on-failure="false"«ENDIF-»>
	      	«FOREACH p.property AS pr-»
		      	<wf:property name="«pr.name»" value="«escape(pr.value)»"/>
	      	«ENDFOREACH-»
	      	</wf:process>
	      	«ENDIF-»
	      	«IF p.problemManagement.toString()=='Go back'-»
	      	<wf:validation/>
	      	«ENDIF-»
        	«ENDIF-»
        	«ENDFOREACH-»
			«EXPAND DecisionHandler(t)-»              	        	
        </wf:init-transition>
        «ENDFOREACH-»	    
        <!-- ============================== -->
        <!-- declaration of the transitions -->
        <!-- ============================== -->
        «FOREACH transitions.typeSelect(Transition).select(t|t.fromState.metaType!=InitState && t.fromState.metaType!=DecisionState) AS t-»
        «IF t.toState.metaType!=DecisionState -»
        «IF t.actions.size>0-»
        <wf:transition name="«t.name»" from-state="«t.fromState.name»" to-state="«t.toState.name»" «IF !t.isIdempotent -»is-idempotent="false"«ENDIF-»>
        «ELSE-»
        <wf:transition name="«t.name»" from-state="«t.fromState.name»" to-state="«t.toState.name»" «IF !t.isIdempotent -»is-idempotent="false"«ENDIF-»/>        
        «ENDIF-»
        «ELSEIF t.toState.metaType==DecisionState -»
        «IF t.actions.size>0-»
        <wf:transition name="«t.name»" from-state="«t.fromState.name»" to-redirector="true" «IF !t.isIdempotent -»is-idempotent="false"«ENDIF-»>        
        «ELSE-»
		«LET ((DecisionState)t.toState) AS d-»
		«IF d.action.uri != ''-»
		<wf:transition name="«t.name»" from-state="«t.fromState.name»" to-redirector="true" «IF !t.isIdempotent -»is-idempotent="false"«ENDIF-»>
		«ELSE-» 
        <wf:transition name="«t.name»" from-state="«t.fromState.name»" to-redirector="true" «IF !t.isIdempotent -»is-idempotent="false"«ENDIF-»/>
        «ENDIF-»
        «ENDLET-»                
        «ENDIF-»
        «ENDIF-»
        	«FOREACH t.actions AS p-»
        	«IF p.problemManagement.toString()=='Validation'-»
	      	«IF p.property.size == 0-»
        	«IF p.uri==null || p.uri.length==0-»
        	<wf:validation/>
        	«ELSE-»
	      	<wf:validation class-name="«p.uri.resolveActionUrl()»"/>
	      	«ENDIF-»
	      	«ELSE-»
	      	<wf:validation class-name="«p.uri.resolveActionUrl()»">
	      	«FOREACH p.property AS pr-»
		      	<wf:property name="«pr.name»" value="«escape(pr.value)»"/>
	      	«ENDFOREACH-»
	      	</wf:validation>
	      	«ENDIF-»        	
        	«ELSE-»
	      	«IF p.property.size == 0-»
	      	<wf:process class-name="«p.uri.resolveActionUrl()»"«IF !p.stopOnFailure -» stop-on-failure="false"«ENDIF-»/>
	      	«ELSE-»
	      	<wf:process class-name="«p.uri.resolveActionUrl()»"«IF !p.stopOnFailure -» stop-on-failure="false"«ENDIF-»>
	      	«FOREACH p.property AS pr-»
		      	<wf:property name="«pr.name»" value="«escape(pr.value)»"/>
	      	«ENDFOREACH-»
	      	</wf:process>
	      	«ENDIF-»
	      	«IF p.problemManagement.toString()=='Go back'-»
	      	<wf:validation/>
	      	«ENDIF-»
        	«ENDIF-»
        	«ENDFOREACH-»
        	«EXPAND DecisionHandler(t)-»            	
        «IF t.actions.size>0-»	
        </wf:transition>
        «ELSEIF t.toState.metaType==DecisionState -»
		«LET ((DecisionState)t.toState) AS d-»
		«IF d.action.uri!=''-»
		</wf:transition>        
        «ENDIF-»
        «ENDLET-»
        «ENDIF-»
        «ENDFOREACH-»	    
	</wf:graph>
«ENDDEFINE»

«DEFINE PageflowRoot FOR Pageflow»	
	<!-- 
		*****************************************************
		Design Studio information of pageflow model
		Model name       : «name»
		Description      : «desc»
		******************************************************
    -->	
    
	<!-- 
		*************************************
		«name» workflow
		*************************************
    -->

	<wf:workflow name="«name»" graph="«name»Graph">
	    <!-- declaration of the used panels -->
	    «FOREACH property AS p-»
	    <wf:property name="«p.name»" value="«escape(p.value)»"/>
	    «ENDFOREACH-»
		«IF abortView!=null-»
		<wf:abort-view «abortView.url.resolveUrl()»/>
		«ENDIF-»
		<wf:error-view «errorView.url.resolveUrl()»/>
		«FOREACH states.typeSelect(ViewState) AS s-»
		«IF s.view.url!=null-»
		<wf:view state-key="«s.name»" «s.view.url.resolveUrl(true)»/>		
		«ENDIF-»
		«ENDFOREACH-»
		«FOREACH states.typeSelect(EndState) AS s-»
		«IF s.exitUrl!=null-»
		<wf:view state-key="«s.name»" «s.exitUrl.resolveUrl()»/>
		«ENDIF-»		
		«ENDFOREACH-»
	</wf:workflow>
«ENDDEFINE»

«DEFINE DecisionHandler (Transition t) FOR Pageflow-»
	«IF t.toState.metaType==DecisionState-»
    «LET ((DecisionState)t.toState) AS d-»
    «IF d.action.uri!=''-»
  	«IF d.action.property.size == 0-»
  			<wf:process class-name="«d.action.uri.resolveActionUrl()»"/>
  	«ELSE-»
  			<wf:process class-name="«d.action.uri.resolveActionUrl()»">
  	«FOREACH d.action.property AS pr-»
   	  			<wf:property name="«pr.name»" value="«escape(pr.value)»"/>
  	«ENDFOREACH-»
			</wf:process>
  	«ENDIF-»
  	«ENDIF-»
			<wf:redirector>
	«FOREACH transitions.typeSelect(Transition).select(tmp|tmp.fromState.name==d.name) AS tmp-»
    «IF tmp.toState.metaType==DecisionState-»    	
    «EXPAND HandleRedirector(tmp)-»
    «ELSE-»
    	«IF tmp.actions.size != 0-»
    	«EXPAND HandleActions(tmp)-»		
    	«ELSE-»
   				<wf:result state="«tmp.toState.name»" value="«tmp.name»" />
   		«ENDIF-»		
    «ENDIF-»		      		
    «ENDFOREACH-»	
			</wf:redirector>
	«ENDLET-»	        		
	«ENDIF-»        	
«ENDDEFINE»

«DEFINE HandleRedirector(Transition t) FOR Pageflow-»
				«IF t.toState != t.fromState-»
 				<wf:result value="«t.name»">
 					<wf:transition to-redirector="true" name="«t.toState.name»" «IF !t.isIdempotent -»is-idempotent="false"«ENDIF-»>
						«IF t.actions.size > 0-»
							«FOREACH t.actions AS p-»
				        	«IF p.problemManagement.toString()=='Validation'-»
					      	«IF p.property.size == 0-»
				        	«IF p.uri==null || p.uri.length==0-»
				        	<wf:validation/>
				        	«ELSE-»
					      	<wf:validation class-name="«p.uri.resolveActionUrl()»"/>
					      	«ENDIF-»
					      	«ELSE-»
					      	<wf:validation class-name="«p.uri.resolveActionUrl()»">
					      	«FOREACH p.property AS pr-»
						      	<wf:property name="«pr.name»" value="«escape(pr.value)»"/>
					      	«ENDFOREACH-»
					      	</wf:validation>
					      	«ENDIF-»        	
				        	«ELSE-»
					      	«IF p.property.size == 0-»
					      	<wf:process class-name="«p.uri.resolveActionUrl()»"«IF !p.stopOnFailure -» stop-on-failure="false"«ENDIF-»/>
					      	«ELSE-»
					      	<wf:process class-name="«p.uri.resolveActionUrl()»"«IF !p.stopOnFailure -» stop-on-failure="false"«ENDIF-»>
					      	«FOREACH p.property AS pr-»
						      	<wf:property name="«pr.name»" value="«escape(pr.value)»"/>
					      	«ENDFOREACH-»
					      	</wf:process>
					      	«ENDIF-»
							«IF p.problemManagement.toString()=='Go back'-»
							<wf:validation/>
							«ENDIF-»
				        	«ENDIF-»
				        	«ENDFOREACH-»
						«ENDIF-»
						«EXPAND DecisionHandler(t)-»
 					</wf:transition>
 				</wf:result>	
 				«ENDIF-»
«ENDDEFINE»

«DEFINE HandleActions(Transition t) FOR Pageflow-»
 				<wf:result value="«t.name»">
 					<wf:transition to-state="«t.toState.name»" name="«t.name»" «IF !t.isIdempotent -»is-idempotent="false"«ENDIF-»>
						«IF t.actions.size > 0-»
							«FOREACH t.actions AS p-»
				        	«IF p.problemManagement.toString()=='Validation'-»
					      	«IF p.property.size == 0-»
				        	«IF p.uri==null || p.uri.length==0-»
				        	<wf:validation/>
				        	«ELSE-»
					      	<wf:validation class-name="«p.uri.resolveActionUrl()»"/>
					      	«ENDIF-»
					      	«ELSE-»
					      	<wf:validation class-name="«p.uri.resolveActionUrl()»">
					      	«FOREACH p.property AS pr-»
						      	<wf:property name="«pr.name»" value="«escape(pr.value)»"/>
					      	«ENDFOREACH-»
					      	</wf:validation>
					      	«ENDIF-»        	
				        	«ELSE-»
					      	«IF p.property.size == 0-»
					      	<wf:process class-name="«p.uri.resolveActionUrl()»"«IF !p.stopOnFailure -» stop-on-failure="false"«ENDIF-»/>
					      	«ELSE-»
					      	<wf:process class-name="«p.uri.resolveActionUrl()»"«IF !p.stopOnFailure -» stop-on-failure="false"«ENDIF-»>
					      	«FOREACH p.property AS pr-»
						      	<wf:property name="«pr.name»" value="«escape(pr.value)»"/>
					      	«ENDFOREACH-»
					      	</wf:process>
					      	«ENDIF-»
							«IF p.problemManagement.toString()=='Go back'-»
							<wf:validation/>
							«ENDIF-»
				        	«ENDIF-»
				        	«ENDFOREACH-»
						«ENDIF-»
 					</wf:transition>
 				</wf:result>
«ENDDEFINE»
