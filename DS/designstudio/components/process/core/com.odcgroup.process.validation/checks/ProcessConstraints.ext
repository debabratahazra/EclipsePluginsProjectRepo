import process;
import com::odcgroup::process::model::constraints;

Boolean checkParticipantRefSpecified(Pool pool) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkParticipantRefSpecified(com.odcgroup.process.model.Pool);
	
Boolean checkProcessDisplayName(Process process) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkProcessDisplayName(com.odcgroup.process.model.Process);
	
Boolean checkProcessName(Process process) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkProcessName(com.odcgroup.process.model.Process);
	
Boolean checkPoolName(Pool pool) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkPoolName(com.odcgroup.process.model.Pool);
	
Boolean checkPoolID(Pool pool) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkPoolID(com.odcgroup.process.model.Pool);

Boolean checkPoolServiceName(Pool pool) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkPoolServiceName(com.odcgroup.process.model.Pool);
	
Boolean checkUserTaskName(Task task) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkUserTaskName(com.odcgroup.process.model.Task);

Boolean checkUserTaskID(Task task) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkUserTaskID(com.odcgroup.process.model.Task);

Boolean checkUserTaskRulePageflowName(UserTask userTask) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkUserTaskRulePageflowName(com.odcgroup.process.model.UserTask);

Boolean checkServiceTaskServiceName(ServiceTask serviceTask) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkServiceTaskServiceName(com.odcgroup.process.model.ServiceTask);

Boolean checkGatewayName(Gateway gateway) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkGatewayName(com.odcgroup.process.model.Gateway);

Boolean checkGatewayID(Gateway gateway) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkGatewayID(com.odcgroup.process.model.Gateway);

Boolean checkComplexGatewayRuleScript(ComplexGateway complexGateway) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkComplexGatewayRuleScript(com.odcgroup.process.model.ComplexGateway);
	
Boolean checkComplexGatewayScriptValue(ComplexGateway complexGateway) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkComplexGatewayScriptValue(com.odcgroup.process.model.ComplexGateway);
	
Boolean checkStartEventName(StartEvent event) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkStartEventName(com.odcgroup.process.model.StartEvent);
	
Boolean checkStartEventID(StartEvent event) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkStartEventID(com.odcgroup.process.model.StartEvent);

Boolean checkMergeOnlyoneOutFlow(Gateway gateway) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkMergeOnlyoneOutFlow(com.odcgroup.process.model.Gateway);

Boolean checkStartEventOnlyoneOutFlow(StartEvent startEvent) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkStartEventOnlyoneOutFlow(com.odcgroup.process.model.StartEvent);
	
Boolean checkComplexGatewayManyOutFlow(ComplexGateway gateway) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkComplexGatewayManyOutFlow(com.odcgroup.process.model.ComplexGateway);

Boolean checkTaskManyOutFlow(Task task) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkTaskManyOutFlow(com.odcgroup.process.model.Task);

Boolean checkParallelForkManyOutFlow(ParallelFork gateway) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkParallelForkManyOutFlow(com.odcgroup.process.model.ParallelFork);

Boolean checkExclusiveMergeInFlow(ExclusiveMerge exclusiveMerge) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkExclusiveMergeInFlow(com.odcgroup.process.model.ExclusiveMerge);

Boolean checkParallelMergeInFlow(ParallelMerge parallelMerge) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkParallelMergeInFlow(com.odcgroup.process.model.ParallelMerge);

Boolean checkEndEventInFlow(EndEvent event) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkEndEventInFlow(com.odcgroup.process.model.EndEvent);
	
Boolean checkTaskInFlow(Task event) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkTaskInFlow(com.odcgroup.process.model.Task);

Boolean checkComplexGatewayOnlyOneInFlow(ComplexGateway gateway) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkComplexGatewayOnlyOneInFlow(com.odcgroup.process.model.ComplexGateway);

Boolean checkParallelForkOnlyOneInFlow(ParallelFork gateway) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkParallelForkOnlyOneInFlow(com.odcgroup.process.model.ParallelFork);
		
Boolean checkEndEventName(EndEvent event) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkEndEventName(com.odcgroup.process.model.EndEvent);
	
Boolean checkEndEventID(EndEvent event) : 
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkEndEventID(com.odcgroup.process.model.EndEvent);
	
Boolean checkPageflowReference(UserTask userTask) :
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.checkReference(com.odcgroup.process.model.UserTask);
	
Boolean isModelNameDifferentFromFile(Process process) :
	JAVA com.odcgroup.process.validation.constraints.ProcessConstraints.isModelNameDifferentFromFile(com.odcgroup.process.model.Process);
