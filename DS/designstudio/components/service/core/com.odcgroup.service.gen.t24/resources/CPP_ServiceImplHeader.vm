#ifndef ${service.getServiceImplName().toUpperCase()}_H
\#define ${service.getServiceImplName().toUpperCase()}_H

\#include <jsystem.h>
\#include <TAFCSession.h>	
\#include "${service.getServiceAPIName()}.h"

namespace temenos {${formatter.indent()}
  namespace soa {${formatter.indent()}
    namespace ${service.getNamespace()} {${formatter.indent()}
      class ${service.getServiceImplName()} : public ${service.getServiceAPIName()} {${formatter.indent()}
			public:
${service.declareServiceImplConstructor()}
${service.declareServiceImplDeconstructor()}

#set( $operationList = $service.getGenOperations())
#foreach($operation in $operationList)
${operation.getCppOperationComment()}
${operation.declareCppOperation(false)}

#end

  			/*********************************************/
        /*Function : 	GetMetaData*/
        /*  retrieve service meta data*/
        /*********************************************/ 
        std::string GetMetaData();
        
        /********************************************/
        /*Function : SetContextCallback*/
        /*  retrieve context call back*/
        /********************************************/
        void SetContextCallback(
            temenos::soa::common::ContextCallback* contextCallback);
        
				
			private:			  
				// jBASEDataAreas *dp;
				temenos::soa::common::ContextCallback* m_contextCallback;
				temenos::soa::common::UserContext currentUserContext;
				tafc::session::TAFCSession* session;
				void initSession();
				void cleanupSession();
				void executeRoutine(
						const std::string routineName,
						tafc::session::ArgList& args,
						temenos::soa::common::SOAResponseDetail& responseDetail);
	    };${formatter.outdent()}

	  }${formatter.outdent()}
  }${formatter.outdent()}
}${formatter.outdent()}

#endif