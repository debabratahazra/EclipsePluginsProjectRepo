\#include "${service.getDotNetServiceImplClassName()}.h"

#set($cppStdClassRefList = ${service.getCppStdClsRefList()})
#foreach($cppStdClassRef in $cppStdClassRefList)
\#include <${cppStdClassRef}>
#end

\#include <SOAResponseDetail.h>
\#include <SOAResponseDetailMarshal.h>
#set($cppUserClassRefList = ${service.getCppUserClsRefList()})
#foreach($cppUserClassRef in $cppUserClassRefList)
\#include <${cppUserClassRef}.h>
#end

using System::Exception;
using temenos::soa::common::ManagedSOAResponseMessage;
using temenos::soa::common::ManagedMessageType;

namespace temenos {${formatter.indent()}
  namespace soa {${formatter.indent()}
    namespace ${service.getNamespace()} {${formatter.indent()}
${service.defineImplConstructor()}
${service.defineImplDeconstructor()}
${service.defineImplFinalizer()}
	    // Cleanup the resources manually
        void ${service.getDotNetServiceImplClassName()}::DisposeMe() {
			this->!${service.getDotNetServiceImplClassName()}();
		}
	
#set( $operationList = $service.getGenOperations())
#foreach($operation in $operationList)
${operation.defineDotNetOperationInImpl()}

#end
${service.defineGetMetaDataMethod()}
${service.defineSetContextCallbackMethod()} 
	    }${formatter.outdent()}
  }${formatter.outdent()}
}${formatter.outdent()}
