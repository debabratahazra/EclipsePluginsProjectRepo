#ifndef SOA_${service.getDotNetServiceImplClassName().toUpperCase()}_H
\#define SOA_${service.getDotNetServiceImplClassName().toUpperCase()}_H

\#include "${service.getDotNetServiceAPIClassName()}.h"
\#include <${service.getCppServiceAPIClassName()}.h>
\#include <ManagedContextCallbackHandle.h>
using temenos::soa::common::ManagedContextCallback;

namespace temenos {${formatter.indent()}
  namespace soa {${formatter.indent()}
    namespace ${service.getNamespace()} {${formatter.indent()}
	    public ref class ${service.getDotNetServiceImplClassName()} sealed : public ${service.getDotNetServiceAPIClassName()} {${formatter.indent()}
	    public:
	${service.declareImplConstructor()}
	${service.declareImplDeconstructor()}
	${service.declareImplFinalizer()}
			virtual void DisposeMe();
			
	#set( $operationList = $service.getGenOperations())
#foreach($operation in $operationList)
${operation.declareDotNetOperationInImpl()}

#end
${service.declareGetMetaDataMethod()}
${service.declareSetContextCallbackMethod()} 
	    private:
${service.declareImplMember()}
	    };${formatter.outdent()}
    }${formatter.outdent()}
  }${formatter.outdent()}
}${formatter.outdent()}


#endif