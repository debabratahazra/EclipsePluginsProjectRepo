// @author Michael Vorburger
grammar com.odcgroup.t24.version.VersionDSL with com.odcgroup.translation.TranslationDsl
// TODO with com.odcgroup.workbench.dsl.Common instead of org.eclipse.xtext.common.Terminals ? Why? And Xbase?!  
// NOTE: For some reason, "Importing Packages by their namespace URI" (http://www.odcgroup.com/mdf) breaks the Generate Language Infrastructure launch config (used to rebuild the Grammar)
import "platform:/resource/com.odcgroup.mdf.ecore/src/main/model/mdf.ecore" as mdf // NOT import "http://www.eclipse.org/emf/2002/Ecore" as ecore 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
 
generate versionDSL "http://www.odcgroup.com/t24/version/VersionDSL"

// TODO Field order in DSL should be discussed in User Group meeting 

// TODO attributes should take their values from an MdfEnum from EB_Versions.domain?!?

// TODO VersionControl & VersionControlField (a VersionField with only name, mandatory, defaulting & validationRoutine) ?!
  
Version:
	'Screen' forApplication=[mdf::MdfClass|EntityRef] ',' (shortName = NID)?
	('t24Name:'  t24Name = STRING )?
	('metamodelVersion:' metamodelVersion=STRING )?
	('group:' group = STRING)? // == VERSION.TYPE
	('numberOfAuthorisers:' numberOfAuthorisers = INTEGER_OBJECT)? // == NO.OF.AUTH
	('description:' description = Translations)?
	('TransactionFlow' '{'
		('exceptionProcessing:' exceptionProcessing =INTEGER_OBJECT  /* 1..3 */)? // == NAU.PROCESSING
		('interfaceException:' interfaceException = INTEGER_OBJECT /* 1..4 */ )? // == GTS.CONTROL
		('businessDayControl:' businessDayControl = BusinessDayControl)? // == BUSINESS.DAY
		('keySequence:' keySequence += STRING (';'  keySequence += STRING)* )? // ID.AUTOM.SEQ
		('otherCompanyAccess:' otherCompanyAccess = YesNo)? // == COMPANY.ACCESS
		('autoCompanyChange:' autoCompanyChange = YesNo)? // == AUTO.COMP.CHANGE
		('overrideApproval:' overrideApproval = YesNo)? // == AUTO.OVERRIDES
		('dealSlips:' dealSlipFormats += DealSlip (';' dealSlipFormats += DealSlip)* )?
		// TODO dealSlipsTrigger only present if any dealSlips?
		('dealSlipsTrigger:' dealSlipTrigger = DealSlipTrigger )?
		('dealSlipStyleSheet:' dealSlipStyleSheet = STRING )?
	'}')?
	('Presentation' '{'
		('recordsPerPage:' recordsPerPage = STRING)?
		('fieldsPerLine:' fieldsPerLine = STRING)?
		// TODO Must be a Reference to Field of THIS Version.. but [Field|ID] doesn't work yet 
		('initialCursorPosition:' initialCursorPosition = STRING)? // == INITIAL.CURSOR.POS
		('browserToolbar:' browserToolbar = STRING)? // This could in the future become a reference to a Browser Toolbar Model
		('language:' languageLocale += NID (';'  languageLocale += NID)* )?
		('header1:' header1 = Translations)?
		('header2:' header2 = Translations)?
		('header:' header = Translations )?
		('footer:' footer = Translations )?
	'}')?
	('Relationship' '{'
		('nextVersion:' nextVersion = [Version|VersionRef]
		('nextVersionFunction:' nextVersionFunction = Function )?
		('nextVersionTransactionReference:' nextTransactionReference = ("AUTO" | STRING) )? // TODO Test, I'm not 100% sure this "AUTO" | STRING works - if it doesn't, could be made just String and a completion rule instead?
		)? 
		('associatedVersions:' associatedVersions += [Version|VersionRef] (';' associatedVersions += [Version|VersionRef])* )?
	'}')?
	('API' '{'
		('includeVersionControl:' includeVersionControl = YesNo)? // == EXC.INC.RTN
		('authorizationRoutines:' authorizationRoutines += Routine (';' authorizationRoutines += Routine)* )?
		('authorizationRoutinesAfterCommit:' authorizationRoutinesAfterCommit += Routine (';' authorizationRoutinesAfterCommit += Routine)* )? // BEFORE.AUTH.RTN
		('inputRoutines:' inputRoutines += Routine (';' inputRoutines += Routine)* )?
		('inputRoutinesAfterCommit:' inputRoutinesAfterCommit += Routine (';' inputRoutinesAfterCommit += Routine)* )? // AFTER.UNAU.RTN
		('keyValidationRoutines:' keyValidationRoutines += Routine (';' keyValidationRoutines += Routine)* )? // ID.RTN
		('preProcessValidationRoutines:' preProcessValidationRoutines += Routine (';' preProcessValidationRoutines += Routine)* )? // CHECK.REC.RTN
		('webValidationRoutines:' webValidationRoutines += Routine (';' webValidationRoutines += Routine)* )? // WEB.VAL.RTN
		'}')?
	('IB' '{'
			('confirmVersion:' confirmVersion = [Version|VersionRef] )? // CONFIRM.VERSION
			('previewVersion:' previewVersion = [Version|VersionRef] )? // PREVIEW.VERSION
			('challengeResponse:' challengeResponse = STRING)? // == CHALL.RESP
	'}')?
		('attributes:' attributes += STRING (';' attributes += STRING) *)? // == ATTRIBS
	
	('WebServices' '{'
		('publish:' publishWebService = YesNo)? // == EXPOSE
		('activity:' webServiceActivity = STRING)? // == ACTIVITY
		('function:' webServiceFunction = Function)? // == FUNCT
		('description:' webServiceDescription = STRING)? // == EXPOSE.DESC
		('names:' webServiceNames += STRING (';' webServiceNames += STRING)* )? // == SERVICE. This could in the future become a reference to an EB.Service from TWS EMF Model? 
	'}')?
	('Connect' '{'
		('generateIFP:' generateIFP = YesNo)? // == GENERATION IFP
		('associatedVersionsPresentationPattern:' associatedVersionsPresentationPattern = AssociatedVersionsPresentationPattern)?
		('fieldsLayoutPattern:' fieldsLayoutPattern= FieldsLayoutPattern )?
	'}')?
	'Fields' '{' fields += Field* '}'
	
;

Field:
// TODO Completion & Validation => name must be/reference a field from the application of this Version!
// TODO '*' has to be an allowed (special) field name
	name = STRING '{'
		('Presentation' '{'
			('displayType:' displayType = DisplayType )? // == DISPLAY.TYPE
			('inputBehaviour:' inputBehaviour = InputBehaviour)? // == NOINPUT.FIELD & NOCHANGE.FIELD
			('caseConvention:' caseConvention = CaseConvention )? // == CASE.CONV
			('maxLength:' maxLength = INTEGER_OBJECT )? // == TEXT.CHAR.MAX
			('enrichmentLength:' enrichmentLength = INTEGER_OBJECT )? // == ENRICHM.CHAR
			('expansion:' expansion = Expansion )? // == EXPANSION
			('rightAdjust:' rightAdjust = YesNo )? // == RIGHT.ADJ.FIELD
			('enrichment:' enrichment = YesNo)? 
			('column:' column = INTEGER_OBJECT )? // This is a "virtual" field only available in DS
			('row:' row = INTEGER_OBJECT )?
			('mandatory:' mandatory = YesNo )? // == MANDATORY.FIELD
			('RekeyRequired:' rekeyRequired = YesNo )? // == REKEY.FIELD.NO
			('hyperlink:' hyperlink = STRING)? // == HYPERLINK
			('hotValidate:' hotValidate = YesNo)? // "virtual" field, on Sathya's request, physically this is in ATTRIBUTES in T24 / introspect/installer will map (2012.07.18)
			('hotField:' hotField = YesNo)? 
			('webValidate:' webValidate = YesNo)? 
			// TODO Later this STRING will be transformed to an [Enquiry] Reference 		
			('selectionEnquiry:' selectionEnquiry = STRING )? // == DROP.DOWN
			('enquiryParameter:' enquiryParameter = STRING )? // == ENQ.SELECTION
			('popupBehaviour:' popupBehaviour = PopupBehaviour )? // == POPUP.CONTROL
		'}')?
		('default:' defaults += Default ('OR' defaults += Default)*)?
		('Translations:'
			('label:' label = Translations )? // == TEXT & Co.
			//('promptText:' promptText = Translations )?
			('toolTip:' toolTip = Translations )?
		)?
		('API' '{'
			('validation-routines:' validationRoutines += Routine (';' validationRoutines += Routine)* )?
		'}')?
		('Attributes:' attributes += STRING (';' attributes += STRING) *)? // == ATTRIBS
		('MV:' MV = INTEGER_OBJECT )?
		('SV:' SV = INTEGER_OBJECT )?
	'}'
;

EntityRef : NID ':' NID;
VersionRef: NID ',' NID?;

// This is AUT.OLD.CONTENT & AUT.NEW.CONTENT. UI Labels in Designer should be "Existing Value" & "New Value" :
Default: 'IF' '('(mv=INTEGER_OBJECT)? ('-' sv=INTEGER_OBJECT)? ')' defaultIfOldValueEquals = STRING 'THEN' defaultNewValueOrAtRoutine = ValueOrAtRoutine;
	
// TODO Review/Test & move this out into a separate new Routines Ref DSL plug-in?
Routine: JBCRoutine | JavaRoutine;
AtRoutine: '@' Routine; 
ValueOrAtRoutine: value = STRING | atRoutine = AtRoutine; 
// TODO Routine References definitely need more work... name are not ID but . separated.. lookup & validation how?!
JBCRoutine: "jBC:" name=STRING;
// TODO JavaRoutine should reference existing Java Class through Xbase!!
// TODO com.temenos.modelbank.validation.TheValidator
JavaRoutine: "java:" name=STRING; // TODO must at least allow '.' dots (even if no Xbase) 

// NOTE: We CANNOT have a ',' after format: before function, because that would cause trouble with the comma-separated LocalTranslations
// NOTE: We CANNOT use "function:" instead of "dealSlipFunction: ", because that would cause trouble with the "function:" keyword already used for webServiceFunction  
DealSlip: "format:" format = STRING "dealSlipFunction: " function = DealSlipFormatFunction;


// Enums
// READ http://www.eclipse.org/Xtext/documentation/2_1_0/020-grammar-language.php#syntax_8
// NOTE "Please note, that Ecore does not support unset values for enums" !!!
// THUS "Introduce a dedicated none-value AND (not or?) order the enums accordingly."
// PS: You have to use the T24 Valid Value here.. changing uppercase/lowercase is OK, removing dots or inserting spaces is not!
//
// PPS: Careful, because the Enum's respective String literals turn into data type rules, this
//			enum InterfaceException: n1 = '1' | n2 = '2' | n3 = '3' | n4 = '4';
//			enum ExceptionProcessing: n1 = "1" | n2 = "2" | n3 = "3";
// are not possible, because they would "overshadow" the INT Terminal.
// 
enum YesNo: NULL | Yes | No;
enum PopupBehaviour: None | Calendar | Calculator | RateControl = "RATE CONTROL" | Recurrence;
enum CaseConvention: None | Lowercase | Uppercase | Propercase = 'Proper_Case';
enum DisplayType: None | NoDisplay | Combobox | VerticalOptions = 'Vertical.Options' | Toggle | DropDownNoInput = 'DropDown.NoInput';
enum DealSlipFormatFunction: None | I | A | C | R | D | H | Finish;
enum DealSlipTrigger: None | OL | RQ;
enum BusinessDayControl: None | Normal | Restricted | Closed;
enum Function: None | Input | Authorise | Reverse | See | Copy | Delete | HistoryRestore | Verify | AuditorReview;
enum InputBehaviour: None | NoChange | NoInput;
enum Expansion: None | No;
enum AssociatedVersionsPresentationPattern: None | Tabs | Vertical | Accordions;
enum FieldsLayoutPattern: None | OneRow | OneColumn	| 
	 TwoColumnHorizontal    | TwoColumnVertical | ThreeColumnHorizontal  | ThreeColumnVertical;	

// A NID is like an ID except that it CAN consist of just (a) number/s.
// We need this for the shortName, due to http://rd.oams.com/browse/DS-5671
//DS-8521: If adding any new enums or new literal values to existing enums,
//then please make sure you also add the same to the NID terminal rule to avoid DS-8521.
//Also use only NID and not ID(only for NID) anywhere in this xtext.
 NID:
	(ID | INT | 'NULL' | 'Yes' | 'No' | 'None' | 'Calendar' | 'Calculator' | 'RATE CONTROL' | 'Recurrence' | 'Lowercase'
	| 'Uppercase' | 'Proper_Case' | 'NoDisplay' | 'Combobox' | 'Vertical.Options' | 'Toggle' | 'DropDown.NoInput' | 'I' |
	'A' | 'C' | 'R' | 'D' | 'H' | 'Finish' | 'OL' | 'RQ' | 'Normal' | 'Restricted' | 'Closed' | 'Input' | 'Authorise' |
	'Reverse' | 'See' | 'Copy' | 'Delete' | 'HistoryRestore' | 'Verify' | 'AuditorReview' | 'NoChange' | 'NoInput' |
	'Tabs' | 'Vertical' | 'Accordions' | 'OneRow' | 'OneColumn' | 'TwoColumnHorizontal' | 'TwoColumnVertical' |
	'ThreeColumnHorizontal' | 'ThreeColumnVertical')+;// ID that is used for field names, need to replaced with reference one day
INTEGER_OBJECT returns ecore::EIntegerObject:INT ;
