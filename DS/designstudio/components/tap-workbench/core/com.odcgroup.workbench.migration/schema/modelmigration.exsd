<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.odcgroup.workbench.migration" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="com.odcgroup.workbench.migration" id="modelmigration" name="Model Migration Extension Point"/>
      </appinfo>
      <documentation>
         This extension point allows to contribute model migration logics to the migration framework.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="ModelMigration" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="ContentMigration" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="ModelMigration">
      <annotation>
         <documentation>
            An extension of this kind defines a model &quot;syntax&quot; migration, i.e. it transform the serialized form of the model into a different syntax to make it compatible with the latest version of the parser.
A syntax migration shoud NOT do any changes to the content of the model (such as adding new objects), but restrict itself to purely syntactical changes.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the name of this migration
               </documentation>
            </annotation>
         </attribute>
         <attribute name="modelType" type="string" use="required">
            <annotation>
               <documentation>
                  the model type for which this migration is primarily designed
               </documentation>
            </annotation>
         </attribute>
         <attribute name="requires" type="string">
            <annotation>
               <documentation>
                  migration requires the specified model type(s) to be migrated before its execution.

In case of multiple, specify the model types as comma(,) separated.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="sourceVersion" type="string" use="required">
            <annotation>
               <documentation>
                  the metamodel version of the input
               </documentation>
            </annotation>
         </attribute>
         <attribute name="targetVersion" type="string" use="required">
            <annotation>
               <documentation>
                  the metamodel version of the output or &quot;latest&quot; if this logic is able to always migrate to the latest version.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class that implements the logic
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.odcgroup.workbench.migration.AbstractModelMigration:"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="ContentMigration">
      <annotation>
         <documentation>
            A content migration defines some logic that works on the loaded model - i.e. it expects the model to be correctly parsed and then only does changes on the content of this model.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the name of this migration
               </documentation>
            </annotation>
         </attribute>
         <attribute name="modelType" type="string" use="required">
            <annotation>
               <documentation>
                  the model type for which this migration is primarily designed
               </documentation>
            </annotation>
         </attribute>
         <attribute name="requires" type="string">
            <annotation>
               <documentation>
                  migration requires the specified model type(s) to be migrated before its execution.

In case of multiple, specify the model types as comma(,) separated.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="sourceVersion" type="string" use="required">
            <annotation>
               <documentation>
                  the metamodel version of the input
               </documentation>
            </annotation>
         </attribute>
         <attribute name="targetVersion" type="string" use="required">
            <annotation>
               <documentation>
                  the metamodel version of the output or &quot;latest&quot; if this logic is able to always migrate to the latest version.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class that implements the logic
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.odcgroup.workbench.migration.AbstractContentMigration:"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.40.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
