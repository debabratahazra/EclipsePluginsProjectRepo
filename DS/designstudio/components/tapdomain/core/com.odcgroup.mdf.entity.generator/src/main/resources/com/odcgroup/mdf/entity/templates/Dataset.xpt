«IMPORT com::odcgroup::mdf::metamodel»
«IMPORT com::odcgroup::mdf::mml::java»

«EXTENSION com::odcgroup::mdf::entity::helper::MdfEntityHelper» 

«DEFINE Dataset FOR Collection[MdfDomain]»
	«EXPAND Dataset FOREACH this.entities.typeSelect(MdfDataset)»
«ENDDEFINE»

«DEFINE Dataset FOR MdfDataset»
«FILE getFileName() API»
package «getJavaPackage(parentDomain)»;

import com.odcgroup.mdf.metamodel.MdfName;
import com.odcgroup.otf.jpa.dataset.EntityDataset;
import com.odcgroup.mdf.utils.bean.MdfBeanHelper;
import com.odcgroup.mdf.metamodel.MdfNameFactory;

/**
 * This file has been automatically generated, DO NOT MODIFY!
 * @generated 
 */
public interface «name» extends EntityDataset {
	public static final MdfName MDF_NAME = MdfNameFactory.createMdfName("«parentDomain.name»","«name»");
	public static final MdfBeanHelper.DataBeanFactory<«name»> FACTORY = MdfBeanHelper.newBeanFactory(«name».class);

	«EXPAND interfaceGettersAndSetters FOREACH sortDatasetProperties(properties).typeSelect(MdfDatasetMappedProperty)»
	«EXPAND interfaceGettersAndSetters FOREACH sortDatasetProperties(properties).typeSelect(MdfDatasetDerivedProperty)»
} 
«ENDFILE»
«ENDDEFINE»

«DEFINE interfaceGettersAndSetters FOR MdfDatasetMappedProperty»
	/**
	 * Getter method for «name»
	 */
	public «getJavaType()» get«this.name.toFirstUpper()»();
	
	/**
	 * Setter method for «name»		
	 */
	public void set«this.name.toFirstUpper()»(«getJavaType()» «this.name»);
«ENDDEFINE»

«DEFINE interfaceGettersAndSetters FOR MdfDatasetDerivedProperty»
	/**
	 * Getter method for «name»
	 */
	public «getJavaType()» get«this.name.toFirstUpper()»();
	
	/**
	 * Setter method for «name»		
	 */
	public void set«this.name.toFirstUpper()»(«getJavaType()» «this.name»);
«ENDDEFINE»

