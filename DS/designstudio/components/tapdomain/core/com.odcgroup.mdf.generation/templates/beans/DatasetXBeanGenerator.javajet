<%@ jet package="com.odcgroup.mdf.generation.legacy.java.jet" 
	class="DatasetXBeanGenerator" 
	skeleton="DatasetXBeanGenerator.skel"
	imports="java.util.*
		com.odcgroup.mdf.transform.java.JavaCore
		com.odcgroup.mdf.generation.util.MdfGenerationUtil
		com.odcgroup.mdf.generation.legacy.java.SourceCodeGenerator
		com.odcgroup.mdf.metamodel.*" %>
<%@ include file="../header.txt" %>

package <%= JavaCore.getXBeanPackage(_model) %>;

import java.io.*;

import com.odcgroup.mdf.metamodel.MdfDatasetMappedProperty;

import <%= JavaCore.getModelPackage(_model) %>.*;

import com.odcgroup.mdf.transform.java.xpath.XPathDatasetSkeleton;

<%
String beanClassName = JavaCore.getBeanClassName(_model);
String modelClassName = JavaCore.getModelClassName(_model);
List localProperties = _model.getProperties();
Iterator it = null;
%>

/**
 * @generated
 */
public class <%= beanClassName %> 
	extends XPathDatasetSkeleton implements <%= modelClassName %>, Serializable {

	private static final long serialVersionUID = <%= JavaCore.getSerialVersionUID(_model) %>L;	
	
	private <%= JavaCore.getQualifiedPermValuesClassName(_model) %> _permvalues;

	public <%= beanClassName %>(<%= JavaCore.getQualifiedModelClassName(_model.getBaseClass()) %> domainObject) {
	    super(domainObject);
	    
<%	if (!localProperties.isEmpty()) { %>
		try {
<%
			it = localProperties.iterator();
			while (it.hasNext()) {
				MdfDatasetProperty p = (MdfDatasetProperty) it.next();
				if (p instanceof MdfDatasetDerivedProperty) {
					String initCode = MdfGenerationUtil.getDatasetPropertyInitCode(p);
					if (initCode != null) {
						String fieldName = JavaCore.getFieldName(p);%>
			this.<%= fieldName %> = <%= initCode %>;		
<%					}
				} 
			} %>
		} catch (Exception e) {
            throw (IllegalArgumentException) new IllegalArgumentException(e.getMessage()).initCause(e);
		}	
<% } %>		
	}
	
   //-------------------------------------------------------------------------
	// com.odcgroup.mdf.core.DomainObject

	private static final com.odcgroup.mdf.metamodel.MdfName ENTITY_NAME = 
			com.odcgroup.mdf.metamodel.MdfNameFactory.createMdfName("<%= _model.getQualifiedName().getDomain() %>","<%= _model.getQualifiedName().getLocalName() %>");
	
	/**
	 * @see com.odcgroup.mdf.core.DomainObject.getEntityName()
    */
   public com.odcgroup.mdf.metamodel.MdfName getEntityName() {
       return ENTITY_NAME;
   }
	
<%
	Iterator props = _model.getProperties().iterator();
	
	while (props.hasNext()) {
	    MdfDatasetProperty p = (MdfDatasetProperty) props.next();
	    String typeName = MdfGenerationUtil.getTypeName(p);
	    
	    if (p instanceof MdfDatasetMappedProperty) {
%>	    

	/**
     * @see <%= JavaCore.getQualifiedModelClassName(p.getType()) %>.<%= JavaCore.getGetterName(p) %>
	 * @generated
	 */
    public <%= typeName %> <%= JavaCore.getGetterName(p) %>() {
        return (<%= typeName %>) getPropertyValue((MdfDatasetMappedProperty) <%= JavaCore.getDomainModelClassName(_model.getParentDomain()) %>.<%= JavaCore.getEntityModelInstanceName(_model) %>.getProperty("<%= p.getName() %>"));
    }
    
	/**
	 * Sets the <em><%= JavaCore.getFieldName(p) %></em> property.
	 * @param <%= JavaCore.getFieldName(p) %> the new value of the <em><%= JavaCore.getFieldName(p) %></em> property.
	 * @generated
	 */
	public void <%= JavaCore.getSetterName(p) %>(<%= JavaCore.getShortName(MdfGenerationUtil.getTypeName(p)) %> <%= JavaCore.getFieldName(p) %>) {
		throw new UnsupportedOperationException("Setters are not supported by xpath beans");
	}
<%
	     } else {
%>
	/**
	 * The <em><%= JavaCore.getFieldName(p) %></em> property.
	 * @generated
	 */
    protected <%= JavaCore.getShortName(MdfGenerationUtil.getTypeName(p)) %> <%= JavaCore.getFieldName(p)%>;

	/**
	 * Returns the <em><%= JavaCore.getFieldName(p) %></em> property.
	 * @return the <em><%= JavaCore.getFieldName(p) %></em> property.
	 * @generated
	 */
	public <%= JavaCore.getShortName(MdfGenerationUtil.getTypeName(p)) %> <%= JavaCore.getGetterName(p) %>() {
		return this.<%= JavaCore.getFieldName(p)%>;
	}

	/**
	 * Sets the <em><%= JavaCore.getFieldName(p) %></em> property.
	 * @param <%= JavaCore.getFieldName(p) %> the new value of the <em><%= JavaCore.getFieldName(p) %></em> property.
	 * @generated
	 */
	public void <%= JavaCore.getSetterName(p) %>(<%= JavaCore.getShortName(MdfGenerationUtil.getTypeName(p)) %> <%= JavaCore.getFieldName(p) %>) {
		this.<%= JavaCore.getFieldName(p)%> = <%= JavaCore.getFieldName(p) %>;
	}
<%       }
   }%>	


    //-------------------------------------------------------------------------
	// Perm Values accessors
	
	/**
	 * @return the _permvalues
	 */
	public <%= JavaCore.getQualifiedPermValuesClassName(_model) %> getPermValues() {
		return _permvalues;
	}

	/**
	 * @param _permvalues the _permvalues to set
	 */
	public void setPermvalues(<%= JavaCore.getQualifiedPermValuesClassName(_model) %> permvalues) {
		this._permvalues = permvalues;
	}

}