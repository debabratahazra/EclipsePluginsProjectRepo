<%@ jet package="com.odcgroup.mdf.generation.legacy.java.jet" 
	class="ClassGenerator" 
	skeleton="ClassGenerator.skel"
	imports="java.util.*
		com.odcgroup.mdf.transform.java.JavaCore
		com.odcgroup.mdf.generation.util.MdfGenerationUtil
		com.odcgroup.mdf.generation.legacy.java.SourceCodeGenerator
		com.odcgroup.mdf.metamodel.*" %>
<%@ include file="../header.txt" %>

package <%= JavaCore.getModelPackage(_model) %>;

/**
 * @generated
 */
public interface <%= JavaCore.getModelClassName(_model) %> 
	extends <%= (_model.getBaseClass() != null) ? JavaCore.getQualifiedModelClassName(_model.getBaseClass()) :
		"com.odcgroup.mdf.core.DomainObject" %>
		
<% if (_model.hasPrimaryKey()) { %>
	, com.odcgroup.mdf.core.ReferenceableDomainObject
<% } %>
{
<%
	Iterator props = _model.getProperties().iterator();
	
	while (props.hasNext()) {
	    MdfProperty p = (MdfProperty) props.next();
	    
	    if (p instanceof MdfReverseAssociation) {
	    	// We dont implement reverse association in the interface
	    	continue;	
	    }%> 
	    
		/**
		 * Returns the <em><%= JavaCore.getFieldName(p) %></em> property.
		 * @return the <em><%= JavaCore.getFieldName(p) %></em> property.
		 * <%= (p.getType() instanceof MdfEnumeration) ? "@see " + JavaCore.getQualifiedModelClassName(p.getType()) : "" %>
		 * @generated
         * <%= (p.isPrimaryKey()) ? "@primaryKey" : "" %>
		 */
	    <%= MdfGenerationUtil.getTypeName(p) %> <%= JavaCore.getGetterName(p) %>();
	    
		/**
		 * Sets the <em><%= JavaCore.getFieldName(p) %></em> property.
		 * @param <%= JavaCore.getFieldName(p) %> the new value of the <em><%= JavaCore.getFieldName(p) %></em> property.
		 * <%= (p.getType() instanceof MdfEnumeration) ? "@see " + JavaCore.getQualifiedModelClassName(p.getType()) : "" %>
		 * @generated
         * <%= (p.isPrimaryKey()) ? "@primaryKey" : "" %>
		 */
	    void <%= JavaCore.getSetterName(p) %>(<%= MdfGenerationUtil.getTypeName(p) %> <%= JavaCore.getFieldName(p) %>);
<% }%>	
}