/*
 * generated by Xtext
 */
package com.odcgroup.menu.model.formatting;

import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.util.Pair;

import com.odcgroup.menu.model.services.MenuGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class MenuFormatter extends AbstractDeclarativeFormatter {
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
		c.setAutoLinewrap(1000000);
		MenuGrammarAccess f = (MenuGrammarAccess) getGrammarAccess();
		//MenuRoot
		c.setLinewrap(2).after(f.getMenuRootAccess().getMetamodelVersionAssignment_2());	
		
		//MenuItem
		c.setLinewrap(1).before(f.getMenuItemAccess().getNameAssignment_0());
		c.setLinewrap().after(f.getMenuItemAccess().getNameAssignment_0());
		c.setLinewrap().after(f.getMenuItemAccess().getPageflowAssignment_1_2());
		c.setLinewrap().after(f.getMenuItemAccess().getEnabledAssignment_2_2());
		c.setLinewrap().after(f.getMenuItemAccess().getDisplayTabsAssignment_3_2());
		c.setLinewrap().after(f.getMenuItemAccess().getSecurityRoleAssignment_4_2());
		c.setLinewrap().after(f.getMenuItemAccess().getLabelsAssignment_5_2_1());	
		c.setLinewrap().after(f.getMenuItemAccess().getLeftCurlyBracketKeyword_6_0());

		c.setIndentationIncrement().after(f.getMenuItemAccess().getNameAssignment_0());	
		c.setIndentationDecrement().after(f.getMenuItemRule());
		
		// General formatting
		for(Pair<Keyword, Keyword> pair: f.findKeywordPairs("{", "}")) {
			c.setIndentationDecrement().before(pair.getFirst());
			c.setIndentationIncrement().after(pair.getFirst());
			c.setIndentationDecrement().before(pair.getSecond());
			c.setIndentationIncrement().after(pair.getSecond());
			c.setLinewrap(1).after(pair.getFirst());
			c.setLinewrap(1).before(pair.getSecond());
			c.setLinewrap(1).after(pair.getSecond());
		}

		for(Pair<Keyword, Keyword> pair: f.findKeywordPairs("(", ")")) {
			c.setNoSpace().after(pair.getFirst());
			c.setNoSpace().before(pair.getSecond());
		}

		for(Keyword comma: f.findKeywords(",")) {
			c.setNoLinewrap().before(comma);
			c.setNoLinewrap().after(comma);
			c.setNoSpace().before(comma);
		}

		for(Keyword colon: f.findKeywords(":")) {
			c.setNoSpace().before(colon);
			c.setNoSpace().after(colon);
		}
	}
}
