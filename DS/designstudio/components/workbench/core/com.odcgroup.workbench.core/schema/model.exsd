<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.odcgroup.workbench.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="com.odcgroup.workbench.core" id="model" name="Workbench Model Extension Point"/>
      </appInfo>
      <documentation>
         This extension point is used to register new models with the workbench.
It allows the extensions to initialize the OFS project according to their needs.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="model"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="model">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The (technical) name of the model, usually something short like &quot;pageflow&quot;, &quot;process&quot;, etc.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="initializer" type="string">
            <annotation>
               <documentation>
                  Reference to an initializer class that allows to do model specific initialization of an OFS project.
If it is left empty, the default behaviour will be used: a model folder is created with the name of this model.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":com.odcgroup.workbench.core.init.ProjectInitializer"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="validation" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Defines whether this model type should be regarded during the global model validations. Default is set to &apos;true&apos;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="proxyresolution" use="default" value="lazy">
            <annotation>
               <documentation>
                  Defines whether dependencies should be fetched eagerly or lazily.
By default, dependencies are loaded whenever there is an access in the model to such a dependency.
If the value is set to &quot;eager&quot;, a background job will be scheduled for any newly loaded resource of this model type. This background job will resolve all proxy objects (dependencies) even before anybody tried to access them.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="eager">
                  </enumeration>
                  <enumeration value="lazy">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         1.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         (c) Odyssey Financial Technologies
      </documentation>
   </annotation>

</schema>
