# UTF-8
Domain AAAFormatsAllocOrd 
	@java:Package (value=com.odcgroup.aaa.formats) 
namespace "http://www.odcgroup.com/aaa-formats-alloc-ord" 
metamodelVersion 4.3.0.20110527 
Classes { 
	/* PCK_DS_ALLOC_ORD */ 
	PCK_DS_ALLOC_ORD 
		@aaa:FormatFunction (value="Allocate Order") 
		@aaa:FormatFunctionDictId (value=32) 
		@sql:SQLName (value=PCK_DS_ALLOC_ORD) 
		@aaa:TripleA (EntitySQLName=ext_strategy_element, FinFuncName="Allocate Order", FormatFunctionDictId=32, FormatName=PCK_DS_ALLOC_ORD) 
	{ 
		/* Autogenerated because the T'A Format did not have a Format Element with SQL Name 'id' */ 
		id : mml:long PK required 
			@sql:SQLName (value=id) 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:Code 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_QTY */ 
		OBJ_QTY : AAABusinessTypes:Number 
			@sql:SQLName (value=OBJ_QTY) 
			@aaa:TripleA (FormatEltName=OBJ_QTY, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_WEIGHT_CONTR */ 
		OBJ_WEIGHT_CONTR : AAABusinessTypes:Number 
			@sql:SQLName (value=OBJ_WEIGHT_CONTR) 
			@aaa:TripleA (FormatEltName=OBJ_WEIGHT_CONTR, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_WEIGHT_CONTR_MGN */ 
		OBJ_WEIGHT_CONTR_MGN : AAABusinessTypes:Number 
			@sql:SQLName (value=OBJ_WEIGHT_CONTR_MGN) 
			@aaa:TripleA (FormatEltName=OBJ_WEIGHT_CONTR_MGN, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OPERATION_NAT */ 
		OPERATION_NAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=OPERATION_NAT) 
			@aaa:TripleA (FormatEltName=OPERATION_NAT, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_QTY */ 
		ORDER_QTY : AAABusinessTypes:Number 
			@sql:SQLName (value=ORDER_QTY) 
			@aaa:TripleA (FormatEltName=ORDER_QTY, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:Code 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* STRAT_NAT */ 
		STRAT_NAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=STRAT_NAT) 
			@aaa:TripleA (FormatEltName=STRAT_NAT, ScriptDef) 
			@aaa:scpt (value) 
	} 
	/* PCK_RMT_AO_CNST */ 
	PCK_RMT_AO_CNST 
		@aaa:FormatColumnFilter (value=CONSTRAINTS_FILTER) 
		@aaa:FormatFunction (value="Allocate Order") 
		@sql:SQLName (value=PCK_RMT_AO_CNST) 
		@aaa:TripleA (ColumnFilter=CONSTRAINTS_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Allocate Order", FinFuncProcName=alloc_ord, FormatName=PCK_RMT_AO_CNST) 
	{ 
		/* ALLOC_CONSTR_FILTER */ 
		ALLOC_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=ALLOC_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=ALLOC_CONSTR_FILTER, Rank=11, ScriptDef="{This format element allows only the display of the following Constraints: - Allocation Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Allocation Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)), 1,0)") 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_CONSTR) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, constraint_check_e.LABEL[TSL_CURRENT_LANGUAGE()], constraint_check_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, constraint_check_e.LABEL[TSL_CURRENT_LANGUAGE()], constraint_check_e.LABEL[])") 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_CONSTR_de) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_CONSTR_en) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_CONSTR_fr) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef) 
			@aaa:scpt (value) 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* CONSTR_POS_AFTER */ 
		CONSTR_POS_AFTER : AAABusinessTypes:Number 
			@i18n:Label (de="Aktuelle Position", en="Actual Position", fr="Position actuelle") 
			@sql:SQLName (value=CONSTR_POS_AFTER) 
			@aaa:TripleA (FormatEltName=CONSTR_POS_AFTER, Rank=50, ScriptDef="{This format element displays the weight after orders of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, eff_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n*1 * portfolio_id.mkt_val_m ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the weight after orders of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, eff_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n*1 * portfolio_id.mkt_val_m ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
		
		/* CONSTR_POS_BEFORE */ 
		CONSTR_POS_BEFORE : AAABusinessTypes:Number 
			@i18n:Label (de="Aktuelle Position", en="Actual Position", fr="Position actuelle") 
			@sql:SQLName (value=CONSTR_POS_BEFORE) 
			@aaa:TripleA (FormatEltName=CONSTR_POS_BEFORE, Rank=49, ScriptDef="{This format element displays the actual weight of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, current_market_value_m*1 ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the actual weight of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, current_market_value_m*1 ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
		
		/* CONSTR_REF_CURR */ 
		CONSTR_REF_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=CONSTR_REF_CURR) 
			@aaa:TripleA (FormatEltName=CONSTR_REF_CURR, Rank=47, ScriptDef="{This format element displays the Constraint currency if its bound type is in amount} {------------------------------------------------------------------} IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", model_constr_elt_id.constr_bound_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} model_constr_elt_id.constr_bound_curr_id.code ) )") 
			@aaa:scpt (value="{This format element displays the Constraint currency if its bound type is in amount} {------------------------------------------------------------------} IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", model_constr_elt_id.constr_bound_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} model_constr_elt_id.constr_bound_curr_id.code ) )") 
		
		/* CONSTR_SET_FILTER */ 
		CONSTR_SET_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTR_SET_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTR_SET_FILTER, Rank=14, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2), 1,0)") 
		
		/* CONSTR_SEVERITY_INDI */ 
		CONSTR_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad-Anzeiger, en="Severity Indicator", fr="Indicateur de sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_INDI, Rank=102, ScriptDef="{This script indicates, using \"traffic lights\", if the Constraints defined on a market segment, an instrument or a list of instruments is inline with the actual weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint itself. \"Traffic lights\" are: - \"0\" when actual weight does not breach the Constraint - \"1\" when actual weight breaches the Constraint, but the Constraint severity is not defined as requesting a clarification or blocking - \"2\" when actual weight breaches the Constraints and the Constraint severity is defined as requesting a clarification, but not blocking - \"3\" when actual weight breaches the Constraints and the Constraint severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the actual weight (act_weight_cont_n) of the market segment, instrument or instrument list breaches the Constraint or not. If the actual weight is not breaching the Constraint, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"3\" is returned and the script ends here. Otherwise, the script goes to the next step. 3) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"2\" is returned otherwise it is the value \"1\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (1, 2, 3) {Allocation, Security In and Security Out Constraints} OR strat_nat_e = 4 {Constraints Sets}, {If actual weight is not breaching the Constraint, the returned value is \"0\"} IF( constraint_check_e = 1, 0, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"2\"} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 3, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"1\". If it is not the case, the returned value is \"0\".} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 2, 1 ))), NULL )") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if the Constraints defined on a market segment, an instrument or a list of instruments is inline with the actual weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint itself. \"Traffic lights\" are: - \"0\" when actual weight does not breach the Constraint - \"1\" when actual weight breaches the Constraint, but the Constraint severity is not defined as requesting a clarification or blocking - \"2\" when actual weight breaches the Constraints and the Constraint severity is defined as requesting a clarification, but not blocking - \"3\" when actual weight breaches the Constraints and the Constraint severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the actual weight (act_weight_cont_n) of the market segment, instrument or instrument list breaches the Constraint or not. If the actual weight is not breaching the Constraint, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"3\" is returned and the script ends here. Otherwise, the script goes to the next step. 3) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"2\" is returned otherwise it is the value \"1\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (1, 2, 3) {Allocation, Security In and Security Out Constraints} OR strat_nat_e = 4 {Constraints Sets}, {If actual weight is not breaching the Constraint, the returned value is \"0\"} IF( constraint_check_e = 1, 0, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"2\"} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 3, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"1\". If it is not the case, the returned value is \"0\".} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 2, 1 ))), NULL )") 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef="{This format element displays the severity (also known as criticity) defined on the Constraint. f the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] )") 
			@aaa:scpt (value="{This format element displays the severity (also known as criticity) defined on the Constraint. f the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] )") 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_de) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_en) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_VALU */ 
		CONSTR_SEVERITY_VALUE : AAABusinessTypes:Enum 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_VALUE) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_VALU, Rank=90, ScriptDef="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the Constraint} {-----------------------------------------------------------} criticalness_e") 
			@aaa:scpt (value="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the Constraint} {-----------------------------------------------------------} criticalness_e") 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Behandlung der Einschränkung", en="Constraint Treatment", fr="Traitement de la contrainte") 
			@sql:SQLName (value=CONSTR_TREAT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef="IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_treat_e <> 0 {The value <None> for treatment is not taken into account for the display}, model_constr_elt_id.constr_treat_e.LABEL[TSL_CURRENT_LANGUAGE()])") 
			@aaa:scpt (value="IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_treat_e <> 0 {The value <None> for treatment is not taken into account for the display}, model_constr_elt_id.constr_treat_e.LABEL[TSL_CURRENT_LANGUAGE()])") 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_de) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_en) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_FILTER */ 
		CONSTRAINTS_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTRAINTS_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_FILTER, Rank=10, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Einschränkungen", en="Constraints Set", fr="Set de contraintes") 
			@sql:SQLName (value=CONSTRAINTS_SET) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef="{This format element displays the name of the Constraint, if it is an elment of a Constraints Set. The algorithm first try to find its translated denomination, then its denomination. Remarks: If translated or default denomination does not exist for the element, then nothing is displayed. This is because it is impossible to define a name for elements of Constraint Sets} {--------------------------------------------------------------} IF( strat_nat_e = 4, strategy_elt_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, NULL )") 
			@aaa:scpt (value="{This format element displays the name of the Constraint, if it is an elment of a Constraints Set. The algorithm first try to find its translated denomination, then its denomination. Remarks: If translated or default denomination does not exist for the element, then nothing is displayed. This is because it is impossible to define a name for elements of Constraint Sets} {--------------------------------------------------------------} IF( strat_nat_e = 4, strategy_elt_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, NULL )") 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_de) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_en) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_fr) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT : AAABusinessTypes:UniLongName 
			@i18n:Label (de="Fester Anteil", en="Fixed Objective", fr="Objectif fixe") 
			@sql:SQLName (value=FIXED_WEIGHT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef="IF(model_constr_elt_id.constr_nat_e=1, IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, model_constr_elt.fixed_cell_f.LABEL[TSL_CURRENT_LANGUAGE()], model_constr_elt.fixed_cell_f.LABEL[]),NULL)") 
			@aaa:scpt (value="IF(model_constr_elt_id.constr_nat_e=1, IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, model_constr_elt.fixed_cell_f.LABEL[TSL_CURRENT_LANGUAGE()], model_constr_elt.fixed_cell_f.LABEL[]),NULL)") 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_de) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_en) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_fr) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Instrument Code", en="Instrument Code", fr="Code de l\'instrument") 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=500, ScriptDef="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, instr_id.code, NULL )") 
			@aaa:scpt (value="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, instr_id.code, NULL )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_DENOM, Rank=501, ScriptDef="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, {DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name ), NULL )") 
			@aaa:scpt (value="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, {DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name ), NULL )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrumentliste, en="Instrument List", fr="Liste d\'instruments") 
			@sql:SQLName (value=INSTR_LIST_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef="{This format element checks whether it is an Instrument or an Instrument Liste related to the Security In Constraints. If it is an Instrument List, then its translated denomination is searched, otherwise it is its denomination and at last its name} {-----------------------------------------------------------------------} IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instruments}, IF( GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).name ) )") 
			@aaa:scpt (value="{This format element checks whether it is an Instrument or an Instrument Liste related to the Security In Constraints. If it is an Instrument List, then its translated denomination is searched, otherwise it is its denomination and at last its name} {-----------------------------------------------------------------------} IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instruments}, IF( GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).name ) )") 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* MARKET_SEGMENT */ 
		MARKET_SEGMENT : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=MARKET_SEGMENT) 
			@aaa:TripleA (FormatEltName=MARKET_SEGMENT, Rank=503, ScriptDef="IF(model_constr_elt_id.constr_nat_e=1,market_segment_id.name,NULL)") 
			@aaa:scpt (value="IF(model_constr_elt_id.constr_nat_e=1,market_segment_id.name,NULL)") 
		
		/* MAX_OBJ */ 
		MAX_OBJ : AAABusinessTypes:Number 
			@i18n:Label (de="Oberer Zielwert", en="Maximum Objective", fr="Objectif maximum") 
			@sql:SQLName (value=MAX_OBJ) 
			@aaa:TripleA (FormatEltName=MAX_OBJ, Rank=58, ScriptDef="{This format element retrieves the maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1, 2) {Allocation and Security In Constraints}, model_constr_elt_id.max_weight_n, NULL )") 
			@aaa:scpt (value="{This format element retrieves the maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1, 2) {Allocation and Security In Constraints}, model_constr_elt_id.max_weight_n, NULL )") 
		
		/* MIN_OBJ */ 
		MIN_OBJ : AAABusinessTypes:Number 
			@i18n:Label (de="Unterer Zielwert", en="Minimum Objective", fr="Objectif minimum") 
			@sql:SQLName (value=MIN_OBJ) 
			@aaa:TripleA (FormatEltName=MIN_OBJ, Rank=54, ScriptDef="{This format element retrieves the minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1,2) {Allocation and Security In Constraints}, model_constr_elt_id.min_weight_n, NULL )") 
			@aaa:scpt (value="{This format element retrieves the minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1,2) {Allocation and Security In Constraints}, model_constr_elt_id.min_weight_n, NULL )") 
		
		/* MIN_OBJ_SEC_OUT */ 
		MIN_OBJ_SEC_OUT : AAABusinessTypes:UniName 
			@i18n:Label (de="Menge ausser Verwaltungsvollmacht", en="Quantity Out Of Mandate", fr="Quantité hors mandat") 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT, Rank=62, ScriptDef="{This format element retrieves the minimum objective defined by a Security Out Constraint. This format element is in fact used in the format element [CONSTR_LABEL]} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints}, PRINTF(\"%5.2f\", model_constr_elt_id.min_weight_n) )") 
			@aaa:scpt (value="{This format element retrieves the minimum objective defined by a Security Out Constraint. This format element is in fact used in the format element [CONSTR_LABEL]} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints}, PRINTF(\"%5.2f\", model_constr_elt_id.min_weight_n) )") 
		
		/* MODELL_CONSTR_FILTER */ 
		MODELL_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=MODELL_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=MODELL_CONSTR_FILTER, Rank=15, ScriptDef="{This format element allows only the display of the following Constraints: - Allocation Constraint - Security In Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1, 0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Allocation Constraint - Security In Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1, 0)") 
		
		/* OBJ_TYPE */ 
		OBJ_TYPE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Zielwert-Typ, en="Bound Nature", fr="Type de l\'objectif") 
			@sql:SQLName (value=OBJ_TYPE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=OBJ_TYPE, Rank=55, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, model_constr_elt.constr_bound_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], model_constr_elt.constr_bound_nat_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, model_constr_elt.constr_bound_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], model_constr_elt.constr_bound_nat_e.LABEL[])") 
		
		/* OBJ_TYPE */ 
		OBJ_TYPE_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=OBJ_TYPE_de) 
			@aaa:TripleA (FormatEltName=OBJ_TYPE, Rank=55, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_TYPE */ 
		OBJ_TYPE_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=OBJ_TYPE_en) 
			@aaa:TripleA (FormatEltName=OBJ_TYPE, Rank=55, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_TYPE */ 
		OBJ_TYPE_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=OBJ_TYPE_fr) 
			@aaa:TripleA (FormatEltName=OBJ_TYPE, Rank=55, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Portfolio Code", en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=30, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=31, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* REF_CURRENCY */ 
		REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Ref. Whrg.", en="Ref. Ccy.", fr="Dvs réf.") 
			@sql:SQLName (value=REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=REF_CURRENCY, Rank=25, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* REMAINING_POSITION */ 
		REMAINING_POSITION : AAABusinessTypes:Number 
			@i18n:Label (de="Innerhalb Verwaltungsmandat", en="Remaining in Management Mandate", fr="Restant dans le mandat de gestion") 
			@sql:SQLName (value=REMAINING_POSITION) 
			@aaa:TripleA (FormatEltName=REMAINING_POSITION, Rank=66, ScriptDef="{This format element displays the remaining weight of the corresponding instrument for a Security Out Constraint. The bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 AND act_weight_cont_n <> NULL {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 AND act_qty_n <> NULL {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n, 0 ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the remaining weight of the corresponding instrument for a Security Out Constraint. The bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 AND act_weight_cont_n <> NULL {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 AND act_qty_n <> NULL {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n, 0 ) {End of second IF} ) {End of first IF}") 
		
		/* SECU_IN_CONSTR_FILTE */ 
		SECU_IN_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SECU_IN_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=SECU_IN_CONSTR_FILTE, Rank=12, ScriptDef="{This format element allows only the display of the following Constraints: - Security In Constraint } {-------------------------------------------------------------------------} IF( {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Security In Constraint } {-------------------------------------------------------------------------} IF( {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1,0)") 
		
		/* SECU_OUT_CONSTR_FILT */ 
		SECU_OUT_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SECU_OUT_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=SECU_OUT_CONSTR_FILT, Rank=13, ScriptDef="{This format element allows only the display of the following Constraints: - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
	} 
	/* PCK_RMT_AO_LINK */ 
	PCK_RMT_AO_LINK 
		@aaa:FormatFunction (value="Allocate Order") 
		@sql:SQLName (value=PCK_RMT_AO_LINK) 
		@aaa:TripleA (EntitySQLName=ext_strategy_link, FinFuncName="Allocate Order", FinFuncProcName=alloc_ord, FormatName=PCK_RMT_AO_LINK) 
	{ 
		/* CHECKED */ 
		CHECKED : AAABusinessTypes:Enum 
			@sql:SQLName (value=CHECKED) 
			@aaa:TripleA (FormatEltName=CHECKED, Rank=30, ScriptDef=check_e) 
			@aaa:scpt (value=check_e) 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=10, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=11, ScriptDef=portfolio_id.name) 
			@aaa:scpt (value=portfolio_id.name) 
		
		/* SEQNO */ 
		SEQNO : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=SEQNO) 
			@aaa:TripleA (FormatEltName=SEQNO, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_CODE */ 
		STRATEGY_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=STRATEGY_CODE) 
			@aaa:TripleA (FormatEltName=STRATEGY_CODE, Rank=20, ScriptDef=strategy_id.code) 
			@aaa:scpt (value=strategy_id.code) 
		
		/* STRATEGY_DENOM */ 
		STRATEGY_DENOM : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_DENOM, Rank=21, ScriptDef="IF(strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, strategy_id.name)") 
			@aaa:scpt (value="IF(strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, strategy_id.name)") 
		
		/* STRATEGY_DENOM */ 
		STRATEGY_DENOM_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_DENOM_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_DENOM, Rank=21, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_DENOM */ 
		STRATEGY_DENOM_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_DENOM_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_DENOM, Rank=21, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_DENOM */ 
		STRATEGY_DENOM_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_DENOM_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_DENOM, Rank=21, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_NATURE */ 
		STRATEGY_NATURE : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_NATURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_NATURE, Rank=22, ScriptDef="IF(strategy_nat_e = 0, NULL, IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, strategy_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], strategy_nat_e.LABEL[])) {IF(strategy_nat_e = 0, NULL, strategy_nat_e.LABEL[])}") 
			@aaa:scpt (value="IF(strategy_nat_e = 0, NULL, IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, strategy_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], strategy_nat_e.LABEL[])) {IF(strategy_nat_e = 0, NULL, strategy_nat_e.LABEL[])}") 
		
		/* STRATEGY_NATURE */ 
		STRATEGY_NATURE_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_NATURE_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_NATURE, Rank=22, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_NATURE */ 
		STRATEGY_NATURE_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_NATURE_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_NATURE, Rank=22, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_NATURE */ 
		STRATEGY_NATURE_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_NATURE_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_NATURE, Rank=22, ScriptDef) 
			@aaa:scpt (value) 
	} 
	/* PCK_RMT_AO_OBJ */ 
	PCK_RMT_AO_OBJ 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Allocate Order") 
		@sql:SQLName (value=PCK_RMT_AO_OBJ) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Allocate Order", FinFuncProcName=alloc_ord, FormatName=PCK_RMT_AO_OBJ) 
	{ 
		/* CHECK_STRAT */ 
		CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=CHECK_STRAT, Rank=100, ScriptDef=strat_check_e) 
			@aaa:scpt (value=strat_check_e) 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* HEAD_FILTER */ 
		HEAD_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=HEAD_FILTER) 
			@aaa:TripleA (FormatEltName=HEAD_FILTER, Rank=11, ScriptDef="{This format element is used as a filter to extract only head strategy level (Asset Allocation and Dummy Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {To be sure that the head strategies are not included in a Benchmark composition} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategy is not a Recommendation List or a Constraint Set} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis} AND leaf_f = 1, {Otherwise, if context (domain) is set with a specific instrument, the system will create 2 double rows and the WUI will not support it} 1, 0)") 
			@aaa:scpt (value="{This format element is used as a filter to extract only head strategy level (Asset Allocation and Dummy Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {To be sure that the head strategies are not included in a Benchmark composition} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategy is not a Recommendation List or a Constraint Set} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis} AND leaf_f = 1, {Otherwise, if context (domain) is set with a specific instrument, the system will create 2 double rows and the WUI will not support it} 1, 0)") 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=499, ScriptDef=instr_id.code) 
			@aaa:scpt (value=instr_id.code) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_DENOM, Rank=20, ScriptDef="{DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name )") 
			@aaa:scpt (value="{DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* investment_profile_i */ 
		investment_profile_id : AAABusinessTypes:Id 
			@sql:SQLName (value=investment_profile_id) 
			@aaa:TripleA (FormatEltName=investment_profile_i, Rank=8, ScriptDef=ext_strategy_link_id.ref_strategy_id) 
			@aaa:scpt (value=ext_strategy_link_id.ref_strategy_id) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Investment-Profil, en="Investment Profile", fr="Profil d\'investissement") 
			@sql:SQLName (value=IP_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef="{This format element displays the name of the Investment Profile containing the strategies. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link_id.ref_strategy_id.name )") 
			@aaa:scpt (value="{This format element displays the name of the Investment Profile containing the strategies. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link_id.ref_strategy_id.name )") 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef) 
			@aaa:scpt (value) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef) 
			@aaa:scpt (value) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef) 
			@aaa:scpt (value) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* MARGIN */ 
		MARGIN : AAABusinessTypes:Number 
			@i18n:Label (de=Toleranz, en=Margin, fr=Marge) 
			@sql:SQLName (value=MARGIN) 
			@aaa:TripleA (FormatEltName=MARGIN, Rank=81, ScriptDef=obj_weight_cont_marg_n) 
			@aaa:scpt (value=obj_weight_cont_marg_n) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE : AAABusinessTypes:UniLongName 
			@i18n:Label (de=Marktsegment, en="Market Segment", fr="Segment de marché") 
			@sql:SQLName (value=MKT_STRUCTURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef="IF(market_segment_id <> NULL, IF(market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, {Denom in Domain Language or Default if Exist} market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {No Denom => Name} market_segment_id.name ), market_segment_id )") 
			@aaa:scpt (value="IF(market_segment_id <> NULL, IF(market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, {Denom in Domain Language or Default if Exist} market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {No Denom => Name} market_segment_id.name ), market_segment_id )") 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=MKT_STRUCTURE_de) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=MKT_STRUCTURE_en) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=MKT_STRUCTURE_fr) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_VAL */ 
		MKT_VAL : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktwert, en="Market Value", fr="Valeur d\'inventaire") 
			@sql:SQLName (value=MKT_VAL) 
			@aaa:TripleA (FormatEltName=MKT_VAL, Rank=44, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( current_market_value_m <> NULL, current_market_value_m, 0) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( current_market_value_m <> NULL, current_market_value_m, 0) )") 
		
		/* MKT_VALUE_REF_CURR */ 
		MKT_VALUE_REF_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=MKT_VALUE_REF_CURR) 
			@aaa:TripleA (FormatEltName=MKT_VALUE_REF_CURR, Rank=45, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* NO_LINK_FILTER */ 
		NO_LINK_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=NO_LINK_FILTER) 
			@aaa:TripleA (FormatEltName=NO_LINK_FILTER, Rank=12, ScriptDef="{This format element is used as a filter to extract positions when no strategy links exist} {-----------------------------------------------------------} IF( strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3) {to extract positions}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used as a filter to extract positions when no strategy links exist} {-----------------------------------------------------------} IF( strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3) {to extract positions}, 1, 0 )") 
		
		/* OBJ_COMPLIANCE_INDIC */ 
		OBJ_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Gradmesser des Strategieabgleichs", en=Compliance, fr="Conformité") 
			@sql:SQLName (value=OBJ_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_COMPLIANCE_INDIC, Rank=103, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
		
		/* OBJ_SEVERITY_INDICAT */ 
		OBJ_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad-Anzeiger, en="Severity Indicator", fr="Indicateur de sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_INDICAT, Rank=101, ScriptDef="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef="{This format element displays the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective. If the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), IF( strategy_id.criticalness_e = 0, NULL, strategy_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), IF( strategy_elt_id.criticalness_e = 0, NULL, strategy_elt_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ) ), NULL ) )") 
			@aaa:scpt (value="{This format element displays the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective. If the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), IF( strategy_id.criticalness_e = 0, NULL, strategy_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), IF( strategy_elt_id.criticalness_e = 0, NULL, strategy_elt_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ) ), NULL ) )") 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_de) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_en) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_fr) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_VALUE */ 
		OBJ_SEVERITY_VALUE : AAABusinessTypes:Enum 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_VALUE) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_VALUE, Rank=90, ScriptDef="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
			@aaa:scpt (value="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
		
		/* OBJECTIVE_WEIGHT */ 
		OBJECTIVE_WEIGHT : AAABusinessTypes:Number 
			@i18n:Label (de="Optimaler Zielwert", en="Objective\'s Optimal Weight", fr="Poids optimal de l\'objectif") 
			@sql:SQLName (value=OBJECTIVE_WEIGHT) 
			@aaa:TripleA (FormatEltName=OBJECTIVE_WEIGHT, Rank=80, ScriptDef="obj_weight_cont_n {obj_weight_cont_marg_n}") 
			@aaa:scpt (value="obj_weight_cont_n {obj_weight_cont_marg_n}") 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Portfolionummer, en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=40, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* PORTFOLIO_FILTER */ 
		PORTFOLIO_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=PORTFOLIO_FILTER) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_FILTER, Rank=14, ScriptDef="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level} AND TOT_SUM( 1, strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, portfolio_id ) > 0 {No Objectives}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level} AND TOT_SUM( 1, strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, portfolio_id ) > 0 {No Objectives}, 1, 0 )") 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=41, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=15, ScriptDef="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded. Portfolios and positions related Portfolios having no strategy links are included too.} {-----------------------------------------------------------} @STRATEGY_FILTER OR @PORTFOLIO_FILTER OR @HEAD_FILTER OR @NO_LINK_FILTER") 
			@aaa:scpt (value="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded. Portfolios and positions related Portfolios having no strategy links are included too.} {-----------------------------------------------------------} @STRATEGY_FILTER OR @PORTFOLIO_FILTER OR @HEAD_FILTER OR @NO_LINK_FILTER") 
		
		/* STRATEGY_FILTER */ 
		STRATEGY_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=STRATEGY_FILTER) 
			@aaa:TripleA (FormatEltName=STRATEGY_FILTER, Rank=13, ScriptDef="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded.} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND (ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}) AND IF( abcissa_list_id = NULL AND ordinate_list_id = NULL AND instr_id = NULL, 0, 1)") 
			@aaa:scpt (value="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded.} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND (ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}) AND IF( abcissa_list_id = NULL AND ordinate_list_id = NULL AND instr_id = NULL, 0, 1)") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef="IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name )") 
			@aaa:scpt (value="IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* strategy_id */ 
		strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=strategy_id) 
			@aaa:TripleA (FormatEltName=strategy_id, Rank=7, ScriptDef=strategy_id) 
			@aaa:scpt (value=strategy_id) 
		
		/* SUB_CHECK_STRAT */ 
		SUB_CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=SUB_CHECK_STRAT, Rank=200, ScriptDef="STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, strat_check_e,,1) ).maximum") 
			@aaa:scpt (value="STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, strat_check_e,,1) ).maximum") 
		
		/* SUB_COMPLIANCE_INDIC */ 
		SUB_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Compliance Gradmesser (Detail)", en="Sub-levels Compliance", fr="Conformité des sous-niveaux") 
			@sql:SQLName (value=SUB_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_COMPLIANCE_INDIC, Rank=203, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of sub-levels based on the format element SUB_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CHECK_STRAT which is used.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = NULL, 0 {No Sub-Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Sub-Levels Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Sub-Levels Compliant}, 6 {Sub-Level(s) Not Compliant} ))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of sub-levels based on the format element SUB_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CHECK_STRAT which is used.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = NULL, 0 {No Sub-Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Sub-Levels Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Sub-Levels Compliant}, 6 {Sub-Level(s) Not Compliant} ))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
		
		/* SUB_SEVERITY_INDICAT */ 
		SUB_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Schweregrad-Anzeiger (Detail)", en="Sub-levels Severity Indicator", fr="Indicateur de sévérité des sous-niveaux") 
			@sql:SQLName (value=SUB_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_SEVERITY_INDICAT, Rank=202, ScriptDef="{This format element returns the highest severity value of direct sub-levels of a market segment, when this market segment has one or more of its direct sub-levels not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all direct sub-levels which are not compliant The rules are the following: 1) The system checks whether the direct sub-levels are compliant or not, using the format element SUB_CHECK_STRAT. If they are compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the direct sub-levels objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the direct sub-levels objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all direct sub-levels (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the direct sub-levels are compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the direct sub-levels objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the direct sub-levels objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {Some direct sub-levels severity are not defined and the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity which must be NULL} {ELSE} {IF( STAT(} {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1 AND &strategy_elt_id.criticalness_e = NULL, &strategy_elt_id.criticalness_e, , , 1) ).maximum <> NULL, -3,} {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1, &criticalness_e, , , 1)} {New script to improve system response time} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE,strat_check_e > 1,1) ).maximum ) ) )") 
			@aaa:scpt (value="{This format element returns the highest severity value of direct sub-levels of a market segment, when this market segment has one or more of its direct sub-levels not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all direct sub-levels which are not compliant The rules are the following: 1) The system checks whether the direct sub-levels are compliant or not, using the format element SUB_CHECK_STRAT. If they are compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the direct sub-levels objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the direct sub-levels objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all direct sub-levels (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the direct sub-levels are compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the direct sub-levels objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the direct sub-levels objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {Some direct sub-levels severity are not defined and the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity which must be NULL} {ELSE} {IF( STAT(} {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1 AND &strategy_elt_id.criticalness_e = NULL, &strategy_elt_id.criticalness_e, , , 1) ).maximum <> NULL, -3,} {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1, &criticalness_e, , , 1)} {New script to improve system response time} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE,strat_check_e > 1,1) ).maximum ) ) )") 
		
		/* WEIGHT_AFTER */ 
		WEIGHT_AFTER : AAABusinessTypes:Number 
			@i18n:Label (de="Anteil nachher", en="Weight After", fr="Poids après") 
			@sql:SQLName (value=WEIGHT_AFTER) 
			@aaa:TripleA (FormatEltName=WEIGHT_AFTER, Rank=71, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, 1, eff_weight_cont_n ) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, 1, eff_weight_cont_n ) )") 
		
		/* WEIGHT_BEFORE */ 
		WEIGHT_BEFORE : AAABusinessTypes:Number 
			@i18n:Label (de="Anteil vorher", en="Weight Before", fr="Poids avant") 
			@sql:SQLName (value=WEIGHT_BEFORE) 
			@aaa:TripleA (FormatEltName=WEIGHT_BEFORE, Rank=70, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, 100, act_weight_cont_n ) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, 100, act_weight_cont_n ) )") 
	} 
	/* PCK_RMT_AO_ORDERS */ 
	PCK_RMT_AO_ORDERS 
		@aaa:FormatFunction (value="Allocate Order") 
		@sql:SQLName (value=PCK_RMT_AO_ORDERS) 
		@aaa:TripleA (EntitySQLName=ext_operation, FinFuncName="Allocate Order", FinFuncProcName=alloc_ord, FormatName=PCK_RMT_AO_ORDERS) 
	{ 
		/* ACCT_DATE */ 
		ACCT_DATE : AAABusinessTypes:Date 
			@sql:SQLName (value=ACCT_DATE) 
			@aaa:TripleA (FormatEltName=ACCT_DATE, Rank=180, ScriptDef=account_d) 
			@aaa:scpt (value=account_d) 
		
		/* CHECK_PARENT_DENOM */ 
		CHECK_PARENT_DENOM : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_PARENT_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CHECK_PARENT_DENOM, Rank=410, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, check_parent_e.LABEL[TSL_CURRENT_LANGUAGE()], check_parent_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, check_parent_e.LABEL[TSL_CURRENT_LANGUAGE()], check_parent_e.LABEL[])") 
		
		/* CHECK_PARENT_DENOM */ 
		CHECK_PARENT_DENOM_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_PARENT_DENOM_de) 
			@aaa:TripleA (FormatEltName=CHECK_PARENT_DENOM, Rank=410, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CHECK_PARENT_DENOM */ 
		CHECK_PARENT_DENOM_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_PARENT_DENOM_en) 
			@aaa:TripleA (FormatEltName=CHECK_PARENT_DENOM, Rank=410, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CHECK_PARENT_DENOM */ 
		CHECK_PARENT_DENOM_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_PARENT_DENOM_fr) 
			@aaa:TripleA (FormatEltName=CHECK_PARENT_DENOM, Rank=410, ScriptDef) 
			@aaa:scpt (value) 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=1001, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* DB_STATUS_DENOM */ 
		DB_STATUS_DENOM : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=DB_STATUS_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=DB_STATUS_DENOM, Rank=400, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, db_status_e.LABEL[TSL_CURRENT_LANGUAGE()], db_status_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, db_status_e.LABEL[TSL_CURRENT_LANGUAGE()], db_status_e.LABEL[])") 
		
		/* DB_STATUS_DENOM */ 
		DB_STATUS_DENOM_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=DB_STATUS_DENOM_de) 
			@aaa:TripleA (FormatEltName=DB_STATUS_DENOM, Rank=400, ScriptDef) 
			@aaa:scpt (value) 
		
		/* DB_STATUS_DENOM */ 
		DB_STATUS_DENOM_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=DB_STATUS_DENOM_en) 
			@aaa:TripleA (FormatEltName=DB_STATUS_DENOM, Rank=400, ScriptDef) 
			@aaa:scpt (value) 
		
		/* DB_STATUS_DENOM */ 
		DB_STATUS_DENOM_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=DB_STATUS_DENOM_fr) 
			@aaa:TripleA (FormatEltName=DB_STATUS_DENOM, Rank=400, ScriptDef) 
			@aaa:scpt (value) 
		
		/* DEPOSITORY */ 
		DEPOSITORY : AAABusinessTypes:UniCode 
			@sql:SQLName (value=DEPOSITORY) 
			@aaa:TripleA (FormatEltName=DEPOSITORY, Rank=340, ScriptDef=deposit_id.code) 
			@aaa:scpt (value=deposit_id.code) 
		
		/* EXCH_RATE */ 
		EXCH_RATE : AAABusinessTypes:Amount 
			@sql:SQLName (value=EXCH_RATE) 
			@aaa:TripleA (FormatEltName=EXCH_RATE, Rank=200, ScriptDef=op_exch_rate) 
			@aaa:scpt (value=op_exch_rate) 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:Code 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=40, ScriptDef=instr_id.code) 
			@aaa:scpt (value=instr_id.code) 
		
		/* INSTR_CUR */ 
		INSTR_CUR : AAABusinessTypes:Code 
			@sql:SQLName (value=INSTR_CUR) 
			@aaa:TripleA (FormatEltName=INSTR_CUR, Rank=90, ScriptDef="IF (nature_e = 6, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", account_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} account_id.ref_curr_id.code ), IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} instr_id.ref_curr_id.code )) {IF (nature_e = 6, account_id.ref_curr_id.code, instr_id.ref_curr_id.code)}") 
			@aaa:scpt (value="IF (nature_e = 6, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", account_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} account_id.ref_curr_id.code ), IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} instr_id.ref_curr_id.code )) {IF (nature_e = 6, account_id.ref_curr_id.code, instr_id.ref_curr_id.code)}") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=INSTR_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_DENOM, Rank=50, ScriptDef="IF(instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, instr_id.name)") 
			@aaa:scpt (value="IF(instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, instr_id.name)") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=INSTR_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=50, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=INSTR_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=50, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=INSTR_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=50, ScriptDef) 
			@aaa:scpt (value) 
		
		/* LIMIT_DATE */ 
		LIMIT_DATE : AAABusinessTypes:Date 
			@sql:SQLName (value=LIMIT_DATE) 
			@aaa:TripleA (FormatEltName=LIMIT_DATE, Rank=310, ScriptDef=order_limit_d) 
			@aaa:scpt (value=order_limit_d) 
		
		/* LIMIT_QUOTE */ 
		LIMIT_QUOTE : AAABusinessTypes:Number 
			@sql:SQLName (value=LIMIT_QUOTE) 
			@aaa:TripleA (FormatEltName=LIMIT_QUOTE, Rank=320, ScriptDef=limit_quote_n) 
			@aaa:scpt (value=limit_quote_n) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=1002, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* OP_GROSS_AMOUNT */ 
		OP_GROSS_AMOUNT : AAABusinessTypes:Amount 
			@sql:SQLName (value=OP_GROSS_AMOUNT) 
			@aaa:TripleA (FormatEltName=OP_GROSS_AMOUNT, Rank=210, ScriptDef=op_gross_amount_m) 
			@aaa:scpt (value=op_gross_amount_m) 
		
		/* OP_NET_AMOUNT */ 
		OP_NET_AMOUNT : AAABusinessTypes:Amount 
			@sql:SQLName (value=OP_NET_AMOUNT) 
			@aaa:TripleA (FormatEltName=OP_NET_AMOUNT, Rank=230, ScriptDef=op_net_amount_m) 
			@aaa:scpt (value=op_net_amount_m) 
		
		/* OP_TYPE */ 
		OP_TYPE : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=OP_TYPE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=OP_TYPE, Rank=280, ScriptDef="IF(type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, type_id.name)") 
			@aaa:scpt (value="IF(type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, type_id.name)") 
		
		/* OP_TYPE */ 
		OP_TYPE_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=OP_TYPE_de) 
			@aaa:TripleA (FormatEltName=OP_TYPE, Rank=280, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OP_TYPE */ 
		OP_TYPE_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=OP_TYPE_en) 
			@aaa:TripleA (FormatEltName=OP_TYPE, Rank=280, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OP_TYPE */ 
		OP_TYPE_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=OP_TYPE_fr) 
			@aaa:TripleA (FormatEltName=OP_TYPE, Rank=280, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OPER_DATE */ 
		OPER_DATE : AAABusinessTypes:Datetime 
			@sql:SQLName (value=OPER_DATE) 
			@aaa:TripleA (FormatEltName=OPER_DATE, Rank=130, ScriptDef=operation_d) 
			@aaa:scpt (value=operation_d) 
		
		/* OPER_NATURE_DENOM */ 
		OPER_NATURE_DENOM : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=OPER_NATURE_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=OPER_NATURE_DENOM, Rank=150, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, nature_e.LABEL[TSL_CURRENT_LANGUAGE()], nature_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, nature_e.LABEL[TSL_CURRENT_LANGUAGE()], nature_e.LABEL[])") 
		
		/* OPER_NATURE_DENOM */ 
		OPER_NATURE_DENOM_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=OPER_NATURE_DENOM_de) 
			@aaa:TripleA (FormatEltName=OPER_NATURE_DENOM, Rank=150, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OPER_NATURE_DENOM */ 
		OPER_NATURE_DENOM_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=OPER_NATURE_DENOM_en) 
			@aaa:TripleA (FormatEltName=OPER_NATURE_DENOM, Rank=150, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OPER_NATURE_DENOM */ 
		OPER_NATURE_DENOM_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=OPER_NATURE_DENOM_fr) 
			@aaa:TripleA (FormatEltName=OPER_NATURE_DENOM, Rank=150, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=ORDER_NATURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=ORDER_NATURE, Rank=290, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, order_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], order_nat_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, order_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], order_nat_e.LABEL[])") 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=ORDER_NATURE_de) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE, Rank=290, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=ORDER_NATURE_en) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE, Rank=290, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=ORDER_NATURE_fr) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE, Rank=290, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PARENT_OP_NATURE_DEN */ 
		PARENT_OP_NATURE_DENOM : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=PARENT_OP_NATURE_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=PARENT_OP_NATURE_DEN, Rank=250, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, parent_oper_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], parent_oper_nat_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, parent_oper_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], parent_oper_nat_e.LABEL[])") 
		
		/* PARENT_OP_NATURE_DEN */ 
		PARENT_OP_NATURE_DENOM_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=PARENT_OP_NATURE_DENOM_de) 
			@aaa:TripleA (FormatEltName=PARENT_OP_NATURE_DEN, Rank=250, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PARENT_OP_NATURE_DEN */ 
		PARENT_OP_NATURE_DENOM_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=PARENT_OP_NATURE_DENOM_en) 
			@aaa:TripleA (FormatEltName=PARENT_OP_NATURE_DEN, Rank=250, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PARENT_OP_NATURE_DEN */ 
		PARENT_OP_NATURE_DENOM_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=PARENT_OP_NATURE_DENOM_fr) 
			@aaa:TripleA (FormatEltName=PARENT_OP_NATURE_DEN, Rank=250, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PF_CUR */ 
		PF_CUR : AAABusinessTypes:UniCode 
			@sql:SQLName (value=PF_CUR) 
			@aaa:TripleA (FormatEltName=PF_CUR, Rank=30, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", pf_currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} pf_currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", pf_currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} pf_currency_id.code )") 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:Code 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=10, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=1000, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=20, ScriptDef=portfolio_id.name) 
			@aaa:scpt (value=portfolio_id.name) 
		
		/* POS_F_T */ 
		POS_F_T : AAABusinessTypes:Amount 
			@sql:SQLName (value=POS_F_T) 
			@aaa:TripleA (FormatEltName=POS_F_T, Rank=220, ScriptDef="op_net_amount_m - op_gross_amount_m") 
			@aaa:scpt (value="op_net_amount_m - op_gross_amount_m") 
		
		/* PRICE */ 
		PRICE : AAABusinessTypes:Number 
			@sql:SQLName (value=PRICE) 
			@aaa:TripleA (FormatEltName=PRICE, Rank=170, ScriptDef="IF(quote_n <> NULL,quote_n, price_n)") 
			@aaa:scpt (value="IF(quote_n <> NULL,quote_n, price_n)") 
		
		/* QUANTITY */ 
		QUANTITY : AAABusinessTypes:Amount 
			@sql:SQLName (value=QUANTITY) 
			@aaa:TripleA (FormatEltName=QUANTITY, Rank=160, ScriptDef="IF(instr_id.contract_size_n<>0 AND instr_id.contract_size_n<>NULL,quantity_n/instr_id.contract_size_n,quantity_n)") 
			@aaa:scpt (value="IF(instr_id.contract_size_n<>0 AND instr_id.contract_size_n<>NULL,quantity_n/instr_id.contract_size_n,quantity_n)") 
		
		/* REF_NET_AMOUNT */ 
		REF_NET_AMOUNT : AAABusinessTypes:Amount 
			@sql:SQLName (value=REF_NET_AMOUNT) 
			@aaa:TripleA (FormatEltName=REF_NET_AMOUNT, Rank=240, ScriptDef=pf_net_amount_m) 
			@aaa:scpt (value=pf_net_amount_m) 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STATUS_DENOM */ 
		STATUS_DENOM : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STATUS_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STATUS_DENOM, Rank=270, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, status_e.LABEL[TSL_CURRENT_LANGUAGE()], status_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, status_e.LABEL[TSL_CURRENT_LANGUAGE()], status_e.LABEL[])") 
		
		/* STATUS_DENOM */ 
		STATUS_DENOM_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STATUS_DENOM_de) 
			@aaa:TripleA (FormatEltName=STATUS_DENOM, Rank=270, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STATUS_DENOM */ 
		STATUS_DENOM_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STATUS_DENOM_en) 
			@aaa:TripleA (FormatEltName=STATUS_DENOM, Rank=270, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STATUS_DENOM */ 
		STATUS_DENOM_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STATUS_DENOM_fr) 
			@aaa:TripleA (FormatEltName=STATUS_DENOM, Rank=270, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STOP_QUOTE */ 
		STOP_QUOTE : AAABusinessTypes:Number 
			@sql:SQLName (value=STOP_QUOTE) 
			@aaa:TripleA (FormatEltName=STOP_QUOTE, Rank=330, ScriptDef=stop_quote_n) 
			@aaa:scpt (value=stop_quote_n) 
		
		/* VALIDITY_NATURE */ 
		VALIDITY_NATURE : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=VALIDITY_NATURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=VALIDITY_NATURE, Rank=300, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, order_validity_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], order_validity_nat_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, order_validity_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], order_validity_nat_e.LABEL[])") 
		
		/* VALIDITY_NATURE */ 
		VALIDITY_NATURE_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=VALIDITY_NATURE_de) 
			@aaa:TripleA (FormatEltName=VALIDITY_NATURE, Rank=300, ScriptDef) 
			@aaa:scpt (value) 
		
		/* VALIDITY_NATURE */ 
		VALIDITY_NATURE_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=VALIDITY_NATURE_en) 
			@aaa:TripleA (FormatEltName=VALIDITY_NATURE, Rank=300, ScriptDef) 
			@aaa:scpt (value) 
		
		/* VALIDITY_NATURE */ 
		VALIDITY_NATURE_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=VALIDITY_NATURE_fr) 
			@aaa:TripleA (FormatEltName=VALIDITY_NATURE, Rank=300, ScriptDef) 
			@aaa:scpt (value) 
		
		/* VALUE_DATE */ 
		VALUE_DATE : AAABusinessTypes:Date 
			@sql:SQLName (value=VALUE_DATE) 
			@aaa:TripleA (FormatEltName=VALUE_DATE, Rank=190, ScriptDef=value_d) 
			@aaa:scpt (value=value_d) 
	} 
} 
