# UTF-8
Domain AAAFormatsCheckStrat 
	@java:Package (value=com.odcgroup.aaa.formats) 
namespace "http://www.odcgroup.com/aaa-formats-check-strat" 
metamodelVersion 4.3.0.20110527 
Classes { 
	/* PCK_DS_COMPCHK_CONST */ 
	PCK_DS_COMPCHK_CONST 
		@aaa:FormatColumnFilter (value=CONSTRAINTS_FILTER) 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_DS_COMPCHK_CONST) 
		@aaa:TripleA (ColumnFilter=CONSTRAINTS_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_DS_COMPCHK_CONST) 
	{ 
		/* ACTUAL_POSITION_TYPE */ 
		ACTUAL_POSITION_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Aktueller Anteil", en="Actual Weight Type", fr="Type du poids actuel") 
			@sql:SQLName (value=ACTUAL_POSITION_TYPE_OTHER) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=ACTUAL_POSITION_TYPE, Rank=52, ScriptDef="{This format element displays the constraint bound type for the actual weight of the corresponding market segment for an Allocation Constraint and the constraint bound type for the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, @REF_CURRENCY, NULL ) )") 
			@aaa:scpt (value="{This format element displays the constraint bound type for the actual weight of the corresponding market segment for an Allocation Constraint and the constraint bound type for the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, @REF_CURRENCY, NULL ) )") 
		
		/* ACTUAL_POSITION_TYPE */ 
		ACTUAL_POSITION_TYPE_OTHER_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=ACTUAL_POSITION_TYPE_OTHER_de) 
			@aaa:TripleA (FormatEltName=ACTUAL_POSITION_TYPE, Rank=52, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ACTUAL_POSITION_TYPE */ 
		ACTUAL_POSITION_TYPE_OTHER_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=ACTUAL_POSITION_TYPE_OTHER_en) 
			@aaa:TripleA (FormatEltName=ACTUAL_POSITION_TYPE, Rank=52, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ACTUAL_POSITION_TYPE */ 
		ACTUAL_POSITION_TYPE_OTHER_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=ACTUAL_POSITION_TYPE_OTHER_fr) 
			@aaa:TripleA (FormatEltName=ACTUAL_POSITION_TYPE, Rank=52, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ACTUAL_POSITION_TYPE */ 
		ACTUAL_POSITION_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Aktueller Anteil in %", en="Actual Weight Type", fr="Type du poids actuel") 
			@sql:SQLName (value=ACTUAL_POSITION_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=ACTUAL_POSITION_TYPE, Rank=51, ScriptDef="{This format element displays the constraint bound type for the actual weight of the corresponding market segment for an Allocation Constraint and the constraint bound type for the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, \"%\", {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"%\", NULL ) )") 
			@aaa:scpt (value="{This format element displays the constraint bound type for the actual weight of the corresponding market segment for an Allocation Constraint and the constraint bound type for the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, \"%\", {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"%\", NULL ) )") 
		
		/* ALLOC_CONSTR_FILTER */ 
		ALLOC_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=ALLOC_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=ALLOC_CONSTR_FILTER, Rank=11, ScriptDef="{This format element allows only the display of the following Constraints: - Allocation Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Allocation Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)), 1,0)") 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR : AAABusinessTypes:Enum 
			@sql:SQLName (value=CHECK_CONSTR) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef=constraint_check_e) 
			@aaa:scpt (value=constraint_check_e) 
		
		/* CHECK_CONSTR_L */ 
		CHECK_CONSTR_L : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Einschränkungs-Konformität", en="Constraint Compliance", fr="Conformité de la contrainte") 
			@sql:SQLName (value=CHECK_CONSTR_L) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR_L, Rank=101, ScriptDef="IF(constraint_check_e IN (1), \"Constraint Compliant\", \"Constraint Not Compliant\")") 
			@aaa:scpt (value="IF(constraint_check_e IN (1), \"Constraint Compliant\", \"Constraint Not Compliant\")") 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* CONSTR_ACTUAL_POSITI */ 
		CONSTR_ACTUAL_POSITION : AAABusinessTypes:Number 
			@i18n:Label (de="Aktuelle Position", en="Actual Position", fr="Position actuelle") 
			@sql:SQLName (value=CONSTR_ACTUAL_POSITION) 
			@aaa:TripleA (FormatEltName=CONSTR_ACTUAL_POSITI, Rank=49, ScriptDef="{This format element displays the actual weight of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, current_market_value_m*1 ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the actual weight of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, current_market_value_m*1 ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
		
		/* CONSTR_COMPLIANCE_IN */ 
		CONSTR_COMPLIANCE_INDICATOR : AAABusinessTypes:UniLongName 
			@i18n:Label (de="Einschränkungs-Konformität", en="Constraint Compliance", fr="Conformité de la contrainte") 
			@sql:SQLName (value=CONSTR_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=CONSTR_COMPLIANCE_IN, Rank=103, ScriptDef="{This format element is used to display compliance indication regarding the Constraints related to the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_CONSTR which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, @CHECK_CONSTR_L, {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"GREEN\" - \"1\" becomes \"YELLOW\" - \"2\" becomes \"ORANGE\" - \"3\" becomes \"RED\"} {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 0, \"GREEN\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 1, \"YELLOW\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 2, \"ORANGE\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 3, \"RED\", NULL)))))") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the Constraints related to the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_CONSTR which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, @CHECK_CONSTR_L, {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"GREEN\" - \"1\" becomes \"YELLOW\" - \"2\" becomes \"ORANGE\" - \"3\" becomes \"RED\"} {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 0, \"GREEN\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 1, \"YELLOW\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 2, \"ORANGE\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 3, \"RED\", NULL)))))") 
		
		/* CONSTR_LABEL_PART_1 */ 
		CONSTR_LABEL_PART_1 : AAABusinessTypes:UniNote 
			@i18n:Label (de="Beschreibung der Einschränkung", en="Constraint Description", fr="Description de la contrainte") 
			@sql:SQLName (value=CONSTR_LABEL_PART_1) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_LABEL_PART_1, Rank=600, ScriptDef="{This format element displays the firt part of Constraint label to describe as most as possible the Constraint. It is also translated} {-------------------------------------------------------------------------------------------------------} {For Allocation Constraints} IF( model_constr_elt_id.constr_nat_e = 1, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_ALLOC_CSTR\", TSL_CURRENT_LANGUAGE(), NULL) ), {For Constraints Sets} IF(strat_nat_e = 4, NULL, {For Security Out Constraints} IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"%s [\", @MIN_OBJ_SEC_OUT), PRINTF(\"%s %s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\",TSL_CURRENT_LANGUAGE(), NULL), @MIN_OBJ_SEC_OUT) ), IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"%s%s [\", @MIN_OBJ_SEC_OUT, \"%\"), PRINTF(\"%s %s%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\",TSL_CURRENT_LANGUAGE(), NULL), @MIN_OBJ_SEC_OUT, \"%\") ), {For Security In Constraints} IF( model_constr_elt_id.constr_nat_e = 2, IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_IN_CSTR_1\", TSL_CURRENT_LANGUAGE(), NULL) ), IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_IN_CSTR_2\", TSL_CURRENT_LANGUAGE(), NULL) ) )) ) ) ) ) )") 
			@aaa:scpt (value="{This format element displays the firt part of Constraint label to describe as most as possible the Constraint. It is also translated} {-------------------------------------------------------------------------------------------------------} {For Allocation Constraints} IF( model_constr_elt_id.constr_nat_e = 1, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_ALLOC_CSTR\", TSL_CURRENT_LANGUAGE(), NULL) ), {For Constraints Sets} IF(strat_nat_e = 4, NULL, {For Security Out Constraints} IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"%s [\", @MIN_OBJ_SEC_OUT), PRINTF(\"%s %s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\",TSL_CURRENT_LANGUAGE(), NULL), @MIN_OBJ_SEC_OUT) ), IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"%s%s [\", @MIN_OBJ_SEC_OUT, \"%\"), PRINTF(\"%s %s%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\",TSL_CURRENT_LANGUAGE(), NULL), @MIN_OBJ_SEC_OUT, \"%\") ), {For Security In Constraints} IF( model_constr_elt_id.constr_nat_e = 2, IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_IN_CSTR_1\", TSL_CURRENT_LANGUAGE(), NULL) ), IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_IN_CSTR_2\", TSL_CURRENT_LANGUAGE(), NULL) ) )) ) ) ) ) )") 
		
		/* CONSTR_LABEL_PART_1 */ 
		CONSTR_LABEL_PART_1_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_1_de) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_1, Rank=600, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_1 */ 
		CONSTR_LABEL_PART_1_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_1_en) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_1, Rank=600, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_1 */ 
		CONSTR_LABEL_PART_1_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_1_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_1, Rank=600, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_2 */ 
		CONSTR_LABEL_PART_2 : AAABusinessTypes:UniNote 
			@i18n:Label (de="Beschreibung der Einschränkung", en="Constraint Description", fr="Description de la contrainte") 
			@sql:SQLName (value=CONSTR_LABEL_PART_2) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_LABEL_PART_2, Rank=601, ScriptDef="{This format element displays the second part of Constraint label to describe as most as possible the Constraint. It is also translated} {-------------------------------------------------------------------------------------------------------} {For Allocation Constraints} IF( model_constr_elt_id.constr_nat_e = 1, \"]\", {For Constraints Sets} IF(strat_nat_e = 4, NULL, {For Security Out Constraints} IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"] %s %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\", \"de\", NULL), DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\", \"de\", NULL)), PRINTF(\"] %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\",TSL_CURRENT_LANGUAGE(), NULL)) ), IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"] %s %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\", \"de\", NULL), DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\", \"de\", NULL)), PRINTF(\"] %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\",TSL_CURRENT_LANGUAGE(), NULL)) ), {For Security In Constraints} IF( model_constr_elt_id.constr_nat_e = 2, IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"]\", IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, \"]\" )) ) ) ) ) )") 
			@aaa:scpt (value="{This format element displays the second part of Constraint label to describe as most as possible the Constraint. It is also translated} {-------------------------------------------------------------------------------------------------------} {For Allocation Constraints} IF( model_constr_elt_id.constr_nat_e = 1, \"]\", {For Constraints Sets} IF(strat_nat_e = 4, NULL, {For Security Out Constraints} IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"] %s %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\", \"de\", NULL), DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\", \"de\", NULL)), PRINTF(\"] %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\",TSL_CURRENT_LANGUAGE(), NULL)) ), IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"] %s %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\", \"de\", NULL), DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\", \"de\", NULL)), PRINTF(\"] %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\",TSL_CURRENT_LANGUAGE(), NULL)) ), {For Security In Constraints} IF( model_constr_elt_id.constr_nat_e = 2, IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"]\", IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, \"]\" )) ) ) ) ) )") 
		
		/* CONSTR_LABEL_PART_2 */ 
		CONSTR_LABEL_PART_2_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_2_de) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_2, Rank=601, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_2 */ 
		CONSTR_LABEL_PART_2_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_2_en) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_2, Rank=601, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_2 */ 
		CONSTR_LABEL_PART_2_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_2_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_2, Rank=601, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_REF_CURR */ 
		CONSTR_REF_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=CONSTR_REF_CURR) 
			@aaa:TripleA (FormatEltName=CONSTR_REF_CURR, Rank=47, ScriptDef="{This format element displays the Constraint currency if its bound type is in amount} {------------------------------------------------------------------} IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", model_constr_elt_id.constr_bound_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} model_constr_elt_id.constr_bound_curr_id.code ) )") 
			@aaa:scpt (value="{This format element displays the Constraint currency if its bound type is in amount} {------------------------------------------------------------------} IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", model_constr_elt_id.constr_bound_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} model_constr_elt_id.constr_bound_curr_id.code ) )") 
		
		/* CONSTR_SET_FILTER */ 
		CONSTR_SET_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTR_SET_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTR_SET_FILTER, Rank=14, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2), 1,0)") 
		
		/* CONSTR_SEVERITY_INDI */ 
		CONSTR_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad-Anzeiger, en="Severity Indicator", fr="Indicateur de sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_INDI, Rank=102, ScriptDef="{This script indicates, using \"traffic lights\", if the Constraints defined on a market segment, an instrument or a list of instruments is inline with the actual weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint itself. \"Traffic lights\" are: - \"0\" when actual weight does not breach the Constraint - \"1\" when actual weight breaches the Constraint, but the Constraint severity is not defined as requesting a clarification or blocking - \"2\" when actual weight breaches the Constraints and the Constraint severity is defined as requesting a clarification, but not blocking - \"3\" when actual weight breaches the Constraints and the Constraint severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the actual weight (act_weight_cont_n) of the market segment, instrument or instrument list breaches the Constraint or not. If the actual weight is not breaching the Constraint, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"3\" is returned and the script ends here. Otherwise, the script goes to the next step. 3) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"2\" is returned otherwise it is the value \"1\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (1, 2, 3) {Allocation, Security In and Security Out Constraints} OR strat_nat_e = 4 {Constraints Sets}, {If actual weight is not breaching the Constraint, the returned value is \"0\"} IF( constraint_check_e = 1, 0, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"2\"} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 3, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"1\". If it is not the case, the returned value is \"0\".} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 2, 1 ))), NULL )") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if the Constraints defined on a market segment, an instrument or a list of instruments is inline with the actual weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint itself. \"Traffic lights\" are: - \"0\" when actual weight does not breach the Constraint - \"1\" when actual weight breaches the Constraint, but the Constraint severity is not defined as requesting a clarification or blocking - \"2\" when actual weight breaches the Constraints and the Constraint severity is defined as requesting a clarification, but not blocking - \"3\" when actual weight breaches the Constraints and the Constraint severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the actual weight (act_weight_cont_n) of the market segment, instrument or instrument list breaches the Constraint or not. If the actual weight is not breaching the Constraint, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"3\" is returned and the script ends here. Otherwise, the script goes to the next step. 3) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"2\" is returned otherwise it is the value \"1\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (1, 2, 3) {Allocation, Security In and Security Out Constraints} OR strat_nat_e = 4 {Constraints Sets}, {If actual weight is not breaching the Constraint, the returned value is \"0\"} IF( constraint_check_e = 1, 0, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"2\"} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 3, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"1\". If it is not the case, the returned value is \"0\".} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 2, 1 ))), NULL )") 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef="{This format element displays the severity (also known as criticity) defined on the Constraint. f the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] )") 
			@aaa:scpt (value="{This format element displays the severity (also known as criticity) defined on the Constraint. f the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] )") 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_de) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_en) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_VALU */ 
		CONSTR_SEVERITY_VALUE : AAABusinessTypes:Enum 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_VALUE) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_VALU, Rank=90, ScriptDef="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the Constraint} {-----------------------------------------------------------} criticalness_e") 
			@aaa:scpt (value="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the Constraint} {-----------------------------------------------------------} criticalness_e") 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Behandlung der Einschränkung", en="Constraint Treatment", fr="Traitement de la contrainte") 
			@sql:SQLName (value=CONSTR_TREAT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef="IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_treat_e <> 0 {The value <None> for treatment is not taken into account for the display}, model_constr_elt_id.constr_treat_e.LABEL[TSL_CURRENT_LANGUAGE()])") 
			@aaa:scpt (value="IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_treat_e <> 0 {The value <None> for treatment is not taken into account for the display}, model_constr_elt_id.constr_treat_e.LABEL[TSL_CURRENT_LANGUAGE()])") 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_de) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_en) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_FILTER */ 
		CONSTRAINTS_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTRAINTS_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_FILTER, Rank=10, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Einschränkungen", en="Constraints Set", fr="Set de contraintes") 
			@sql:SQLName (value=CONSTRAINTS_SET) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef="{This format element displays the name of the Constraint, if it is an elment of a Constraints Set. The algorithm first try to find its translated denomination, then its denomination. Remarks: If translated or default denomination does not exist for the element, then nothing is displayed. This is because it is impossible to define a name for elements of Constraint Sets} {--------------------------------------------------------------} IF( strat_nat_e = 4, strategy_elt_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, NULL )") 
			@aaa:scpt (value="{This format element displays the name of the Constraint, if it is an elment of a Constraints Set. The algorithm first try to find its translated denomination, then its denomination. Remarks: If translated or default denomination does not exist for the element, then nothing is displayed. This is because it is impossible to define a name for elements of Constraint Sets} {--------------------------------------------------------------} IF( strat_nat_e = 4, strategy_elt_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, NULL )") 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_de) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_en) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_fr) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef) 
			@aaa:scpt (value) 
		
		/* data_secu_prof_id */ 
		data_secu_prof_id : AAABusinessTypes:Id 
			@sql:SQLName (value=data_secu_prof_id) 
			@aaa:TripleA (FormatEltName=data_secu_prof_id, Rank=1, ScriptDef=portfolio_id.data_secu_prof_id) 
			@aaa:scpt (value=portfolio_id.data_secu_prof_id) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT : AAABusinessTypes:UniLongName 
			@i18n:Label (de="Fester Anteil", en="Fixed Objective", fr="Objectif fixe") 
			@sql:SQLName (value=FIXED_WEIGHT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef="{This format element checks whether the Allocation Constraint is defined with fixed objectives or not. If it fixed objectives, then the value \"Yes\" is displayed.} {----------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint} AND fixed_cell_f = 1, DISP_MSG( \"User Message\", \"PCK_DS_FIXED_OBJ\", TSL_CURRENT_LANGUAGE(), NULL ), NULL )") 
			@aaa:scpt (value="{This format element checks whether the Allocation Constraint is defined with fixed objectives or not. If it fixed objectives, then the value \"Yes\" is displayed.} {----------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint} AND fixed_cell_f = 1, DISP_MSG( \"User Message\", \"PCK_DS_FIXED_OBJ\", TSL_CURRENT_LANGUAGE(), NULL ), NULL )") 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_de) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_en) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_fr) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* id */ 
		id : AAABusinessTypes:Id 
			@sql:SQLName (value=id) 
			@aaa:TripleA (FormatEltName=id, Rank=5, ScriptDef=id) 
			@aaa:scpt (value=id) 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Instrument Code", en="Instrument Code", fr="Code de l\'instrument") 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=500, ScriptDef="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, instr_id.code, NULL )") 
			@aaa:scpt (value="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, instr_id.code, NULL )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_DENOM, Rank=501, ScriptDef="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, {DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name ), NULL )") 
			@aaa:scpt (value="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, {DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name ), NULL )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* instr_id */ 
		instr_id : AAABusinessTypes:Id 
			@sql:SQLName (value=instr_id) 
			@aaa:TripleA (FormatEltName=instr_id, Rank=6, ScriptDef=instr_id) 
			@aaa:scpt (value=instr_id) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrumentliste, en="Instrument List", fr="Liste d\'instruments") 
			@sql:SQLName (value=INSTR_LIST_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef="{This format element checks whether it is an Instrument or an Instrument Liste related to the Security In Constraints. If it is an Instrument List, then its translated denomination is searched, otherwise it is its denomination and at last its name} {-----------------------------------------------------------------------} IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instruments}, IF( GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).name ) )") 
			@aaa:scpt (value="{This format element checks whether it is an Instrument or an Instrument Liste related to the Security In Constraints. If it is an Instrument List, then its translated denomination is searched, otherwise it is its denomination and at last its name} {-----------------------------------------------------------------------} IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instruments}, IF( GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).name ) )") 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* MARKET_STRUCTURE */ 
		MARKET_STRUCTURE : AAABusinessTypes:UniNote 
			@i18n:Label (de=Marktsegment, en="Market Segment", fr="Segment de marché") 
			@sql:SQLName (value=MARKET_STRUCTURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MARKET_STRUCTURE, Rank=43, ScriptDef="{This format element is used to display the complete name of a market segment on which an Allocation Constraint is applied. The complete path is described until level 10, without the level 1 corresponding to an instrument. For deeper levels, the scripts must be updated. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1, PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {level 11 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 11}, {level 10 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 10}, {level 9 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 9}, {level 8 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 8}, {level 7 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 7}, {level 6 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 6}, {level 5 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 5}, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, {Start of first argument of CONCAT} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} ) {End of IF for level 2} ) )") 
			@aaa:scpt (value="{This format element is used to display the complete name of a market segment on which an Allocation Constraint is applied. The complete path is described until level 10, without the level 1 corresponding to an instrument. For deeper levels, the scripts must be updated. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1, PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {level 11 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 11}, {level 10 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 10}, {level 9 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 9}, {level 8 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 8}, {level 7 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 7}, {level 6 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 6}, {level 5 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 5}, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, {Start of first argument of CONCAT} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} ) {End of IF for level 2} ) )") 
		
		/* MARKET_STRUCTURE */ 
		MARKET_STRUCTURE_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=MARKET_STRUCTURE_de) 
			@aaa:TripleA (FormatEltName=MARKET_STRUCTURE, Rank=43, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MARKET_STRUCTURE */ 
		MARKET_STRUCTURE_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=MARKET_STRUCTURE_en) 
			@aaa:TripleA (FormatEltName=MARKET_STRUCTURE, Rank=43, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MARKET_STRUCTURE */ 
		MARKET_STRUCTURE_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=MARKET_STRUCTURE_fr) 
			@aaa:TripleA (FormatEltName=MARKET_STRUCTURE, Rank=43, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MAX_OBJ */ 
		MAX_OBJ : AAABusinessTypes:Number 
			@i18n:Label (de="Oberer Zielwert", en="Maximum Objective", fr="Objectif maximum") 
			@sql:SQLName (value=MAX_OBJ) 
			@aaa:TripleA (FormatEltName=MAX_OBJ, Rank=58, ScriptDef="{This format element retrieves the maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1, 2) {Allocation and Security In Constraints}, model_constr_elt_id.max_weight_n, NULL )") 
			@aaa:scpt (value="{This format element retrieves the maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1, 2) {Allocation and Security In Constraints}, model_constr_elt_id.max_weight_n, NULL )") 
		
		/* MAX_OBJ_TYPE */ 
		MAX_OBJ_TYPE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Oberer Zielwert-Typ", en="Maximum Objective Type", fr="Type de l\'objectif maximum") 
			@sql:SQLName (value=MAX_OBJ_TYPE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MAX_OBJ_TYPE, Rank=59, ScriptDef="{This format element retrieves the bound type for maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, PRINTF( \" %s\", @CONSTR_REF_CURR ), IF( model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, \"%\", {Else if Constraint in quantity} PRINTF( \" %s\", DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL) ) ))))") 
			@aaa:scpt (value="{This format element retrieves the bound type for maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, PRINTF( \" %s\", @CONSTR_REF_CURR ), IF( model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, \"%\", {Else if Constraint in quantity} PRINTF( \" %s\", DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL) ) ))))") 
		
		/* MAX_OBJ_TYPE */ 
		MAX_OBJ_TYPE_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MAX_OBJ_TYPE_de) 
			@aaa:TripleA (FormatEltName=MAX_OBJ_TYPE, Rank=59, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MAX_OBJ_TYPE */ 
		MAX_OBJ_TYPE_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MAX_OBJ_TYPE_en) 
			@aaa:TripleA (FormatEltName=MAX_OBJ_TYPE, Rank=59, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MAX_OBJ_TYPE */ 
		MAX_OBJ_TYPE_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MAX_OBJ_TYPE_fr) 
			@aaa:TripleA (FormatEltName=MAX_OBJ_TYPE, Rank=59, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MAX_OBJ_TYPE_OTHER */ 
		MAX_OBJ_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Oberer Zielwert-Typ", en="Maximum Objective Type", fr="Type de l\'objectif maximum") 
			@sql:SQLName (value=MAX_OBJ_TYPE_OTHER) 
			@aaa:TripleA (FormatEltName=MAX_OBJ_TYPE_OTHER, Rank=61, ScriptDef="{This format element retrieves the bound type for maximum objective defined by a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, @CONSTR_REF_CURR, IF( model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", DOMAIN().language_dict_id, NULL), NULL ) ) )") 
			@aaa:scpt (value="{This format element retrieves the bound type for maximum objective defined by a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, @CONSTR_REF_CURR, IF( model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", DOMAIN().language_dict_id, NULL), NULL ) ) )") 
		
		/* MAX_OBJ_TYPE_PERCENT */ 
		MAX_OBJ_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Oberer Zielwert-Typ", en="Maximum Objective Type", fr="Type de l\'objectif maximum") 
			@sql:SQLName (value=MAX_OBJ_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=MAX_OBJ_TYPE_PERCENT, Rank=60, ScriptDef="{This format element retrieves the bound type for maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", {ELSE} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", NULL ) )") 
			@aaa:scpt (value="{This format element retrieves the bound type for maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", {ELSE} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", NULL ) )") 
		
		/* MIN_OBJ */ 
		MIN_OBJ : AAABusinessTypes:Number 
			@i18n:Label (de="Unterer Zielwert", en="Minimum Objective", fr="Objectif minimum") 
			@sql:SQLName (value=MIN_OBJ) 
			@aaa:TripleA (FormatEltName=MIN_OBJ, Rank=54, ScriptDef="{This format element retrieves the minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1,2) {Allocation and Security In Constraints}, model_constr_elt_id.min_weight_n, NULL )") 
			@aaa:scpt (value="{This format element retrieves the minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1,2) {Allocation and Security In Constraints}, model_constr_elt_id.min_weight_n, NULL )") 
		
		/* MIN_OBJ_SEC_OUT */ 
		MIN_OBJ_SEC_OUT : AAABusinessTypes:UniName 
			@i18n:Label (de="Menge ausser Verwaltungsvollmacht", en="Quantity Out Of Mandate", fr="Quantité hors mandat") 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT, Rank=62, ScriptDef="{This format element retrieves the minimum objective defined by a Security Out Constraint. This format element is in fact used in the format element [CONSTR_LABEL]} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints}, PRINTF(\"%5.2f\", model_constr_elt_id.min_weight_n) )") 
			@aaa:scpt (value="{This format element retrieves the minimum objective defined by a Security Out Constraint. This format element is in fact used in the format element [CONSTR_LABEL]} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints}, PRINTF(\"%5.2f\", model_constr_elt_id.min_weight_n) )") 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Typ der Menge ausser Verwaltungsvollmacht", en="Type of Quantity Out Of Mandate", fr="Type de la quantité hors mandat") 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_OTHER) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=65, ScriptDef="{This format element retrieves the bound type for minimum objective defined by a Security Out Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), NULL )") 
			@aaa:scpt (value="{This format element retrieves the bound type for minimum objective defined by a Security Out Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), NULL )") 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_OTHER_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_OTHER_de) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=65, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_OTHER_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_OTHER_en) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=65, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_OTHER_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_OTHER_fr) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=65, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Typ der Menge ausser Verwaltungsvollmacht", en="Type of Quantity Out Of Mandate", fr="Type de la quantité hors mandat") 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=64, ScriptDef="{This format element retrieves the bound type for minimum objective defined by a Security Out Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, \"%\", NULL )") 
			@aaa:scpt (value="{This format element retrieves the bound type for minimum objective defined by a Security Out Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, \"%\", NULL )") 
		
		/* MIN_OBJ_TYPE */ 
		MIN_OBJ_TYPE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Unterer Zielwert-Typ", en="Minimum Objective Type", fr="Type de l\'objectif minimum") 
			@sql:SQLName (value=MIN_OBJ_TYPE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MIN_OBJ_TYPE, Rank=55, ScriptDef="{This format element retrieves the bound type for minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, PRINTF( \" %s\", @CONSTR_REF_CURR ), IF( model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", {Else if Constraint in quantity} PRINTF( \" %s\", DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL) ) ))))") 
			@aaa:scpt (value="{This format element retrieves the bound type for minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, PRINTF( \" %s\", @CONSTR_REF_CURR ), IF( model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", {Else if Constraint in quantity} PRINTF( \" %s\", DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL) ) ))))") 
		
		/* MIN_OBJ_TYPE */ 
		MIN_OBJ_TYPE_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MIN_OBJ_TYPE_de) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_TYPE, Rank=55, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MIN_OBJ_TYPE */ 
		MIN_OBJ_TYPE_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MIN_OBJ_TYPE_en) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_TYPE, Rank=55, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MIN_OBJ_TYPE */ 
		MIN_OBJ_TYPE_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MIN_OBJ_TYPE_fr) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_TYPE, Rank=55, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MIN_OBJ_TYPE_OTHER */ 
		MIN_OBJ_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Unterer Zielwert-Typ", en="Minimum Objective Type", fr="Type de l\'objectif minimum") 
			@sql:SQLName (value=MIN_OBJ_TYPE_OTHER) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_TYPE_OTHER, Rank=57, ScriptDef="{This format element retrieves the bound type for minimum objective defined by a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, @CONSTR_REF_CURR, IF( model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", DOMAIN().language_dict_id, NULL), NULL ) ) )") 
			@aaa:scpt (value="{This format element retrieves the bound type for minimum objective defined by a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, @CONSTR_REF_CURR, IF( model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", DOMAIN().language_dict_id, NULL), NULL ) ) )") 
		
		/* MIN_OBJ_TYPE_PERCENT */ 
		MIN_OBJ_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Unterer Zielwert-Typ", en="Minimum Objective Type", fr="Type de l\'objectif minimum") 
			@sql:SQLName (value=MIN_OBJ_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_TYPE_PERCENT, Rank=56, ScriptDef="{This format element retrieves the bound type for minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", {ELSE} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", NULL ) )") 
			@aaa:scpt (value="{This format element retrieves the bound type for minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", {ELSE} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", NULL ) )") 
		
		/* MODELL_CONSTR_FILTER */ 
		MODELL_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=MODELL_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=MODELL_CONSTR_FILTER, Rank=15, ScriptDef="{This format element allows only the display of the following Constraints: - Allocation Constraint - Security In Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1, 0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Allocation Constraint - Security In Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1, 0)") 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Portfolio Code", en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=30, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=31, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* REF_CURRENCY */ 
		REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Ref. Whrg.", en="Ref. Ccy.", fr="Dvs réf.") 
			@sql:SQLName (value=REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=REF_CURRENCY, Rank=25, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* REMAINING_POS_TYPE_O */ 
		REMAINING_POS_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Innerhalb Verwaltungsmandat", en="Remaining in Management Mandate", fr="Restant dans le mandat de gestion") 
			@sql:SQLName (value=REMAINING_POS_TYPE_OTHER) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=REMAINING_POS_TYPE_O, Rank=69, ScriptDef="{This format element displays the constraint bound type for the remaining weight of the corresponding instrument for a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), NULL )") 
			@aaa:scpt (value="{This format element displays the constraint bound type for the remaining weight of the corresponding instrument for a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), NULL )") 
		
		/* REMAINING_POS_TYPE_O */ 
		REMAINING_POS_TYPE_OTHER_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=REMAINING_POS_TYPE_OTHER_de) 
			@aaa:TripleA (FormatEltName=REMAINING_POS_TYPE_O, Rank=69, ScriptDef) 
			@aaa:scpt (value) 
		
		/* REMAINING_POS_TYPE_O */ 
		REMAINING_POS_TYPE_OTHER_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=REMAINING_POS_TYPE_OTHER_en) 
			@aaa:TripleA (FormatEltName=REMAINING_POS_TYPE_O, Rank=69, ScriptDef) 
			@aaa:scpt (value) 
		
		/* REMAINING_POS_TYPE_O */ 
		REMAINING_POS_TYPE_OTHER_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=REMAINING_POS_TYPE_OTHER_fr) 
			@aaa:TripleA (FormatEltName=REMAINING_POS_TYPE_O, Rank=69, ScriptDef) 
			@aaa:scpt (value) 
		
		/* REMAINING_POS_TYPE_P */ 
		REMAINING_POS_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Innerhalb Verwaltungsmandat", en="Remaining in Management Mandate", fr="Restant dans le mandat de gestion") 
			@sql:SQLName (value=REMAINING_POS_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=REMAINING_POS_TYPE_P, Rank=68, ScriptDef="{This format element displays the constraint bound type for the remaining weight of the corresponding instrument for a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"%\", NULL )") 
			@aaa:scpt (value="{This format element displays the constraint bound type for the remaining weight of the corresponding instrument for a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"%\", NULL )") 
		
		/* REMAINING_POSITION */ 
		REMAINING_POSITION : AAABusinessTypes:Number 
			@i18n:Label (de="Innerhalb Verwaltungsmandat", en="Remaining in Management Mandate", fr="Restant dans le mandat de gestion") 
			@sql:SQLName (value=REMAINING_POSITION) 
			@aaa:TripleA (FormatEltName=REMAINING_POSITION, Rank=66, ScriptDef="{This format element displays the remaining weight of the corresponding instrument for a Security Out Constraint. The bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 AND act_weight_cont_n <> NULL {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 AND act_qty_n <> NULL {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n, 0 ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the remaining weight of the corresponding instrument for a Security Out Constraint. The bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 AND act_weight_cont_n <> NULL {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 AND act_qty_n <> NULL {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n, 0 ) {End of second IF} ) {End of first IF}") 
		
		/* SECU_IN_CONSTR_FILTE */ 
		SECU_IN_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SECU_IN_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=SECU_IN_CONSTR_FILTE, Rank=12, ScriptDef="{This format element allows only the display of the following Constraints: - Security In Constraint } {-------------------------------------------------------------------------} IF( {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Security In Constraint } {-------------------------------------------------------------------------} IF( {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1,0)") 
		
		/* SECU_OUT_CONSTR_FILT */ 
		SECU_OUT_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SECU_OUT_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=SECU_OUT_CONSTR_FILT, Rank=13, ScriptDef="{This format element allows only the display of the following Constraints: - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
	} 
	/* PCK_DS_COMPCHK_OBJ */ 
	PCK_DS_COMPCHK_OBJ 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_DS_COMPCHK_OBJ) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_DS_COMPCHK_OBJ) 
	{ 
		/* ACCRUED_INTERESTS */ 
		ACCRUED_INTERESTS : AAABusinessTypes:Number 
			@i18n:Label (de="Stückzins", en="Accrued Interest", fr="Intérêts courus") 
			@sql:SQLName (value=ACCRUED_INTERESTS) 
			@aaa:TripleA (FormatEltName=ACCRUED_INTERESTS, Rank=510, ScriptDef="{This format displays the accrued interests of bonds and equivalent in instrument currency. For other instruments, the display is NULL} {--------------------------------------------------------------------------------------} IF( instr_id.nature_e IN (2, 18, 19) {Bonds, Option Bonds and Convertible Bonds}, ACCR_INTER( instr_id, DOMAIN().calc_from_d, instr_id.ref_curr_id, act_qty_n), NULL )") 
			@aaa:scpt (value="{This format displays the accrued interests of bonds and equivalent in instrument currency. For other instruments, the display is NULL} {--------------------------------------------------------------------------------------} IF( instr_id.nature_e IN (2, 18, 19) {Bonds, Option Bonds and Convertible Bonds}, ACCR_INTER( instr_id, DOMAIN().calc_from_d, instr_id.ref_curr_id, act_qty_n), NULL )") 
		
		/* ACCRUED_INTERESTS_CU */ 
		ACCRUED_INTERESTS_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung des Stückzins", en=Ccy., fr=Devise) 
			@sql:SQLName (value=ACCRUED_INTERESTS_CURR) 
			@aaa:TripleA (FormatEltName=ACCRUED_INTERESTS_CU, Rank=511, ScriptDef="{This format displays the accrued interests currency of bonds and equivalent. For other instruments, the display is NULL} {--------------------------------------------------------------------------------------} IF( instr_id.nature_e IN (2, 18, 19) {Bonds, Option Bonds and Convertible Bonds}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ), NULL )") 
			@aaa:scpt (value="{This format displays the accrued interests currency of bonds and equivalent. For other instruments, the display is NULL} {--------------------------------------------------------------------------------------} IF( instr_id.nature_e IN (2, 18, 19) {Bonds, Option Bonds and Convertible Bonds}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ), NULL )") 
		
		/* AMT_TO_INV */ 
		AMT_TO_INV : AAABusinessTypes:Amount 
			@i18n:Label (de=Investitionsbetrag, en="Amount To Invest", fr="Montant à investir") 
			@sql:SQLName (value=AMT_TO_INV) 
			@aaa:TripleA (FormatEltName=AMT_TO_INV, Rank=46, ScriptDef="{This format element displays the amount to invest if the actual weight is not in the set [objective weight - margin; objective weight + margin]. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the amount to invest is just the opposite of their market value. And otherwise, the calculations is the following (Optimal market value means the market value if the actual weight is the objective weight): Amount to invest = Optimal market value - Current market value = (Objective weight * Portfolio market value) - (Actual weight * Portfolio market value) = (Objective weight - Actual weight) * Portfolio market value } {---------------------------------------------------------} IF( strat_check_e <> 1, IF( level_n = 1 AND strat_level_n = 1, NULL, IF( obj_weight_cont_n <> NULL AND strat_check_e > 1, (obj_weight_cont_n - act_weight_cont_n) * portfolio_id.mkt_val_m / 100 {factor 100, because weights are expressed in percentage)}, {ELSE} IF( strat_check_e = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, NULL, {ELSE} IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, NULL, {ELSE} IF( instr_id.nature_e IN (4, 5, 7) {Cash Account, Money Market, Forward}, NULL, 0 ))))) )") 
			@aaa:scpt (value="{This format element displays the amount to invest if the actual weight is not in the set [objective weight - margin; objective weight + margin]. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the amount to invest is just the opposite of their market value. And otherwise, the calculations is the following (Optimal market value means the market value if the actual weight is the objective weight): Amount to invest = Optimal market value - Current market value = (Objective weight * Portfolio market value) - (Actual weight * Portfolio market value) = (Objective weight - Actual weight) * Portfolio market value } {---------------------------------------------------------} IF( strat_check_e <> 1, IF( level_n = 1 AND strat_level_n = 1, NULL, IF( obj_weight_cont_n <> NULL AND strat_check_e > 1, (obj_weight_cont_n - act_weight_cont_n) * portfolio_id.mkt_val_m / 100 {factor 100, because weights are expressed in percentage)}, {ELSE} IF( strat_check_e = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, NULL, {ELSE} IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, NULL, {ELSE} IF( instr_id.nature_e IN (4, 5, 7) {Cash Account, Money Market, Forward}, NULL, 0 ))))) )") 
		
		/* AMT_TO_INV_ABS */ 
		AMT_TO_INV_ABS : AAABusinessTypes:Amount 
			@i18n:Label (de="Investitionsbetrag (absolut)", en="Amount To Invest (Absolute)", fr="Montant à investir (absolu)") 
			@sql:SQLName (value=AMT_TO_INV_ABS) 
			@aaa:TripleA (FormatEltName=AMT_TO_INV_ABS, Rank=48, ScriptDef="{This format element displays the amount to invest if the actual weight is not in the set [objective weight - margin; objective weight + margin]. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the amount to invest ij absolute value is equal to their market value. And otherwise, the calculations is the following (Optimal market value means the market value if the actual weight is the objective weight): Amount to invest (absolute) = |Optimal market value - Current market value| = |(Objective weight * Portfolio market value) - (Actual weight * Portfolio market value)| = |(Objective weight - Actual weight) * Portfolio market value| } {---------------------------------------------------------} ABS( @AMT_TO_INV )") 
			@aaa:scpt (value="{This format element displays the amount to invest if the actual weight is not in the set [objective weight - margin; objective weight + margin]. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the amount to invest ij absolute value is equal to their market value. And otherwise, the calculations is the following (Optimal market value means the market value if the actual weight is the objective weight): Amount to invest (absolute) = |Optimal market value - Current market value| = |(Objective weight * Portfolio market value) - (Actual weight * Portfolio market value)| = |(Objective weight - Actual weight) * Portfolio market value| } {---------------------------------------------------------} ABS( @AMT_TO_INV )") 
		
		/* AMT_TO_INV_ABS_REF_C */ 
		AMT_TO_INV_ABS_REF_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=AMT_TO_INV_ABS_REF_CURR) 
			@aaa:TripleA (FormatEltName=AMT_TO_INV_ABS_REF_C, Rank=49, ScriptDef="IF( @AMT_TO_INV_ABS = NULL, NULL, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, DOMAIN().currency_id.code ) )") 
			@aaa:scpt (value="IF( @AMT_TO_INV_ABS = NULL, NULL, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, DOMAIN().currency_id.code ) )") 
		
		/* AMT_TO_INV_REF_CURR */ 
		AMT_TO_INV_REF_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=AMT_TO_INV_REF_CURR) 
			@aaa:TripleA (FormatEltName=AMT_TO_INV_REF_CURR, Rank=47, ScriptDef="IF( @AMT_TO_INV = NULL, NULL, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, DOMAIN().currency_id.code ) )") 
			@aaa:scpt (value="IF( @AMT_TO_INV = NULL, NULL, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, DOMAIN().currency_id.code ) )") 
		
		/* CAP_PL */ 
		CAP_PL : AAABusinessTypes:Amount 
			@i18n:Label (de=Kapital-G&V, en="Cap P&L", fr="G&P Cap") 
			@sql:SQLName (value=CAP_PL) 
			@aaa:TripleA (FormatEltName=CAP_PL, Rank=703, ScriptDef="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, UNREALISED_PL(extended_position_id,1,0),0) )") 
			@aaa:scpt (value="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, UNREALISED_PL(extended_position_id,1,0),0) )") 
		
		/* CAP_PL_PERC */ 
		CAP_PL_PERC : AAABusinessTypes:Number 
			@i18n:Label (de="Kapital-G&V (%)", en="Cap P&L (%)", fr="G&P Cap (%)") 
			@sql:SQLName (value=CAP_PL_PERC) 
			@aaa:TripleA (FormatEltName=CAP_PL_PERC, Rank=704, ScriptDef="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, 100 * UNREALISED_PL(extended_position_id,1,0)/ABS(current_net_value_m),0) )") 
			@aaa:scpt (value="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, 100 * UNREALISED_PL(extended_position_id,1,0)/ABS(current_net_value_m),0) )") 
		
		/* CHECK_STRAT */ 
		CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=CHECK_STRAT, Rank=100, ScriptDef="{IF(level_n = 3 AND denom = \"_\", NULL, strat_check_e)} strat_check_e") 
			@aaa:scpt (value="{IF(level_n = 3 AND denom = \"_\", NULL, strat_check_e)} strat_check_e") 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* COST_EXCH_RATE */ 
		COST_EXCH_RATE : AAABusinessTypes:Number 
			@i18n:Label (de=Deviseneinstand, en="Cost Exchange Rate", fr="Cours monétaire d\'achat") 
			@sql:SQLName (value=COST_EXCH_RATE) 
			@aaa:TripleA (FormatEltName=COST_EXCH_RATE, Rank=300, ScriptDef=cost_exch_rate) 
			@aaa:scpt (value=cost_exch_rate) 
		
		/* COST_EXCH_RATE_CURR */ 
		COST_EXCH_RATE_CURR : AAABusinessTypes:UniName 
			@i18n:Label (de="Währung Deviseneinstand", en="Cost Exchange Rate", fr="Cours monétaire d\'achat") 
			@sql:SQLName (value=COST_EXCH_RATE_CURR) 
			@aaa:TripleA (FormatEltName=COST_EXCH_RATE_CURR, Rank=301, ScriptDef="{This format element displays the exchange rate currency and underlying currency between the position currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} PRINTF(\"%s/%s\", IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", pos_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, pos_curr_id.code ), IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, DOMAIN().currency_id.code ) )") 
			@aaa:scpt (value="{This format element displays the exchange rate currency and underlying currency between the position currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} PRINTF(\"%s/%s\", IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", pos_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, pos_curr_id.code ), IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, DOMAIN().currency_id.code ) )") 
		
		/* COST_PRICE */ 
		COST_PRICE : AAABusinessTypes:Number 
			@i18n:Label (de="Stückpreis", en="Unit Cost", fr="Coût unitaire") 
			@sql:SQLName (value=COST_PRICE) 
			@aaa:TripleA (FormatEltName=COST_PRICE, Rank=350, ScriptDef=cost_quote_n) 
			@aaa:scpt (value=cost_quote_n) 
		
		/* COST_PRICE_CURRENCY */ 
		COST_PRICE_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung Einstandswert", en=Ccy., fr=Devise) 
			@sql:SQLName (value=COST_PRICE_CURRENCY) 
			@aaa:TripleA (FormatEltName=COST_PRICE_CURRENCY, Rank=351, ScriptDef="{This format element displays the cost price currency of the instrument used in the operation.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument} OR @COST_PRICE = NULL, NULL, {element is an instrument} {ELSE} IF( instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, NULL, {Instrument is not a bond, an option bond or a convertible bond} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ) ) )") 
			@aaa:scpt (value="{This format element displays the cost price currency of the instrument used in the operation.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument} OR @COST_PRICE = NULL, NULL, {element is an instrument} {ELSE} IF( instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, NULL, {Instrument is not a bond, an option bond or a convertible bond} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ) ) )") 
		
		/* COST_PRICE_PERCENTAG */ 
		COST_PRICE_PERCENTAGE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Anteil Einstandswert", en=Ccy., fr=Devise) 
			@sql:SQLName (value=COST_PRICE_PERCENTAGE) 
			@aaa:TripleA (FormatEltName=COST_PRICE_PERCENTAG, Rank=352, ScriptDef="{This format element displays the cost price symbol of bonds and equivalent used in the operation.} {--------------------------------------------------------} IF( instr_id <> NULL AND @COST_PRICE <> NULL AND instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, \"%\", NULL )") 
			@aaa:scpt (value="{This format element displays the cost price symbol of bonds and equivalent used in the operation.} {--------------------------------------------------------} IF( instr_id <> NULL AND @COST_PRICE <> NULL AND instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, \"%\", NULL )") 
		
		/* CURR_PL */ 
		CURR_PL : AAABusinessTypes:Amount 
			@i18n:Label (de=Devisen-G&V, en="Curr P&L", fr="G&P devise") 
			@sql:SQLName (value=CURR_PL) 
			@aaa:TripleA (FormatEltName=CURR_PL, Rank=705, ScriptDef="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, UNREALISED_PL(extended_position_id,2,0),0) )") 
			@aaa:scpt (value="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, UNREALISED_PL(extended_position_id,2,0),0) )") 
		
		/* CURR_PL_PERC */ 
		CURR_PL_PERC : AAABusinessTypes:Number 
			@i18n:Label (de="Devisen-G&V (%)", en="Curr P&L (%)", fr="G&P devise (%)") 
			@sql:SQLName (value=CURR_PL_PERC) 
			@aaa:TripleA (FormatEltName=CURR_PL_PERC, Rank=706, ScriptDef="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, 100 * UNREALISED_PL(extended_position_id,2,0)/ABS(current_net_value_m),0) )") 
			@aaa:scpt (value="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, 100 * UNREALISED_PL(extended_position_id,2,0)/ABS(current_net_value_m),0) )") 
		
		/* data_secu_prof_id */ 
		data_secu_prof_id : AAABusinessTypes:Id 
			@sql:SQLName (value=data_secu_prof_id) 
			@aaa:TripleA (FormatEltName=data_secu_prof_id, Rank=1, ScriptDef=portfolio_id.data_secu_prof_id) 
			@aaa:scpt (value=portfolio_id.data_secu_prof_id) 
		
		/* DEPOSIT_NAME */ 
		DEPOSIT_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Lagerstelle, en=Deposit, fr="Dépositaire") 
			@sql:SQLName (value=DEPOSIT_NAME) 
			@aaa:TripleA (FormatEltName=DEPOSIT_NAME, Rank=2010, ScriptDef=deposit_id.name) 
			@aaa:scpt (value=deposit_id.name) 
		
		/* EXCH_RATE */ 
		EXCH_RATE : AAABusinessTypes:Number 
			@i18n:Label (de=Devisenkurs, en="Exchange Rate", fr="Cours monétaire") 
			@sql:SQLName (value=EXCH_RATE) 
			@aaa:TripleA (FormatEltName=EXCH_RATE, Rank=170, ScriptDef=extended_position.pos_val_id.pos_exch_rate) 
			@aaa:scpt (value=extended_position.pos_val_id.pos_exch_rate) 
		
		/* EXCH_RATE_CURR */ 
		EXCH_RATE_CURR : AAABusinessTypes:UniName 
			@i18n:Label (de="Währung Devisenkurs", en="Exchange Rate", fr="Cours monétaire") 
			@sql:SQLName (value=EXCH_RATE_CURR) 
			@aaa:TripleA (FormatEltName=EXCH_RATE_CURR, Rank=171, ScriptDef="{This format element displays the exchange rate currency and underlying currency between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} PRINTF(\"%s/%s\", IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", pos_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, pos_curr_id.code ), IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, DOMAIN().currency_id ) )") 
			@aaa:scpt (value="{This format element displays the exchange rate currency and underlying currency between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} PRINTF(\"%s/%s\", IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", pos_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, pos_curr_id.code ), IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, DOMAIN().currency_id ) )") 
		
		/* HEAD_FILTER */ 
		HEAD_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=HEAD_FILTER) 
			@aaa:TripleA (FormatEltName=HEAD_FILTER, Rank=11, ScriptDef="{This format element is used as a filter to extract only head strategy level (Asset Allocation and Dummy Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {To be sure that the head strategies are not included in a Benchmark composition} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategy is not a Recommendation List or a Constraint Set} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis} AND leaf_f = 1, {Otherwise, if context (domain) is set with a specific instrument, the system will create 2 double rows and the WUI will not support it} 1, 0)") 
			@aaa:scpt (value="{This format element is used as a filter to extract only head strategy level (Asset Allocation and Dummy Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {To be sure that the head strategies are not included in a Benchmark composition} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategy is not a Recommendation List or a Constraint Set} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis} AND leaf_f = 1, {Otherwise, if context (domain) is set with a specific instrument, the system will create 2 double rows and the WUI will not support it} 1, 0)") 
		
		/* id */ 
		id : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=id) 
			@aaa:TripleA (FormatEltName=id, Rank=5, ScriptDef="NUMSTR(id)") 
			@aaa:scpt (value="NUMSTR(id)") 
		
		/* id_bis */ 
		id_bis : AAABusinessTypes:Id 
			@sql:SQLName (value=id_bis) 
			@aaa:TripleA (FormatEltName=id_bis, Rank=10, ScriptDef=id) 
			@aaa:scpt (value=id) 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Instrument Code", en="Instrument Code", fr="Code de l\'instrument") 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=499, ScriptDef=instr_id.code) 
			@aaa:scpt (value=instr_id.code) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_DENOM, Rank=20, ScriptDef="{DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name )") 
			@aaa:scpt (value="{DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_EXCH_RATE_CURR */ 
		INSTR_EXCH_RATE_CURR : AAABusinessTypes:UniName 
			@i18n:Label (de=Devisenkurs, en="Exchange Rate", fr="Cours monétaire") 
			@sql:SQLName (value=INSTR_EXCH_RATE_CURR) 
			@aaa:TripleA (FormatEltName=INSTR_EXCH_RATE_CURR, Rank=509, ScriptDef="{This format element displays the exchange rate currency and underlying currency between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {element is an instrument} {ELSE} IF( instr_id.ref_curr_id = DOMAIN( ).currency_id {instrument quotation currency is equal reference currency}, NULL, {instrument quotation currency is not equal reference currency} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, PRINTF(\"%s/%s\", SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, SYNONYM(\"currency\", DOMAIN( ).currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code), PRINTF(\"%s/%s\", instr_id.ref_curr_id.code, DOMAIN( ).currency_id.code) ) ) )") 
			@aaa:scpt (value="{This format element displays the exchange rate currency and underlying currency between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {element is an instrument} {ELSE} IF( instr_id.ref_curr_id = DOMAIN( ).currency_id {instrument quotation currency is equal reference currency}, NULL, {instrument quotation currency is not equal reference currency} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, PRINTF(\"%s/%s\", SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, SYNONYM(\"currency\", DOMAIN( ).currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code), PRINTF(\"%s/%s\", instr_id.ref_curr_id.code, DOMAIN( ).currency_id.code) ) ) )") 
		
		/* instr_id */ 
		instr_id : AAABusinessTypes:Id 
			@sql:SQLName (value=instr_id) 
			@aaa:TripleA (FormatEltName=instr_id, Rank=6, ScriptDef=instr_id) 
			@aaa:scpt (value=instr_id) 
		
		/* INSTR_PRICE */ 
		INSTR_PRICE : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktkurs, en="Market Price", fr="Cours de marché") 
			@sql:SQLName (value=INSTR_PRICE) 
			@aaa:TripleA (FormatEltName=INSTR_PRICE, Rank=503, ScriptDef="{This format element displays the quotation of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {ELSE IF element is an instrument} INSTR_PRICE(instr_id, DOMAIN( ).calc_from_d , 0 ,0 ,0 ,0 , , , ,).quote_n )") 
			@aaa:scpt (value="{This format element displays the quotation of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {ELSE IF element is an instrument} INSTR_PRICE(instr_id, DOMAIN( ).calc_from_d , 0 ,0 ,0 ,0 , , , ,).quote_n )") 
		
		/* INSTR_PRICE_CURRENCY */ 
		INSTR_PRICE_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=INSTR_PRICE_CURRENCY) 
			@aaa:TripleA (FormatEltName=INSTR_PRICE_CURRENCY, Rank=506, ScriptDef="{This format element displays the quotation currency of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument} OR @INSTR_PRICE = NULL, NULL, {element is an instrument} {ELSE} IF( instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, NULL, {Instrument is not a bond, an option bond or a convertible bond} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ) ) )") 
			@aaa:scpt (value="{This format element displays the quotation currency of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument} OR @INSTR_PRICE = NULL, NULL, {element is an instrument} {ELSE} IF( instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, NULL, {Instrument is not a bond, an option bond or a convertible bond} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ) ) )") 
		
		/* INSTR_PRICE_PERCENTA */ 
		INSTR_PRICE_PERCENTAGE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Prozent, en=Ccy., fr=Devise) 
			@sql:SQLName (value=INSTR_PRICE_PERCENTAGE) 
			@aaa:TripleA (FormatEltName=INSTR_PRICE_PERCENTA, Rank=505, ScriptDef="{This format element displays the quotation symbol of bonds and equivalent helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id <> NULL AND @INSTR_PRICE <> NULL AND instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, \"%\", NULL )") 
			@aaa:scpt (value="{This format element displays the quotation symbol of bonds and equivalent helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id <> NULL AND @INSTR_PRICE <> NULL AND instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, \"%\", NULL )") 
		
		/* INSTR_QUOTE_EXCH_RAT */ 
		INSTR_QUOTE_EXCH_RATE : AAABusinessTypes:Number 
			@i18n:Label (de=Devisenkurs, en="Exchange Rate", fr="Cours monétaire") 
			@sql:SQLName (value=INSTR_QUOTE_EXCH_RATE) 
			@aaa:TripleA (FormatEltName=INSTR_QUOTE_EXCH_RAT, Rank=508, ScriptDef="{This format element displays the exchange rate between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {element is an instrument} {ELSE} IF( instr_id.ref_curr_id = DOMAIN( ).currency_id {instrument quotation currency is equal reference currency}, NULL, {instrument quotation currency is not equal reference currency} EXCH_RATE(instr_id.ref_curr_id , DOMAIN( ).calc_from_d, DOMAIN( ).currency_id, 0, 0, 0, , ,).exch_rate ) )") 
			@aaa:scpt (value="{This format element displays the exchange rate between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {element is an instrument} {ELSE} IF( instr_id.ref_curr_id = DOMAIN( ).currency_id {instrument quotation currency is equal reference currency}, NULL, {instrument quotation currency is not equal reference currency} EXCH_RATE(instr_id.ref_curr_id , DOMAIN( ).calc_from_d, DOMAIN( ).currency_id, 0, 0, 0, , ,).exch_rate ) )") 
		
		/* INSTR_REF_CURRENCY */ 
		INSTR_REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Instr. Whrg", en="Instr. Ccy", fr="Dev instr.") 
			@sql:SQLName (value=INSTR_REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=INSTR_REF_CURRENCY, Rank=507, ScriptDef="{This format element displays the currency of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL, NULL, {element is an instrument} {ELSE} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_curr_id.code ) )") 
			@aaa:scpt (value="{This format element displays the currency of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL, NULL, {element is an instrument} {ELSE} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_curr_id.code ) )") 
		
		/* investment_profile_i */ 
		investment_profile_id : AAABusinessTypes:Id 
			@sql:SQLName (value=investment_profile_id) 
			@aaa:TripleA (FormatEltName=investment_profile_i, Rank=8, ScriptDef=ext_strategy_link_id.ref_strategy_id) 
			@aaa:scpt (value=ext_strategy_link_id.ref_strategy_id) 
		
		/* IO_ACCOUNT */ 
		IO_ACCOUNT : AAABusinessTypes:UniCode 
			@sql:SQLName (value=IO_ACCOUNT) 
			@aaa:TripleA (FormatEltName=IO_ACCOUNT, Rank=3110, ScriptDef="{Account for Initiate Order for call amendment} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, IF(@IO_CALL_DEPO = 1, extended_position_id.open_oper_id.acc_instr_id.code))") 
			@aaa:scpt (value="{Account for Initiate Order for call amendment} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, IF(@IO_CALL_DEPO = 1, extended_position_id.open_oper_id.acc_instr_id.code))") 
		
		/* IO_BUY_RIGHT */ 
		IO_BUY_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de=Kauf, en=Buy, fr=Achat) 
			@sql:SQLName (value=IO_BUY_RIGHT) 
			@aaa:TripleA (FormatEltName=IO_BUY_RIGHT, Rank=3020, ScriptDef="{Calculate the right to initiate a buy order} IF(DOMAIN().simulation_f = 1 {PG simulation -> no initiate order possible},0, IF(@IO_SECURITY=1 OR @IO_CALL_DEPO=1, IF(GET_RIGHTS( GET_APPL_PARAM(\"DS_IO_BUY\"), 1, 1, 1)=1 AND( (order_qty_n <> NULL AND (obj_qty_n - act_qty_n) > 0) OR (obj_weight_cont_n=NULL AND parent_ext_strat_elem_id.obj_weight_cont_n <> NULL AND parent_ext_strat_elem_id.act_weight_cont_n < parent_ext_strat_elem_id.obj_weight_cont_n - parent_ext_strat_elem_id.obj_weight_cont_marg_n)), 1), 0))") 
			@aaa:scpt (value="{Calculate the right to initiate a buy order} IF(DOMAIN().simulation_f = 1 {PG simulation -> no initiate order possible},0, IF(@IO_SECURITY=1 OR @IO_CALL_DEPO=1, IF(GET_RIGHTS( GET_APPL_PARAM(\"DS_IO_BUY\"), 1, 1, 1)=1 AND( (order_qty_n <> NULL AND (obj_qty_n - act_qty_n) > 0) OR (obj_weight_cont_n=NULL AND parent_ext_strat_elem_id.obj_weight_cont_n <> NULL AND parent_ext_strat_elem_id.act_weight_cont_n < parent_ext_strat_elem_id.obj_weight_cont_n - parent_ext_strat_elem_id.obj_weight_cont_marg_n)), 1), 0))") 
		
		/* IO_CALL_DEPO */ 
		IO_CALL_DEPO : AAABusinessTypes:Flag 
			@sql:SQLName (value=IO_CALL_DEPO) 
			@aaa:TripleA (FormatEltName=IO_CALL_DEPO, Rank=3010, ScriptDef="{For initiate order: defines if a position is available for call deposit amendment order} IF(instr_id.nature_e = 5 {Money Market} AND instr_id.contract_type_id.code =\"PCK_DS_CALL_DEPOSIT\", 1, 0)") 
			@aaa:scpt (value="{For initiate order: defines if a position is available for call deposit amendment order} IF(instr_id.nature_e = 5 {Money Market} AND instr_id.contract_type_id.code =\"PCK_DS_CALL_DEPOSIT\", 1, 0)") 
		
		/* IO_COUNTERPARTY */ 
		IO_COUNTERPARTY : AAABusinessTypes:UniCode 
			@sql:SQLName (value=IO_COUNTERPARTY) 
			@aaa:TripleA (FormatEltName=IO_COUNTERPARTY, Rank=3060, ScriptDef="{Counterparty for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.counterparty_third_id.code)") 
			@aaa:scpt (value="{Counterparty for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.counterparty_third_id.code)") 
		
		/* IO_DEPOSIT */ 
		IO_DEPOSIT : AAABusinessTypes:UniCode 
			@sql:SQLName (value=IO_DEPOSIT) 
			@aaa:TripleA (FormatEltName=IO_DEPOSIT, Rank=3070, ScriptDef="{Deposit for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.deposit_id.code)") 
			@aaa:scpt (value="{Deposit for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.deposit_id.code)") 
		
		/* IO_INSTR */ 
		IO_INSTR : AAABusinessTypes:Id 
			@sql:SQLName (value=IO_INSTR) 
			@aaa:TripleA (FormatEltName=IO_INSTR, Rank=3170, ScriptDef="{Instrument id for Initiate Order} IF(instr_id<0,instr_id.parent_instr_id,instr_id)") 
			@aaa:scpt (value="{Instrument id for Initiate Order} IF(instr_id<0,instr_id.parent_instr_id,instr_id)") 
		
		/* IO_MARKET */ 
		IO_MARKET : AAABusinessTypes:UniCode 
			@sql:SQLName (value=IO_MARKET) 
			@aaa:TripleA (FormatEltName=IO_MARKET, Rank=3130, ScriptDef="{Market for Initiate Order on security} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, IF(@IO_SECURITY = 1, extended_position_id.open_oper_id.market_third_id.code))") 
			@aaa:scpt (value="{Market for Initiate Order on security} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, IF(@IO_SECURITY = 1, extended_position_id.open_oper_id.market_third_id.code))") 
		
		/* IO_ORDER_TYPE */ 
		IO_ORDER_TYPE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=IO_ORDER_TYPE) 
			@aaa:TripleA (FormatEltName=IO_ORDER_TYPE, Rank=3040, ScriptDef="{Order type of the current position for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, {For deposit} IF(@IO_CALL_DEPO = 1,\"PCK_DS_CALL_DEP_AMD\", {For security} IF(@IO_SECURITY = 1, IF(extended_position_id.open_oper_id.order_type_id.code<>NULL, extended_position_id.open_oper_id.order_type_id.code, IF(instr_id.nature_e = 1 {Stock},\"PCK_DS_STOCK\", IF(instr_id.nature_e IN (2 {Fixed Income},11 {Discount Instrument},16 {Debt}, 18 {Option Bond},19 {Convertible Bond}, 24 {mortgage backed securities}),\"PCK_DS_FIXED_INC\", IF(instr_id.nature_e IN (3 {Option},22 {Exotic Option}),\"PCK_DS_OPTION\", IF(instr_id.nature_e = 6 {Future},\"PCK_DS_FUTURE\", IF(instr_id.nature_e = 13 {Fund Share},\"PCK_DS_FUND\")))))) ) ) )") 
			@aaa:scpt (value="{Order type of the current position for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, {For deposit} IF(@IO_CALL_DEPO = 1,\"PCK_DS_CALL_DEP_AMD\", {For security} IF(@IO_SECURITY = 1, IF(extended_position_id.open_oper_id.order_type_id.code<>NULL, extended_position_id.open_oper_id.order_type_id.code, IF(instr_id.nature_e = 1 {Stock},\"PCK_DS_STOCK\", IF(instr_id.nature_e IN (2 {Fixed Income},11 {Discount Instrument},16 {Debt}, 18 {Option Bond},19 {Convertible Bond}, 24 {mortgage backed securities}),\"PCK_DS_FIXED_INC\", IF(instr_id.nature_e IN (3 {Option},22 {Exotic Option}),\"PCK_DS_OPTION\", IF(instr_id.nature_e = 6 {Future},\"PCK_DS_FUTURE\", IF(instr_id.nature_e = 13 {Fund Share},\"PCK_DS_FUND\")))))) ) ) )") 
		
		/* IO_PORTFOLIO */ 
		IO_PORTFOLIO : AAABusinessTypes:Id 
			@sql:SQLName (value=IO_PORTFOLIO) 
			@aaa:TripleA (FormatEltName=IO_PORTFOLIO, Rank=3160, ScriptDef="{Portfolio id for Initiate Order} portfolio_id") 
			@aaa:scpt (value="{Portfolio id for Initiate Order} portfolio_id") 
		
		/* IO_QUANTITY */ 
		IO_QUANTITY : AAABusinessTypes:Number 
			@i18n:Label (de="Stück", en=Quantity, fr="Quantité") 
			@sql:SQLName (value=IO_QUANTITY) 
			@aaa:TripleA (FormatEltName=IO_QUANTITY, Rank=3150, ScriptDef="{Quantity for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, order_qty_n)") 
			@aaa:scpt (value="{Quantity for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, order_qty_n)") 
		
		/* IO_RATE */ 
		IO_RATE : AAABusinessTypes:Number 
			@i18n:Label (de=Zinssatz, en="Interest Rate", fr="Taux d\'intérêts") 
			@sql:SQLName (value=IO_RATE) 
			@aaa:TripleA (FormatEltName=IO_RATE, Rank=3140, ScriptDef="{Interest rate for Initiate Order on call deposit amendment} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, IF(@IO_CALL_DEPO = 1, extended_position_id.rate_p))") 
			@aaa:scpt (value="{Interest rate for Initiate Order on call deposit amendment} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, IF(@IO_CALL_DEPO = 1, extended_position_id.rate_p))") 
		
		/* IO_REF_NAT_BUY */ 
		IO_REF_NAT_BUY : AAABusinessTypes:Enum 
			@sql:SQLName (value=IO_REF_NAT_BUY) 
			@aaa:TripleA (FormatEltName=IO_REF_NAT_BUY, Rank=3080, ScriptDef="{Reference Nature for Initiate Order} IF(@IO_BUY_RIGHT=1, {For deposit} IF(@IO_CALL_DEPO = 1, 1 {Open}, {For future} IF(instr_id.nature_e = 6 {Future}, {Future Open/Close} IF(extended_position_id.ref_nat_e = 7 {Future Open}, IF(act_qty_n>0 {Long}, 7 {Future Open}, 8 {Future Close}), {Future FIFO} IF(extended_position_id.ref_nat_e = 10 {Future FIFO}, 10 {Future FIFO}, {Future WMP} IF(extended_position_id.ref_nat_e = 21 {Future WMP}, 21 {Future WMP}))))))") 
			@aaa:scpt (value="{Reference Nature for Initiate Order} IF(@IO_BUY_RIGHT=1, {For deposit} IF(@IO_CALL_DEPO = 1, 1 {Open}, {For future} IF(instr_id.nature_e = 6 {Future}, {Future Open/Close} IF(extended_position_id.ref_nat_e = 7 {Future Open}, IF(act_qty_n>0 {Long}, 7 {Future Open}, 8 {Future Close}), {Future FIFO} IF(extended_position_id.ref_nat_e = 10 {Future FIFO}, 10 {Future FIFO}, {Future WMP} IF(extended_position_id.ref_nat_e = 21 {Future WMP}, 21 {Future WMP}))))))") 
		
		/* IO_REF_NAT_SELL */ 
		IO_REF_NAT_SELL : AAABusinessTypes:Enum 
			@sql:SQLName (value=IO_REF_NAT_SELL) 
			@aaa:TripleA (FormatEltName=IO_REF_NAT_SELL, Rank=3090, ScriptDef="{Reference Nature for Initiate Order} IF(@IO_SELL_RIGHT=1, {For deposit} IF(@IO_CALL_DEPO = 1, 2 {Close}, {For future} IF(instr_id.nature_e = 6 {Future}, {Future Open/Close} IF(extended_position_id.ref_nat_e = 7 {Future Open}, IF(act_qty_n>0 {Long}, 8 {Future Close}, 7 {Future Open}), {Future FIFO} IF(extended_position_id.ref_nat_e = 10 {Future FIFO}, 10 {Future FIFO}, {Future WMP} IF(extended_position_id.ref_nat_e = 21 {Future WMP}, 21 {Future WMP}))))))") 
			@aaa:scpt (value="{Reference Nature for Initiate Order} IF(@IO_SELL_RIGHT=1, {For deposit} IF(@IO_CALL_DEPO = 1, 2 {Close}, {For future} IF(instr_id.nature_e = 6 {Future}, {Future Open/Close} IF(extended_position_id.ref_nat_e = 7 {Future Open}, IF(act_qty_n>0 {Long}, 8 {Future Close}, 7 {Future Open}), {Future FIFO} IF(extended_position_id.ref_nat_e = 10 {Future FIFO}, 10 {Future FIFO}, {Future WMP} IF(extended_position_id.ref_nat_e = 21 {Future WMP}, 21 {Future WMP}))))))") 
		
		/* IO_REF_OPER_CODE */ 
		IO_REF_OPER_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=IO_REF_OPER_CODE) 
			@aaa:TripleA (FormatEltName=IO_REF_OPER_CODE, Rank=3100, ScriptDef="{Reference Operation Code for Initiate Order} IF(@IO_REF_NAT_BUY IN (1 {Open},2 {Close},7 {Future Open}, 8 {Future Close}) OR @IO_REF_NAT_SELL IN (2 {Close}, 7 {Future Open}, 8 {Future Close}), extended_position_id.open_oper_code)") 
			@aaa:scpt (value="{Reference Operation Code for Initiate Order} IF(@IO_REF_NAT_BUY IN (1 {Open},2 {Close},7 {Future Open}, 8 {Future Close}) OR @IO_REF_NAT_SELL IN (2 {Close}, 7 {Future Open}, 8 {Future Close}), extended_position_id.open_oper_code)") 
		
		/* IO_SECURITY */ 
		IO_SECURITY : AAABusinessTypes:Flag 
			@sql:SQLName (value=IO_SECURITY) 
			@aaa:TripleA (FormatEltName=IO_SECURITY, Rank=3000, ScriptDef="{For initiate order: defines if a position is available for a security order} IF(instr_id.nature_e IN ( 1 {Stock}, 2 {Fixed Income}, 3 {Option}, 6 {Future}, 11 {Discount Instrument}, 13 {Fund Share}, 16 {Debt}, 18 {Option Bond}, 19 {Convertible Bond}, 22 {Exotic Option}, 24 {mortgage backed securities}), 1, 0)") 
			@aaa:scpt (value="{For initiate order: defines if a position is available for a security order} IF(instr_id.nature_e IN ( 1 {Stock}, 2 {Fixed Income}, 3 {Option}, 6 {Future}, 11 {Discount Instrument}, 13 {Fund Share}, 16 {Debt}, 18 {Option Bond}, 19 {Convertible Bond}, 22 {Exotic Option}, 24 {mortgage backed securities}), 1, 0)") 
		
		/* IO_SELL_RIGHT */ 
		IO_SELL_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de=Verkauf, en=Sell, fr=Vente) 
			@sql:SQLName (value=IO_SELL_RIGHT) 
			@aaa:TripleA (FormatEltName=IO_SELL_RIGHT, Rank=3030, ScriptDef="{Calculate the right to initiate a sell order} IF(DOMAIN().simulation_f = 1 {PG simulation -> no initiate order possible},0, IF(@IO_SECURITY=1 OR @IO_CALL_DEPO=1, IF(GET_RIGHTS( GET_APPL_PARAM(\"DS_IO_SELL\"), 1, 1, 1)=1 AND( (order_qty_n <> NULL AND (obj_qty_n - act_qty_n) < 0) OR (obj_weight_cont_n=NULL AND parent_ext_strat_elem_id.obj_weight_cont_n <> NULL AND parent_ext_strat_elem_id.act_weight_cont_n > parent_ext_strat_elem_id.obj_weight_cont_n + parent_ext_strat_elem_id.obj_weight_cont_marg_n)), 1), 0))") 
			@aaa:scpt (value="{Calculate the right to initiate a sell order} IF(DOMAIN().simulation_f = 1 {PG simulation -> no initiate order possible},0, IF(@IO_SECURITY=1 OR @IO_CALL_DEPO=1, IF(GET_RIGHTS( GET_APPL_PARAM(\"DS_IO_SELL\"), 1, 1, 1)=1 AND( (order_qty_n <> NULL AND (obj_qty_n - act_qty_n) < 0) OR (obj_weight_cont_n=NULL AND parent_ext_strat_elem_id.obj_weight_cont_n <> NULL AND parent_ext_strat_elem_id.act_weight_cont_n > parent_ext_strat_elem_id.obj_weight_cont_n + parent_ext_strat_elem_id.obj_weight_cont_marg_n)), 1), 0))") 
		
		/* IO_SOURCE_CODE */ 
		IO_SOURCE_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=IO_SOURCE_CODE) 
			@aaa:TripleA (FormatEltName=IO_SOURCE_CODE, Rank=3120, ScriptDef="{Contract number for Initiate Order on call deposit amendment} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, IF(@IO_CALL_DEPO = 1, extended_position_id.open_oper_id.source_code))") 
			@aaa:scpt (value="{Contract number for Initiate Order on call deposit amendment} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, IF(@IO_CALL_DEPO = 1, extended_position_id.open_oper_id.source_code))") 
		
		/* IO_SUB_POS_NAT */ 
		IO_SUB_POS_NAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=IO_SUB_POS_NAT) 
			@aaa:TripleA (FormatEltName=IO_SUB_POS_NAT, Rank=3045, ScriptDef="{Sub position nature for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.sub_pos_nat_e)") 
			@aaa:scpt (value="{Sub position nature for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.sub_pos_nat_e)") 
		
		/* IO_SUB_POS_NAT_2 */ 
		IO_SUB_POS_NAT_2 : AAABusinessTypes:Enum 
			@sql:SQLName (value=IO_SUB_POS_NAT_2) 
			@aaa:TripleA (FormatEltName=IO_SUB_POS_NAT_2, Rank=3050, ScriptDef="{Sub position nature for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.sub_pos_nat2_e)") 
			@aaa:scpt (value="{Sub position nature for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.sub_pos_nat2_e)") 
		
		/* IO_SUB_POS_NAT_3 */ 
		IO_SUB_POS_NAT_3 : AAABusinessTypes:Enum 
			@sql:SQLName (value=IO_SUB_POS_NAT_3) 
			@aaa:TripleA (FormatEltName=IO_SUB_POS_NAT_3, Rank=3055, ScriptDef="{Sub position nature for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.sub_pos_nat3_e)") 
			@aaa:scpt (value="{Sub position nature for Initiate Order} IF(@IO_BUY_RIGHT=1 OR @IO_SELL_RIGHT=1, extended_position_id.sub_pos_nat3_e)") 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Investment-Profil, en="Investment Profile", fr="Profil d\'investissement") 
			@sql:SQLName (value=IP_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef="{This format element displays the name of the Investment Profile containing the strategies. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link_id.ref_strategy_id.name )") 
			@aaa:scpt (value="{This format element displays the name of the Investment Profile containing the strategies. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link_id.ref_strategy_id.name )") 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef) 
			@aaa:scpt (value) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef) 
			@aaa:scpt (value) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef) 
			@aaa:scpt (value) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE : AAABusinessTypes:UniString1000 
			@i18n:Label (de=Investitionsstrategie, en="Investment Strategy", fr="Stratégie d\'investissement") 
			@sql:SQLName (value=MKT_STRUCTURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef="{This format element is used to display the complete name of an element. It can be a market segment or an instrument, but the complete path is described until level 10. For deeper levels, the scripts must be updated. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. ATTENTION: As the PRINTF keyword is limited to 10 arguments, the construction of the investment structure is splitted into several PRINTF keywords. This will allow the possibility to add easly extra investment structure levels for customization projects.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]%s\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER, PRINTF(\"%s%s%s%s%s\", {This PRINTF keyword is used to be able to display the results of 5 other PRINTF keywords below. Only 2 argument are currently use and the 3 remaining ones can be used for customization} {###########} {HERE IT IS POSSIBLE TO ADD UNTIL 3 \"PRINTF\" KEYWORDS TO DISPLAY AN INVESTMENT STRUCTURE HAVING MORE THAN 20 LEVELS} {###########} PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {This PRINTF keyword is used as the fourth argument of the PRINTF keyword above} {###########} {HERE IT IS POSSIBLE TO ADD UNTIL 9 ARGUMENTS TO DISPLAY AN INVESTMENT STRUCTURE HAVING MORE THAN 11 LEVELS} {###########} {level 11 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 11}, PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {This PRINTF keyword is used as the fifth argument of the PRINTF keyword above} {level 10 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 10}, {level 9 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 9}, {level 8 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 8}, {level 7 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 7}, {level 6 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 6}, {level 5 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 5}, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.market_segment_id ) {End of CONCAT} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} , market_segment_id ) {End of PRINTF} ) {End of IF for level 2}, {level 1 arg instr} IF( instr_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, PRINTF(\"%s[HIERLEV%i]%s[HIERLEV%i]\", {DB DENOM} IF( disp_parent_ext_strat_elem_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} disp_parent_ext_strat_elem_id.instr_id.name ), ABS(disp_parent_ext_strat_elem_id), @INSTR_DENOM, ABS(id)), IF( instr_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL, PRINTF(\"%s[HIERLEV%i]\", @INSTR_DENOM, ABS(id)) ) ) {End of IF for level 1} ) ) ) ) )") 
			@aaa:scpt (value="{This format element is used to display the complete name of an element. It can be a market segment or an instrument, but the complete path is described until level 10. For deeper levels, the scripts must be updated. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. ATTENTION: As the PRINTF keyword is limited to 10 arguments, the construction of the investment structure is splitted into several PRINTF keywords. This will allow the possibility to add easly extra investment structure levels for customization projects.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]%s\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER, PRINTF(\"%s%s%s%s%s\", {This PRINTF keyword is used to be able to display the results of 5 other PRINTF keywords below. Only 2 argument are currently use and the 3 remaining ones can be used for customization} {###########} {HERE IT IS POSSIBLE TO ADD UNTIL 3 \"PRINTF\" KEYWORDS TO DISPLAY AN INVESTMENT STRUCTURE HAVING MORE THAN 20 LEVELS} {###########} PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {This PRINTF keyword is used as the fourth argument of the PRINTF keyword above} {###########} {HERE IT IS POSSIBLE TO ADD UNTIL 9 ARGUMENTS TO DISPLAY AN INVESTMENT STRUCTURE HAVING MORE THAN 11 LEVELS} {###########} {level 11 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 11}, PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {This PRINTF keyword is used as the fifth argument of the PRINTF keyword above} {level 10 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 10}, {level 9 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 9}, {level 8 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 8}, {level 7 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 7}, {level 6 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 6}, {level 5 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 5}, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.market_segment_id ) {End of CONCAT} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} , market_segment_id ) {End of PRINTF} ) {End of IF for level 2}, {level 1 arg instr} IF( instr_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, PRINTF(\"%s[HIERLEV%i]%s[HIERLEV%i]\", {DB DENOM} IF( disp_parent_ext_strat_elem_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} disp_parent_ext_strat_elem_id.instr_id.name ), ABS(disp_parent_ext_strat_elem_id), @INSTR_DENOM, ABS(id)), IF( instr_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL, PRINTF(\"%s[HIERLEV%i]\", @INSTR_DENOM, ABS(id)) ) ) {End of IF for level 1} ) ) ) ) )") 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_de : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_de) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_en : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_en) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_fr : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_fr) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE_NEW */ 
		MKT_STRUCTURE_NEW : AAABusinessTypes:UniString1000 
			@i18n:Label (de=Investitionsstrategie, en="Investment Strategy NEW", fr="Stratégie d\'investissement") 
			@sql:SQLName (value=MKT_STRUCTURE_NEW) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MKT_STRUCTURE_NEW, Rank=500, ScriptDef="{This format element is used to display the complete name of an element. It can be a market segment or an instrument, but the complete path is described until level 50. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. } {------------------------------------------------------------------------------------------------------------------------------------------------} CONCAT_FMTHIER(disp_parent_ext_strat_elem_id, id, IF{1} ( @SERVER_FILTER = 1, IF{2} ( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), {ELSE} PRINTF(\"%s[HIERLEV%i]%s%s\", GET_FIRST(market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name), market_segment_id ) ){End of condition 2} ){End of condition 1} )") 
			@aaa:scpt (value="{This format element is used to display the complete name of an element. It can be a market segment or an instrument, but the complete path is described until level 50. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. } {------------------------------------------------------------------------------------------------------------------------------------------------} CONCAT_FMTHIER(disp_parent_ext_strat_elem_id, id, IF{1} ( @SERVER_FILTER = 1, IF{2} ( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), {ELSE} PRINTF(\"%s[HIERLEV%i]%s%s\", GET_FIRST(market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name), market_segment_id ) ){End of condition 2} ){End of condition 1} )") 
		
		/* MKT_STRUCTURE_NEW */ 
		MKT_STRUCTURE_NEW_de : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_NEW_de) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE_NEW, Rank=500, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE_NEW */ 
		MKT_STRUCTURE_NEW_en : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_NEW_en) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE_NEW, Rank=500, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE_NEW */ 
		MKT_STRUCTURE_NEW_fr : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_NEW_fr) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE_NEW, Rank=500, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE_SORT */ 
		MKT_STRUCTURE_SORT : AAABusinessTypes:Int 
			@i18n:Label (de="Sortierung der Investitionsstrategie-Struktur", en="Sorting - Investment Strategy", fr="Triage - Stratégie d\'investissement") 
			@sql:SQLName (value=MKT_STRUCTURE_SORT) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE_SORT, Rank=43, ScriptDef="{This format element is used to define an order in the market structure (format element MKT_STRUCTURE) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: MKT_STRUCTURE_SORT := Negative number if strategy element related to rebalancing (otherwise 0) + Sum of the identifiers related to market segments: the market segment are automatically sorted in ascending way by the financial serveur, using the ranks in the classifications + Number between 0 and 1: only if we are at instrument level (main or sub-level), then we can sort the instrument by market value in the WUI } {--------------------------------------------} IF( calculated_e = 1 {rebalancing}, -600000, 0) {This is used to start by displaying elements related to rebalancing} + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id) + IF( disp_parent_ext_strat_elem_id.instr_id <> NULL, 1, {ELSE} IF( instr_id <> NULL, 0, {ELSE} ABS(id) ) )") 
			@aaa:scpt (value="{This format element is used to define an order in the market structure (format element MKT_STRUCTURE) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: MKT_STRUCTURE_SORT := Negative number if strategy element related to rebalancing (otherwise 0) + Sum of the identifiers related to market segments: the market segment are automatically sorted in ascending way by the financial serveur, using the ranks in the classifications + Number between 0 and 1: only if we are at instrument level (main or sub-level), then we can sort the instrument by market value in the WUI } {--------------------------------------------} IF( calculated_e = 1 {rebalancing}, -600000, 0) {This is used to start by displaying elements related to rebalancing} + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id) + IF( disp_parent_ext_strat_elem_id.instr_id <> NULL, 1, {ELSE} IF( instr_id <> NULL, 0, {ELSE} ABS(id) ) )") 
		
		/* MKT_VAL */ 
		MKT_VAL : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktwert, en="Market Value", fr="Valeur d\'inventaire") 
			@sql:SQLName (value=MKT_VAL) 
			@aaa:TripleA (FormatEltName=MKT_VAL, Rank=44, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( (level_n = 1 AND strat_level_n = 1) OR @PORTFOLIO_FILTER = 1, IF( portfolio_id.mkt_val_m <> NULL, portfolio_id.mkt_val_m, 0), IF( current_market_value_m <> NULL, current_market_value_m, 0) ) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( (level_n = 1 AND strat_level_n = 1) OR @PORTFOLIO_FILTER = 1, IF( portfolio_id.mkt_val_m <> NULL, portfolio_id.mkt_val_m, 0), IF( current_market_value_m <> NULL, current_market_value_m, 0) ) )") 
		
		/* NET_COST_VAL */ 
		NET_COST_VAL : AAABusinessTypes:Amount 
			@i18n:Label (de="Netto Einstandswert", en="Cost Value", fr="Coût d\'achat") 
			@sql:SQLName (value=NET_COST_VAL) 
			@aaa:TripleA (FormatEltName=NET_COST_VAL, Rank=330, ScriptDef=cost_net_value_m) 
			@aaa:scpt (value=cost_net_value_m) 
		
		/* NO_LINK_FILTER */ 
		NO_LINK_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=NO_LINK_FILTER) 
			@aaa:TripleA (FormatEltName=NO_LINK_FILTER, Rank=12, ScriptDef="{This format element is used as a filter to extract positions when no strategy links exist} {-----------------------------------------------------------} IF( strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used as a filter to extract positions when no strategy links exist} {-----------------------------------------------------------} IF( strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, 1, 0 )") 
		
		/* OBJ_ACTUAL_WEIGHT */ 
		OBJ_ACTUAL_WEIGHT : AAABusinessTypes:Number 
			@i18n:Label (de="Aktueller Anteil", en="Actual Weight", fr="Poids actuel") 
			@sql:SQLName (value=OBJ_ACTUAL_WEIGHT) 
			@aaa:TripleA (FormatEltName=OBJ_ACTUAL_WEIGHT, Rank=70, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( (level_n = 1 AND strat_level_n = 1) OR @PORTFOLIO_FILTER = 1, 1, act_weight_cont_n*0.01 ) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( (level_n = 1 AND strat_level_n = 1) OR @PORTFOLIO_FILTER = 1, 1, act_weight_cont_n*0.01 ) )") 
		
		/* OBJ_COMPLIANCE_INDIC */ 
		OBJ_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Gradmesser des Strategieabgleichs", en=Compliance, fr="Conformité") 
			@sql:SQLName (value=OBJ_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_COMPLIANCE_INDIC, Rank=103, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
		
		/* OBJ_GAP */ 
		OBJ_GAP : AAABusinessTypes:Number 
			@i18n:Label (de="Abweichung zum Zielwert", en="Objective Gap", fr="Ecart de l\'objectif") 
			@sql:SQLName (value=OBJ_GAP) 
			@aaa:TripleA (FormatEltName=OBJ_GAP, Rank=60, ScriptDef="{This format element displays the difference in percentage between the actual weight and the objective weight if the actual weight is not in the set [objective weight - margin; objective weight + margin]. The value is calculated in absolute value. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the gap is equal to their objective weight. And otherwise, the calculations is the following: Objective Gap = |Objective weight - Actual weight| } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( DOMAIN().dim_instr_dict_id = 900 {instrument} AND instr_id = NULL, NULL, IF( strat_check_e <> 1, IF( level_n = 1 AND strat_level_n = 1, NULL, IF( obj_weight_cont_n <> NULL AND strat_check_e > 1, ABS(obj_weight_cont_n - act_weight_cont_n), {ELSE} IF( strat_check_e = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, NULL, {ELSE} IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, NULL, {ELSE} IF( instr_id.nature_e IN (4, 5, 7) {Cash Account, Money Market, Forward}, NULL, 0 ))))) ) )") 
			@aaa:scpt (value="{This format element displays the difference in percentage between the actual weight and the objective weight if the actual weight is not in the set [objective weight - margin; objective weight + margin]. The value is calculated in absolute value. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the gap is equal to their objective weight. And otherwise, the calculations is the following: Objective Gap = |Objective weight - Actual weight| } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( DOMAIN().dim_instr_dict_id = 900 {instrument} AND instr_id = NULL, NULL, IF( strat_check_e <> 1, IF( level_n = 1 AND strat_level_n = 1, NULL, IF( obj_weight_cont_n <> NULL AND strat_check_e > 1, ABS(obj_weight_cont_n - act_weight_cont_n), {ELSE} IF( strat_check_e = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, NULL, {ELSE} IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, NULL, {ELSE} IF( instr_id.nature_e IN (4, 5, 7) {Cash Account, Money Market, Forward}, NULL, 0 ))))) ) )") 
		
		/* OBJ_SEVERITY_INDICAT */ 
		OBJ_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad-Anzeiger, en="Severity Indicator", fr="Indicateur de sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_INDICAT, Rank=101, ScriptDef="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef="{This format element displays the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective. If the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), IF( strategy_id.criticalness_e = 0, NULL, strategy_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), IF( strategy_elt_id.criticalness_e = 0, NULL, strategy_elt_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ) ), NULL ) )") 
			@aaa:scpt (value="{This format element displays the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective. If the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), IF( strategy_id.criticalness_e = 0, NULL, strategy_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), IF( strategy_elt_id.criticalness_e = 0, NULL, strategy_elt_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ) ), NULL ) )") 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_de) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_en) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_fr) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_VALUE */ 
		OBJ_SEVERITY_VALUE : AAABusinessTypes:Enum 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_VALUE) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_VALUE, Rank=90, ScriptDef="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
			@aaa:scpt (value="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
		
		/* OBJECTIVE_WEIGHT */ 
		OBJECTIVE_WEIGHT : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Optimaler Zielwert", en="Objective\'s Optimal Weight", fr="Poids optimal de l\'objectif") 
			@sql:SQLName (value=OBJECTIVE_WEIGHT) 
			@aaa:TripleA (FormatEltName=OBJECTIVE_WEIGHT, Rank=80, ScriptDef="{This format element is used to display the optimal objective weight (after derivation) of a market segment or an instrument. } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, \"100.00% +/- 0.00%\", IF( obj_weight_cont_n = NULL, NULL, IF( obj_weight_cont_marg_n = NULL, PRINTF(\"%6.2f%s\", 1*obj_weight_cont_n, \"% +/- 0.00%\"), {ELSE} PRINTF(\"%6.2f%s%5.2f%s\", obj_weight_cont_n, \"% +/-\", obj_weight_cont_marg_n, \"%\")))) )") 
			@aaa:scpt (value="{This format element is used to display the optimal objective weight (after derivation) of a market segment or an instrument. } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, \"100.00% +/- 0.00%\", IF( obj_weight_cont_n = NULL, NULL, IF( obj_weight_cont_marg_n = NULL, PRINTF(\"%6.2f%s\", 1*obj_weight_cont_n, \"% +/- 0.00%\"), {ELSE} PRINTF(\"%6.2f%s%5.2f%s\", obj_weight_cont_n, \"% +/-\", obj_weight_cont_marg_n, \"%\")))) )") 
		
		/* ORDER_QTY */ 
		ORDER_QTY : AAABusinessTypes:Number 
			@i18n:Label (de=Auftragsmenge, en="Order Quantity", fr="Quantité de l\'ordre") 
			@sql:SQLName (value=ORDER_QTY) 
			@aaa:TripleA (FormatEltName=ORDER_QTY, Rank=50, ScriptDef="IF( strat_check_e <> 1, IF( order_qty_n <> NULL, order_qty_n, {IF( order_qty_n = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL AND ( (1*disp_parent_ext_strat_elem_id.obj_weight_cont_n - 1*disp_parent_ext_strat_elem_id.obj_weight_cont_marg_n) > 1*disp_parent_ext_strat_elem_id.act_weight_cont_n), NULL, IF( order_qty_n = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL AND ( (1*disp_parent_ext_strat_elem_id.obj_weight_cont_n + 1*disp_parent_ext_strat_elem_id.obj_weight_cont_marg_n) < 1*disp_parent_ext_strat_elem_id.act_weight_cont_n), ABS( disp_parent_ext_strat_elem_id.order_qty_n * (act_qty_n / disp_parent_ext_strat_elem_id.act_qty_n) ), IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, ABS(act_qty_n),} {ELSE} NULL ) {) ) )} )") 
			@aaa:scpt (value="IF( strat_check_e <> 1, IF( order_qty_n <> NULL, order_qty_n, {IF( order_qty_n = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL AND ( (1*disp_parent_ext_strat_elem_id.obj_weight_cont_n - 1*disp_parent_ext_strat_elem_id.obj_weight_cont_marg_n) > 1*disp_parent_ext_strat_elem_id.act_weight_cont_n), NULL, IF( order_qty_n = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL AND ( (1*disp_parent_ext_strat_elem_id.obj_weight_cont_n + 1*disp_parent_ext_strat_elem_id.obj_weight_cont_marg_n) < 1*disp_parent_ext_strat_elem_id.act_weight_cont_n), ABS( disp_parent_ext_strat_elem_id.order_qty_n * (act_qty_n / disp_parent_ext_strat_elem_id.act_qty_n) ), IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, ABS(act_qty_n),} {ELSE} NULL ) {) ) )} )") 
		
		/* ORDER_QTY_CURRENCY */ 
		ORDER_QTY_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=ORDER_QTY_CURRENCY) 
			@aaa:TripleA (FormatEltName=ORDER_QTY_CURRENCY, Rank=51, ScriptDef="{This format element displays the reference currency for bonds and equivalent held in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( @ORDER_QTY <> NULL AND instr_id.nature_e IN (2, 18, 19) {instrument is a bond, an option bond or a convertible bond}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ), NULL )") 
			@aaa:scpt (value="{This format element displays the reference currency for bonds and equivalent held in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( @ORDER_QTY <> NULL AND instr_id.nature_e IN (2, 18, 19) {instrument is a bond, an option bond or a convertible bond}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ), NULL )") 
		
		/* PL */ 
		PL : AAABusinessTypes:Amount 
			@i18n:Label (de=G/V, en=P&L, fr=G&P) 
			@sql:SQLName (value=PL) 
			@aaa:TripleA (FormatEltName=PL, Rank=700, ScriptDef="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF( current_net_value_m <> 0 AND current_net_value_m <> NULL, UNREALISED_PL(extended_position_id,0,0, , ), 0 ) )") 
			@aaa:scpt (value="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF( current_net_value_m <> 0 AND current_net_value_m <> NULL, UNREALISED_PL(extended_position_id,0,0, , ), 0 ) )") 
		
		/* PL_PERC */ 
		PL_PERC : AAABusinessTypes:Number 
			@i18n:Label (de="G/V (%)", en="P&L (%)", fr="G&P (%)") 
			@sql:SQLName (value=PL_PERC) 
			@aaa:TripleA (FormatEltName=PL_PERC, Rank=701, ScriptDef="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, UNREALISED_PL(extended_position_id,0,0)/ABS(current_net_value_m)*100,0) )") 
			@aaa:scpt (value="IF( NOT(instr_id.nature_e = 6 {Future} AND GET_APPL_PARAM(\"FUT_ACC_FLAG\") = 1), {Do not calculate for futures expressed in 1 leg as result is inconsistent} IF(current_net_value_m <> 0 AND current_net_value_m <> NULL, UNREALISED_PL(extended_position_id,0,0)/ABS(current_net_value_m)*100,0) )") 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Portfolionummer, en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=40, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* PORTFOLIO_FILTER */ 
		PORTFOLIO_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=PORTFOLIO_FILTER) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_FILTER, Rank=14, ScriptDef="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level} AND TOT_SUM( 1, strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, portfolio_id ) > 0 {No Objectives}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level} AND TOT_SUM( 1, strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, portfolio_id ) > 0 {No Objectives}, 1, 0 )") 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* portfolio_list_id */ 
		portfolio_list_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_list_id) 
			@aaa:TripleA (FormatEltName=portfolio_list_id, Rank=9, ScriptDef=ext_strategy_link_id.list_id) 
			@aaa:scpt (value=ext_strategy_link_id.list_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=41, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* POS_CURRENCY_COL */ 
		POS_CURRENCY_COL : AAABusinessTypes:UniCode 
			@i18n:Label (de="Pos. Whrg", en="Pos. Ccy", fr="Dvs pos.") 
			@sql:SQLName (value=POS_CURRENCY_COL) 
			@aaa:TripleA (FormatEltName=POS_CURRENCY_COL, Rank=600, ScriptDef="{This format element is used to display the actual position currency in the detailed views. The position currency is displayed regardless of any currency classification being used to group the positions. See the format element POS_CURRENCY for the currency grouping attribute.} {---------------------------------} IF (SYNONYM(\"currency\", pos_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code <> NULL, SYNONYM(\"currency\", pos_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, pos_curr_id.code )") 
			@aaa:scpt (value="{This format element is used to display the actual position currency in the detailed views. The position currency is displayed regardless of any currency classification being used to group the positions. See the format element POS_CURRENCY for the currency grouping attribute.} {---------------------------------} IF (SYNONYM(\"currency\", pos_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code <> NULL, SYNONYM(\"currency\", pos_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, pos_curr_id.code )") 
		
		/* QUANTITY */ 
		QUANTITY : AAABusinessTypes:Number 
			@i18n:Label (de="Stück", en=Quantity, fr="Quantité") 
			@sql:SQLName (value=QUANTITY) 
			@aaa:TripleA (FormatEltName=QUANTITY, Rank=501, ScriptDef="{This format element displays the quantity of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {ELSE IF element is an instrument} act_qty_n )") 
			@aaa:scpt (value="{This format element displays the quantity of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {ELSE IF element is an instrument} act_qty_n )") 
		
		/* QUANTITY_CURR */ 
		QUANTITY_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=QUANTITY_CURR) 
			@aaa:TripleA (FormatEltName=QUANTITY_CURR, Rank=502, ScriptDef="{This format element displays the reference currency for bonds and equivalent held in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id <> NULL AND instr_id.nature_e IN (2, 18, 19) {instrument is a bond, an option bond or a convertible bond}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ), NULL )") 
			@aaa:scpt (value="{This format element displays the reference currency for bonds and equivalent held in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id <> NULL AND instr_id.nature_e IN (2, 18, 19) {instrument is a bond, an option bond or a convertible bond}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ), NULL )") 
		
		/* REF_CURRENCY */ 
		REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Ref. Whrg.", en="Ref. Ccy.", fr="Dvs réf.") 
			@sql:SQLName (value=REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=REF_CURRENCY, Rank=45, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef=0) 
			@aaa:scpt (value=0) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=15, ScriptDef="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded. Portfolios and positions related Portfolios having no strategy links are included too.} {-----------------------------------------------------------} @STRATEGY_FILTER OR @PORTFOLIO_FILTER OR @HEAD_FILTER OR @NO_LINK_FILTER") 
			@aaa:scpt (value="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded. Portfolios and positions related Portfolios having no strategy links are included too.} {-----------------------------------------------------------} @STRATEGY_FILTER OR @PORTFOLIO_FILTER OR @HEAD_FILTER OR @NO_LINK_FILTER") 
		
		/* STRATEGY_FILTER */ 
		STRATEGY_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=STRATEGY_FILTER) 
			@aaa:TripleA (FormatEltName=STRATEGY_FILTER, Rank=13, ScriptDef="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded.} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND (ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}) AND IF( abcissa_list_id = NULL AND ordinate_list_id = NULL AND instr_id = NULL, 0, 1)") 
			@aaa:scpt (value="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded.} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND (ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}) AND IF( abcissa_list_id = NULL AND ordinate_list_id = NULL AND instr_id = NULL, 0, 1)") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) ) ) ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) ) ) ) )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* strategy_id */ 
		strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=strategy_id) 
			@aaa:TripleA (FormatEltName=strategy_id, Rank=7, ScriptDef="{IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
			@aaa:scpt (value="{IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
		
		/* STRATEGY_UNIQUE_IDEN */ 
		STRATEGY_UNIQUE_IDENTIFIER : AAABusinessTypes:Id 
			@sql:SQLName (value=STRATEGY_UNIQUE_IDENTIFIER) 
			@aaa:TripleA (FormatEltName=STRATEGY_UNIQUE_IDEN, Rank=38, ScriptDef="{This format element is used to guarantee the unicity of the identifier of the strategy used in the format element MKT_STRUCTURE} {---------------------------} @strategy_id + @investment_profile_id + @portfolio_list_id") 
			@aaa:scpt (value="{This format element is used to guarantee the unicity of the identifier of the strategy used in the format element MKT_STRUCTURE} {---------------------------} @strategy_id + @investment_profile_id + @portfolio_list_id") 
		
		/* SUB_CHECK_STRAT */ 
		SUB_CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=SUB_CHECK_STRAT, Rank=200, ScriptDef="STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, strat_check_e,,1) ).maximum") 
			@aaa:scpt (value="STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, strat_check_e,,1) ).maximum") 
		
		/* SUB_COMPLIANCE_INDIC */ 
		SUB_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Compliance Gradmesser (Detail)", en="Sub-levels Compliance", fr="Conformité des sous-niveaux") 
			@sql:SQLName (value=SUB_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_COMPLIANCE_INDIC, Rank=203, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of sub-levels based on the format element SUB_SEVERITY_INDICATOR.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = NULL, 0 {No Sub-Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Sub-Levels Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Sub-Levels Compliant}, 6 {Sub-Level(s) Not Compliant} ))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of sub-levels based on the format element SUB_SEVERITY_INDICATOR.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = NULL, 0 {No Sub-Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Sub-Levels Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Sub-Levels Compliant}, 6 {Sub-Level(s) Not Compliant} ))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
		
		/* SUB_SEVERITY_INDICAT */ 
		SUB_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Schweregrad-Anzeiger (Detail)", en="Sub-levels Severity Indicator", fr="Indicateur de sévérité des sous-niveaux") 
			@sql:SQLName (value=SUB_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_SEVERITY_INDICAT, Rank=202, ScriptDef="{This format element returns the highest severity value of direct sub-levels of a market segment, when this market segment has one or more of its direct sub-levels not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all direct sub-levels which are not compliant The rules are the following: 1) The system checks whether the direct sub-levels are compliant or not, using the format element SUB_CHECK_STRAT. If they are compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the direct sub-levels objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the direct sub-levels objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all direct sub-levels (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the direct sub-levels are compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the direct sub-levels objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the direct sub-levels objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE,strat_check_e > 1,1) ).maximum ) ) )") 
			@aaa:scpt (value="{This format element returns the highest severity value of direct sub-levels of a market segment, when this market segment has one or more of its direct sub-levels not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all direct sub-levels which are not compliant The rules are the following: 1) The system checks whether the direct sub-levels are compliant or not, using the format element SUB_CHECK_STRAT. If they are compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the direct sub-levels objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the direct sub-levels objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all direct sub-levels (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the direct sub-levels are compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the direct sub-levels objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the direct sub-levels objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE,strat_check_e > 1,1) ).maximum ) ) )") 
	} 
	/* PCK_DS_COMPCHK_SUM */ 
	PCK_DS_COMPCHK_SUM 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_DS_COMPCHK_SUM) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_DS_COMPCHK_SUM) 
	{ 
		/* ADMIN_MGR_NAME */ 
		ADMIN_MGR_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de="Vermögensverwalter", en=Manager, fr=Gestionnaire) 
			@sql:SQLName (value=ADMIN_MGR_NAME) 
			@aaa:TripleA (FormatEltName=ADMIN_MGR_NAME, Rank=76, ScriptDef="IF(child_ptf_id<>NULL, child_ptf_id.admin_mgr_id.name, {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).admin_mgr_id.name, {else} portfolio_id.admin_mgr_id.name))") 
			@aaa:scpt (value="IF(child_ptf_id<>NULL, child_ptf_id.admin_mgr_id.name, {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).admin_mgr_id.name, {else} portfolio_id.admin_mgr_id.name))") 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* CLIENT_NAME */ 
		CLIENT_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de="Name des Kunden", en="Client Name", fr="Nom du client") 
			@sql:SQLName (value=CLIENT_NAME) 
			@aaa:TripleA (FormatEltName=CLIENT_NAME, Rank=70, ScriptDef="IF (DOMAIN().dim_port_dict_id = 600, IF(child_ptf_id<>NULL, child_ptf_id.third_id.name, portfolio_id.third_id.name), {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).third_id.name, {else} IF(child_ptf_id<>NULL, child_ptf_id.third_id.name, portfolio_id.third_id.name)))") 
			@aaa:scpt (value="IF (DOMAIN().dim_port_dict_id = 600, IF(child_ptf_id<>NULL, child_ptf_id.third_id.name, portfolio_id.third_id.name), {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).third_id.name, {else} IF(child_ptf_id<>NULL, child_ptf_id.third_id.name, portfolio_id.third_id.name)))") 
		
		/* COM_MGR_NAME */ 
		COM_MGR_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Kundenberater, en=Advisor, fr=Conseiller) 
			@sql:SQLName (value=COM_MGR_NAME) 
			@aaa:TripleA (FormatEltName=COM_MGR_NAME, Rank=75, ScriptDef="IF(child_ptf_id<>NULL, child_ptf_id.comm_mgr_id.name, {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).comm_mgr_id.name, {else} portfolio_id.comm_mgr_id.name))") 
			@aaa:scpt (value="IF(child_ptf_id<>NULL, child_ptf_id.comm_mgr_id.name, {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).comm_mgr_id.name, {else} portfolio_id.comm_mgr_id.name))") 
		
		/* CONSTRAINTS_FILTER */ 
		CONSTRAINTS_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTRAINTS_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_FILTER, Rank=12, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
		
		/* data_secu_prof_id */ 
		data_secu_prof_id : AAABusinessTypes:Id 
			@sql:SQLName (value=data_secu_prof_id) 
			@aaa:TripleA (FormatEltName=data_secu_prof_id, Rank=1, ScriptDef=portfolio_id.data_secu_prof_id) 
			@aaa:scpt (value=portfolio_id.data_secu_prof_id) 
		
		/* domain_client_id */ 
		domain_client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=domain_client_id) 
			@aaa:TripleA (FormatEltName=domain_client_id, Rank=7, ScriptDef="IF(DOMAIN().dim_port_dict_id=600 AND DOMAIN().third_compo_e<>1 ,DOMAIN().port_object_id,NULL)") 
			@aaa:scpt (value="IF(DOMAIN().dim_port_dict_id=600 AND DOMAIN().third_compo_e<>1 ,DOMAIN().port_object_id,NULL)") 
		
		/* id */ 
		id : AAABusinessTypes:Id 
			@sql:SQLName (value=id) 
			@aaa:TripleA (FormatEltName=id, Rank=5, ScriptDef=id) 
			@aaa:scpt (value=id) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Investment-Profil, en="Investment Profile", fr="Profil d\'investissement") 
			@sql:SQLName (value=IP_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=IP_FULL_NAME, Rank=24, ScriptDef="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=24, ScriptDef) 
			@aaa:scpt (value) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=24, ScriptDef) 
			@aaa:scpt (value) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=24, ScriptDef) 
			@aaa:scpt (value) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Portfolio Code", en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=36, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* PORTFOLIO_FILTER */ 
		PORTFOLIO_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=PORTFOLIO_FILTER) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_FILTER, Rank=11, ScriptDef="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level}, 1, 0)") 
			@aaa:scpt (value="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level}, 1, 0)") 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_INVEST_SER */ 
		PORTFOLIO_INVEST_SERVICE : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Serviceart, en="Service Type", fr="Type de service") 
			@sql:SQLName (value=PORTFOLIO_INVEST_SERVICE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=PORTFOLIO_INVEST_SER, Rank=71, ScriptDef="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
			@aaa:scpt (value="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
		
		/* PORTFOLIO_INVEST_SER */ 
		PORTFOLIO_INVEST_SERVICE_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=PORTFOLIO_INVEST_SERVICE_de) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_INVEST_SER, Rank=71, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PORTFOLIO_INVEST_SER */ 
		PORTFOLIO_INVEST_SERVICE_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=PORTFOLIO_INVEST_SERVICE_en) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_INVEST_SER, Rank=71, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PORTFOLIO_INVEST_SER */ 
		PORTFOLIO_INVEST_SERVICE_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=PORTFOLIO_INVEST_SERVICE_fr) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_INVEST_SER, Rank=71, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=37, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* PTF_MKT_VALUE */ 
		PTF_MKT_VALUE : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktwert, en="Market Value", fr="Valeur d\'inventaire") 
			@sql:SQLName (value=PTF_MKT_VALUE) 
			@aaa:TripleA (FormatEltName=PTF_MKT_VALUE, Rank=50, ScriptDef=portfolio_id.mkt_val_m) 
			@aaa:scpt (value=portfolio_id.mkt_val_m) 
		
		/* REF_CURRENCY */ 
		REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=REF_CURRENCY, Rank=51, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=13, ScriptDef="{This format element is used to filter only highest strategy level. The strategies may be included in an Investment Profile composition or not.} {-----------------------------------------------------------} IF( TOT_SUM(1, @STRATEGY_FILTER = 1, portfolio_id) > 0, @STRATEGY_FILTER, @PORTFOLIO_FILTER )") 
			@aaa:scpt (value="{This format element is used to filter only highest strategy level. The strategies may be included in an Investment Profile composition or not.} {-----------------------------------------------------------} IF( TOT_SUM(1, @STRATEGY_FILTER = 1, portfolio_id) > 0, @STRATEGY_FILTER, @PORTFOLIO_FILTER )") 
		
		/* SEVERITY */ 
		SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SEVERITY) 
			@aaa:TripleA (FormatEltName=SEVERITY, Rank=201, ScriptDef="{This format element displays the value for the severity (also known as criticity) of the objective defined on market segments and instruments The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {---------------------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
			@aaa:scpt (value="{This format element displays the value for the severity (also known as criticity) of the objective defined on market segments and instruments The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {---------------------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
		
		/* STRAT_NAT_LABEL */ 
		STRAT_NAT_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Strategie-Art, en="Strategy Nature", fr="Nature de stratégie") 
			@sql:SQLName (value=STRAT_NAT_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRAT_NAT_LABEL, Rank=26, ScriptDef="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
		
		/* STRAT_NAT_LABEL */ 
		STRAT_NAT_LABEL_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=STRAT_NAT_LABEL_de) 
			@aaa:TripleA (FormatEltName=STRAT_NAT_LABEL, Rank=26, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRAT_NAT_LABEL */ 
		STRAT_NAT_LABEL_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=STRAT_NAT_LABEL_en) 
			@aaa:TripleA (FormatEltName=STRAT_NAT_LABEL, Rank=26, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRAT_NAT_LABEL */ 
		STRAT_NAT_LABEL_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=STRAT_NAT_LABEL_fr) 
			@aaa:TripleA (FormatEltName=STRAT_NAT_LABEL, Rank=26, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FILTER */ 
		STRATEGY_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=STRATEGY_FILTER) 
			@aaa:TripleA (FormatEltName=STRATEGY_FILTER, Rank=10, ScriptDef="{This format element is used to filter only head strategy level (Asset Allocation and Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategies are Asset Allocation or Model Portfolio} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {Strategies are not included in a Benchmark composition} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used to filter only head strategy level (Asset Allocation and Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategies are Asset Allocation or Model Portfolio} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {Strategies are not included in a Benchmark composition} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}, 1, 0 )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef) 
			@aaa:scpt (value) 
		
		/* strategy_id */ 
		strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=strategy_id) 
			@aaa:TripleA (FormatEltName=strategy_id, Rank=6, ScriptDef="IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )") 
			@aaa:scpt (value="IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )") 
		
		/* STRATEGY_SORT */ 
		STRATEGY_SORT : AAABusinessTypes:Int 
			@i18n:Label (de="Sortierung - Strategie", en="Sorting - Strategy", fr="Triage - Stratégie") 
			@sql:SQLName (value=STRATEGY_SORT) 
			@aaa:TripleA (FormatEltName=STRATEGY_SORT, Rank=45, ScriptDef="{This format element is used to define an order in the head strategy (format element STRATEGY_FULL_NAME) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: STRATEGY_SORT := Identifier related to portfolio + Number given by the attribute \"calculated_e\" (a value 1 means rebalancing head strategy, otherwise the value is 0) } {--------------------------------------------} @portfolio_id + calculated_e", SortingRank=1) 
			@aaa:scpt (value="{This format element is used to define an order in the head strategy (format element STRATEGY_FULL_NAME) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: STRATEGY_SORT := Identifier related to portfolio + Number given by the attribute \"calculated_e\" (a value 1 means rebalancing head strategy, otherwise the value is 0) } {--------------------------------------------} @portfolio_id + calculated_e") 
		
		/* STRATEGY_USAGE */ 
		STRATEGY_USAGE : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Verwendung der Strategie", en="Strategy Usage", fr="Utilisation de la stratégie") 
			@sql:SQLName (value=STRATEGY_USAGE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_USAGE, Rank=61, ScriptDef="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
			@aaa:scpt (value="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
		
		/* STRATEGY_USAGE */ 
		STRATEGY_USAGE_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_USAGE_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_USAGE, Rank=61, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_USAGE */ 
		STRATEGY_USAGE_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_USAGE_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_USAGE, Rank=61, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_USAGE */ 
		STRATEGY_USAGE_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_USAGE_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_USAGE, Rank=61, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SUB_CONSTR_CHECK */ 
		SUB_CONSTR_CHECK : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CONSTR_CHECK) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_CHECK, Rank=300, ScriptDef="{This format element returns the first value, from highest to lowest, of the Constraints verification status for each portfolio Then, this value is used in the format element SUBCONSTR_COMPLIANCE to display whether a Constraint is breached or not.} {------------------------------------------------------------} TOT_FIRST( constraint_check_e, constraint_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"constraint_check_e\"} AND @CONSTRAINTS_FILTER, constraint_check_e, portfolio_id {to get the value per portfolio}, DESC )") 
			@aaa:scpt (value="{This format element returns the first value, from highest to lowest, of the Constraints verification status for each portfolio Then, this value is used in the format element SUBCONSTR_COMPLIANCE to display whether a Constraint is breached or not.} {------------------------------------------------------------} TOT_FIRST( constraint_check_e, constraint_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"constraint_check_e\"} AND @CONSTRAINTS_FILTER, constraint_check_e, portfolio_id {to get the value per portfolio}, DESC )") 
		
		/* SUB_CONSTR_COMPLIANC */ 
		SUB_CONSTR_COMPLIANCE : AAABusinessTypes:Int 
			@i18n:Label (de="Einschränkungs-Konformität", en="Constraints Compliance", fr="Conformité des contraintes") 
			@sql:SQLName (value=SUB_CONSTR_COMPLIANCE) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_COMPLIANC, Rank=306, ScriptDef="{This format element is used to display compliance indication regarding the Constraints defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CONSTR_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CONSTR_CHECK = NULL, 0 {No Constraints Defined}, {ELSE} IF( @SUB_CONSTR_CHECK = 0, 1 {Constraints Not Evaluated}, {ELSE} IF( @SUB_CONSTR_CHECK = 1, 2 {Constraints Verified}, 6 {Some Constraints Breached} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Constraints Defined\" - \"1\" is for \"Constraints Not Evaluated\" - \"2\" is for \"Constraints Verified\" - \"3\" is for \"Some Constraints Breached - Low Severity\" - \"4\" is for \"Some Constraints Breached - Medium Severity\" - \"5\" is for \"Some Constraints Breached - High Severity\"} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 5, 5, NULL )))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the Constraints defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CONSTR_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CONSTR_CHECK = NULL, 0 {No Constraints Defined}, {ELSE} IF( @SUB_CONSTR_CHECK = 0, 1 {Constraints Not Evaluated}, {ELSE} IF( @SUB_CONSTR_CHECK = 1, 2 {Constraints Verified}, 6 {Some Constraints Breached} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Constraints Defined\" - \"1\" is for \"Constraints Not Evaluated\" - \"2\" is for \"Constraints Verified\" - \"3\" is for \"Some Constraints Breached - Low Severity\" - \"4\" is for \"Some Constraints Breached - Medium Severity\" - \"5\" is for \"Some Constraints Breached - High Severity\"} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 5, 5, NULL )))))) )") 
		
		/* SUB_CONSTR_SEVERITY */ 
		SUB_CONSTR_SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CONSTR_SEVERITY) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_SEVERITY, Rank=304, ScriptDef="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant Constraints} {---------------------------------------------------------------------} TOT_MAX( criticalness_e, constraint_check_e IN (2, 3, 4, 5, 6, 7, 8) AND criticalness_e <> NULL AND @CONSTRAINTS_FILTER, portfolio_id )") 
			@aaa:scpt (value="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant Constraints} {---------------------------------------------------------------------} TOT_MAX( criticalness_e, constraint_check_e IN (2, 3, 4, 5, 6, 7, 8) AND criticalness_e <> NULL AND @CONSTRAINTS_FILTER, portfolio_id )") 
		
		/* SUB_CSTR_SEVERITY_IN */ 
		SUB_CONSTR_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@sql:SQLName (value=SUB_CONSTR_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_CSTR_SEVERITY_IN, Rank=305, ScriptDef="{This script indicates, using \"traffic lights\", if all the Constraints on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint. As this severity must be displayed at Portfolio level, this is done in the format element SUB_CONSTR_SEVERITY . \"Traffic lights\" are: - \"0\" when no Constraints are defined - \"1\" when no Constraints are evaluated - \"2\" when all Constraints are compliant - \"3\" when some Constraints are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some Constraints are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some Constraints are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether Constraints are defined or not. If no Consttraints are defined then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether Constraints are evaluated or not. If no Consttraints are evluated then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the Constraints are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no Constraints are defined, the returned value is \"0\"} IF( @SUB_CONSTR_CHECK = NULL, 0, {If no Constraints are evaluated, the returned value is \"1\"} IF( @SUB_CONSTR_CHECK = 0, 1, {If all Constraints are compliant, the returned value is \"2\"} IF( @SUB_CONSTR_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if all the Constraints on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint. As this severity must be displayed at Portfolio level, this is done in the format element SUB_CONSTR_SEVERITY . \"Traffic lights\" are: - \"0\" when no Constraints are defined - \"1\" when no Constraints are evaluated - \"2\" when all Constraints are compliant - \"3\" when some Constraints are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some Constraints are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some Constraints are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether Constraints are defined or not. If no Consttraints are defined then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether Constraints are evaluated or not. If no Consttraints are evluated then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the Constraints are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no Constraints are defined, the returned value is \"0\"} IF( @SUB_CONSTR_CHECK = NULL, 0, {If no Constraints are evaluated, the returned value is \"1\"} IF( @SUB_CONSTR_CHECK = 0, 1, {If all Constraints are compliant, the returned value is \"2\"} IF( @SUB_CONSTR_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
		
		/* SUB_OBJ_CHECK */ 
		SUB_OBJ_CHECK : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_OBJ_CHECK) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_CHECK, Rank=200, ScriptDef="{This format element is used to indicate whether a sub-level (starting from Head strategy level) is compliant or not regarding its objectives and actual weights} {--------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, substrat_check_e, NULL )") 
			@aaa:scpt (value="{This format element is used to indicate whether a sub-level (starting from Head strategy level) is compliant or not regarding its objectives and actual weights} {--------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, substrat_check_e, NULL )") 
		
		/* SUB_OBJ_COMPLIANCE */ 
		SUB_OBJ_COMPLIANCE : AAABusinessTypes:Int 
			@i18n:Label (de="Ziel-Konformität", en="Objectives Compliance", fr="Conformité des objectifs") 
			@sql:SQLName (value=SUB_OBJ_COMPLIANCE) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_COMPLIANCE, Rank=204, ScriptDef="{This format element is used to display compliance indication regarding the objectives defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_OBJ_SEVERITY_INDICATOR. Otherwise, its the format element SUB_OBJ_CHECK which is used.} {-----------------------------------------------------------------------} IF( @PORTFOLIO_FILTER = 1, 99 {No strategy links}, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_OBJ_CHECK = NULL, 0 {No Objectives Defined}, {ELSE} IF( @SUB_OBJ_CHECK = 0, 1 {Objectives Not Evaluated}, {ELSE} IF( @SUB_OBJ_CHECK = 1, 2 {Objectives Compliant}, 6 {Some Objectives Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Objectives Defined\" - \"1\" is for \"Objectives Not Evaluated\" - \"2\" is for \"Objectives Compliant\" - \"3\" is for \"Some Objectives Not Compliant - Low Severity\" - \"4\" is for \"Some Objectives Not Compliant - Medium Severity\" - \"5\" is for \"Some Objectives Not Compliant - High Severity\"} IF( @SUB_OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objectives defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_OBJ_SEVERITY_INDICATOR. Otherwise, its the format element SUB_OBJ_CHECK which is used.} {-----------------------------------------------------------------------} IF( @PORTFOLIO_FILTER = 1, 99 {No strategy links}, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_OBJ_CHECK = NULL, 0 {No Objectives Defined}, {ELSE} IF( @SUB_OBJ_CHECK = 0, 1 {Objectives Not Evaluated}, {ELSE} IF( @SUB_OBJ_CHECK = 1, 2 {Objectives Compliant}, 6 {Some Objectives Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Objectives Defined\" - \"1\" is for \"Objectives Not Evaluated\" - \"2\" is for \"Objectives Compliant\" - \"3\" is for \"Some Objectives Not Compliant - Low Severity\" - \"4\" is for \"Some Objectives Not Compliant - Medium Severity\" - \"5\" is for \"Some Objectives Not Compliant - High Severity\"} IF( @SUB_OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))) )") 
		
		/* SUB_OBJ_SEVERITY */ 
		SUB_OBJ_SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_OBJ_SEVERITY) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_SEVERITY, Rank=202, ScriptDef="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant objectives defined on market segments and instruments} {---------------------------------------------------------------------} TOT_MAX(@SEVERITY, substrat_check_e IN (2, 3, 4, 5, 6, 7, 8) AND @SEVERITY <> NULL, @strategy_id + @portfolio_id)") 
			@aaa:scpt (value="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant objectives defined on market segments and instruments} {---------------------------------------------------------------------} TOT_MAX(@SEVERITY, substrat_check_e IN (2, 3, 4, 5, 6, 7, 8) AND @SEVERITY <> NULL, @strategy_id + @portfolio_id)") 
		
		/* SUB_OBJ_SEVERITY_IND */ 
		SUB_OBJ_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@sql:SQLName (value=SUB_OBJ_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_SEVERITY_IND, Rank=203, ScriptDef="{This script indicates, using \"traffic lights\", if all the objectives defined on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the objectives. As this severity must be displayed at Portfolio level, this is done in the format element @SUB_OBJ_SEVERITY . \"Traffic lights\" are: - \"0\" when no objectives are defined - \"1\" when no objectives are evaluated - \"2\" when all objectives are compliant - \"3\" when some objectives are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some objectives are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some objectives are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether objectives are defined or not. If no objectives are defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether objectives are defined or not. If no objectives are evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the objectives are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, {If no objectives are defined, the returned value is \"0\"} IF( @SUB_OBJ_CHECK = NULL, 0, {If no objectives are evaluated, the returned value is \"1\"} IF( @SUB_OBJ_CHECK = 0, 1, {If all objectives are compliant, the returned value is \"2\"} IF( @SUB_OBJ_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))) )") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if all the objectives defined on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the objectives. As this severity must be displayed at Portfolio level, this is done in the format element @SUB_OBJ_SEVERITY . \"Traffic lights\" are: - \"0\" when no objectives are defined - \"1\" when no objectives are evaluated - \"2\" when all objectives are compliant - \"3\" when some objectives are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some objectives are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some objectives are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether objectives are defined or not. If no objectives are defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether objectives are defined or not. If no objectives are evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the objectives are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, {If no objectives are defined, the returned value is \"0\"} IF( @SUB_OBJ_CHECK = NULL, 0, {If no objectives are evaluated, the returned value is \"1\"} IF( @SUB_OBJ_CHECK = 0, 1, {If all objectives are compliant, the returned value is \"2\"} IF( @SUB_OBJ_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))) )") 
		
		/* THIRD_COMP_RULE */ 
		THIRD_COMP_RULE : AAAEnumerations:DomainAAAThirdCompoE 
			@i18n:Label (de=Portfolio-Kunden-Zuordnung, en="Portfolio Link Nature", fr="Nature du lien avec le portefeuille") 
			@sql:SQLName (value=THIRD_COMP_RULE) 
			@aaa:TripleA (AttrSQLName=third_compo_e, FormatEltName=THIRD_COMP_RULE, Rank=405, ScriptDef="{ --SQLFORMAT case when domain_client_id = NULL then NULL when client_id = domain_client_id then 1 when THIRD_PARTY_OWNERSHIP_RULE != NULL then 2 end }") 
			@aaa:scpt (value="{ --SQLFORMAT case when domain_client_id = NULL then NULL when client_id = domain_client_id then 1 when THIRD_PARTY_OWNERSHIP_RULE != NULL then 2 end }") 
		
		/* THIRD_PARTY_OWNERSHI */ 
		THIRD_PARTY_OWNERSHIP_RULE : AAAEnumerations:PortfolioThirdCompoOwnershipRuleE 
			@i18n:Label (de="Verfügungsgewalt", en="Ownership Rule", fr="Règle de propriété") 
			@sql:SQLName (value=THIRD_PARTY_OWNERSHIP_RULE) 
			@aaa:TripleA (AttrSQLName=ownership_rule_e, FormatEltName=THIRD_PARTY_OWNERSHI, Rank=401, ScriptDef="{ --SQLFORMAT select max(ownership_rule_e) from portfolio_third_compo_vw p where p.third_id = E.domain_client_id and p.portfolio_id = E.third_party_portfolio_id }") 
			@aaa:scpt (value="{ --SQLFORMAT select max(ownership_rule_e) from portfolio_third_compo_vw p where p.third_id = E.domain_client_id and p.portfolio_id = E.third_party_portfolio_id }") 
		
		/* THIRD_PARTY_PERCT_OW */ 
		THIRD_PARTY_PERCT_OWNERSHIP : AAABusinessTypes:Number 
			@i18n:Label (de="Prozentsatz des Eigentums", en="Percentage of Ownership", fr="Pourcentage de la propriété") 
			@sql:SQLName (value=THIRD_PARTY_PERCT_OWNERSHIP) 
			@aaa:TripleA (FormatEltName=THIRD_PARTY_PERCT_OW, Rank=402, ScriptDef="{ --SQLFORMAT select max(weight_n) from portfolio_third_compo_vw p where p.third_id = E.domain_client_id and p.portfolio_id = E.third_party_portfolio_id }") 
			@aaa:scpt (value="{ --SQLFORMAT select max(weight_n) from portfolio_third_compo_vw p where p.third_id = E.domain_client_id and p.portfolio_id = E.third_party_portfolio_id }") 
		
		/* third_party_portfoli */ 
		third_party_portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=third_party_portfolio_id) 
			@aaa:TripleA (FormatEltName=third_party_portfoli, Rank=8, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
	} 
	/* PCK_DS_PG_CHK */ 
	PCK_DS_PG_CHK 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_DS_PG_CHK) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_DS_PG_CHK) 
	{ 
		/* ASSET_CLASS */ 
		ASSET_CLASS : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ASSET_CLASS) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=ASSET_CLASS, Rank=130, ScriptDef="IF(@ASSET_CLASS_FILTER= 1, IF(market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name))") 
			@aaa:scpt (value="IF(@ASSET_CLASS_FILTER= 1, IF(market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name))") 
		
		/* ASSET_CLASS */ 
		ASSET_CLASS_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ASSET_CLASS_de) 
			@aaa:TripleA (FormatEltName=ASSET_CLASS, Rank=130, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ASSET_CLASS */ 
		ASSET_CLASS_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ASSET_CLASS_en) 
			@aaa:TripleA (FormatEltName=ASSET_CLASS, Rank=130, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ASSET_CLASS_FILTER */ 
		ASSET_CLASS_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=ASSET_CLASS_FILTER) 
			@aaa:TripleA (FormatEltName=ASSET_CLASS_FILTER, Rank=120, ScriptDef="IF(disp_parent_ext_strat_elem_id.abcissa_list_id = NULL AND disp_parent_ext_strat_elem_id.ordinate_list_id=NULL AND (abcissa_list_id <> NULL OR ordinate_list_id <> NULL) ,1,0)") 
			@aaa:scpt (value="IF(disp_parent_ext_strat_elem_id.abcissa_list_id = NULL AND disp_parent_ext_strat_elem_id.ordinate_list_id=NULL AND (abcissa_list_id <> NULL OR ordinate_list_id <> NULL) ,1,0)") 
		
		/* ASSET_CLASS */ 
		ASSET_CLASS_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ASSET_CLASS_fr) 
			@aaa:TripleA (FormatEltName=ASSET_CLASS, Rank=130, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ASSET_CLASS_SORT */ 
		ASSET_CLASS_SORT : AAABusinessTypes:Int 
			@sql:SQLName (value=ASSET_CLASS_SORT) 
			@aaa:TripleA (FormatEltName=ASSET_CLASS_SORT, Rank=140, ScriptDef="IF(@ASSET_CLASS_FILTER= 1, rank_n)") 
			@aaa:scpt (value="IF(@ASSET_CLASS_FILTER= 1, rank_n)") 
		
		/* data_secu_prof_id */ 
		data_secu_prof_id : AAABusinessTypes:Id 
			@sql:SQLName (value=data_secu_prof_id) 
			@aaa:TripleA (FormatEltName=data_secu_prof_id, Rank=10, ScriptDef=portfolio_id.data_secu_prof_id) 
			@aaa:scpt (value=portfolio_id.data_secu_prof_id) 
		
		/* investment_profile_i */ 
		investment_profile_id : AAABusinessTypes:Id 
			@sql:SQLName (value=investment_profile_id) 
			@aaa:TripleA (FormatEltName=investment_profile_i, Rank=30, ScriptDef=ext_strategy_link_id.ref_strategy_id) 
			@aaa:scpt (value=ext_strategy_link_id.ref_strategy_id) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE : AAABusinessTypes:UniString1000 
			@i18n:Label (de=Investitionsstrategie, en="Investment Strategy", fr="Stratégie d\'investissement") 
			@sql:SQLName (value=MKT_STRUCTURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MKT_STRUCTURE, Rank=80, ScriptDef="{This format element is used to display the complete name of an element. It is only displaying market segments with the complete path described until level 4. For deeper levels, the scripts must be updated. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. ATTENTION: As the PRINTF keyword is limited to 10 arguments, the construction of the investment structure is splitted into several PRINTF keywords. This will allow the possibility to add easly extra investment structure levels for customization projects.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%i]\", @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), PRINTF(\"%s[HIERLEV%i]%s%s%s%s\", @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.market_segment_id ) {End of CONCAT} ) {End of IF for level 2}, {level 1 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} , market_segment_id ) {End of PRINTF} ) {End of IF for level 1} ) )", SortingRank=1) 
			@aaa:scpt (value="{This format element is used to display the complete name of an element. It is only displaying market segments with the complete path described until level 4. For deeper levels, the scripts must be updated. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. ATTENTION: As the PRINTF keyword is limited to 10 arguments, the construction of the investment structure is splitted into several PRINTF keywords. This will allow the possibility to add easly extra investment structure levels for customization projects.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%i]\", @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), PRINTF(\"%s[HIERLEV%i]%s%s%s%s\", @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.market_segment_id ) {End of CONCAT} ) {End of IF for level 2}, {level 1 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} , market_segment_id ) {End of PRINTF} ) {End of IF for level 1} ) )") 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_de : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_de) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=80, ScriptDef, SortingRank=1) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_en : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_en) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=80, ScriptDef, SortingRank=1) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_fr : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_fr) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=80, ScriptDef, SortingRank=1) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE_SORT */ 
		MKT_STRUCTURE_SORT : AAABusinessTypes:Int 
			@i18n:Label (de="Sortierung der Investitionsstrategie-Struktur", en="Sorting - Investment Strategy", fr="Triage - Stratégie d\'investissement") 
			@sql:SQLName (value=MKT_STRUCTURE_SORT) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE_SORT, Rank=90, ScriptDef="{This format element is used to define an order in the market structure (format element MKT_STRUCTURE) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: MKT_STRUCTURE_SORT := Identifier related to head strategy + Sum of the identifiers related to market segments: the market segment are automatically sorted in ascending way by the financial serveur, using the ranks in the classifications + Number between 0 and 1: only if we are at instrument level (main or sub-level), then we can sort the instrument by market value in the WUI } {--------------------------------------------} ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id) + ABS(id)") 
			@aaa:scpt (value="{This format element is used to define an order in the market structure (format element MKT_STRUCTURE) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: MKT_STRUCTURE_SORT := Identifier related to head strategy + Sum of the identifiers related to market segments: the market segment are automatically sorted in ascending way by the financial serveur, using the ranks in the classifications + Number between 0 and 1: only if we are at instrument level (main or sub-level), then we can sort the instrument by market value in the WUI } {--------------------------------------------} ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id) + ABS(id)") 
		
		/* OBJECTIVE_WEIGHT_PCT */ 
		OBJECTIVE_WEIGHT_PCT : AAABusinessTypes:Number 
			@sql:SQLName (value=OBJECTIVE_WEIGHT_PCT) 
			@aaa:TripleA (FormatEltName=OBJECTIVE_WEIGHT_PCT, Rank=110, ScriptDef=obj_weight_cont_n) 
			@aaa:scpt (value=obj_weight_cont_n) 
		
		/* OBJ_WEIGHT_WITH_MARG */ 
		OBJECTIVE_WEIGHT_WITH_MARGIN : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Optimaler Zielwert", en="Objective\'s Optimal Weight", fr="Poids optimal de l\'objectif") 
			@sql:SQLName (value=OBJECTIVE_WEIGHT_WITH_MARGIN) 
			@aaa:TripleA (FormatEltName=OBJ_WEIGHT_WITH_MARG, Rank=100, ScriptDef="{This format element is used to display the optimal objective weight (after derivation) of a market segment or an instrument. } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, \"100.00% +/- 0.00%\", IF( obj_weight_cont_n = NULL, NULL, IF( obj_weight_cont_marg_n = NULL, PRINTF(\"%6.2f%s\", 1*obj_weight_cont_n, \"% +/- 0.00%\"), {ELSE} PRINTF(\"%6.2f%s%5.2f%s\", obj_weight_cont_n, \"% +/-\", obj_weight_cont_marg_n, \"%\")))) )") 
			@aaa:scpt (value="{This format element is used to display the optimal objective weight (after derivation) of a market segment or an instrument. } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, \"100.00% +/- 0.00%\", IF( obj_weight_cont_n = NULL, NULL, IF( obj_weight_cont_marg_n = NULL, PRINTF(\"%6.2f%s\", 1*obj_weight_cont_n, \"% +/- 0.00%\"), {ELSE} PRINTF(\"%6.2f%s%5.2f%s\", obj_weight_cont_n, \"% +/-\", obj_weight_cont_marg_n, \"%\")))) )") 
		
		/* portfolio_list_id */ 
		portfolio_list_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_list_id) 
			@aaa:TripleA (FormatEltName=portfolio_list_id, Rank=40, ScriptDef=ext_strategy_link_id.list_id) 
			@aaa:scpt (value=ext_strategy_link_id.list_id) 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef=0) 
			@aaa:scpt (value=0) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=50, ScriptDef="{This format element is used as a filter to extract only market segments for the asset allocation used for rebalancing} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n=1 AND disp_parent_ext_strat_elem_id <>NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL))),0,1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} AND {Keep only asset allocation strategy nature} strat_nat_e = 1 AND {Keep only allocation nature} nature_e = 1 AND {Keep only the Asset allocation used for rebalancing} calculated_e = 1") 
			@aaa:scpt (value="{This format element is used as a filter to extract only market segments for the asset allocation used for rebalancing} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n=1 AND disp_parent_ext_strat_elem_id <>NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL))),0,1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} AND {Keep only asset allocation strategy nature} strat_nat_e = 1 AND {Keep only allocation nature} nature_e = 1 AND {Keep only the Asset allocation used for rebalancing} calculated_e = 1") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_FULL_NAME, Rank=60, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) ) ) ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) ) ) ) )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=60, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=60, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=60, ScriptDef) 
			@aaa:scpt (value) 
		
		/* strategy_id */ 
		strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=strategy_id) 
			@aaa:TripleA (FormatEltName=strategy_id, Rank=20, ScriptDef="IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
			@aaa:scpt (value="IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
		
		/* STRATEGY_UNIQUE_IDEN */ 
		STRATEGY_UNIQUE_IDENTIFIER : AAABusinessTypes:Id 
			@sql:SQLName (value=STRATEGY_UNIQUE_IDENTIFIER) 
			@aaa:TripleA (FormatEltName=STRATEGY_UNIQUE_IDEN, Rank=70, ScriptDef="{This format element is used to guarantee the unicity of the identifier of the strategy used in the format element MKT_STRUCTURE} {---------------------------} @strategy_id + @investment_profile_id + @portfolio_list_id") 
			@aaa:scpt (value="{This format element is used to guarantee the unicity of the identifier of the strategy used in the format element MKT_STRUCTURE} {---------------------------} @strategy_id + @investment_profile_id + @portfolio_list_id") 
	} 
	/* PCK_DS_PTF_RISK */ 
	PCK_DS_PTF_RISK 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_DS_PTF_RISK) 
		@aaa:TripleA (EntitySQLName=ext_strategy_element, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_DS_PTF_RISK) 
	{ 
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef=0) 
			@aaa:scpt (value=0) 
	} 
	/* PCK_PREC_CHECKSTRAT */ 
	PCK_PREC_CHECKSTRAT 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_PREC_CHECKSTRAT) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_PREC_CHECKSTRAT) 
	{ 
		/* ADJ_DEVIATION */ 
		ADJ_DEVIATION : AAABusinessTypes:Number 
			@i18n:Label (de="Angepasste Strategieabweichung", en="Adjusted Strategy Deviation", fr="Déviation avec la stratégie ajustée") 
			@sql:SQLName (value=ADJ_DEVIATION) 
			@aaa:TripleA (FormatEltName=ADJ_DEVIATION, Rank=502, ScriptDef="{This format element calculates, for each market segment and instrument position (extracted with format element CALCULATION_FILTER), the adjusted deviation factor. The formula is the following: Adjusted deviation factor = Deviation (format element DEVIATION) * Deviation factor (ADJ_FACTOR) Every other useful information regarding such computation are available in the JIRA issue PMSCR-1027.} {------------------------------------------------} IF( @CALCULATION_FILTER = 1, @DEVIATION*@ADJ_FACTOR, 0)") 
			@aaa:scpt (value="{This format element calculates, for each market segment and instrument position (extracted with format element CALCULATION_FILTER), the adjusted deviation factor. The formula is the following: Adjusted deviation factor = Deviation (format element DEVIATION) * Deviation factor (ADJ_FACTOR) Every other useful information regarding such computation are available in the JIRA issue PMSCR-1027.} {------------------------------------------------} IF( @CALCULATION_FILTER = 1, @DEVIATION*@ADJ_FACTOR, 0)") 
		
		/* ADJ_FACTOR */ 
		ADJ_FACTOR : AAABusinessTypes:Number 
			@i18n:Label (de=Strategieanpassungsfaktor, en="Strategy Adjustment Factor", fr="Facteur d\'ajustement de la stratégie") 
			@sql:SQLName (value=ADJ_FACTOR) 
			@aaa:TripleA (FormatEltName=ADJ_FACTOR, Rank=501, ScriptDef="{This format element calculates, for each market segment and instrument position (extracted with format element CALCULATION_FILTER), the deviation factor. The formula is the following: Deviation factor = 10 power [-1 / (level maximum + 1 - current level of market segment or instrument position)] Every other useful information regarding such computation are available in the JIRA issue PMSCR-1027.} {---------------------------------------------------------} IF( @CALCULATION_FILTER = 1, POWER(10,(-1/(@MAX_LEVEL + 1 - @REAL_LEVEL))), 0 )") 
			@aaa:scpt (value="{This format element calculates, for each market segment and instrument position (extracted with format element CALCULATION_FILTER), the deviation factor. The formula is the following: Deviation factor = 10 power [-1 / (level maximum + 1 - current level of market segment or instrument position)] Every other useful information regarding such computation are available in the JIRA issue PMSCR-1027.} {---------------------------------------------------------} IF( @CALCULATION_FILTER = 1, POWER(10,(-1/(@MAX_LEVEL + 1 - @REAL_LEVEL))), 0 )") 
		
		/* CALCULATION_FILTER */ 
		CALCULATION_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CALCULATION_FILTER) 
			@aaa:TripleA (FormatEltName=CALCULATION_FILTER, Rank=14, ScriptDef="{This format element is used by other format elements (DEVIATION for example) to extract market segments and instrument positions} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (0, 1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND calculated_e = 1") 
			@aaa:scpt (value="{This format element is used by other format elements (DEVIATION for example) to extract market segments and instrument positions} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (0, 1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND calculated_e = 1") 
		
		/* CONSTRAINTS_FILTER */ 
		CONSTRAINTS_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTRAINTS_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_FILTER, Rank=12, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
		
		/* DEVIATION */ 
		DEVIATION : AAABusinessTypes:Number 
			@i18n:Label (de=Strategieabweichung, en="Strategy Deviation", fr="Déviation avec la stratégie") 
			@sql:SQLName (value=DEVIATION) 
			@aaa:TripleA (FormatEltName=DEVIATION, Rank=500, ScriptDef="{This format element calculates, for each market segment and instrument position (extracted with format element CALCULATION_FILTER), the deviation between the actual weight and the optimal objective (objective after derivation including modelling constraints). The general formula is the following: Deviation = ABS(Actual weight - Optimal objective) / ABS(Optimal objective) Every other useful information regarding such computation are available in the JIRA issue PMSCR-1027. Remarks: Sometimes, the attributes \"act_weight_cont_n\" and \"obj_weight_cont_marg_n\" are multiplied with the value \"1\". This is a trick to transform a NULL value into a \"0\" value and avoid a lot of additional IF clauses } {---------------------------------------------------------} IF( @CALCULATION_FILTER = 1, {then 1} IF({condition 2} strat_check_e = NULL AND obj_weight_cont_n = NULL {It means that no objectives are defined}, {then 2} 0, {else 2} IF({condition 3} (act_weight_cont_n*1) <> 0 AND (obj_weight_cont_n = 0 OR obj_weight_cont_n = NULL), {then 3} 1, {else 3} IF({condition 4} (act_weight_cont_n*1) < (obj_weight_cont_n - (obj_weight_cont_marg_n*1)), {then 4} (ABS((act_weight_cont_n*1) - (obj_weight_cont_n - (obj_weight_cont_marg_n*1))) / ABS((obj_weight_cont_n - (obj_weight_cont_marg_n*1)))), {else 4} IF({condition 5} (act_weight_cont_n*1) > (obj_weight_cont_n + (obj_weight_cont_marg_n*1)), {then 5} (ABS((act_weight_cont_n*1) - (obj_weight_cont_n + (obj_weight_cont_marg_n*1))) / ABS((obj_weight_cont_n + (obj_weight_cont_marg_n*1)))), {else 5} 0 )))), {else 1} NULL)") 
			@aaa:scpt (value="{This format element calculates, for each market segment and instrument position (extracted with format element CALCULATION_FILTER), the deviation between the actual weight and the optimal objective (objective after derivation including modelling constraints). The general formula is the following: Deviation = ABS(Actual weight - Optimal objective) / ABS(Optimal objective) Every other useful information regarding such computation are available in the JIRA issue PMSCR-1027. Remarks: Sometimes, the attributes \"act_weight_cont_n\" and \"obj_weight_cont_marg_n\" are multiplied with the value \"1\". This is a trick to transform a NULL value into a \"0\" value and avoid a lot of additional IF clauses } {---------------------------------------------------------} IF( @CALCULATION_FILTER = 1, {then 1} IF({condition 2} strat_check_e = NULL AND obj_weight_cont_n = NULL {It means that no objectives are defined}, {then 2} 0, {else 2} IF({condition 3} (act_weight_cont_n*1) <> 0 AND (obj_weight_cont_n = 0 OR obj_weight_cont_n = NULL), {then 3} 1, {else 3} IF({condition 4} (act_weight_cont_n*1) < (obj_weight_cont_n - (obj_weight_cont_marg_n*1)), {then 4} (ABS((act_weight_cont_n*1) - (obj_weight_cont_n - (obj_weight_cont_marg_n*1))) / ABS((obj_weight_cont_n - (obj_weight_cont_marg_n*1)))), {else 4} IF({condition 5} (act_weight_cont_n*1) > (obj_weight_cont_n + (obj_weight_cont_marg_n*1)), {then 5} (ABS((act_weight_cont_n*1) - (obj_weight_cont_n + (obj_weight_cont_marg_n*1))) / ABS((obj_weight_cont_n + (obj_weight_cont_marg_n*1)))), {else 5} 0 )))), {else 1} NULL)") 
		
		/* ext_bi_cst_complianc */ 
		ext_bi_cst_compliance : AAABusinessTypes:Int 
			@sql:SQLName (value=ext_bi_cst_compliance) 
			@aaa:TripleA (FormatEltName=ext_bi_cst_complianc, Rank=531, ScriptDef="IF(@ext_cst_compliance IN (4,5), 1, 0)") 
			@aaa:scpt (value="IF(@ext_cst_compliance IN (4,5), 1, 0)") 
		
		/* ext_bi_obj_complianc */ 
		ext_bi_obj_compliance : AAABusinessTypes:Int 
			@sql:SQLName (value=ext_bi_obj_compliance) 
			@aaa:TripleA (FormatEltName=ext_bi_obj_complianc, Rank=530, ScriptDef="IF(@ext_obj_compliance IN (4,5), 1, 0)") 
			@aaa:scpt (value="IF(@ext_obj_compliance IN (4,5), 1, 0)") 
		
		/* ext_check_calc_d */ 
		ext_check_calc_d : AAABusinessTypes:Date 
			@sql:SQLName (value=ext_check_calc_d) 
			@aaa:TripleA (FormatEltName=ext_check_calc_d, Rank=4, ScriptDef="SYSDATE()") 
			@aaa:scpt (value="SYSDATE()") 
		
		/* ext_check_from_d */ 
		ext_check_from_d : AAABusinessTypes:Date 
			@sql:SQLName (value=ext_check_from_d) 
			@aaa:TripleA (FormatEltName=ext_check_from_d, Rank=3, ScriptDef="DOMAIN().calc_from_d") 
			@aaa:scpt (value="DOMAIN().calc_from_d") 
		
		/* ext_cst_compliance */ 
		ext_cst_compliance : AAABusinessTypes:Enum 
			@sql:SQLName (value=ext_cst_compliance) 
			@aaa:TripleA (FormatEltName=ext_cst_compliance, Rank=304, ScriptDef="{This format element is used to display compliance indication regarding the Constraints defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CONSTR_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CONSTR_CHECK = NULL, 0 {No Constraints Defined}, {ELSE} IF( @SUB_CONSTR_CHECK = 0, 1 {Constraints Not Evaluated}, {ELSE} IF( @SUB_CONSTR_CHECK = 1, 2 {Constraints Verified}, 5 {Constraint(s) Breached} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Constraints Defined\" - \"1\" is for \"Constraints Not Evaluated\" - \"2\" is for \"GREEN\" - \"3\" is for \"GREEN\" - \"4\" is for \"ORANGE\" - \"5\" is for \"RED\"} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 5, 5, NULL )))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the Constraints defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CONSTR_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CONSTR_CHECK = NULL, 0 {No Constraints Defined}, {ELSE} IF( @SUB_CONSTR_CHECK = 0, 1 {Constraints Not Evaluated}, {ELSE} IF( @SUB_CONSTR_CHECK = 1, 2 {Constraints Verified}, 5 {Constraint(s) Breached} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Constraints Defined\" - \"1\" is for \"Constraints Not Evaluated\" - \"2\" is for \"GREEN\" - \"3\" is for \"GREEN\" - \"4\" is for \"ORANGE\" - \"5\" is for \"RED\"} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 5, 5, NULL )))))) )") 
		
		/* ext_ip_name */ 
		ext_ip_name : AAABusinessTypes:UniName 
			@sql:SQLName (value=ext_ip_name) 
			@aaa:TripleA (FormatEltName=ext_ip_name, Rank=23, ScriptDef="{This format element displays the name of the Investment Profile containing the head strategy used for rebalancing.} {------------------------------------------------} TOT_FIRST( ext_strategy_link.ref_strategy_id.name, @CALCULATION_FILTER = 1, level_n, portfolio_id, ASC )") 
			@aaa:scpt (value="{This format element displays the name of the Investment Profile containing the head strategy used for rebalancing.} {------------------------------------------------} TOT_FIRST( ext_strategy_link.ref_strategy_id.name, @CALCULATION_FILTER = 1, level_n, portfolio_id, ASC )") 
		
		/* ext_obj_compliance */ 
		ext_obj_compliance : AAABusinessTypes:Enum 
			@sql:SQLName (value=ext_obj_compliance) 
			@aaa:TripleA (FormatEltName=ext_obj_compliance, Rank=204, ScriptDef="{This format element is used to display compliance indication regarding the objectives defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_OBJ_SEVERITY_INDICATOR. Otherwise, its the format element SUB_OBJ_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_OBJ_CHECK = NULL, 0 {No Objectives Defined}, {ELSE} IF( @SUB_OBJ_CHECK = 0, 1 {Objectives Not Evaluated}, {ELSE} IF( @SUB_OBJ_CHECK = 1, 2 {Strategy Compliant}, 5 {Not Strategy Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Objectives Defined\" - \"1\" is for \"Objectives Not Evaluated\" - \"2\" is for \"GREEN\" - \"3\" is for \"GREEN\" - \"4\" is for \"ORANGE\" - \"5\" is for \"RED\"} IF( @SUB_OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 5, 5, NULL )))))))") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objectives defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_OBJ_SEVERITY_INDICATOR. Otherwise, its the format element SUB_OBJ_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_OBJ_CHECK = NULL, 0 {No Objectives Defined}, {ELSE} IF( @SUB_OBJ_CHECK = 0, 1 {Objectives Not Evaluated}, {ELSE} IF( @SUB_OBJ_CHECK = 1, 2 {Strategy Compliant}, 5 {Not Strategy Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Objectives Defined\" - \"1\" is for \"Objectives Not Evaluated\" - \"2\" is for \"GREEN\" - \"3\" is for \"GREEN\" - \"4\" is for \"ORANGE\" - \"5\" is for \"RED\"} IF( @SUB_OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 5, 5, NULL )))))))") 
		
		/* ext_obj_mean_diff */ 
		ext_obj_mean_diff : AAABusinessTypes:Number 
			@sql:SQLName (value=ext_obj_mean_diff) 
			@aaa:TripleA (FormatEltName=ext_obj_mean_diff, Rank=520, ScriptDef="{This format element calculates, for the Head strategy, the mean of all adjusted deviations for market segments and instrument positions. The formula for the adjusted deviation is the following: Adjusted deviation = Deviation (format element: DEVIATION) * Deviation factor (format element: ADJ_FACTOR) Every other useful information regarding such computation are available in the JIRA issue PMSCR-1027. Remarks: All script keywords TOT_... calculates for all the data, even those which are filtered.} {---------------------------------------------------------} 100*(TOT_STAT((@DEVIATION*@ADJ_FACTOR), @CALCULATION_FILTER = 1, portfolio_id).mean)") 
			@aaa:scpt (value="{This format element calculates, for the Head strategy, the mean of all adjusted deviations for market segments and instrument positions. The formula for the adjusted deviation is the following: Adjusted deviation = Deviation (format element: DEVIATION) * Deviation factor (format element: ADJ_FACTOR) Every other useful information regarding such computation are available in the JIRA issue PMSCR-1027. Remarks: All script keywords TOT_... calculates for all the data, even those which are filtered.} {---------------------------------------------------------} 100*(TOT_STAT((@DEVIATION*@ADJ_FACTOR), @CALCULATION_FILTER = 1, portfolio_id).mean)") 
		
		/* ext_strategy_id */ 
		ext_strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=ext_strategy_id) 
			@aaa:TripleA (FormatEltName=ext_strategy_id, Rank=5, ScriptDef="{This format element displays the identifier of the head strategy used for rebalancing.} {------------------------------------------------} TOT_FIRST( strategy_id, strat_level_n = 1 {Head strategy} AND calculated_e = 1, level_n, portfolio_id, ASC )") 
			@aaa:scpt (value="{This format element displays the identifier of the head strategy used for rebalancing.} {------------------------------------------------} TOT_FIRST( strategy_id, strat_level_n = 1 {Head strategy} AND calculated_e = 1, level_n, portfolio_id, ASC )") 
		
		/* MAX_LEVEL */ 
		MAX_LEVEL : AAABusinessTypes:Int 
			@i18n:Label (de="Höchster Grad", en="Maximum Level", fr="Niveau maximum") 
			@sql:SQLName (value=MAX_LEVEL) 
			@aaa:TripleA (FormatEltName=MAX_LEVEL, Rank=403, ScriptDef="{This format element returns the highest value of format element REAL_LEVEL for the head strategy used for rebalancing per portfolio.} {-----------------------------------------} TOT_MAX(@REAL_LEVEL, @CALCULATION_FILTER = 1, portfolio_id)") 
			@aaa:scpt (value="{This format element returns the highest value of format element REAL_LEVEL for the head strategy used for rebalancing per portfolio.} {-----------------------------------------} TOT_MAX(@REAL_LEVEL, @CALCULATION_FILTER = 1, portfolio_id)") 
		
		/* PORTFOLIO_FILTER */ 
		PORTFOLIO_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=PORTFOLIO_FILTER) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_FILTER, Rank=11, ScriptDef="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level}, 1, 0)") 
			@aaa:scpt (value="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level}, 1, 0)") 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* REAL_LEVEL */ 
		REAL_LEVEL : AAABusinessTypes:Int 
			@i18n:Label (de=Grad, en=Level, fr=Niveau) 
			@sql:SQLName (value=REAL_LEVEL) 
			@aaa:TripleA (FormatEltName=REAL_LEVEL, Rank=402, ScriptDef="{This format element is used to calculate the level of market segments, sub market segments and instruments regarding the complete investment structure. It has nothing to do with the attribute \"level_n\", but is used to compute the adjustment factor (see JIRA issue PMSCR-1027 for more explanations about this factor)} {------------------------------------------------------------------------------------------------------------------------------------------------} {level 11} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 11, {level 10} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 10, {level 9} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 9, {level 8} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 8, {level 7} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 7, {level 6} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 6, {level 5} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 5, {level 4} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 4, {level 3} IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 3, {level 2} IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 2, {level 1} IF( level_n = 1 AND strat_level_n = 1, 1 ))) ))) ))) ))") 
			@aaa:scpt (value="{This format element is used to calculate the level of market segments, sub market segments and instruments regarding the complete investment structure. It has nothing to do with the attribute \"level_n\", but is used to compute the adjustment factor (see JIRA issue PMSCR-1027 for more explanations about this factor)} {------------------------------------------------------------------------------------------------------------------------------------------------} {level 11} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 11, {level 10} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 10, {level 9} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 9, {level 8} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 8, {level 7} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 7, {level 6} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 6, {level 5} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 5, {level 4} IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 4, {level 3} IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 3, {level 2} IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, 2, {level 1} IF( level_n = 1 AND strat_level_n = 1, 1 ))) ))) ))) ))") 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=13, ScriptDef="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} @PORTFOLIO_FILTER") 
			@aaa:scpt (value="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} @PORTFOLIO_FILTER") 
		
		/* SEVERITY */ 
		SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SEVERITY) 
			@aaa:TripleA (FormatEltName=SEVERITY, Rank=201, ScriptDef="{This format element displays the value for the severity (also known as criticity) of the objective defined on market segments and instruments The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {---------------------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
			@aaa:scpt (value="{This format element displays the value for the severity (also known as criticity) of the objective defined on market segments and instruments The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {---------------------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
		
		/* STRATEGY_FILTER */ 
		STRATEGY_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=STRATEGY_FILTER) 
			@aaa:TripleA (FormatEltName=STRATEGY_FILTER, Rank=10, ScriptDef="{This format element is used by other format elements (DEVIATION for example) to extract market segments and instrument positions of the head strategy used for rebalancing. Besides, this head strategy must not be included in a Benchmark linked directly or indirectly to the Portfolio.} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategies are Asset Allocation or Model Portfolio} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {Strategies are not included in a Benchmark composition} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}, 1, 0 ) AND calculated_e = 1 {Rebalancing}") 
			@aaa:scpt (value="{This format element is used by other format elements (DEVIATION for example) to extract market segments and instrument positions of the head strategy used for rebalancing. Besides, this head strategy must not be included in a Benchmark linked directly or indirectly to the Portfolio.} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategies are Asset Allocation or Model Portfolio} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {Strategies are not included in a Benchmark composition} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}, 1, 0 ) AND calculated_e = 1 {Rebalancing}") 
		
		/* SUB_CONSTR_CHECK */ 
		SUB_CONSTR_CHECK : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CONSTR_CHECK) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_CHECK, Rank=300, ScriptDef="{This format element returns the first value, from highest to lowest, of the Constraints verification status for each portfolio Then, this value is used in the format element SUBCONSTR_COMPLIANCE to display whether a Constraint is breached or not.} {------------------------------------------------------------} TOT_FIRST( constraint_check_e, constraint_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"constraint_check_e\"} AND @CONSTRAINTS_FILTER, constraint_check_e, portfolio_id {to get the value per portfolio}, DESC )") 
			@aaa:scpt (value="{This format element returns the first value, from highest to lowest, of the Constraints verification status for each portfolio Then, this value is used in the format element SUBCONSTR_COMPLIANCE to display whether a Constraint is breached or not.} {------------------------------------------------------------} TOT_FIRST( constraint_check_e, constraint_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"constraint_check_e\"} AND @CONSTRAINTS_FILTER, constraint_check_e, portfolio_id {to get the value per portfolio}, DESC )") 
		
		/* SUB_CONSTR_SEVERITY */ 
		SUB_CONSTR_SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CONSTR_SEVERITY) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_SEVERITY, Rank=302, ScriptDef="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant Constraints} {---------------------------------------------------------------------} TOT_MAX( criticalness_e, constraint_check_e IN (2, 3, 4, 5, 6, 7, 8) AND criticalness_e <> NULL AND @CONSTRAINTS_FILTER, portfolio_id )") 
			@aaa:scpt (value="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant Constraints} {---------------------------------------------------------------------} TOT_MAX( criticalness_e, constraint_check_e IN (2, 3, 4, 5, 6, 7, 8) AND criticalness_e <> NULL AND @CONSTRAINTS_FILTER, portfolio_id )") 
		
		/* SUB_CSTR_SEVERITY_IN */ 
		SUB_CONSTR_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@sql:SQLName (value=SUB_CONSTR_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_CSTR_SEVERITY_IN, Rank=303, ScriptDef="{This script indicates, using \"traffic lights\", if all the Constraints on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint. As this severity must be displayed at Portfolio level, this is done in the format element SUB_CONSTR_SEVERITY . \"Traffic lights\" are: - \"0\" when no Constraints are defined - \"1\" when no Constraints are evaluated - \"2\" when all Constraints are compliant - \"3\" when some Constraints are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some Constraints are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some Constraints are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether Constraints are defined or not. If no Consttraints are defined then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether Constraints are evaluated or not. If no Consttraints are evluated then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the Constraints are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no Constraints are defined, the returned value is \"0\"} IF( @SUB_CONSTR_CHECK = NULL, 0, {If no Constraints are evaluated, the returned value is \"1\"} IF( @SUB_CONSTR_CHECK = 0, 1, {If all Constraints are compliant, the returned value is \"2\"} IF( @SUB_CONSTR_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if all the Constraints on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint. As this severity must be displayed at Portfolio level, this is done in the format element SUB_CONSTR_SEVERITY . \"Traffic lights\" are: - \"0\" when no Constraints are defined - \"1\" when no Constraints are evaluated - \"2\" when all Constraints are compliant - \"3\" when some Constraints are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some Constraints are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some Constraints are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether Constraints are defined or not. If no Consttraints are defined then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether Constraints are evaluated or not. If no Consttraints are evluated then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the Constraints are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no Constraints are defined, the returned value is \"0\"} IF( @SUB_CONSTR_CHECK = NULL, 0, {If no Constraints are evaluated, the returned value is \"1\"} IF( @SUB_CONSTR_CHECK = 0, 1, {If all Constraints are compliant, the returned value is \"2\"} IF( @SUB_CONSTR_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
		
		/* SUB_OBJ_CHECK */ 
		SUB_OBJ_CHECK : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_OBJ_CHECK) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_CHECK, Rank=200, ScriptDef="{This format element is used to indicate whether a sub-level (starting from rebalancing head strategy level) is compliant or not regarding its objectives and actual weights} {--------------------------------------------------------------} TOT_FIRST(strat_check_e, strat_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"substrat_check_e\"} AND @CALCULATION_FILTER = 1, strat_check_e, portfolio_id {to get the value per portfolio}, DESC)") 
			@aaa:scpt (value="{This format element is used to indicate whether a sub-level (starting from rebalancing head strategy level) is compliant or not regarding its objectives and actual weights} {--------------------------------------------------------------} TOT_FIRST(strat_check_e, strat_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"substrat_check_e\"} AND @CALCULATION_FILTER = 1, strat_check_e, portfolio_id {to get the value per portfolio}, DESC)") 
		
		/* SUB_OBJ_SEVERITY */ 
		SUB_OBJ_SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_OBJ_SEVERITY) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_SEVERITY, Rank=202, ScriptDef="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant objectives defined on market segments and instruments of the rebalancing head strategy.} {---------------------------------------------------------------------} TOT_MAX(@SEVERITY, strat_check_e IN (2, 3, 4, 5, 6, 7, 8) AND @SEVERITY <> NULL AND @CALCULATION_FILTER = 1, portfolio_id)") 
			@aaa:scpt (value="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant objectives defined on market segments and instruments of the rebalancing head strategy.} {---------------------------------------------------------------------} TOT_MAX(@SEVERITY, strat_check_e IN (2, 3, 4, 5, 6, 7, 8) AND @SEVERITY <> NULL AND @CALCULATION_FILTER = 1, portfolio_id)") 
		
		/* SUB_OBJ_SEVERITY_IND */ 
		SUB_OBJ_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@sql:SQLName (value=SUB_OBJ_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_SEVERITY_IND, Rank=203, ScriptDef="{This script indicates, using \"traffic lights\", if all the objectives defined on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the objectives. As this severity must be displayed at Portfolio level, this is done in the format element @SUB_OBJ_SEVERITY . \"Traffic lights\" are: - \"0\" when no objectives are defined - \"1\" when no objectives are evaluated - \"2\" when all objectives are compliant - \"3\" when some objectives are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some objectives are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some objectives are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether objectives are defined or not. If no objectives are defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether objectives are defined or not. If no objectives are evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the objectives are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no objectives are defined, the returned value is \"0\"} IF( @SUB_OBJ_CHECK = NULL, 0, {If no objectives are evaluated, the returned value is \"1\"} IF( @SUB_OBJ_CHECK = 0, 1, {If all objectives are compliant, the returned value is \"2\"} IF( @SUB_OBJ_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if all the objectives defined on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the objectives. As this severity must be displayed at Portfolio level, this is done in the format element @SUB_OBJ_SEVERITY . \"Traffic lights\" are: - \"0\" when no objectives are defined - \"1\" when no objectives are evaluated - \"2\" when all objectives are compliant - \"3\" when some objectives are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some objectives are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some objectives are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether objectives are defined or not. If no objectives are defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether objectives are defined or not. If no objectives are evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the objectives are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no objectives are defined, the returned value is \"0\"} IF( @SUB_OBJ_CHECK = NULL, 0, {If no objectives are evaluated, the returned value is \"1\"} IF( @SUB_OBJ_CHECK = 0, 1, {If all objectives are compliant, the returned value is \"2\"} IF( @SUB_OBJ_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
	} 
	/* PCK_RMT_COMPCHK_CNST */ 
	PCK_RMT_COMPCHK_CNST 
		@aaa:FormatColumnFilter (value=CONSTRAINTS_FILTER) 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_RMT_COMPCHK_CNST) 
		@aaa:TripleA (ColumnFilter=CONSTRAINTS_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_RMT_COMPCHK_CNST) 
	{ 
		/* ALLOC_CONSTR_FILTER */ 
		ALLOC_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=ALLOC_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=ALLOC_CONSTR_FILTER, Rank=11, ScriptDef="{This format element allows only the display of the following Constraints: - Allocation Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Allocation Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)), 1,0)") 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_CONSTR) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, constraint_check_e.LABEL[TSL_CURRENT_LANGUAGE()], constraint_check_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, constraint_check_e.LABEL[TSL_CURRENT_LANGUAGE()], constraint_check_e.LABEL[])") 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_CONSTR_de) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_CONSTR_en) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=CHECK_CONSTR_fr) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef) 
			@aaa:scpt (value) 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* CONSTR_ACTUAL_POSITI */ 
		CONSTR_ACTUAL_POSITION : AAABusinessTypes:Number 
			@i18n:Label (de="Aktuelle Position", en="Actual Position", fr="Position actuelle") 
			@sql:SQLName (value=CONSTR_ACTUAL_POSITION) 
			@aaa:TripleA (FormatEltName=CONSTR_ACTUAL_POSITI, Rank=49, ScriptDef="{This format element displays the actual weight of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, current_market_value_m*1 ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the actual weight of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, current_market_value_m*1 ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
		
		/* CONSTR_REF_CURR */ 
		CONSTR_REF_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=CONSTR_REF_CURR) 
			@aaa:TripleA (FormatEltName=CONSTR_REF_CURR, Rank=47, ScriptDef="{This format element displays the Constraint currency if its bound type is in amount} {------------------------------------------------------------------} IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", model_constr_elt_id.constr_bound_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} model_constr_elt_id.constr_bound_curr_id.code ) )") 
			@aaa:scpt (value="{This format element displays the Constraint currency if its bound type is in amount} {------------------------------------------------------------------} IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", model_constr_elt_id.constr_bound_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} model_constr_elt_id.constr_bound_curr_id.code ) )") 
		
		/* CONSTR_SET_FILTER */ 
		CONSTR_SET_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTR_SET_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTR_SET_FILTER, Rank=14, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2), 1,0)") 
		
		/* CONSTR_SEVERITY_INDI */ 
		CONSTR_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad-Anzeiger, en="Severity Indicator", fr="Indicateur de sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_INDI, Rank=102, ScriptDef="{This script indicates, using \"traffic lights\", if the Constraints defined on a market segment, an instrument or a list of instruments is inline with the actual weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint itself. \"Traffic lights\" are: - \"0\" when actual weight does not breach the Constraint - \"1\" when actual weight breaches the Constraint, but the Constraint severity is not defined as requesting a clarification or blocking - \"2\" when actual weight breaches the Constraints and the Constraint severity is defined as requesting a clarification, but not blocking - \"3\" when actual weight breaches the Constraints and the Constraint severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the actual weight (act_weight_cont_n) of the market segment, instrument or instrument list breaches the Constraint or not. If the actual weight is not breaching the Constraint, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"3\" is returned and the script ends here. Otherwise, the script goes to the next step. 3) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"2\" is returned otherwise it is the value \"1\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (1, 2, 3) {Allocation, Security In and Security Out Constraints} OR strat_nat_e = 4 {Constraints Sets}, {If actual weight is not breaching the Constraint, the returned value is \"0\"} IF( constraint_check_e = 1, 0, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"2\"} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 3, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"1\". If it is not the case, the returned value is \"0\".} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 2, 1 ))), NULL )") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if the Constraints defined on a market segment, an instrument or a list of instruments is inline with the actual weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint itself. \"Traffic lights\" are: - \"0\" when actual weight does not breach the Constraint - \"1\" when actual weight breaches the Constraint, but the Constraint severity is not defined as requesting a clarification or blocking - \"2\" when actual weight breaches the Constraints and the Constraint severity is defined as requesting a clarification, but not blocking - \"3\" when actual weight breaches the Constraints and the Constraint severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the actual weight (act_weight_cont_n) of the market segment, instrument or instrument list breaches the Constraint or not. If the actual weight is not breaching the Constraint, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"3\" is returned and the script ends here. Otherwise, the script goes to the next step. 3) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"2\" is returned otherwise it is the value \"1\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (1, 2, 3) {Allocation, Security In and Security Out Constraints} OR strat_nat_e = 4 {Constraints Sets}, {If actual weight is not breaching the Constraint, the returned value is \"0\"} IF( constraint_check_e = 1, 0, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"2\"} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 3, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"1\". If it is not the case, the returned value is \"0\".} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 2, 1 ))), NULL )") 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef="{This format element displays the severity (also known as criticity) defined on the Constraint. f the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] )") 
			@aaa:scpt (value="{This format element displays the severity (also known as criticity) defined on the Constraint. f the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] )") 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_de) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_en) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_VALU */ 
		CONSTR_SEVERITY_VALUE : AAABusinessTypes:Enum 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_VALUE) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_VALU, Rank=90, ScriptDef="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the Constraint} {-----------------------------------------------------------} criticalness_e") 
			@aaa:scpt (value="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the Constraint} {-----------------------------------------------------------} criticalness_e") 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Behandlung der Einschränkung", en="Constraint Treatment", fr="Traitement de la contrainte") 
			@sql:SQLName (value=CONSTR_TREAT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef="IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_treat_e <> 0 {The value <None> for treatment is not taken into account for the display}, model_constr_elt_id.constr_treat_e.LABEL[TSL_CURRENT_LANGUAGE()])") 
			@aaa:scpt (value="IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_treat_e <> 0 {The value <None> for treatment is not taken into account for the display}, model_constr_elt_id.constr_treat_e.LABEL[TSL_CURRENT_LANGUAGE()])") 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_de) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_en) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_FILTER */ 
		CONSTRAINTS_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTRAINTS_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_FILTER, Rank=10, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Einschränkungen", en="Constraints Set", fr="Set de contraintes") 
			@sql:SQLName (value=CONSTRAINTS_SET) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef="{This format element displays the name of the Constraint, if it is an elment of a Constraints Set. The algorithm first try to find its translated denomination, then its denomination. Remarks: If translated or default denomination does not exist for the element, then nothing is displayed. This is because it is impossible to define a name for elements of Constraint Sets} {--------------------------------------------------------------} IF( strat_nat_e = 4, strategy_elt_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, NULL )") 
			@aaa:scpt (value="{This format element displays the name of the Constraint, if it is an elment of a Constraints Set. The algorithm first try to find its translated denomination, then its denomination. Remarks: If translated or default denomination does not exist for the element, then nothing is displayed. This is because it is impossible to define a name for elements of Constraint Sets} {--------------------------------------------------------------} IF( strat_nat_e = 4, strategy_elt_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, NULL )") 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_de) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_en) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_fr) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=45, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT : AAABusinessTypes:UniLongName 
			@i18n:Label (de="Fester Anteil", en="Fixed Objective", fr="Objectif fixe") 
			@sql:SQLName (value=FIXED_WEIGHT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef="IF(model_constr_elt_id.constr_nat_e=1, IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, model_constr_elt.fixed_cell_f.LABEL[TSL_CURRENT_LANGUAGE()], model_constr_elt.fixed_cell_f.LABEL[]),NULL)") 
			@aaa:scpt (value="IF(model_constr_elt_id.constr_nat_e=1, IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, model_constr_elt.fixed_cell_f.LABEL[TSL_CURRENT_LANGUAGE()], model_constr_elt.fixed_cell_f.LABEL[]),NULL)") 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_de) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_en) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_fr) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Instrument Code", en="Instrument Code", fr="Code de l\'instrument") 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=500, ScriptDef="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, instr_id.code, NULL )") 
			@aaa:scpt (value="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, instr_id.code, NULL )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_DENOM, Rank=501, ScriptDef="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, {DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name ), NULL )") 
			@aaa:scpt (value="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, {DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name ), NULL )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrumentliste, en="Instrument List", fr="Liste d\'instruments") 
			@sql:SQLName (value=INSTR_LIST_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef="{This format element checks whether it is an Instrument or an Instrument Liste related to the Security In Constraints. If it is an Instrument List, then its translated denomination is searched, otherwise it is its denomination and at last its name} {-----------------------------------------------------------------------} IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instruments}, IF( GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).name ) )") 
			@aaa:scpt (value="{This format element checks whether it is an Instrument or an Instrument Liste related to the Security In Constraints. If it is an Instrument List, then its translated denomination is searched, otherwise it is its denomination and at last its name} {-----------------------------------------------------------------------} IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instruments}, IF( GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).name ) )") 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* MARKET_SEGMENT */ 
		MARKET_SEGMENT : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=MARKET_SEGMENT) 
			@aaa:TripleA (FormatEltName=MARKET_SEGMENT, Rank=503, ScriptDef="IF(model_constr_elt_id.constr_nat_e=1,market_segment_id.name,NULL)") 
			@aaa:scpt (value="IF(model_constr_elt_id.constr_nat_e=1,market_segment_id.name,NULL)") 
		
		/* MAX_OBJ */ 
		MAX_OBJ : AAABusinessTypes:Number 
			@i18n:Label (de="Oberer Zielwert", en="Maximum Objective", fr="Objectif maximum") 
			@sql:SQLName (value=MAX_OBJ) 
			@aaa:TripleA (FormatEltName=MAX_OBJ, Rank=58, ScriptDef="{This format element retrieves the maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1, 2) {Allocation and Security In Constraints}, model_constr_elt_id.max_weight_n, NULL )") 
			@aaa:scpt (value="{This format element retrieves the maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1, 2) {Allocation and Security In Constraints}, model_constr_elt_id.max_weight_n, NULL )") 
		
		/* MIN_OBJ */ 
		MIN_OBJ : AAABusinessTypes:Number 
			@i18n:Label (de="Unterer Zielwert", en="Minimum Objective", fr="Objectif minimum") 
			@sql:SQLName (value=MIN_OBJ) 
			@aaa:TripleA (FormatEltName=MIN_OBJ, Rank=54, ScriptDef="{This format element retrieves the minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1,2) {Allocation and Security In Constraints}, model_constr_elt_id.min_weight_n, NULL )") 
			@aaa:scpt (value="{This format element retrieves the minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1,2) {Allocation and Security In Constraints}, model_constr_elt_id.min_weight_n, NULL )") 
		
		/* MIN_OBJ_SEC_OUT */ 
		MIN_OBJ_SEC_OUT : AAABusinessTypes:UniName 
			@i18n:Label (de="Menge ausser Verwaltungsvollmacht", en="Quantity Out Of Mandate", fr="Quantité hors mandat") 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT, Rank=62, ScriptDef="{This format element retrieves the minimum objective defined by a Security Out Constraint. This format element is in fact used in the format element [CONSTR_LABEL]} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints}, PRINTF(\"%5.2f\", model_constr_elt_id.min_weight_n) )") 
			@aaa:scpt (value="{This format element retrieves the minimum objective defined by a Security Out Constraint. This format element is in fact used in the format element [CONSTR_LABEL]} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints}, PRINTF(\"%5.2f\", model_constr_elt_id.min_weight_n) )") 
		
		/* MODELL_CONSTR_FILTER */ 
		MODELL_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=MODELL_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=MODELL_CONSTR_FILTER, Rank=15, ScriptDef="{This format element allows only the display of the following Constraints: - Allocation Constraint - Security In Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1, 0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Allocation Constraint - Security In Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1, 0)") 
		
		/* OBJ_TYPE */ 
		OBJ_TYPE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Zielwert-Typ, en="Bound Nature", fr="Type de l\'objectif") 
			@sql:SQLName (value=OBJ_TYPE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=OBJ_TYPE, Rank=55, ScriptDef="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, model_constr_elt.constr_bound_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], model_constr_elt.constr_bound_nat_e.LABEL[])") 
			@aaa:scpt (value="IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, model_constr_elt.constr_bound_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], model_constr_elt.constr_bound_nat_e.LABEL[])") 
		
		/* OBJ_TYPE */ 
		OBJ_TYPE_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=OBJ_TYPE_de) 
			@aaa:TripleA (FormatEltName=OBJ_TYPE, Rank=55, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_TYPE */ 
		OBJ_TYPE_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=OBJ_TYPE_en) 
			@aaa:TripleA (FormatEltName=OBJ_TYPE, Rank=55, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_TYPE */ 
		OBJ_TYPE_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=OBJ_TYPE_fr) 
			@aaa:TripleA (FormatEltName=OBJ_TYPE, Rank=55, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Portfolio Code", en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=30, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=31, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* REF_CURRENCY */ 
		REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Ref. Whrg.", en="Ref. Ccy.", fr="Dvs réf.") 
			@sql:SQLName (value=REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=REF_CURRENCY, Rank=25, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* REMAINING_POSITION */ 
		REMAINING_POSITION : AAABusinessTypes:Number 
			@i18n:Label (de="Innerhalb Verwaltungsmandat", en="Remaining in Management Mandate", fr="Restant dans le mandat de gestion") 
			@sql:SQLName (value=REMAINING_POSITION) 
			@aaa:TripleA (FormatEltName=REMAINING_POSITION, Rank=66, ScriptDef="{This format element displays the remaining weight of the corresponding instrument for a Security Out Constraint. The bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 AND act_weight_cont_n <> NULL {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 AND act_qty_n <> NULL {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n, 0 ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the remaining weight of the corresponding instrument for a Security Out Constraint. The bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 AND act_weight_cont_n <> NULL {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 AND act_qty_n <> NULL {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n, 0 ) {End of second IF} ) {End of first IF}") 
		
		/* SECU_IN_CONSTR_FILTE */ 
		SECU_IN_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SECU_IN_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=SECU_IN_CONSTR_FILTE, Rank=12, ScriptDef="{This format element allows only the display of the following Constraints: - Security In Constraint } {-------------------------------------------------------------------------} IF( {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Security In Constraint } {-------------------------------------------------------------------------} IF( {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1,0)") 
		
		/* SECU_OUT_CONSTR_FILT */ 
		SECU_OUT_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SECU_OUT_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=SECU_OUT_CONSTR_FILT, Rank=13, ScriptDef="{This format element allows only the display of the following Constraints: - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
	} 
	/* PCK_RMT_COMPCHK_LINK */ 
	PCK_RMT_COMPCHK_LINK 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_RMT_COMPCHK_LINK) 
		@aaa:TripleA (EntitySQLName=ext_strategy_link, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_RMT_COMPCHK_LINK) 
	{ 
		/* CHECKED */ 
		CHECKED : AAABusinessTypes:Enum 
			@sql:SQLName (value=CHECKED) 
			@aaa:TripleA (FormatEltName=CHECKED, Rank=30, ScriptDef=check_e) 
			@aaa:scpt (value=check_e) 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=10, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=11, ScriptDef=portfolio_id.name) 
			@aaa:scpt (value=portfolio_id.name) 
		
		/* SEQNO */ 
		SEQNO : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=SEQNO) 
			@aaa:TripleA (FormatEltName=SEQNO, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_CODE */ 
		STRATEGY_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=STRATEGY_CODE) 
			@aaa:TripleA (FormatEltName=STRATEGY_CODE, Rank=20, ScriptDef=strategy_id.code) 
			@aaa:scpt (value=strategy_id.code) 
		
		/* STRATEGY_DENOM */ 
		STRATEGY_DENOM : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_DENOM, Rank=21, ScriptDef="IF(strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, strategy_id.name)") 
			@aaa:scpt (value="IF(strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, strategy_id.name)") 
		
		/* STRATEGY_DENOM */ 
		STRATEGY_DENOM_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_DENOM_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_DENOM, Rank=21, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_DENOM */ 
		STRATEGY_DENOM_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_DENOM_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_DENOM, Rank=21, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_DENOM */ 
		STRATEGY_DENOM_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_DENOM_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_DENOM, Rank=21, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_NATURE */ 
		STRATEGY_NATURE : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_NATURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_NATURE, Rank=22, ScriptDef="IF(strategy_nat_e = 0, NULL, IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, strategy_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], strategy_nat_e.LABEL[])) {IF(strategy_nat_e = 0, NULL, strategy_nat_e.LABEL[])}") 
			@aaa:scpt (value="IF(strategy_nat_e = 0, NULL, IF(DOMAIN() != NULL AND TSL_CURRENT_LANGUAGE() > 0, strategy_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], strategy_nat_e.LABEL[])) {IF(strategy_nat_e = 0, NULL, strategy_nat_e.LABEL[])}") 
		
		/* STRATEGY_NATURE */ 
		STRATEGY_NATURE_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_NATURE_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_NATURE, Rank=22, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_NATURE */ 
		STRATEGY_NATURE_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_NATURE_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_NATURE, Rank=22, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_NATURE */ 
		STRATEGY_NATURE_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=STRATEGY_NATURE_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_NATURE, Rank=22, ScriptDef) 
			@aaa:scpt (value) 
	} 
	/* PCK_RMT_COMPCHK_OBJ */ 
	PCK_RMT_COMPCHK_OBJ 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_RMT_COMPCHK_OBJ) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_RMT_COMPCHK_OBJ) 
	{ 
		/* AMT_TO_INV */ 
		AMT_TO_INV : AAABusinessTypes:Amount 
			@i18n:Label (de=Investitionsbetrag, en="Amount To Invest", fr="Montant à investir") 
			@sql:SQLName (value=AMT_TO_INV) 
			@aaa:TripleA (FormatEltName=AMT_TO_INV, Rank=46, ScriptDef="{This format element displays the amount to invest if the actual weight is not in the set [objective weight - margin; objective weight + margin]. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the amount to invest is just the opposite of their market value. And otherwise, the calculations is the following (Optimal market value means the market value if the actual weight is the objective weight): Amount to invest = Optimal market value - Current market value = (Objective weight * Portfolio market value) - (Actual weight * Portfolio market value) = (Objective weight - Actual weight) * Portfolio market value } {---------------------------------------------------------} IF( strat_check_e <> 1, IF( level_n = 1 AND strat_level_n = 1, NULL, IF( obj_weight_cont_n <> NULL AND strat_check_e > 1, (obj_weight_cont_n - act_weight_cont_n) * portfolio_id.mkt_val_m / 100 {factor 100, because weights are expressed in percentage)}, {ELSE} IF( strat_check_e = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, NULL, {ELSE} IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, NULL, {ELSE} IF( instr_id.nature_e IN (4, 5, 7) {Cash Account, Money Market, Forward}, NULL, 0 ))))) )") 
			@aaa:scpt (value="{This format element displays the amount to invest if the actual weight is not in the set [objective weight - margin; objective weight + margin]. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the amount to invest is just the opposite of their market value. And otherwise, the calculations is the following (Optimal market value means the market value if the actual weight is the objective weight): Amount to invest = Optimal market value - Current market value = (Objective weight * Portfolio market value) - (Actual weight * Portfolio market value) = (Objective weight - Actual weight) * Portfolio market value } {---------------------------------------------------------} IF( strat_check_e <> 1, IF( level_n = 1 AND strat_level_n = 1, NULL, IF( obj_weight_cont_n <> NULL AND strat_check_e > 1, (obj_weight_cont_n - act_weight_cont_n) * portfolio_id.mkt_val_m / 100 {factor 100, because weights are expressed in percentage)}, {ELSE} IF( strat_check_e = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, NULL, {ELSE} IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, NULL, {ELSE} IF( instr_id.nature_e IN (4, 5, 7) {Cash Account, Money Market, Forward}, NULL, 0 ))))) )") 
		
		/* CHECK_STRAT */ 
		CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=CHECK_STRAT, Rank=100, ScriptDef="{IF(level_n = 3 AND denom = \"_\", NULL, strat_check_e)} strat_check_e") 
			@aaa:scpt (value="{IF(level_n = 3 AND denom = \"_\", NULL, strat_check_e)} strat_check_e") 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* HEAD_FILTER */ 
		HEAD_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=HEAD_FILTER) 
			@aaa:TripleA (FormatEltName=HEAD_FILTER, Rank=11, ScriptDef="{This format element is used as a filter to extract only head strategy level (Asset Allocation and Dummy Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {To be sure that the head strategies are not included in a Benchmark composition} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategy is not a Recommendation List or a Constraint Set} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis} AND leaf_f = 1, {Otherwise, if context (domain) is set with a specific instrument, the system will create 2 double rows and the WUI will not support it} 1, 0)") 
			@aaa:scpt (value="{This format element is used as a filter to extract only head strategy level (Asset Allocation and Dummy Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {To be sure that the head strategies are not included in a Benchmark composition} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategy is not a Recommendation List or a Constraint Set} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis} AND leaf_f = 1, {Otherwise, if context (domain) is set with a specific instrument, the system will create 2 double rows and the WUI will not support it} 1, 0)") 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Instrument Code", en="Instrument Code", fr="Code de l\'instrument") 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=499, ScriptDef=instr_id.code) 
			@aaa:scpt (value=instr_id.code) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_DENOM, Rank=20, ScriptDef="{DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name )") 
			@aaa:scpt (value="{DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_de : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_en : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_fr : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_EXCH_RATE_CURR */ 
		INSTR_EXCH_RATE_CURR : AAABusinessTypes:UniName 
			@i18n:Label (de=Devisenkurs, en="Exchange Rate", fr="Cours monétaire") 
			@sql:SQLName (value=INSTR_EXCH_RATE_CURR) 
			@aaa:TripleA (FormatEltName=INSTR_EXCH_RATE_CURR, Rank=509, ScriptDef="{This format element displays the exchange rate currency and underlying currency between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {element is an instrument} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, PRINTF(\"%s/%s\", SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, SYNONYM(\"currency\", DOMAIN( ).currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code), PRINTF(\"%s/%s\", instr_id.ref_curr_id.code, DOMAIN( ).currency_id.code) ) )") 
			@aaa:scpt (value="{This format element displays the exchange rate currency and underlying currency between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {element is an instrument} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, PRINTF(\"%s/%s\", SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, SYNONYM(\"currency\", DOMAIN( ).currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code), PRINTF(\"%s/%s\", instr_id.ref_curr_id.code, DOMAIN( ).currency_id.code) ) )") 
		
		/* instr_id */ 
		instr_id : AAABusinessTypes:Id 
			@sql:SQLName (value=instr_id) 
			@aaa:TripleA (FormatEltName=instr_id, Rank=6, ScriptDef=instr_id) 
			@aaa:scpt (value=instr_id) 
		
		/* INSTR_PRICE */ 
		INSTR_PRICE : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktkurs, en="Market Price", fr="Cours de marché") 
			@sql:SQLName (value=INSTR_PRICE) 
			@aaa:TripleA (FormatEltName=INSTR_PRICE, Rank=503, ScriptDef="{This format element displays the quotation of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {ELSE IF element is an instrument} INSTR_PRICE(instr_id, DOMAIN( ).calc_from_d , 0 ,0 ,0 ,0 , , , ,).quote_n )") 
			@aaa:scpt (value="{This format element displays the quotation of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {ELSE IF element is an instrument} INSTR_PRICE(instr_id, DOMAIN( ).calc_from_d , 0 ,0 ,0 ,0 , , , ,).quote_n )") 
		
		/* INSTR_PRICE_CURRENCY */ 
		INSTR_PRICE_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=INSTR_PRICE_CURRENCY) 
			@aaa:TripleA (FormatEltName=INSTR_PRICE_CURRENCY, Rank=506, ScriptDef="{This format element displays the quotation currency of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument} OR @INSTR_PRICE = NULL, NULL, {element is an instrument} {ELSE} IF( instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, \"%\", {Instrument is not a bond, an option bond or a convertible bond} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ) ) )") 
			@aaa:scpt (value="{This format element displays the quotation currency of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument} OR @INSTR_PRICE = NULL, NULL, {element is an instrument} {ELSE} IF( instr_id.nature_e IN (2, 18, 19) {Instrument is a bond, an option bond or a convertible bond}, \"%\", {Instrument is not a bond, an option bond or a convertible bond} IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", instr_id.ref_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, instr_id.ref_curr_id.code ) ) )") 
		
		/* INSTR_QUOTE_EXCH_RAT */ 
		INSTR_QUOTE_EXCH_RATE : AAABusinessTypes:Number 
			@i18n:Label (de=Devisenkurs, en="Exchange Rate", fr="Cours monétaire") 
			@sql:SQLName (value=INSTR_QUOTE_EXCH_RATE) 
			@aaa:TripleA (FormatEltName=INSTR_QUOTE_EXCH_RAT, Rank=508, ScriptDef="{This format element displays the exchange rate between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {element is an instrument} EXCH_RATE(instr_id.ref_curr_id , DOMAIN( ).calc_from_d, DOMAIN( ).currency_id, 0, 0, 0, , ,).exch_rate )") 
			@aaa:scpt (value="{This format element displays the exchange rate between the quotation currency of the instrument helds in the Portfolio and the reference currency at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {element is an instrument} EXCH_RATE(instr_id.ref_curr_id , DOMAIN( ).calc_from_d, DOMAIN( ).currency_id, 0, 0, 0, , ,).exch_rate )") 
		
		/* investment_profile_i */ 
		investment_profile_id : AAABusinessTypes:Id 
			@sql:SQLName (value=investment_profile_id) 
			@aaa:TripleA (FormatEltName=investment_profile_i, Rank=8, ScriptDef=ext_strategy_link_id.ref_strategy_id) 
			@aaa:scpt (value=ext_strategy_link_id.ref_strategy_id) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* MARGIN */ 
		MARGIN : AAABusinessTypes:Number 
			@sql:SQLName (value=MARGIN) 
			@aaa:TripleA (FormatEltName=MARGIN, Rank=85, ScriptDef=obj_weight_cont_marg_n) 
			@aaa:scpt (value=obj_weight_cont_marg_n) 
		
		/* MKT_SEGMENT */ 
		MKT_SEGMENT : AAABusinessTypes:UniString1000 
			@i18n:Label (de=Marktsegment, en="Market Segment", fr="Segment du marche") 
			@sql:SQLName (value=MKT_SEGMENT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MKT_SEGMENT, Rank=43, ScriptDef="IF(market_segment_id <> NULL, IF(market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, {Denom in Domain Language or Default if Exist} market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {No Denom => Name} market_segment_id.name ), market_segment_id )") 
			@aaa:scpt (value="IF(market_segment_id <> NULL, IF(market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, {Denom in Domain Language or Default if Exist} market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {No Denom => Name} market_segment_id.name ), market_segment_id )") 
		
		/* MKT_SEGMENT */ 
		MKT_SEGMENT_de : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_SEGMENT_de) 
			@aaa:TripleA (FormatEltName=MKT_SEGMENT, Rank=43, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_SEGMENT */ 
		MKT_SEGMENT_en : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_SEGMENT_en) 
			@aaa:TripleA (FormatEltName=MKT_SEGMENT, Rank=43, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_SEGMENT */ 
		MKT_SEGMENT_fr : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_SEGMENT_fr) 
			@aaa:TripleA (FormatEltName=MKT_SEGMENT, Rank=43, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_VAL */ 
		MKT_VAL : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktwert, en="Market Value", fr="Valeur d\'inventaire") 
			@sql:SQLName (value=MKT_VAL) 
			@aaa:TripleA (FormatEltName=MKT_VAL, Rank=44, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( (level_n = 1 AND strat_level_n = 1) OR @PORTFOLIO_FILTER = 1, IF( portfolio_id.mkt_val_m <> NULL, portfolio_id.mkt_val_m, 0), IF( current_market_value_m <> NULL, current_market_value_m, 0) ) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( (level_n = 1 AND strat_level_n = 1) OR @PORTFOLIO_FILTER = 1, IF( portfolio_id.mkt_val_m <> NULL, portfolio_id.mkt_val_m, 0), IF( current_market_value_m <> NULL, current_market_value_m, 0) ) )") 
		
		/* NO_LINK_FILTER */ 
		NO_LINK_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=NO_LINK_FILTER) 
			@aaa:TripleA (FormatEltName=NO_LINK_FILTER, Rank=12, ScriptDef="{This format element is used as a filter to extract positions when no strategy links exist} {-----------------------------------------------------------} IF( strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used as a filter to extract positions when no strategy links exist} {-----------------------------------------------------------} IF( strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, 1, 0 )") 
		
		/* OBJ_ACTUAL_WEIGHT */ 
		OBJ_ACTUAL_WEIGHT : AAABusinessTypes:Number 
			@i18n:Label (de="Aktueller Anteil", en="Actual Weight", fr="Poids actuel") 
			@sql:SQLName (value=OBJ_ACTUAL_WEIGHT) 
			@aaa:TripleA (FormatEltName=OBJ_ACTUAL_WEIGHT, Rank=70, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( (level_n = 1 AND strat_level_n = 1) OR @PORTFOLIO_FILTER = 1, 1, act_weight_cont_n) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( (level_n = 1 AND strat_level_n = 1) OR @PORTFOLIO_FILTER = 1, 1, act_weight_cont_n) )") 
		
		/* OBJ_COMPLIANCE_INDIC */ 
		OBJ_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Gradmesser des Strategieabgleichs", en=Compliance, fr="Conformité") 
			@sql:SQLName (value=OBJ_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_COMPLIANCE_INDIC, Rank=103, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
		
		/* OBJ_GAP */ 
		OBJ_GAP : AAABusinessTypes:Number 
			@i18n:Label (de="Abweichung zum Zielwert", en="Objective Gap", fr="Ecart de l\'objectif") 
			@sql:SQLName (value=OBJ_GAP) 
			@aaa:TripleA (FormatEltName=OBJ_GAP, Rank=60, ScriptDef="{This format element displays the difference in percentage between the actual weight and the objective weight if the actual weight is not in the set [objective weight - margin; objective weight + margin]. The value is calculated in absolute value. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the gap is equal to their objective weight. And otherwise, the calculations is the following: Objective Gap = |Objective weight - Actual weight| } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( DOMAIN().dim_instr_dict_id = 900 {instrument} AND instr_id = NULL, NULL, IF( strat_check_e <> 1, IF( level_n = 1 AND strat_level_n = 1, NULL, IF( obj_weight_cont_n <> NULL AND strat_check_e > 1, ABS(obj_weight_cont_n - act_weight_cont_n), {ELSE} IF( strat_check_e = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, NULL, {ELSE} IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, NULL, {ELSE} IF( instr_id.nature_e IN (4, 5, 7) {Cash Account, Money Market, Forward}, NULL, 0 ))))) ) )") 
			@aaa:scpt (value="{This format element displays the difference in percentage between the actual weight and the objective weight if the actual weight is not in the set [objective weight - margin; objective weight + margin]. The value is calculated in absolute value. For cash accounts the value will always be NULL as no objectives can be defined on those instruments. For other instruments, whose objective weight is not defined, the gap is equal to their objective weight. And otherwise, the calculations is the following: Objective Gap = |Objective weight - Actual weight| } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( DOMAIN().dim_instr_dict_id = 900 {instrument} AND instr_id = NULL, NULL, IF( strat_check_e <> 1, IF( level_n = 1 AND strat_level_n = 1, NULL, IF( obj_weight_cont_n <> NULL AND strat_check_e > 1, ABS(obj_weight_cont_n - act_weight_cont_n), {ELSE} IF( strat_check_e = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, NULL, {ELSE} IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, NULL, {ELSE} IF( instr_id.nature_e IN (4, 5, 7) {Cash Account, Money Market, Forward}, NULL, 0 ))))) ) )") 
		
		/* OBJ_SEVERITY_INDICAT */ 
		OBJ_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad-Anzeiger, en="Severity Indicator", fr="Indicateur de sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_INDICAT, Rank=101, ScriptDef="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
		
		/* OBJ_SEVERITY_VALUE */ 
		OBJ_SEVERITY_VALUE : AAABusinessTypes:Enum 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_VALUE) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_VALUE, Rank=90, ScriptDef="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
			@aaa:scpt (value="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
		
		/* OBJECTIVE_WEIGHT */ 
		OBJECTIVE_WEIGHT : AAABusinessTypes:Number 
			@i18n:Label (de="Optimaler Zielwert", en="Objective\'s Optimal Weight", fr="Poids optimal de l\'objectif") 
			@sql:SQLName (value=OBJECTIVE_WEIGHT) 
			@aaa:TripleA (FormatEltName=OBJECTIVE_WEIGHT, Rank=80, ScriptDef="IF( level_n = 1 AND strat_level_n = 1, 100,obj_weight_cont_n)") 
			@aaa:scpt (value="IF( level_n = 1 AND strat_level_n = 1, 100,obj_weight_cont_n)") 
		
		/* ORDER_QTY */ 
		ORDER_QTY : AAABusinessTypes:Number 
			@i18n:Label (de=Auftragsmenge, en="Order Quantity", fr="Quantité de l\'ordre") 
			@sql:SQLName (value=ORDER_QTY) 
			@aaa:TripleA (FormatEltName=ORDER_QTY, Rank=50, ScriptDef="IF( strat_check_e <> 1, IF( order_qty_n <> NULL, order_qty_n, {IF( order_qty_n = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL AND ( (1*disp_parent_ext_strat_elem_id.obj_weight_cont_n - 1*disp_parent_ext_strat_elem_id.obj_weight_cont_marg_n) > 1*disp_parent_ext_strat_elem_id.act_weight_cont_n), NULL, IF( order_qty_n = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL AND ( (1*disp_parent_ext_strat_elem_id.obj_weight_cont_n + 1*disp_parent_ext_strat_elem_id.obj_weight_cont_marg_n) < 1*disp_parent_ext_strat_elem_id.act_weight_cont_n), ABS( disp_parent_ext_strat_elem_id.order_qty_n * (act_qty_n / disp_parent_ext_strat_elem_id.act_qty_n) ), IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, ABS(act_qty_n),} {ELSE} NULL ) {) ) )} )") 
			@aaa:scpt (value="IF( strat_check_e <> 1, IF( order_qty_n <> NULL, order_qty_n, {IF( order_qty_n = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL AND ( (1*disp_parent_ext_strat_elem_id.obj_weight_cont_n - 1*disp_parent_ext_strat_elem_id.obj_weight_cont_marg_n) > 1*disp_parent_ext_strat_elem_id.act_weight_cont_n), NULL, IF( order_qty_n = NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL AND ( (1*disp_parent_ext_strat_elem_id.obj_weight_cont_n + 1*disp_parent_ext_strat_elem_id.obj_weight_cont_marg_n) < 1*disp_parent_ext_strat_elem_id.act_weight_cont_n), ABS( disp_parent_ext_strat_elem_id.order_qty_n * (act_qty_n / disp_parent_ext_strat_elem_id.act_qty_n) ), IF( strat_check_e = NULL AND instr_id.nature_e <> 4 {Cash Account} AND instr_id.nature_e <> 5 {Money Market} AND instr_id.nature_e <> 7 {Forward}, ABS(act_qty_n),} {ELSE} NULL ) {) ) )} )") 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Portfolionummer, en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=40, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* PORTFOLIO_FILTER */ 
		PORTFOLIO_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=PORTFOLIO_FILTER) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_FILTER, Rank=14, ScriptDef="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level} AND TOT_SUM( 1, strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, portfolio_id ) > 0 {No Objectives}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level} AND TOT_SUM( 1, strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, portfolio_id ) > 0 {No Objectives}, 1, 0 )") 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=41, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* QUANTITY */ 
		QUANTITY : AAABusinessTypes:Number 
			@i18n:Label (de="Stück", en=Quantity, fr="Quantité") 
			@sql:SQLName (value=QUANTITY) 
			@aaa:TripleA (FormatEltName=QUANTITY, Rank=501, ScriptDef="{This format element displays the quantity of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {ELSE IF element is an instrument} act_qty_n )") 
			@aaa:scpt (value="{This format element displays the quantity of the instrument helds in the Portfolio at the selected reference date.} {--------------------------------------------------------} IF( instr_id = NULL {element is not an instrument}, NULL, {ELSE IF element is an instrument} act_qty_n )") 
		
		/* REF_CURRENCY */ 
		REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Ref. Whrg.", en="Ref. Ccy.", fr="Dvs réf.") 
			@sql:SQLName (value=REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=REF_CURRENCY, Rank=45, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef=0) 
			@aaa:scpt (value=0) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=15, ScriptDef="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded. Portfolios and positions related Portfolios having no strategy links are included too.} {-----------------------------------------------------------} @STRATEGY_FILTER OR @PORTFOLIO_FILTER OR @HEAD_FILTER OR @NO_LINK_FILTER") 
			@aaa:scpt (value="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded. Portfolios and positions related Portfolios having no strategy links are included too.} {-----------------------------------------------------------} @STRATEGY_FILTER OR @PORTFOLIO_FILTER OR @HEAD_FILTER OR @NO_LINK_FILTER") 
		
		/* STRATEGY_FILTER */ 
		STRATEGY_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=STRATEGY_FILTER) 
			@aaa:TripleA (FormatEltName=STRATEGY_FILTER, Rank=13, ScriptDef="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded.} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND (ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}) AND IF( abcissa_list_id = NULL AND ordinate_list_id = NULL AND instr_id = NULL, 0, 1)") 
			@aaa:scpt (value="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded.} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND (ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}) AND IF( abcissa_list_id = NULL AND ordinate_list_id = NULL AND instr_id = NULL, 0, 1)") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef="IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name )") 
			@aaa:scpt (value="IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* strategy_id */ 
		strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=strategy_id) 
			@aaa:TripleA (FormatEltName=strategy_id, Rank=7, ScriptDef="{IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
			@aaa:scpt (value="{IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
		
		/* SUB_CHECK_STRAT */ 
		SUB_CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=SUB_CHECK_STRAT, Rank=200, ScriptDef="STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, strat_check_e,,1) ).maximum") 
			@aaa:scpt (value="STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, strat_check_e,,1) ).maximum") 
		
		/* SUB_COMPLIANCE_INDIC */ 
		SUB_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Compliance Gradmesser (Detail)", en="Sub-levels Compliance", fr="Conformité des sous-niveaux") 
			@sql:SQLName (value=SUB_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_COMPLIANCE_INDIC, Rank=203, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of sub-levels based on the format element SUB_SEVERITY_INDICATOR.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = NULL, 0 {No Sub-Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Sub-Levels Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Sub-Levels Compliant}, 6 {Sub-Level(s) Not Compliant} ))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of sub-levels based on the format element SUB_SEVERITY_INDICATOR.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = NULL, 0 {No Sub-Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Sub-Levels Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Sub-Levels Compliant}, 6 {Sub-Level(s) Not Compliant} ))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
		
		/* SUB_SEVERITY_INDICAT */ 
		SUB_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Schweregrad-Anzeiger (Detail)", en="Sub-levels Severity Indicator", fr="Indicateur de sévérité des sous-niveaux") 
			@sql:SQLName (value=SUB_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_SEVERITY_INDICAT, Rank=202, ScriptDef="{This format element returns the highest severity value of direct sub-levels of a market segment, when this market segment has one or more of its direct sub-levels not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all direct sub-levels which are not compliant The rules are the following: 1) The system checks whether the direct sub-levels are compliant or not, using the format element SUB_CHECK_STRAT. If they are compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the direct sub-levels objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the direct sub-levels objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all direct sub-levels (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the direct sub-levels are compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the direct sub-levels objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the direct sub-levels objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE,strat_check_e > 1,1) ).maximum ) ) )") 
			@aaa:scpt (value="{This format element returns the highest severity value of direct sub-levels of a market segment, when this market segment has one or more of its direct sub-levels not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all direct sub-levels which are not compliant The rules are the following: 1) The system checks whether the direct sub-levels are compliant or not, using the format element SUB_CHECK_STRAT. If they are compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the direct sub-levels objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the direct sub-levels objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all direct sub-levels (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the direct sub-levels are compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the direct sub-levels objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the direct sub-levels objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE,strat_check_e > 1,1) ).maximum ) ) )") 
	} 
	/* PCK_RMT_COMPCHK_SUM */ 
	PCK_RMT_COMPCHK_SUM 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Check Strategy") 
		@sql:SQLName (value=PCK_RMT_COMPCHK_SUM) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Check Strategy", FinFuncProcName=check_strat, FormatName=PCK_RMT_COMPCHK_SUM) 
	{ 
		/* ADMIN_MGR_NAME */ 
		ADMIN_MGR_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de="Vermögensverwalter", en=Manager, fr=Gestionnaire) 
			@sql:SQLName (value=ADMIN_MGR_NAME) 
			@aaa:TripleA (FormatEltName=ADMIN_MGR_NAME, Rank=76, ScriptDef="IF(child_ptf_id<>NULL, child_ptf_id.admin_mgr_id.name, {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).admin_mgr_id.name, {else} portfolio_id.admin_mgr_id.name))") 
			@aaa:scpt (value="IF(child_ptf_id<>NULL, child_ptf_id.admin_mgr_id.name, {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).admin_mgr_id.name, {else} portfolio_id.admin_mgr_id.name))") 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* CLIENT_NAME */ 
		CLIENT_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de="Name des Kunden", en="Client Name", fr="Nom du client") 
			@sql:SQLName (value=CLIENT_NAME) 
			@aaa:TripleA (FormatEltName=CLIENT_NAME, Rank=70, ScriptDef="IF (DOMAIN().dim_port_dict_id = 600, IF(child_ptf_id<>NULL, child_ptf_id.third_id.name, portfolio_id.third_id.name), {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).third_id.name, {else} IF(child_ptf_id<>NULL, child_ptf_id.third_id.name, portfolio_id.third_id.name)))") 
			@aaa:scpt (value="IF (DOMAIN().dim_port_dict_id = 600, IF(child_ptf_id<>NULL, child_ptf_id.third_id.name, portfolio_id.third_id.name), {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).third_id.name, {else} IF(child_ptf_id<>NULL, child_ptf_id.third_id.name, portfolio_id.third_id.name)))") 
		
		/* COM_MGR_NAME */ 
		COM_MGR_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Kundenberater, en=Advisor, fr=Conseiller) 
			@sql:SQLName (value=COM_MGR_NAME) 
			@aaa:TripleA (FormatEltName=COM_MGR_NAME, Rank=75, ScriptDef="IF(child_ptf_id<>NULL, child_ptf_id.comm_mgr_id.name, {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).comm_mgr_id.name, {else} portfolio_id.comm_mgr_id.name))") 
			@aaa:scpt (value="IF(child_ptf_id<>NULL, child_ptf_id.comm_mgr_id.name, {else} IF(DOMAIN().port_cons_rule_e=1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).comm_mgr_id.name, {else} portfolio_id.comm_mgr_id.name))") 
		
		/* CONSTRAINTS_FILTER */ 
		CONSTRAINTS_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTRAINTS_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_FILTER, Rank=12, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
		
		/* data_secu_prof_id */ 
		data_secu_prof_id : AAABusinessTypes:Id 
			@sql:SQLName (value=data_secu_prof_id) 
			@aaa:TripleA (FormatEltName=data_secu_prof_id, Rank=1, ScriptDef=portfolio_id.data_secu_prof_id) 
			@aaa:scpt (value=portfolio_id.data_secu_prof_id) 
		
		/* domain_client_id */ 
		domain_client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=domain_client_id) 
			@aaa:TripleA (FormatEltName=domain_client_id, Rank=7, ScriptDef="IF(DOMAIN().dim_port_dict_id=600 AND DOMAIN().third_compo_e<>1 ,DOMAIN().port_object_id,NULL)") 
			@aaa:scpt (value="IF(DOMAIN().dim_port_dict_id=600 AND DOMAIN().third_compo_e<>1 ,DOMAIN().port_object_id,NULL)") 
		
		/* id */ 
		id : AAABusinessTypes:Id 
			@sql:SQLName (value=id) 
			@aaa:TripleA (FormatEltName=id, Rank=5, ScriptDef=id) 
			@aaa:scpt (value=id) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Investment-Profil, en="Investment Profile", fr="Profil d\'investissement") 
			@sql:SQLName (value=IP_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=IP_FULL_NAME, Rank=24, ScriptDef="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Investment-Profil, en="Investment Profile", fr="Profil d\'investissement") 
			@sql:SQLName (value=IP_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=24, ScriptDef="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Investment-Profil, en="Investment Profile", fr="Profil d\'investissement") 
			@sql:SQLName (value=IP_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=24, ScriptDef="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Investment-Profil, en="Investment Profile", fr="Profil d\'investissement") 
			@sql:SQLName (value=IP_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=24, ScriptDef="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the translated name (if available, otherwise it is just its name) of the Investment Profile containing the head strategy.} {------------------------------------------------} IF( @STRATEGY_FILTER = 1, IF( ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link.ref_strategy_id.name ), {ELSE} NULL )") 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Portfolio Code", en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=36, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* PORTFOLIO_FILTER */ 
		PORTFOLIO_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=PORTFOLIO_FILTER) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_FILTER, Rank=11, ScriptDef="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level}, 1, 0)") 
			@aaa:scpt (value="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level}, 1, 0)") 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_INVEST_SER */ 
		PORTFOLIO_INVEST_SERVICE : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Serviceart, en="Service Type", fr="Type de service") 
			@sql:SQLName (value=PORTFOLIO_INVEST_SERVICE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=PORTFOLIO_INVEST_SER, Rank=71, ScriptDef="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
			@aaa:scpt (value="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
		
		/* PORTFOLIO_INVEST_SER */ 
		PORTFOLIO_INVEST_SERVICE_de : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Serviceart, en="Service Type", fr="Type de service") 
			@sql:SQLName (value=PORTFOLIO_INVEST_SERVICE_de) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_INVEST_SER, Rank=71, ScriptDef="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
			@aaa:scpt (value="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
		
		/* PORTFOLIO_INVEST_SER */ 
		PORTFOLIO_INVEST_SERVICE_en : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Serviceart, en="Service Type", fr="Type de service") 
			@sql:SQLName (value=PORTFOLIO_INVEST_SERVICE_en) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_INVEST_SER, Rank=71, ScriptDef="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
			@aaa:scpt (value="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
		
		/* PORTFOLIO_INVEST_SER */ 
		PORTFOLIO_INVEST_SERVICE_fr : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Serviceart, en="Service Type", fr="Type de service") 
			@sql:SQLName (value=PORTFOLIO_INVEST_SERVICE_fr) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_INVEST_SER, Rank=71, ScriptDef="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
			@aaa:scpt (value="IF( child_ptf_id <> NULL, child_ptf_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} IF( DOMAIN().port_cons_rule_e = 1 AND DOMAIN().dim_port_dict_id = 800, GET_OBJECT(\"portfolio\", DOMAIN().port_object_id).service_type_e.LABEL[TSL_CURRENT_LANGUAGE()], {else} portfolio_id.service_type_e.LABEL[TSL_CURRENT_LANGUAGE()] ) )") 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=37, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* PTF_MKT_VALUE */ 
		PTF_MKT_VALUE : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktwert, en="Market Value", fr="Valeur d\'inventaire") 
			@sql:SQLName (value=PTF_MKT_VALUE) 
			@aaa:TripleA (FormatEltName=PTF_MKT_VALUE, Rank=50, ScriptDef=portfolio_id.mkt_val_m) 
			@aaa:scpt (value=portfolio_id.mkt_val_m) 
		
		/* REF_CURRENCY */ 
		REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=REF_CURRENCY, Rank=51, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=13, ScriptDef="{This format element is used to filter only highest strategy level. The strategies may be included in an Investment Profile composition or not.} {-----------------------------------------------------------} IF( TOT_SUM(1, @STRATEGY_FILTER = 1, portfolio_id) > 0, @STRATEGY_FILTER, @PORTFOLIO_FILTER )") 
			@aaa:scpt (value="{This format element is used to filter only highest strategy level. The strategies may be included in an Investment Profile composition or not.} {-----------------------------------------------------------} IF( TOT_SUM(1, @STRATEGY_FILTER = 1, portfolio_id) > 0, @STRATEGY_FILTER, @PORTFOLIO_FILTER )") 
		
		/* SEVERITY */ 
		SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SEVERITY) 
			@aaa:TripleA (FormatEltName=SEVERITY, Rank=201, ScriptDef="{This format element displays the value for the severity (also known as criticity) of the objective defined on market segments and instruments The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {---------------------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
			@aaa:scpt (value="{This format element displays the value for the severity (also known as criticity) of the objective defined on market segments and instruments The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {---------------------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
		
		/* STRAT_NAT_LABEL */ 
		STRAT_NAT_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Strategie-Art, en="Strategy Nature", fr="Nature de stratégie") 
			@sql:SQLName (value=STRAT_NAT_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRAT_NAT_LABEL, Rank=26, ScriptDef="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
		
		/* STRAT_NAT_LABEL */ 
		STRAT_NAT_LABEL_de : AAABusinessTypes:UniName 
			@i18n:Label (de=Strategie-Art, en="Strategy Nature", fr="Nature de stratégie") 
			@sql:SQLName (value=STRAT_NAT_LABEL_de) 
			@aaa:TripleA (FormatEltName=STRAT_NAT_LABEL, Rank=26, ScriptDef="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
		
		/* STRAT_NAT_LABEL */ 
		STRAT_NAT_LABEL_en : AAABusinessTypes:UniName 
			@i18n:Label (de=Strategie-Art, en="Strategy Nature", fr="Nature de stratégie") 
			@sql:SQLName (value=STRAT_NAT_LABEL_en) 
			@aaa:TripleA (FormatEltName=STRAT_NAT_LABEL, Rank=26, ScriptDef="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
		
		/* STRAT_NAT_LABEL */ 
		STRAT_NAT_LABEL_fr : AAABusinessTypes:UniName 
			@i18n:Label (de=Strategie-Art, en="Strategy Nature", fr="Nature de stratégie") 
			@sql:SQLName (value=STRAT_NAT_LABEL_fr) 
			@aaa:TripleA (FormatEltName=STRAT_NAT_LABEL, Rank=26, ScriptDef="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
			@aaa:scpt (value="{This format element displays the nature of the head strategy} {-----------------------------------------------------} IF( @STRATEGY_FILTER = 1, strat_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], {ELSE} NULL )") 
		
		/* STRATEGY_FILTER */ 
		STRATEGY_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=STRATEGY_FILTER) 
			@aaa:TripleA (FormatEltName=STRATEGY_FILTER, Rank=10, ScriptDef="{This format element is used to filter only head strategy level (Asset Allocation and Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategies are Asset Allocation or Model Portfolio} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {Strategies are not included in a Benchmark composition} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used to filter only head strategy level (Asset Allocation and Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategies are Asset Allocation or Model Portfolio} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {Strategies are not included in a Benchmark composition} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}, 1, 0 )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
		
		/* strategy_id */ 
		strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=strategy_id) 
			@aaa:TripleA (FormatEltName=strategy_id, Rank=6, ScriptDef="IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )") 
			@aaa:scpt (value="IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )") 
		
		/* STRATEGY_SORT */ 
		STRATEGY_SORT : AAABusinessTypes:Int 
			@i18n:Label (de="Sortierung - Strategie", en="Sorting - Strategy", fr="Triage - Stratégie") 
			@sql:SQLName (value=STRATEGY_SORT) 
			@aaa:TripleA (FormatEltName=STRATEGY_SORT, Rank=45, ScriptDef="{This format element is used to define an order in the head strategy (format element STRATEGY_FULL_NAME) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: STRATEGY_SORT := Identifier related to portfolio + Number given by the attribute \"calculated_e\" (a value 1 means rebalancing head strategy, otherwise the value is 0) } {--------------------------------------------} @portfolio_id + calculated_e", SortingRank=1) 
			@aaa:scpt (value="{This format element is used to define an order in the head strategy (format element STRATEGY_FULL_NAME) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: STRATEGY_SORT := Identifier related to portfolio + Number given by the attribute \"calculated_e\" (a value 1 means rebalancing head strategy, otherwise the value is 0) } {--------------------------------------------} @portfolio_id + calculated_e") 
		
		/* STRATEGY_USAGE */ 
		STRATEGY_USAGE : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Verwendung der Strategie", en="Strategy Usage", fr="Utilisation de la stratégie") 
			@sql:SQLName (value=STRATEGY_USAGE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_USAGE, Rank=61, ScriptDef="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
			@aaa:scpt (value="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
		
		/* STRATEGY_USAGE */ 
		STRATEGY_USAGE_de : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Verwendung der Strategie", en="Strategy Usage", fr="Utilisation de la stratégie") 
			@sql:SQLName (value=STRATEGY_USAGE_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_USAGE, Rank=61, ScriptDef="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
			@aaa:scpt (value="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
		
		/* STRATEGY_USAGE */ 
		STRATEGY_USAGE_en : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Verwendung der Strategie", en="Strategy Usage", fr="Utilisation de la stratégie") 
			@sql:SQLName (value=STRATEGY_USAGE_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_USAGE, Rank=61, ScriptDef="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
			@aaa:scpt (value="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
		
		/* STRATEGY_USAGE */ 
		STRATEGY_USAGE_fr : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Verwendung der Strategie", en="Strategy Usage", fr="Utilisation de la stratégie") 
			@sql:SQLName (value=STRATEGY_USAGE_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_USAGE, Rank=61, ScriptDef="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
			@aaa:scpt (value="{This format element is used to display indication regarding the usage of Allocation Strategy in a composition of an Investment Profile. If its priority in the composition is equal to \"1\", then it will be marked as \"Rebalancing strategy\". If its attribute \"Risk View\" is tagged, then it will be marked as \"Exposure strategy\". A combination of both possibilities is possible, as the fact that the Allocation Strategy may have no specific usage. } {-----------------------------------------------------------} IF( strat_level_n = 1 {Head strategy}, IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 0 {No exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e <> 1 {No rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), IF( calculated_e = 1 {Rebalancing strategy} AND strategy_id.risk_f = 1 {Exposure}, PRINTF(\"%s & %s\", DISP_MSG(\"User Message\",\"PCK_DS_STRAT_REBALAN\", TSL_CURRENT_LANGUAGE(), NULL), DISP_MSG(\"User Message\",\"PCK_DS_STRAT_EXPOSED\", TSL_CURRENT_LANGUAGE(), NULL)), NULL ))) )") 
		
		/* SUB_CONSTR_CHECK */ 
		SUB_CONSTR_CHECK : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CONSTR_CHECK) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_CHECK, Rank=300, ScriptDef="{This format element returns the first value, from highest to lowest, of the Constraints verification status for each portfolio Then, this value is used in the format element SUBCONSTR_COMPLIANCE to display whether a Constraint is breached or not.} {------------------------------------------------------------} TOT_FIRST( constraint_check_e, constraint_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"constraint_check_e\"} AND @CONSTRAINTS_FILTER, constraint_check_e, portfolio_id {to get the value per portfolio}, DESC )") 
			@aaa:scpt (value="{This format element returns the first value, from highest to lowest, of the Constraints verification status for each portfolio Then, this value is used in the format element SUBCONSTR_COMPLIANCE to display whether a Constraint is breached or not.} {------------------------------------------------------------} TOT_FIRST( constraint_check_e, constraint_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"constraint_check_e\"} AND @CONSTRAINTS_FILTER, constraint_check_e, portfolio_id {to get the value per portfolio}, DESC )") 
		
		/* SUB_CONSTR_COMPLIANC */ 
		SUB_CONSTR_COMPLIANCE : AAABusinessTypes:Int 
			@i18n:Label (de="Einschränkungs-Konformität", en="Constraints Compliance", fr="Conformité des contraintes") 
			@sql:SQLName (value=SUB_CONSTR_COMPLIANCE) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_COMPLIANC, Rank=306, ScriptDef="{This format element is used to display compliance indication regarding the Constraints defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CONSTR_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CONSTR_CHECK = NULL, 0 {No Constraints Defined}, {ELSE} IF( @SUB_CONSTR_CHECK = 0, 1 {Constraints Not Evaluated}, {ELSE} IF( @SUB_CONSTR_CHECK = 1, 2 {Constraints Verified}, 6 {Some Constraints Breached} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Constraints Defined\" - \"1\" is for \"Constraints Not Evaluated\" - \"2\" is for \"Constraints Verified\" - \"3\" is for \"Some Constraints Breached - Low Severity\" - \"4\" is for \"Some Constraints Breached - Medium Severity\" - \"5\" is for \"Some Constraints Breached - High Severity\"} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 5, 5, NULL )))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the Constraints defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CONSTR_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CONSTR_CHECK = NULL, 0 {No Constraints Defined}, {ELSE} IF( @SUB_CONSTR_CHECK = 0, 1 {Constraints Not Evaluated}, {ELSE} IF( @SUB_CONSTR_CHECK = 1, 2 {Constraints Verified}, 6 {Some Constraints Breached} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Constraints Defined\" - \"1\" is for \"Constraints Not Evaluated\" - \"2\" is for \"Constraints Verified\" - \"3\" is for \"Some Constraints Breached - Low Severity\" - \"4\" is for \"Some Constraints Breached - Medium Severity\" - \"5\" is for \"Some Constraints Breached - High Severity\"} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 5, 5, NULL )))))) )") 
		
		/* SUB_CONSTR_SEVERITY */ 
		SUB_CONSTR_SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CONSTR_SEVERITY) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_SEVERITY, Rank=304, ScriptDef="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant Constraints} {---------------------------------------------------------------------} TOT_MAX( criticalness_e, constraint_check_e IN (2, 3, 4, 5, 6, 7, 8) AND criticalness_e <> NULL AND @CONSTRAINTS_FILTER, portfolio_id )") 
			@aaa:scpt (value="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant Constraints} {---------------------------------------------------------------------} TOT_MAX( criticalness_e, constraint_check_e IN (2, 3, 4, 5, 6, 7, 8) AND criticalness_e <> NULL AND @CONSTRAINTS_FILTER, portfolio_id )") 
		
		/* SUB_CSTR_SEVERITY_IN */ 
		SUB_CONSTR_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@sql:SQLName (value=SUB_CONSTR_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_CSTR_SEVERITY_IN, Rank=305, ScriptDef="{This script indicates, using \"traffic lights\", if all the Constraints on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint. As this severity must be displayed at Portfolio level, this is done in the format element SUB_CONSTR_SEVERITY . \"Traffic lights\" are: - \"0\" when no Constraints are defined - \"1\" when no Constraints are evaluated - \"2\" when all Constraints are compliant - \"3\" when some Constraints are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some Constraints are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some Constraints are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether Constraints are defined or not. If no Consttraints are defined then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether Constraints are evaluated or not. If no Consttraints are evluated then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the Constraints are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no Constraints are defined, the returned value is \"0\"} IF( @SUB_CONSTR_CHECK = NULL, 0, {If no Constraints are evaluated, the returned value is \"1\"} IF( @SUB_CONSTR_CHECK = 0, 1, {If all Constraints are compliant, the returned value is \"2\"} IF( @SUB_CONSTR_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if all the Constraints on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint. As this severity must be displayed at Portfolio level, this is done in the format element SUB_CONSTR_SEVERITY . \"Traffic lights\" are: - \"0\" when no Constraints are defined - \"1\" when no Constraints are evaluated - \"2\" when all Constraints are compliant - \"3\" when some Constraints are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some Constraints are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some Constraints are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether Constraints are defined or not. If no Consttraints are defined then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether Constraints are evaluated or not. If no Consttraints are evluated then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the Constraints are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no Constraints are defined, the returned value is \"0\"} IF( @SUB_CONSTR_CHECK = NULL, 0, {If no Constraints are evaluated, the returned value is \"1\"} IF( @SUB_CONSTR_CHECK = 0, 1, {If all Constraints are compliant, the returned value is \"2\"} IF( @SUB_CONSTR_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
		
		/* SUB_OBJ_CHECK */ 
		SUB_OBJ_CHECK : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_OBJ_CHECK) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_CHECK, Rank=200, ScriptDef="{This format element is used to indicate whether a sub-level (starting from Head strategy level) is compliant or not regarding its objectives and actual weights} {--------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, substrat_check_e, NULL )") 
			@aaa:scpt (value="{This format element is used to indicate whether a sub-level (starting from Head strategy level) is compliant or not regarding its objectives and actual weights} {--------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, substrat_check_e, NULL )") 
		
		/* SUB_OBJ_COMPLIANCE */ 
		SUB_OBJ_COMPLIANCE : AAABusinessTypes:Int 
			@i18n:Label (de="Ziel-Konformität", en="Objectives Compliance", fr="Conformité des objectifs") 
			@sql:SQLName (value=SUB_OBJ_COMPLIANCE) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_COMPLIANCE, Rank=204, ScriptDef="{This format element is used to display compliance indication regarding the objectives defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_OBJ_SEVERITY_INDICATOR. Otherwise, its the format element SUB_OBJ_CHECK which is used.} {-----------------------------------------------------------------------} IF( @PORTFOLIO_FILTER = 1, 99 {No strategy links}, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_OBJ_CHECK = NULL, 0 {No Objectives Defined}, {ELSE} IF( @SUB_OBJ_CHECK = 0, 1 {Objectives Not Evaluated}, {ELSE} IF( @SUB_OBJ_CHECK = 1, 2 {Objectives Compliant}, 6 {Some Objectives Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Objectives Defined\" - \"1\" is for \"Objectives Not Evaluated\" - \"2\" is for \"Objectives Compliant\" - \"3\" is for \"Some Objectives Not Compliant - Low Severity\" - \"4\" is for \"Some Objectives Not Compliant - Medium Severity\" - \"5\" is for \"Some Objectives Not Compliant - High Severity\"} IF( @SUB_OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objectives defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_OBJ_SEVERITY_INDICATOR. Otherwise, its the format element SUB_OBJ_CHECK which is used.} {-----------------------------------------------------------------------} IF( @PORTFOLIO_FILTER = 1, 99 {No strategy links}, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_OBJ_CHECK = NULL, 0 {No Objectives Defined}, {ELSE} IF( @SUB_OBJ_CHECK = 0, 1 {Objectives Not Evaluated}, {ELSE} IF( @SUB_OBJ_CHECK = 1, 2 {Objectives Compliant}, 6 {Some Objectives Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Objectives Defined\" - \"1\" is for \"Objectives Not Evaluated\" - \"2\" is for \"Objectives Compliant\" - \"3\" is for \"Some Objectives Not Compliant - Low Severity\" - \"4\" is for \"Some Objectives Not Compliant - Medium Severity\" - \"5\" is for \"Some Objectives Not Compliant - High Severity\"} IF( @SUB_OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))) )") 
		
		/* SUB_OBJ_SEVERITY */ 
		SUB_OBJ_SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_OBJ_SEVERITY) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_SEVERITY, Rank=202, ScriptDef="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant objectives defined on market segments and instruments} {---------------------------------------------------------------------} TOT_MAX(@SEVERITY, substrat_check_e IN (2, 3, 4, 5, 6, 7, 8) AND @SEVERITY <> NULL, @strategy_id + @portfolio_id)") 
			@aaa:scpt (value="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant objectives defined on market segments and instruments} {---------------------------------------------------------------------} TOT_MAX(@SEVERITY, substrat_check_e IN (2, 3, 4, 5, 6, 7, 8) AND @SEVERITY <> NULL, @strategy_id + @portfolio_id)") 
		
		/* SUB_OBJ_SEVERITY_IND */ 
		SUB_OBJ_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@sql:SQLName (value=SUB_OBJ_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_SEVERITY_IND, Rank=203, ScriptDef="{This script indicates, using \"traffic lights\", if all the objectives defined on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the objectives. As this severity must be displayed at Portfolio level, this is done in the format element @SUB_OBJ_SEVERITY . \"Traffic lights\" are: - \"0\" when no objectives are defined - \"1\" when no objectives are evaluated - \"2\" when all objectives are compliant - \"3\" when some objectives are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some objectives are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some objectives are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether objectives are defined or not. If no objectives are defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether objectives are defined or not. If no objectives are evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the objectives are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, {If no objectives are defined, the returned value is \"0\"} IF( @SUB_OBJ_CHECK = NULL, 0, {If no objectives are evaluated, the returned value is \"1\"} IF( @SUB_OBJ_CHECK = 0, 1, {If all objectives are compliant, the returned value is \"2\"} IF( @SUB_OBJ_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))) )") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if all the objectives defined on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the objectives. As this severity must be displayed at Portfolio level, this is done in the format element @SUB_OBJ_SEVERITY . \"Traffic lights\" are: - \"0\" when no objectives are defined - \"1\" when no objectives are evaluated - \"2\" when all objectives are compliant - \"3\" when some objectives are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some objectives are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some objectives are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether objectives are defined or not. If no objectives are defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether objectives are defined or not. If no objectives are evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the objectives are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, {If no objectives are defined, the returned value is \"0\"} IF( @SUB_OBJ_CHECK = NULL, 0, {If no objectives are evaluated, the returned value is \"1\"} IF( @SUB_OBJ_CHECK = 0, 1, {If all objectives are compliant, the returned value is \"2\"} IF( @SUB_OBJ_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))) )") 
		
		/* THIRD_COMP_RULE */ 
		THIRD_COMP_RULE : AAAEnumerations:DomainAAAThirdCompoE 
			@i18n:Label (de=Portfolio-Kunden-Zuordnung, en="Portfolio Link Nature", fr="Nature du lien avec le portefeuille") 
			@sql:SQLName (value=THIRD_COMP_RULE) 
			@aaa:TripleA (AttrSQLName=third_compo_e, FormatEltName=THIRD_COMP_RULE, Rank=405, ScriptDef="{ --SQLFORMAT case when domain_client_id = NULL then NULL when client_id = domain_client_id then 1 when THIRD_PARTY_OWNERSHIP_RULE != NULL then 2 end }") 
			@aaa:scpt (value="{ --SQLFORMAT case when domain_client_id = NULL then NULL when client_id = domain_client_id then 1 when THIRD_PARTY_OWNERSHIP_RULE != NULL then 2 end }") 
		
		/* THIRD_PARTY_OWNERSHI */ 
		THIRD_PARTY_OWNERSHIP_RULE : AAAEnumerations:PortfolioThirdCompoOwnershipRuleE 
			@i18n:Label (de="Verfügungsgewalt", en="Ownership Rule", fr="Règle de propriété") 
			@sql:SQLName (value=THIRD_PARTY_OWNERSHIP_RULE) 
			@aaa:TripleA (AttrSQLName=ownership_rule_e, FormatEltName=THIRD_PARTY_OWNERSHI, Rank=401, ScriptDef="{ --SQLFORMAT select max(ownership_rule_e) from portfolio_third_compo_vw p where p.third_id = E.domain_client_id and p.portfolio_id = E.third_party_portfolio_id }") 
			@aaa:scpt (value="{ --SQLFORMAT select max(ownership_rule_e) from portfolio_third_compo_vw p where p.third_id = E.domain_client_id and p.portfolio_id = E.third_party_portfolio_id }") 
		
		/* THIRD_PARTY_PERCT_OW */ 
		THIRD_PARTY_PERCT_OWNERSHIP : AAABusinessTypes:Number 
			@i18n:Label (de="Prozentsatz des Eigentums", en="Percentage of Ownership", fr="Pourcentage de la propriété") 
			@sql:SQLName (value=THIRD_PARTY_PERCT_OWNERSHIP) 
			@aaa:TripleA (FormatEltName=THIRD_PARTY_PERCT_OW, Rank=402, ScriptDef="{ --SQLFORMAT select max(weight_n) from portfolio_third_compo_vw p where p.third_id = E.domain_client_id and p.portfolio_id = E.third_party_portfolio_id }") 
			@aaa:scpt (value="{ --SQLFORMAT select max(weight_n) from portfolio_third_compo_vw p where p.third_id = E.domain_client_id and p.portfolio_id = E.third_party_portfolio_id }") 
		
		/* third_party_portfoli */ 
		third_party_portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=third_party_portfolio_id) 
			@aaa:TripleA (FormatEltName=third_party_portfoli, Rank=8, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
	} 
} 
