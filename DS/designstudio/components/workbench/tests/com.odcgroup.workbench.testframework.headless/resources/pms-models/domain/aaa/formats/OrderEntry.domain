# UTF-8
Domain AAAFormatsOrderEntry 
	@java:Package (value=com.odcgroup.aaa.formats) 
namespace "http://www.odcgroup.com/aaa-formats-order-entry" 
metamodelVersion 4.3.0.20110527 
Classes { 
	/* PCK_DS_CASES */ 
	PCK_DS_CASES 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Order Entry") 
		@sql:SQLName (value=PCK_DS_CASES) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=case_management, FinFuncName="Order Entry", FinFuncProcName=order_entry, FormatName=PCK_DS_CASES) 
	{ 
		/* CASE_CODE */ 
		CASE_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=CASE_CODE) 
			@aaa:TripleA (FormatEltName=CASE_CODE, Rank=280, ScriptDef="{Case code} code") 
			@aaa:scpt (value="{Case code} code") 
		
		/* CASE_ID */ 
		CASE_ID : AAABusinessTypes:Id 
			@sql:SQLName (value=CASE_ID) 
			@aaa:TripleA (FormatEltName=CASE_ID, Rank=270, ScriptDef="{Case id} id") 
			@aaa:scpt (value="{Case id} id") 
		
		/* CATEGORY_LABEL */ 
		CATEGORY_LABEL : AAABusinessTypes:UniLongName 
			@i18n:Label (de=Kategorie, en=Category, fr="Catégorie") 
			@sql:SQLName (value=CATEGORY_LABEL) 
			@aaa:TripleA (FormatEltName=CATEGORY_LABEL, Rank=220, ScriptDef="{Category Label for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, sub_nat_e.LABEL[])") 
			@aaa:scpt (value="{Category Label for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, sub_nat_e.LABEL[])") 
		
		/* CATEGORY_RANK */ 
		CATEGORY_RANK : AAABusinessTypes:Int 
			@sql:SQLName (value=CATEGORY_RANK) 
			@aaa:TripleA (FormatEltName=CATEGORY_RANK, Rank=230, ScriptDef="{Category rank for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, sub_nat_e)") 
			@aaa:scpt (value="{Category rank for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, sub_nat_e)") 
		
		/* CLARIFICATION_CODE */ 
		CLARIFICATION_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=CLARIFICATION_CODE) 
			@aaa:TripleA (FormatEltName=CLARIFICATION_CODE, Rank=300, ScriptDef="GET_BEST_OBJECT( GET_ENTITY(\"case_clarification\"), &case_id=id, TRUE, &last_modif_d, DESC).code") 
			@aaa:scpt (value="GET_BEST_OBJECT( GET_ENTITY(\"case_clarification\"), &case_id=id, TRUE, &last_modif_d, DESC).code") 
		
		/* CLARIFICATION_CREATE */ 
		CLARIFICATION_CREATE_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de="Fälle klären", en="Clarify Cases", fr="Clarifier les cas") 
			@sql:SQLName (value=CLARIFICATION_CREATE_RIGHT) 
			@aaa:TripleA (FormatEltName=CLARIFICATION_CREATE, Rank=240, ScriptDef="{Right to create a clarification for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, {Cases can be clarified} IF(status_e = 0 {not clarified} AND criticalness_e<STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), {Right to update at portolio level} GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE) ,0) ,0)") 
			@aaa:scpt (value="{Right to create a clarification for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, {Cases can be clarified} IF(status_e = 0 {not clarified} AND criticalness_e<STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), {Right to update at portolio level} GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE) ,0) ,0)") 
		
		/* CLARIFICATION_ID */ 
		CLARIFICATION_ID : AAABusinessTypes:Id 
			@sql:SQLName (value=CLARIFICATION_ID) 
			@aaa:TripleA (FormatEltName=CLARIFICATION_ID, Rank=290, ScriptDef="GET_BEST_OBJECT( GET_ENTITY(\"case_clarification\"), &case_id=id, TRUE, &last_modif_d, DESC).id") 
			@aaa:scpt (value="GET_BEST_OBJECT( GET_ENTITY(\"case_clarification\"), &case_id=id, TRUE, &last_modif_d, DESC).id") 
		
		/* CLARIFICATION_STATUS */ 
		CLARIFICATION_STATUS : AAABusinessTypes:Int 
			@i18n:Label (de="Klärungs-Status", en="Clarification Status", fr="Status de la clarification") 
			@sql:SQLName (value=CLARIFICATION_STATUS) 
			@aaa:TripleA (FormatEltName=CLARIFICATION_STATUS, Rank=210, ScriptDef="{Clarification status - only for compliance cases} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, {Cases that cannot be clarified} IF(criticalness_e>=STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 1, {Cases that need clarification} IF(status_e = 0 {not clarified} AND criticalness_e>=STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")) AND criticalness_e<STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 2, {Cases with optional clarification} IF(status_e = 0 {not clarified} AND criticalness_e<STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 3, {Cases clarified} IF(status_e = 1 {Clarified}, 4 ) ) ) ) )") 
			@aaa:scpt (value="{Clarification status - only for compliance cases} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, {Cases that cannot be clarified} IF(criticalness_e>=STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 1, {Cases that need clarification} IF(status_e = 0 {not clarified} AND criticalness_e>=STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")) AND criticalness_e<STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 2, {Cases with optional clarification} IF(status_e = 0 {not clarified} AND criticalness_e<STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 3, {Cases clarified} IF(status_e = 1 {Clarified}, 4 ) ) ) ) )") 
		
		/* CLARIFICATION_UPDATE */ 
		CLARIFICATION_UPDATE_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de=Aktualisieren, en=Modify, fr=Modifier) 
			@sql:SQLName (value=CLARIFICATION_UPDATE_RIGHT) 
			@aaa:TripleA (FormatEltName=CLARIFICATION_UPDATE, Rank=260, ScriptDef="{Right to update a clarification for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, {Case is clarified} IF(status_e = 1 {Clarified}, {Right to update at portolio level} GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE) ,0) ,0)") 
			@aaa:scpt (value="{Right to update a clarification for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, {Case is clarified} IF(status_e = 1 {Clarified}, {Right to update at portolio level} GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE) ,0) ,0)") 
		
		/* CLARIFICATION_VIEW */ 
		CLARIFICATION_VIEW_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de=Ansehen, en=View, fr=Voir) 
			@sql:SQLName (value=CLARIFICATION_VIEW_RIGHT) 
			@aaa:TripleA (FormatEltName=CLARIFICATION_VIEW, Rank=250, ScriptDef="{Right to view a clarification for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, IF(status_e = 1 {Clarified}, {Right to view at portolio level} GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE) ,0) ,0)") 
			@aaa:scpt (value="{Right to view a clarification for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, IF(status_e = 1 {Clarified}, {Right to view at portolio level} GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE) ,0) ,0)") 
		
		/* CMC_ACTIVE */ 
		CMC_ACTIVE : AAABusinessTypes:Flag 
			@sql:SQLName (value=CMC_ACTIVE) 
			@aaa:TripleA (FormatEltName=CMC_ACTIVE, Rank=20, ScriptDef="{Is Case Management Component activited?} STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\"))") 
			@aaa:scpt (value="{Is Case Management Component activited?} STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\"))") 
		
		/* COUNT_ERROR */ 
		COUNT_ERROR : AAABusinessTypes:Int 
			@sql:SQLName (value=COUNT_ERROR) 
			@aaa:TripleA (FormatEltName=COUNT_ERROR, Rank=190, ScriptDef="{Number of error IC cases} IF(sub_nat_e=24{Session IC Status},TOT_SUM(@ERROR,1))") 
			@aaa:scpt (value="{Number of error IC cases} IF(sub_nat_e=24{Session IC Status},TOT_SUM(@ERROR,1))") 
		
		/* COUNT_INFO */ 
		COUNT_INFO : AAABusinessTypes:Int 
			@sql:SQLName (value=COUNT_INFO) 
			@aaa:TripleA (FormatEltName=COUNT_INFO, Rank=170, ScriptDef="{Number of information IC cases} IF(sub_nat_e=24{Session IC Status},TOT_SUM(@INFO,1))") 
			@aaa:scpt (value="{Number of information IC cases} IF(sub_nat_e=24{Session IC Status},TOT_SUM(@INFO,1))") 
		
		/* COUNT_WARNING */ 
		COUNT_WARNING : AAABusinessTypes:Int 
			@sql:SQLName (value=COUNT_WARNING) 
			@aaa:TripleA (FormatEltName=COUNT_WARNING, Rank=180, ScriptDef="{Number of warning IC cases} IF(sub_nat_e=24{Session IC Status},TOT_SUM(@WARNING,1))") 
			@aaa:scpt (value="{Number of warning IC cases} IF(sub_nat_e=24{Session IC Status},TOT_SUM(@WARNING,1))") 
		
		/* DESCRIPTION */ 
		DESCRIPTION : AAABusinessTypes:UniNote 
			@i18n:Label (de=Beschreibung, en=Description, fr=Description) 
			@sql:SQLName (value=DESCRIPTION) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=DESCRIPTION, Rank=310, ScriptDef="{Input control case summary description - Only for Input control cases} IF(sub_nat_e <> 24 {Session IC Status}, description_c, DISP_MSG(2{User Message},\"PCK_DS_IC_SESSION\", TSL_CURRENT_LANGUAGE(), NULL, DATESTR(last_modif_d,\"DD/MM/YYYY\"), DATESTR(last_modif_d,\"HH:II\"), PRINTF(\"%d\",@COUNT_INFO), PRINTF(\"%d\",@COUNT_WARNING), PRINTF(\"%d\",@COUNT_ERROR)))") 
			@aaa:scpt (value="{Input control case summary description - Only for Input control cases} IF(sub_nat_e <> 24 {Session IC Status}, description_c, DISP_MSG(2{User Message},\"PCK_DS_IC_SESSION\", TSL_CURRENT_LANGUAGE(), NULL, DATESTR(last_modif_d,\"DD/MM/YYYY\"), DATESTR(last_modif_d,\"HH:II\"), PRINTF(\"%d\",@COUNT_INFO), PRINTF(\"%d\",@COUNT_WARNING), PRINTF(\"%d\",@COUNT_ERROR)))") 
		
		/* DESCRIPTION */ 
		DESCRIPTION_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=DESCRIPTION_de) 
			@aaa:TripleA (FormatEltName=DESCRIPTION, Rank=310, ScriptDef) 
			@aaa:scpt (value) 
		
		/* DESCRIPTION */ 
		DESCRIPTION_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=DESCRIPTION_en) 
			@aaa:TripleA (FormatEltName=DESCRIPTION, Rank=310, ScriptDef) 
			@aaa:scpt (value) 
		
		/* DESCRIPTION */ 
		DESCRIPTION_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=DESCRIPTION_fr) 
			@aaa:TripleA (FormatEltName=DESCRIPTION, Rank=310, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ERROR */ 
		ERROR : AAABusinessTypes:Int 
			@sql:SQLName (value=ERROR) 
			@aaa:TripleA (FormatEltName=ERROR, Rank=160, ScriptDef="{Used to count the number of Info input controls} IF(sub_nat_e = 25 {Order IC}, IF(criticalness_e=4 {High, equivalent of Info input control},1))") 
			@aaa:scpt (value="{Used to count the number of Info input controls} IF(sub_nat_e = 25 {Order IC}, IF(criticalness_e=4 {High, equivalent of Info input control},1))") 
		
		/* HIERARCHY_STRUCTURE */ 
		HIERARCHY_STRUCTURE : AAABusinessTypes:UniNote 
			@sql:SQLName (value=HIERARCHY_STRUCTURE) 
			@aaa:TripleA (FormatEltName=HIERARCHY_STRUCTURE, Rank=100, ScriptDef="{Structure of the WUI hierarchy - Only for Input control cases} IF(nature_e = 5 {Input control}, PRINTF(\"%s[HIERLEV%d]\", @SUMMARY, @ORDER_ID))") 
			@aaa:scpt (value="{Structure of the WUI hierarchy - Only for Input control cases} IF(nature_e = 5 {Input control}, PRINTF(\"%s[HIERLEV%d]\", @SUMMARY, @ORDER_ID))") 
		
		/* INFO */ 
		INFO : AAABusinessTypes:Int 
			@sql:SQLName (value=INFO) 
			@aaa:TripleA (FormatEltName=INFO, Rank=140, ScriptDef="{Used to count the number of Info input controls} IF(sub_nat_e = 25 {Order IC}, IF(criticalness_e=1 {Not Critical, equivalent of Info input control},1))") 
			@aaa:scpt (value="{Used to count the number of Info input controls} IF(sub_nat_e = 25 {Order IC}, IF(criticalness_e=1 {Not Critical, equivalent of Info input control},1))") 
		
		/* INSTRUMENT NAME */ 
		INSTRUMENT_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Instrumentenname, en="Instrument Name", fr="Nom de l\'instrument") 
			@sql:SQLName (value=INSTRUMENT_NAME) 
			@aaa:TripleA (FormatEltName="INSTRUMENT NAME", Rank=71, ScriptDef=instr_id.name) 
			@aaa:scpt (value=instr_id.name) 
		
		/* NATURE */ 
		NATURE : AAABusinessTypes:Enum 
			@sql:SQLName (value=NATURE) 
			@aaa:TripleA (FormatEltName=NATURE, Rank=30, ScriptDef="{Case nature} nature_e") 
			@aaa:scpt (value="{Case nature} nature_e") 
		
		/* ORDER_DELETE_RIGHT */ 
		ORDER_DELETE_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de="Auftrag löschen", en="Delete Order", fr="Supprimer l\'ordre") 
			@sql:SQLName (value=ORDER_DELETE_RIGHT) 
			@aaa:TripleA (FormatEltName=ORDER_DELETE_RIGHT, Rank=60, ScriptDef="{Right to delete the IC related order - Only for Input control cases} IF(sub_nat_e = 25 {Order IC}, GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, DELETE, TRUE, FALSE), 0)") 
			@aaa:scpt (value="{Right to delete the IC related order - Only for Input control cases} IF(sub_nat_e = 25 {Order IC}, GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, DELETE, TRUE, FALSE), 0)") 
		
		/* ORDER_ID */ 
		ORDER_ID : AAABusinessTypes:Id 
			@sql:SQLName (value=ORDER_ID) 
			@aaa:TripleA (FormatEltName=ORDER_ID, Rank=80, ScriptDef="{Input control related order - Only for Input control cases} IF(sub_nat_e = 25 {Order IC}, CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).id)") 
			@aaa:scpt (value="{Input control related order - Only for Input control cases} IF(sub_nat_e = 25 {Order IC}, CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).id)") 
		
		/* ORDER_UPDATE_RIGHT */ 
		ORDER_UPDATE_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de="Auftrag aktualisieren", en="Modify Order", fr="Modifier l\'ordre") 
			@sql:SQLName (value=ORDER_UPDATE_RIGHT) 
			@aaa:TripleA (FormatEltName=ORDER_UPDATE_RIGHT, Rank=50, ScriptDef="{Right to update the IC related order - Only for Input control cases} IF(sub_nat_e = 25 {Order IC}, GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE), 0)") 
			@aaa:scpt (value="{Right to update the IC related order - Only for Input control cases} IF(sub_nat_e = 25 {Order IC}, GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE), 0)") 
		
		/* ORDER_VIEW_RIGHT */ 
		ORDER_VIEW_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de="Auftrag ansehen", en="View Order", fr="Voir l\'ordre") 
			@sql:SQLName (value=ORDER_VIEW_RIGHT) 
			@aaa:TripleA (FormatEltName=ORDER_VIEW_RIGHT, Rank=40, ScriptDef="{Right to view the IC related order - Only for Input control cases} IF(sub_nat_e = 25 {Order IC}, GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE), 0)") 
			@aaa:scpt (value="{Right to view the IC related order - Only for Input control cases} IF(sub_nat_e = 25 {Order IC}, GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE), 0)") 
		
		/* PORTFOLIO NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolioname, en="Portfolio Name", fr="Nom du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName="PORTFOLIO NAME", Rank=70, ScriptDef=portfolio_id.name) 
			@aaa:scpt (value=portfolio_id.name) 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=10, ScriptDef="{TA server filter: display only cases on portfolio that the connected user can view (security) + display the IC cases summary} {Case nature <> None} IF(nature_e>0, {Include IC summary case} IF(sub_nat_e = 24 {Session IC Status},1, {Display cases only on portfolios on which the user has view access} GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE)))") 
			@aaa:scpt (value="{TA server filter: display only cases on portfolio that the connected user can view (security) + display the IC cases summary} {Case nature <> None} IF(nature_e>0, {Include IC summary case} IF(sub_nat_e = 24 {Session IC Status},1, {Display cases only on portfolios on which the user has view access} GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE)))") 
		
		/* SEVERITY */ 
		SEVERITY : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=SEVERITY) 
			@aaa:TripleA (FormatEltName=SEVERITY, Rank=120, ScriptDef="{Criticalness value for icon display in the WUI - only for the input control cases 0 (None) = No message (only at session level) = tick icon 1 (not critical) = information icon 2 (low) = warning icon 4 (High) = Error icon Mapping in standard is: Information input control = 1 (not critical) Warning input control = value of the system parameter \"IC_WARNING_CRITICALNESS\" Error input control = 4 (High) } IF(nature_e = 5 {Input control}, IF( {Mapping for Warning Input Control to set to 2 (low)} criticalness_e = STRNUM(GET_APPL_PARAM(\"IC_WARNING_CRITICALNESS\")),2, criticalness_e ) )") 
			@aaa:scpt (value="{Criticalness value for icon display in the WUI - only for the input control cases 0 (None) = No message (only at session level) = tick icon 1 (not critical) = information icon 2 (low) = warning icon 4 (High) = Error icon Mapping in standard is: Information input control = 1 (not critical) Warning input control = value of the system parameter \"IC_WARNING_CRITICALNESS\" Error input control = 4 (High) } IF(nature_e = 5 {Input control}, IF( {Mapping for Warning Input Control to set to 2 (low)} criticalness_e = STRNUM(GET_APPL_PARAM(\"IC_WARNING_CRITICALNESS\")),2, criticalness_e ) )") 
		
		/* SEVERITY_LABEL */ 
		SEVERITY_LABEL : AAABusinessTypes:UniLongName 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=SEVERITY_LABEL) 
			@aaa:TripleA (FormatEltName=SEVERITY_LABEL, Rank=130, ScriptDef="{Severity Label for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, criticalness_e.LABEL[])") 
			@aaa:scpt (value="{Severity Label for compliance cases only} IF(@CMC_ACTIVE=1 {Case Management Component is activated} AND nature_e <> 5 {Input Control}, criticalness_e.LABEL[])") 
		
		/* SORTING */ 
		SORTING : AAABusinessTypes:Int 
			@sql:SQLName (value=SORTING) 
			@aaa:TripleA (FormatEltName=SORTING, Rank=200, ScriptDef="{Sorting for Input Control Cases} IF(sub_nat_e = 25 {Order IC}, TOT_MAX(@SEVERITY,1,@ORDER_ID), IF(sub_nat_e = 24 {Session IC Status}, 5))") 
			@aaa:scpt (value="{Sorting for Input Control Cases} IF(sub_nat_e = 25 {Order IC}, TOT_MAX(@SEVERITY,1,@ORDER_ID), IF(sub_nat_e = 24 {Session IC Status}, 5))") 
		
		/* SUMMARY */ 
		SUMMARY : AAABusinessTypes:UniNote 
			@sql:SQLName (value=SUMMARY) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=SUMMARY, Rank=90, ScriptDef="{Input control case summary description - Only for Input control cases} IF(nature_e = 5 {Input control}, IF(sub_nat_e = 25 {Order IC}, {SECURITY & OTHER} IF(CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id.code IN (\"PCK_DS_FIXED_INC\",\"PCK_DS_FUND\",\"PCK_DS_FUTURE\",\"PCK_DS_OPTION\",\"PCK_DS_STOCK\",\"PCK_DS_PG_ORDER\") OR CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id = NULL, DISP_MSG(2{User Message},\"PCK_DS_IC_ORDER_SEC\", TSL_CURRENT_LANGUAGE(), NULL, {Var 1: Portfolio} portfolio_id.name, {Var 2: Instrument} instr_id.name), {FOREX SPOT} IF(CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id.code IN (\"PCK_DS_ACC_T_SAME_CY\",\"PCK_DS_FXSPOT_CONV\",\"PCK_DS_FXSPOT_NEGO\"), DISP_MSG(2{User Message},\"PCK_DS_IC_ORDER_FX\", TSL_CURRENT_LANGUAGE(), NULL, {Var 1: Portfolio} portfolio_id.name, {Var 2: 1st account} instr_id.name, {Var 3: 2nd account} CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).account_id.name), {DEPOSIT} IF(CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id.code IN (\"PCK_DS_CALL_DEP_NEW\",\"PCK_DS_CALL_DEP_AMD\",\"PCK_DS_TERM_DEP_NEW\",\"PCK_DS_LOAN\"), DISP_MSG(2{User Message},\"PCK_DS_IC_ORDER_MM\", TSL_CURRENT_LANGUAGE(), NULL, {Var 1: Portfolio} portfolio_id.name, {Var 2: Contract Currency} IF(instr_id.ref_curr_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code <> NULL, instr_id.ref_curr_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code, instr_id.ref_curr_id.code ), {Var 3: Contract type} CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom) ) ) ), IF(sub_nat_e = 24 {Session IC Status}, DISP_MSG(2{User Message},\"PCK_DS_IC_SUMMARY\", TSL_CURRENT_LANGUAGE(), NULL)) ) )") 
			@aaa:scpt (value="{Input control case summary description - Only for Input control cases} IF(nature_e = 5 {Input control}, IF(sub_nat_e = 25 {Order IC}, {SECURITY & OTHER} IF(CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id.code IN (\"PCK_DS_FIXED_INC\",\"PCK_DS_FUND\",\"PCK_DS_FUTURE\",\"PCK_DS_OPTION\",\"PCK_DS_STOCK\",\"PCK_DS_PG_ORDER\") OR CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id = NULL, DISP_MSG(2{User Message},\"PCK_DS_IC_ORDER_SEC\", TSL_CURRENT_LANGUAGE(), NULL, {Var 1: Portfolio} portfolio_id.name, {Var 2: Instrument} instr_id.name), {FOREX SPOT} IF(CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id.code IN (\"PCK_DS_ACC_T_SAME_CY\",\"PCK_DS_FXSPOT_CONV\",\"PCK_DS_FXSPOT_NEGO\"), DISP_MSG(2{User Message},\"PCK_DS_IC_ORDER_FX\", TSL_CURRENT_LANGUAGE(), NULL, {Var 1: Portfolio} portfolio_id.name, {Var 2: 1st account} instr_id.name, {Var 3: 2nd account} CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).account_id.name), {DEPOSIT} IF(CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id.code IN (\"PCK_DS_CALL_DEP_NEW\",\"PCK_DS_CALL_DEP_AMD\",\"PCK_DS_TERM_DEP_NEW\",\"PCK_DS_LOAN\"), DISP_MSG(2{User Message},\"PCK_DS_IC_ORDER_MM\", TSL_CURRENT_LANGUAGE(), NULL, {Var 1: Portfolio} portfolio_id.name, {Var 2: Contract Currency} IF(instr_id.ref_curr_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code <> NULL, instr_id.ref_curr_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code, instr_id.ref_curr_id.code ), {Var 3: Contract type} CASE_LINKED_OBJECT(GET_ENTITY(\"ext_operation\"),id).order_type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom) ) ) ), IF(sub_nat_e = 24 {Session IC Status}, DISP_MSG(2{User Message},\"PCK_DS_IC_SUMMARY\", TSL_CURRENT_LANGUAGE(), NULL)) ) )") 
		
		/* SUMMARY */ 
		SUMMARY_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=SUMMARY_de) 
			@aaa:TripleA (FormatEltName=SUMMARY, Rank=90, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SUMMARY */ 
		SUMMARY_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=SUMMARY_en) 
			@aaa:TripleA (FormatEltName=SUMMARY, Rank=90, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SUMMARY */ 
		SUMMARY_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=SUMMARY_fr) 
			@aaa:TripleA (FormatEltName=SUMMARY, Rank=90, ScriptDef) 
			@aaa:scpt (value) 
		
		/* WARNING */ 
		WARNING : AAABusinessTypes:Int 
			@sql:SQLName (value=WARNING) 
			@aaa:TripleA (FormatEltName=WARNING, Rank=150, ScriptDef="{Used to count the number of Warning input controls} IF(sub_nat_e = 25 {Order IC}, IF(criticalness_e=STRNUM(GET_APPL_PARAM(\"IC_WARNING_CRITICALNESS\")) {equivalent of warning input control},1))") 
			@aaa:scpt (value="{Used to count the number of Warning input controls} IF(sub_nat_e = 25 {Order IC}, IF(criticalness_e=STRNUM(GET_APPL_PARAM(\"IC_WARNING_CRITICALNESS\")) {equivalent of warning input control},1))") 
	} 
	/* PCK_DS_ORD_ENTRY_LST */ 
	PCK_DS_ORD_ENTRY_LST 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Order Entry") 
		@sql:SQLName (value=PCK_DS_ORD_ENTRY_LST) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_operation, FinFuncName="Order Entry", FinFuncProcName=order_entry, FormatName=PCK_DS_ORD_ENTRY_LST) 
	{ 
		/* ACCOUNT_CURRENCY */ 
		ACCOUNT_CURRENCY : AAABusinessTypes:UniCode 
			@sql:SQLName (value=ACCOUNT_CURRENCY) 
			@aaa:TripleA (FormatEltName=ACCOUNT_CURRENCY, Rank=140, ScriptDef="{Display the currency synonym as set in the \"DS_CURRENCY_CODE\" system parameter. If the synonym does not exist, display the code} IF( acc_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code <> NULL, acc_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code, acc_currency_id.code )") 
			@aaa:scpt (value="{Display the currency synonym as set in the \"DS_CURRENCY_CODE\" system parameter. If the synonym does not exist, display the code} IF( acc_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code <> NULL, acc_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code, acc_currency_id.code )") 
		
		/* ACCRUED_INTEREST */ 
		ACCRUED_INTEREST : AAABusinessTypes:Amount 
			@i18n:Label (de="Stückzins", en="Accrued Interest", fr="Intérêt couru") 
			@sql:SQLName (value=ACCRUED_INTEREST) 
			@aaa:TripleA (FormatEltName=ACCRUED_INTEREST, Rank=400, ScriptDef=accr_amount_m) 
			@aaa:scpt (value=accr_amount_m) 
		
		/* CATEGORY */ 
		CATEGORY : AAABusinessTypes:UniName 
			@i18n:Label (de=Kategorie, en=Category, fr="Catégorie") 
			@sql:SQLName (value=CATEGORY) 
			@aaa:TripleA (FormatEltName=CATEGORY, Rank=40, ScriptDef="{PNO UPDATE 11 MAY 2012 Script to group orders into categories: - SEC = Security, Derivatives and Other - FXSPOT = FX spot convention, FX spot negotiated and account transfers on same currencies - FXFWD = Forex forward convention, Forex forward negotiated - MM = Call and term deposit contracts, loan contracts These categories depends on the order type. In standard, a set of order types are delivered} {Forex Spot} IF(order_type_id.code IN (\"PCK_DS_ACCT_SAME_CCY\",\"PCK_DS_FXSPOT_CONV\",\"PCK_DS_FXSPOT_NEGO\"),\"FXSPOT\", {Forex Forward} IF(order_type_id.code IN (\"PCK_DS_FXFWD_CONV\",\"PCK_DS_FXFWD_NEGO\"),\"FXFWD\", {Deposit, Loan} IF(order_type_id.code IN (\"PCK_DS_CALL_DEP_NEW\",\"PCK_DS_CALL_DEP_AMD\",\"PCK_DS_TERM_DEP_NEW\",\"PCK_DS_LOAN\"),\"MM\", {Security, Derivatives and Other} \"SEC\" ) ) )") 
			@aaa:scpt (value="{PNO UPDATE 11 MAY 2012 Script to group orders into categories: - SEC = Security, Derivatives and Other - FXSPOT = FX spot convention, FX spot negotiated and account transfers on same currencies - FXFWD = Forex forward convention, Forex forward negotiated - MM = Call and term deposit contracts, loan contracts These categories depends on the order type. In standard, a set of order types are delivered} {Forex Spot} IF(order_type_id.code IN (\"PCK_DS_ACCT_SAME_CCY\",\"PCK_DS_FXSPOT_CONV\",\"PCK_DS_FXSPOT_NEGO\"),\"FXSPOT\", {Forex Forward} IF(order_type_id.code IN (\"PCK_DS_FXFWD_CONV\",\"PCK_DS_FXFWD_NEGO\"),\"FXFWD\", {Deposit, Loan} IF(order_type_id.code IN (\"PCK_DS_CALL_DEP_NEW\",\"PCK_DS_CALL_DEP_AMD\",\"PCK_DS_TERM_DEP_NEW\",\"PCK_DS_LOAN\"),\"MM\", {Security, Derivatives and Other} \"SEC\" ) ) )") 
		
		/* CATEGORY_LABEL */ 
		CATEGORY_LABEL : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Kategorie, en=Category, fr="Catégorie") 
			@sql:SQLName (value=CATEGORY_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CATEGORY_LABEL, Rank=50, ScriptDef="{PNO UPDATE 11 MAY 2012 Translated label of order category} {Security, Derivatives and Other} IF(@CATEGORY=\"SEC\", DISP_MSG(2{User Message},\"PCK_DS_ORD_CATEG_SEC\", TSL_CURRENT_LANGUAGE(), NULL), {Forex Spot} IF(@CATEGORY=\"FXSPOT\", DISP_MSG(2{User Message},\"PCK_DS_ORD_CATEG_FXS\", DOMAIN().language_dict_id, NULL), {Forex Forward} IF(@CATEGORY=\"FXFWD\", DISP_MSG(2{User Message},\"PCK_DS_ORD_CATEG_FXF\", DOMAIN().language_dict_id, NULL), {Deposit, Loan} IF(@CATEGORY=\"MM\",DISP_MSG(2{User Message},\"PCK_DS_ORD_CATEG_MM\", TSL_CURRENT_LANGUAGE(), NULL) ))))") 
			@aaa:scpt (value="{PNO UPDATE 11 MAY 2012 Translated label of order category} {Security, Derivatives and Other} IF(@CATEGORY=\"SEC\", DISP_MSG(2{User Message},\"PCK_DS_ORD_CATEG_SEC\", TSL_CURRENT_LANGUAGE(), NULL), {Forex Spot} IF(@CATEGORY=\"FXSPOT\", DISP_MSG(2{User Message},\"PCK_DS_ORD_CATEG_FXS\", DOMAIN().language_dict_id, NULL), {Forex Forward} IF(@CATEGORY=\"FXFWD\", DISP_MSG(2{User Message},\"PCK_DS_ORD_CATEG_FXF\", DOMAIN().language_dict_id, NULL), {Deposit, Loan} IF(@CATEGORY=\"MM\",DISP_MSG(2{User Message},\"PCK_DS_ORD_CATEG_MM\", TSL_CURRENT_LANGUAGE(), NULL) ))))") 
		
		/* CATEGORY_LABEL */ 
		CATEGORY_LABEL_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CATEGORY_LABEL_de) 
			@aaa:TripleA (FormatEltName=CATEGORY_LABEL, Rank=50, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CATEGORY_LABEL */ 
		CATEGORY_LABEL_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CATEGORY_LABEL_en) 
			@aaa:TripleA (FormatEltName=CATEGORY_LABEL, Rank=50, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CATEGORY_LABEL */ 
		CATEGORY_LABEL_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CATEGORY_LABEL_fr) 
			@aaa:TripleA (FormatEltName=CATEGORY_LABEL, Rank=50, ScriptDef) 
			@aaa:scpt (value) 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=490, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* CLIENT_RATE */ 
		CLIENT_RATE : AAABusinessTypes:Number 
			@i18n:Label (de=Wechselkurs, en="Client Rate", fr="Taux client") 
			@sql:SQLName (value=CLIENT_RATE) 
			@aaa:TripleA (FormatEltName=CLIENT_RATE, Rank=300, ScriptDef="IF(fx_client_rate_n<>NULL, fx_client_rate_n, acc_exch_rate)") 
			@aaa:scpt (value="IF(fx_client_rate_n<>NULL, fx_client_rate_n, acc_exch_rate)") 
		
		/* CONTRACT_LENGTH_N */ 
		CONTRACT_LENGTH_N : AAABusinessTypes:Int 
			@i18n:Label (de=Length, en=Length, fr=Length) 
			@sql:SQLName (value=CONTRACT_LENGTH_N) 
			@aaa:TripleA (FormatEltName=CONTRACT_LENGTH_N, Rank=316, ScriptDef=contract_length_n) 
			@aaa:scpt (value=contract_length_n) 
		
		/* CONTRACT_LENGTH_UNIT */ 
		CONTRACT_LENGTH_UNIT : AAABusinessTypes:UniName 
			@i18n:Label (de="Length unit", en="Length unit", fr="Length unit") 
			@sql:SQLName (value=CONTRACT_LENGTH_UNIT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONTRACT_LENGTH_UNIT, Rank=315, ScriptDef="contract_length_unit_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
			@aaa:scpt (value="contract_length_unit_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
		
		/* CONTRACT_LENGTH_UNIT */ 
		CONTRACT_LENGTH_UNIT_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONTRACT_LENGTH_UNIT_de) 
			@aaa:TripleA (FormatEltName=CONTRACT_LENGTH_UNIT, Rank=315, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONTRACT_LENGTH_UNIT */ 
		CONTRACT_LENGTH_UNIT_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONTRACT_LENGTH_UNIT_en) 
			@aaa:TripleA (FormatEltName=CONTRACT_LENGTH_UNIT, Rank=315, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONTRACT_LENGTH_UNIT */ 
		CONTRACT_LENGTH_UNIT_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONTRACT_LENGTH_UNIT_fr) 
			@aaa:TripleA (FormatEltName=CONTRACT_LENGTH_UNIT, Rank=315, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONTRACT_TYPE */ 
		CONTRACT_TYPE : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Kontrakt Typ", en="Contract Type", fr="Type de contrat") 
			@sql:SQLName (value=CONTRACT_TYPE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONTRACT_TYPE, Rank=310, ScriptDef="IF(order_type_id<>NULL, IF(order_type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, order_type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, IF(order_type_id.denom<>NULL, order_type_id.denom,order_type_id.name)))") 
			@aaa:scpt (value="IF(order_type_id<>NULL, IF(order_type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, order_type_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, IF(order_type_id.denom<>NULL, order_type_id.denom,order_type_id.name)))") 
		
		/* CONTRACT_TYPE */ 
		CONTRACT_TYPE_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONTRACT_TYPE_de) 
			@aaa:TripleA (FormatEltName=CONTRACT_TYPE, Rank=310, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONTRACT_TYPE */ 
		CONTRACT_TYPE_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONTRACT_TYPE_en) 
			@aaa:TripleA (FormatEltName=CONTRACT_TYPE, Rank=310, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONTRACT_TYPE */ 
		CONTRACT_TYPE_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONTRACT_TYPE_fr) 
			@aaa:TripleA (FormatEltName=CONTRACT_TYPE, Rank=310, ScriptDef) 
			@aaa:scpt (value) 
		
		/* COUNT_STATUS_ALL */ 
		COUNT_STATUS_ALL : AAABusinessTypes:Int 
			@i18n:Label (de="Anz. Aufträge", en="Nb of Orders", fr="Nb d\'ordres") 
			@sql:SQLName (value=COUNT_STATUS_ALL) 
			@aaa:TripleA (FormatEltName=COUNT_STATUS_ALL, Rank=420, ScriptDef=1) 
			@aaa:scpt (value=1) 
		
		/* CREATION_DATE */ 
		CREATION_DATE : AAABusinessTypes:Datetime 
			@i18n:Label (de=Erstellungsdatum, en="Creation Date", fr="Date de création") 
			@sql:SQLName (value=CREATION_DATE) 
			@aaa:TripleA (FormatEltName=CREATION_DATE, Rank=90, ScriptDef=creation_time_d) 
			@aaa:scpt (value=creation_time_d) 
		
		/* CREDITED_ACCOUNT */ 
		CREDITED_ACCOUNT : AAABusinessTypes:UniName 
			@i18n:Label (de="Erkanntes Konto", en="Credited Account", fr="Compte crédité") 
			@sql:SQLName (value=CREDITED_ACCOUNT) 
			@aaa:TripleA (FormatEltName=CREDITED_ACCOUNT, Rank=330, ScriptDef="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY = \"FXSPOT\", IF(nature_e = 1, {Buy} instr_id.name, {Sell} account_id.name), IF(@CATEGORY = \"FXFWD\", IF(nature_e = 1, {Buy} account2_id.name, {Sell} account_id.name) ) )") 
			@aaa:scpt (value="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY = \"FXSPOT\", IF(nature_e = 1, {Buy} instr_id.name, {Sell} account_id.name), IF(@CATEGORY = \"FXFWD\", IF(nature_e = 1, {Buy} account2_id.name, {Sell} account_id.name) ) )") 
		
		/* CREDITED_AMOUNT */ 
		CREDITED_AMOUNT : AAABusinessTypes:Amount 
			@i18n:Label (de=Gutschrifts-Betrag, en="Credited Amount", fr="Montant crédité") 
			@sql:SQLName (value=CREDITED_AMOUNT) 
			@aaa:TripleA (FormatEltName=CREDITED_AMOUNT, Rank=340, ScriptDef="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), IF(nature_e = 1, {Buy} quantity_n, {Sell} acc_net_amount_m))") 
			@aaa:scpt (value="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), IF(nature_e = 1, {Buy} quantity_n, {Sell} acc_net_amount_m))") 
		
		/* CREDITED_CURR */ 
		CREDITED_CURR : AAABusinessTypes:UniCode 
			@sql:SQLName (value=CREDITED_CURR) 
			@aaa:TripleA (FormatEltName=CREDITED_CURR, Rank=350, ScriptDef="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), IF(nature_e = 1, {Buy} @ORDER_CURRENCY, {Sell} @ACCOUNT_CURRENCY) )") 
			@aaa:scpt (value="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), IF(nature_e = 1, {Buy} @ORDER_CURRENCY, {Sell} @ACCOUNT_CURRENCY) )") 
		
		/* CURR_PAIR */ 
		CURR_PAIR : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Währungspaar", en="Currencies Pair", fr="Paire de devises") 
			@sql:SQLName (value=CURR_PAIR) 
			@aaa:TripleA (FormatEltName=CURR_PAIR, Rank=570, ScriptDef="{PNO UPDATE 18 June 2012} IF(@CATEGORY = \"FXSPOT\", {then} PRINTF(\"%s/%s\", @TRADED_CCY_FXSPOT, @EXCH_CCY_FXSPOT), {else} IF(@CATEGORY = \"FXFWD\", {then} PRINTF(\"%s/%s\", @TRADED_CCY_FXFWD, @EXCH_CCY_FXFWD), ) )") 
			@aaa:scpt (value="{PNO UPDATE 18 June 2012} IF(@CATEGORY = \"FXSPOT\", {then} PRINTF(\"%s/%s\", @TRADED_CCY_FXSPOT, @EXCH_CCY_FXSPOT), {else} IF(@CATEGORY = \"FXFWD\", {then} PRINTF(\"%s/%s\", @TRADED_CCY_FXFWD, @EXCH_CCY_FXFWD), ) )") 
		
		/* DEBITED_ACCOUNT */ 
		DEBITED_ACCOUNT : AAABusinessTypes:UniName 
			@i18n:Label (de="Belastetes Konto", en="Debited Account", fr="Compte débité") 
			@sql:SQLName (value=DEBITED_ACCOUNT) 
			@aaa:TripleA (FormatEltName=DEBITED_ACCOUNT, Rank=360, ScriptDef="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY = \"FXSPOT\", IF(nature_e = 1, {Buy} account_id.name, {Sell} instr_id.name), IF(@CATEGORY = \"FXFWD\", IF(nature_e = 1, {Buy} account_id.name, {Sell} account2_id.name) ) )") 
			@aaa:scpt (value="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY = \"FXSPOT\", IF(nature_e = 1, {Buy} account_id.name, {Sell} instr_id.name), IF(@CATEGORY = \"FXFWD\", IF(nature_e = 1, {Buy} account_id.name, {Sell} account2_id.name) ) )") 
		
		/* DEBITED_AMOUNT */ 
		DEBITED_AMOUNT : AAABusinessTypes:Amount 
			@i18n:Label (de=Belastungs-Betrag, en="Debited Amount", fr="Montant débité") 
			@sql:SQLName (value=DEBITED_AMOUNT) 
			@aaa:TripleA (FormatEltName=DEBITED_AMOUNT, Rank=370, ScriptDef="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), IF(nature_e = 1, {Buy} acc_net_amount_m, {Sell} quantity_n))") 
			@aaa:scpt (value="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), IF(nature_e = 1, {Buy} acc_net_amount_m, {Sell} quantity_n))") 
		
		/* DEBITED_CURR */ 
		DEBITED_CURR : AAABusinessTypes:UniCode 
			@sql:SQLName (value=DEBITED_CURR) 
			@aaa:TripleA (FormatEltName=DEBITED_CURR, Rank=380, ScriptDef="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), IF(nature_e = 1, {Buy} @ACCOUNT_CURRENCY, {Sell} @ORDER_CURRENCY) )") 
			@aaa:scpt (value="{PNO UPDATE 11 MAY 2012} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), IF(nature_e = 1, {Buy} @ACCOUNT_CURRENCY, {Sell} @ORDER_CURRENCY) )") 
		
		/* DELETE_RIGHT */ 
		DELETE_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de="Löschen", en=Delete, fr=Supprimer) 
			@sql:SQLName (value=DELETE_RIGHT) 
			@aaa:TripleA (FormatEltName=DELETE_RIGHT, Rank=470, ScriptDef="GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, DELETE, TRUE, FALSE)") 
			@aaa:scpt (value="GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, DELETE, TRUE, FALSE)") 
		
		/* EXCH_ACCOUNT_FXFWD */ 
		EXCH_ACCOUNT_FXFWD : AAABusinessTypes:UniName 
			@i18n:Label (de="Exchanged account", en="Exchanged account", fr="Exchanged account") 
			@sql:SQLName (value=EXCH_ACCOUNT_FXFWD) 
			@aaa:TripleA (FormatEltName=EXCH_ACCOUNT_FXFWD, Rank=562, ScriptDef="{PNO CREATE 11 MAY 2012} account_id.code") 
			@aaa:scpt (value="{PNO CREATE 11 MAY 2012} account_id.code") 
		
		/* EXCH_ACCOUNT_FXSPOT */ 
		EXCH_ACCOUNT_FXSPOT : AAABusinessTypes:UniName 
			@i18n:Label (de="Exchanged account", en="Exchanged account", fr="Exchanged account") 
			@sql:SQLName (value=EXCH_ACCOUNT_FXSPOT) 
			@aaa:TripleA (FormatEltName=EXCH_ACCOUNT_FXSPOT, Rank=542, ScriptDef="{PNO CREATE 11 MAY 2012} account_id.code") 
			@aaa:scpt (value="{PNO CREATE 11 MAY 2012} account_id.code") 
		
		/* EXCH_AMOUNT */ 
		EXCH_AMOUNT : AAABusinessTypes:Amount 
			@i18n:Label (de="Exchanged amount", en="Exchanged amount", fr="Montant échangé") 
			@sql:SQLName (value=EXCH_AMOUNT) 
			@aaa:TripleA (FormatEltName=EXCH_AMOUNT, Rank=541, ScriptDef="{PNO CREATE 11 MAY 2012} acc_net_amount_m") 
			@aaa:scpt (value="{PNO CREATE 11 MAY 2012} acc_net_amount_m") 
		
		/* EXCH_CCY_FXFWD */ 
		EXCH_CCY_FXFWD : AAABusinessTypes:UniCode 
			@i18n:Label (en="Exchanged Ccy") 
			@sql:SQLName (value=EXCH_CCY_FXFWD) 
			@aaa:TripleA (FormatEltName=EXCH_CCY_FXFWD, Rank=560, ScriptDef="{PNO CREATE 11 MAY 2012} op_currency_id.code") 
			@aaa:scpt (value="{PNO CREATE 11 MAY 2012} op_currency_id.code") 
		
		/* EXCH_CCY_FXSPOT */ 
		EXCH_CCY_FXSPOT : AAABusinessTypes:UniCode 
			@i18n:Label (en="Exchanged Ccy") 
			@sql:SQLName (value=EXCH_CCY_FXSPOT) 
			@aaa:TripleA (FormatEltName=EXCH_CCY_FXSPOT, Rank=540, ScriptDef="{PNO CREATE 11 MAY 2012} acc_currency_id.code") 
			@aaa:scpt (value="{PNO CREATE 11 MAY 2012} acc_currency_id.code") 
		
		/* EXPIRATION_DATE */ 
		EXPIRATION_DATE : AAABusinessTypes:Date 
			@i18n:Label (de="Fälligkeitsdatum", en="Maturity Date", fr="Date de maturité") 
			@sql:SQLName (value=EXPIRATION_DATE) 
			@aaa:TripleA (FormatEltName=EXPIRATION_DATE, Rank=270, ScriptDef="IF(instr_id.nature_e = 5,expiration_d,NULL)") 
			@aaa:scpt (value="IF(instr_id.nature_e = 5,expiration_d,NULL)") 
		
		/* FEES_TAXES */ 
		FEES_TAXES : AAABusinessTypes:Amount 
			@i18n:Label (de="Gebühren u. Steuern", en="Fees & Taxes", fr="Frais et taxes") 
			@sql:SQLName (value=FEES_TAXES) 
			@aaa:TripleA (FormatEltName=FEES_TAXES, Rank=410, ScriptDef="EXCH_RATE(bp_1_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_1_amount_m + EXCH_RATE(bp_2_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_2_amount_m + EXCH_RATE(bp_3_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_3_amount_m + EXCH_RATE(bp_4_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_4_amount_m + EXCH_RATE(bp_5_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_5_amount_m + EXCH_RATE(bp_6_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_6_amount_m + EXCH_RATE(bp_7_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_7_amount_m + EXCH_RATE(bp_8_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_8_amount_m + EXCH_RATE(bp_9_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_9_amount_m + EXCH_RATE(bp_10_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_10_amount_m") 
			@aaa:scpt (value="EXCH_RATE(bp_1_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_1_amount_m + EXCH_RATE(bp_2_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_2_amount_m + EXCH_RATE(bp_3_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_3_amount_m + EXCH_RATE(bp_4_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_4_amount_m + EXCH_RATE(bp_5_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_5_amount_m + EXCH_RATE(bp_6_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_6_amount_m + EXCH_RATE(bp_7_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_7_amount_m + EXCH_RATE(bp_8_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_8_amount_m + EXCH_RATE(bp_9_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_9_amount_m + EXCH_RATE(bp_10_currency_id, operation_d, @ORDER_CURRENCY,0,0,0).exch_rate*bp_10_amount_m") 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=200, ScriptDef=instr_id.code) 
			@aaa:scpt (value=instr_id.code) 
		
		/* INSTR_ISIN */ 
		INSTR_ISIN : AAABusinessTypes:UniCode 
			@i18n:Label (de=ISIN, en=ISIN, fr=ISIN) 
			@sql:SQLName (value=INSTR_ISIN) 
			@aaa:TripleA (FormatEltName=INSTR_ISIN, Rank=220, ScriptDef="SYNONYM(\"instrument\", instr_id, GET_APPL_PARAM(\"DS_ISIN_CODE_INSTRUMENT\"), 0).code") 
			@aaa:scpt (value="SYNONYM(\"instrument\", instr_id, GET_APPL_PARAM(\"DS_ISIN_CODE_INSTRUMENT\"), 0).code") 
		
		/* INSTR_NAME */ 
		INSTR_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Instrument, en="Instrument Name", fr="Nom Instrument") 
			@sql:SQLName (value=INSTR_NAME) 
			@aaa:TripleA (FormatEltName=INSTR_NAME, Rank=210, ScriptDef=instr_id.name) 
			@aaa:scpt (value=instr_id.name) 
		
		/* LIMIT */ 
		LIMIT : AAABusinessTypes:Amount 
			@i18n:Label (de=Limit, en=Limit, fr=Limite) 
			@sql:SQLName (value=LIMIT) 
			@aaa:TripleA (FormatEltName=LIMIT, Rank=240, ScriptDef=limit_quote_n) 
			@aaa:scpt (value=limit_quote_n) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=510, ScriptDef=portfolio_id.admin_mgr_id) 
			@aaa:scpt (value=portfolio_id.admin_mgr_id) 
		
		/* MARKET */ 
		MARKET : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Markt, en=Market, fr="Marché") 
			@sql:SQLName (value=MARKET) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MARKET, Rank=280, ScriptDef="IF(market_third_id<>NULL, IF(market_third_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, market_third_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, IF(market_third_id.denom<>NULL, market_third_id.denom,market_third_id.name)), \"NO MARKET\")") 
			@aaa:scpt (value="IF(market_third_id<>NULL, IF(market_third_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, market_third_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, IF(market_third_id.denom<>NULL, market_third_id.denom,market_third_id.name)), \"NO MARKET\")") 
		
		/* MARKET */ 
		MARKET_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=MARKET_de) 
			@aaa:TripleA (FormatEltName=MARKET, Rank=280, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MARKET */ 
		MARKET_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=MARKET_en) 
			@aaa:TripleA (FormatEltName=MARKET, Rank=280, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MARKET */ 
		MARKET_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=MARKET_fr) 
			@aaa:TripleA (FormatEltName=MARKET, Rank=280, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_CODE */ 
		ORDER_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="TA Code", en="TA Code", fr="Code TA") 
			@sql:SQLName (value=ORDER_CODE) 
			@aaa:TripleA (FormatEltName=ORDER_CODE, Rank=70, ScriptDef=code) 
			@aaa:scpt (value=code) 
		
		/* ORDER_CURRENCY */ 
		ORDER_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Currency, fr=Devise) 
			@sql:SQLName (value=ORDER_CURRENCY) 
			@aaa:TripleA (FormatEltName=ORDER_CURRENCY, Rank=130, ScriptDef="{Display the currency synonym as set in the \"DS_CURRENCY_CODE\" system parameter. If the synonym does not exist, display the code} IF( op_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code <> NULL, op_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code, op_currency_id.code )") 
			@aaa:scpt (value="{Display the currency synonym as set in the \"DS_CURRENCY_CODE\" system parameter. If the synonym does not exist, display the code} IF( op_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code <> NULL, op_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code, op_currency_id.code )") 
		
		/* ORDER_DATE */ 
		ORDER_DATE : AAABusinessTypes:Datetime 
			@i18n:Label (de=Auftragsdatum, en="Order Date", fr="Date de l\'ordre") 
			@sql:SQLName (value=ORDER_DATE) 
			@aaa:TripleA (FormatEltName=ORDER_DATE, Rank=100, ScriptDef=operation_d) 
			@aaa:scpt (value=operation_d) 
		
		/* ORDER_GROSS_AMOUNT */ 
		ORDER_GROSS_AMOUNT : AAABusinessTypes:Amount 
			@i18n:Label (de=Bruttobetrag, en="Gross Amount", fr="Montant brut") 
			@sql:SQLName (value=ORDER_GROSS_AMOUNT) 
			@aaa:TripleA (FormatEltName=ORDER_GROSS_AMOUNT, Rank=390, ScriptDef=op_gross_amount_m) 
			@aaa:scpt (value=op_gross_amount_m) 
		
		/* ORDER_HIER_STR */ 
		ORDER_HIER_STR : AAABusinessTypes:UniNote 
			@sql:SQLName (value=ORDER_HIER_STR) 
			@aaa:TripleA (FormatEltName=ORDER_HIER_STR, Rank=600, ScriptDef="IF( parent_oper_nat_e = 3 {Child Order}, PRINTF(\"%s[HIERLEV%d]%s[HIERLEV%d]\", instr_id.code,parent_ext_op_id, instr_id.code,draft_order_id ), {ELSE} PRINTF(\"%s[HIERLEV%d]\", instr_id.code,draft_order_id ) )") 
			@aaa:scpt (value="IF( parent_oper_nat_e = 3 {Child Order}, PRINTF(\"%s[HIERLEV%d]%s[HIERLEV%d]\", instr_id.code,parent_ext_op_id, instr_id.code,draft_order_id ), {ELSE} PRINTF(\"%s[HIERLEV%d]\", instr_id.code,draft_order_id ) )") 
		
		/* order_id */ 
		order_id : AAABusinessTypes:Id 
			@i18n:Label (de=Auftragsnr., en="Order ID", fr="Order ID") 
			@sql:SQLName (value=order_id) 
			@aaa:TripleA (FormatEltName=order_id, Rank=500, ScriptDef=draft_order_id) 
			@aaa:scpt (value=draft_order_id) 
		
		/* ORDER_MODE_TYPE */ 
		ORDER_MODE_TYPE : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Auftragsart, en="Order Mode Type", fr="Mode d\'ordre") 
			@sql:SQLName (value=ORDER_MODE_TYPE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=ORDER_MODE_TYPE, Rank=110, ScriptDef="order_nat_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
			@aaa:scpt (value="order_nat_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
		
		/* ORDER_MODE_TYPE */ 
		ORDER_MODE_TYPE_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ORDER_MODE_TYPE_de) 
			@aaa:TripleA (FormatEltName=ORDER_MODE_TYPE, Rank=110, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_MODE_TYPE */ 
		ORDER_MODE_TYPE_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ORDER_MODE_TYPE_en) 
			@aaa:TripleA (FormatEltName=ORDER_MODE_TYPE, Rank=110, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_MODE_TYPE */ 
		ORDER_MODE_TYPE_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ORDER_MODE_TYPE_fr) 
			@aaa:TripleA (FormatEltName=ORDER_MODE_TYPE, Rank=110, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE : AAABusinessTypes:UniName 
			@i18n:Label (de=Kauf/Verkauf, en=Buy/Sell, fr=Achat/Vente) 
			@sql:SQLName (value=ORDER_NATURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=ORDER_NATURE, Rank=80, ScriptDef="nature_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
			@aaa:scpt (value="nature_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=ORDER_NATURE_de) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=ORDER_NATURE_en) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=ORDER_NATURE_fr) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_NET_AMOUNT */ 
		ORDER_NET_AMOUNT : AAABusinessTypes:Amount 
			@i18n:Label (de=Nettobetrag, en="Net Amount", fr="Montant net") 
			@sql:SQLName (value=ORDER_NET_AMOUNT) 
			@aaa:TripleA (FormatEltName=ORDER_NET_AMOUNT, Rank=120, ScriptDef=op_net_amount_m) 
			@aaa:scpt (value=op_net_amount_m) 
		
		/* ORDER_SUMMARY */ 
		ORDER_SUMMARY : AAABusinessTypes:UniNote 
			@i18n:Label (de=Auftragszusammenfassung, en="Order Summary", fr="Résumé de l\'ordre") 
			@sql:SQLName (value=ORDER_SUMMARY) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=ORDER_SUMMARY, Rank=590, ScriptDef="{PNO UPDATE 11 MAY 2012} {Order Summary per order category} {SECURITY & OTHER} IF(@CATEGORY = \"SEC\", PRINTF(\"%s %s %s %s\", {Client + Sense} IF(nature_e = 1, {Buy} DISP_MSG(2{User Message},\"PCK_DS_CLIENT_BUYS\", TSL_CURRENT_LANGUAGE(), NULL), {Sell} DISP_MSG(2{User Message},\"PCK_DS_CLIENT_SELLS\", TSL_CURRENT_LANGUAGE(), NULL) ), {Quantity} TRIMSTR(NUMSTR(quantity_n,\"999,999,999,999.000000000\")), {Instrument name} instr_id.name, {Order mode} IF(order_nat_e=1{Market}, PRINTF(\"(%s)\", DISP_MSG(2{User Message},\"PCK_DS_AT_MARKET\", TSL_CURRENT_LANGUAGE(), NULL)), IF(order_nat_e=2{Limit}, PRINTF(\"(%s %s)\", DISP_MSG(2{User Message},\"PCK_DS_AT_LIMIT\", TSL_CURRENT_LANGUAGE(), NULL), TRIMSTR(NUMSTR(limit_quote_n,\"999,999.000000000\"))), IF(order_nat_e=3{Stop}, PRINTF(\"(%s %s)\", DISP_MSG(2{User Message},\"PCK_DS_AT_STOP\", TSL_CURRENT_LANGUAGE(), NULL), TRIMSTR(NUMSTR(stop_quote_n,\"999,999.000000000\"))), IF(order_nat_e=4{Stop-Limit}, PRINTF(\"(%s %s, %s %s)\", DISP_MSG(2{User Message},\"PCK_DS_AT_STOP\", TSL_CURRENT_LANGUAGE(), NULL), TRIMSTR(NUMSTR(stop_quote_n,\"999,999,999,999.000000000\")), DISP_MSG(2{User Message},\"PCK_DS_AT_LIMIT\", TSL_CURRENT_LANGUAGE(), NULL), TRIMSTR(NUMSTR(limit_quote_n,\"999,999.000000000\"))))))) ), {FOREX} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), {Transfer same ccy} IF(order_type_id.code = \"PCK_DS_ACCT_SAME_CCY\", DISP_MSG(2{User Message},\"PCK_DS_TRANSFER_CCY\", TSL_CURRENT_LANGUAGE(), NULL, {Transfer amount} TRIMSTR(NUMSTR(quantity_n,\"999,999,999,999.000000000\")), {Transfer currency} @ORDER_CURRENCY, {Debit account} @DEBITED_ACCOUNT, {Credit account} @CREDITED_ACCOUNT), {Other FX orders} PRINTF(\"%s %s %s %s %s %s %s %5.5f %s\", {Client + Sense} IF(nature_e = 1, {Buy} DISP_MSG(2{User Message},\"PCK_DS_CLIENT_BUYS\", TSL_CURRENT_LANGUAGE(), NULL), {Sell} DISP_MSG(2{User Message},\"PCK_DS_CLIENT_SELLS\", TSL_CURRENT_LANGUAGE(), NULL) ), {Base amount} TRIMSTR(NUMSTR(quantity_n,\"999,999,999,999.000000000\")), {Base currency} @ORDER_CURRENCY, {Against} DISP_MSG(2{User Message},\"PCK_DS_AGAINST\", TSL_CURRENT_LANGUAGE(), NULL), {Counterparty amount} TRIMSTR(NUMSTR(acc_net_amount_m,\"999,999,999,999.000000000\")), {Counterparty currency} @ACCOUNT_CURRENCY, {At the rate of} DISP_MSG(2{User Message},\"PCK_DS_AT_RATE\", TSL_CURRENT_LANGUAGE(), NULL), {Exchange rate} @CLIENT_RATE, @CURR_PAIR) ), {MM} IF(@CATEGORY = \"MM\", PRINTF(\"%s of %s %s %s\", {Contract type} @CONTRACT_TYPE, {Currency} @ORDER_CURRENCY, {Amount} TRIMSTR(NUMSTR(quantity_n,\"999,999,999,999.000000000\")), {Expiration date for term contract only} IF(order_type_id.code IN (\"PCK_DS_TERM_DEP_NEW\",\"PCK_DS_LOAN\"), CONCAT(DISP_MSG(2{User Message},\"PCK_DS_UNTIL\", TSL_CURRENT_LANGUAGE(), NULL),DATESTR(expiration_d),1)) ))))") 
			@aaa:scpt (value="{PNO UPDATE 11 MAY 2012} {Order Summary per order category} {SECURITY & OTHER} IF(@CATEGORY = \"SEC\", PRINTF(\"%s %s %s %s\", {Client + Sense} IF(nature_e = 1, {Buy} DISP_MSG(2{User Message},\"PCK_DS_CLIENT_BUYS\", TSL_CURRENT_LANGUAGE(), NULL), {Sell} DISP_MSG(2{User Message},\"PCK_DS_CLIENT_SELLS\", TSL_CURRENT_LANGUAGE(), NULL) ), {Quantity} TRIMSTR(NUMSTR(quantity_n,\"999,999,999,999.000000000\")), {Instrument name} instr_id.name, {Order mode} IF(order_nat_e=1{Market}, PRINTF(\"(%s)\", DISP_MSG(2{User Message},\"PCK_DS_AT_MARKET\", TSL_CURRENT_LANGUAGE(), NULL)), IF(order_nat_e=2{Limit}, PRINTF(\"(%s %s)\", DISP_MSG(2{User Message},\"PCK_DS_AT_LIMIT\", TSL_CURRENT_LANGUAGE(), NULL), TRIMSTR(NUMSTR(limit_quote_n,\"999,999.000000000\"))), IF(order_nat_e=3{Stop}, PRINTF(\"(%s %s)\", DISP_MSG(2{User Message},\"PCK_DS_AT_STOP\", TSL_CURRENT_LANGUAGE(), NULL), TRIMSTR(NUMSTR(stop_quote_n,\"999,999.000000000\"))), IF(order_nat_e=4{Stop-Limit}, PRINTF(\"(%s %s, %s %s)\", DISP_MSG(2{User Message},\"PCK_DS_AT_STOP\", TSL_CURRENT_LANGUAGE(), NULL), TRIMSTR(NUMSTR(stop_quote_n,\"999,999,999,999.000000000\")), DISP_MSG(2{User Message},\"PCK_DS_AT_LIMIT\", TSL_CURRENT_LANGUAGE(), NULL), TRIMSTR(NUMSTR(limit_quote_n,\"999,999.000000000\"))))))) ), {FOREX} IF(@CATEGORY IN (\"FXSPOT\",\"FXFWD\"), {Transfer same ccy} IF(order_type_id.code = \"PCK_DS_ACCT_SAME_CCY\", DISP_MSG(2{User Message},\"PCK_DS_TRANSFER_CCY\", TSL_CURRENT_LANGUAGE(), NULL, {Transfer amount} TRIMSTR(NUMSTR(quantity_n,\"999,999,999,999.000000000\")), {Transfer currency} @ORDER_CURRENCY, {Debit account} @DEBITED_ACCOUNT, {Credit account} @CREDITED_ACCOUNT), {Other FX orders} PRINTF(\"%s %s %s %s %s %s %s %5.5f %s\", {Client + Sense} IF(nature_e = 1, {Buy} DISP_MSG(2{User Message},\"PCK_DS_CLIENT_BUYS\", TSL_CURRENT_LANGUAGE(), NULL), {Sell} DISP_MSG(2{User Message},\"PCK_DS_CLIENT_SELLS\", TSL_CURRENT_LANGUAGE(), NULL) ), {Base amount} TRIMSTR(NUMSTR(quantity_n,\"999,999,999,999.000000000\")), {Base currency} @ORDER_CURRENCY, {Against} DISP_MSG(2{User Message},\"PCK_DS_AGAINST\", TSL_CURRENT_LANGUAGE(), NULL), {Counterparty amount} TRIMSTR(NUMSTR(acc_net_amount_m,\"999,999,999,999.000000000\")), {Counterparty currency} @ACCOUNT_CURRENCY, {At the rate of} DISP_MSG(2{User Message},\"PCK_DS_AT_RATE\", TSL_CURRENT_LANGUAGE(), NULL), {Exchange rate} @CLIENT_RATE, @CURR_PAIR) ), {MM} IF(@CATEGORY = \"MM\", PRINTF(\"%s of %s %s %s\", {Contract type} @CONTRACT_TYPE, {Currency} @ORDER_CURRENCY, {Amount} TRIMSTR(NUMSTR(quantity_n,\"999,999,999,999.000000000\")), {Expiration date for term contract only} IF(order_type_id.code IN (\"PCK_DS_TERM_DEP_NEW\",\"PCK_DS_LOAN\"), CONCAT(DISP_MSG(2{User Message},\"PCK_DS_UNTIL\", TSL_CURRENT_LANGUAGE(), NULL),DATESTR(expiration_d),1)) ))))") 
		
		/* ORDER_SUMMARY */ 
		ORDER_SUMMARY_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=ORDER_SUMMARY_de) 
			@aaa:TripleA (FormatEltName=ORDER_SUMMARY, Rank=590, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_SUMMARY */ 
		ORDER_SUMMARY_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=ORDER_SUMMARY_en) 
			@aaa:TripleA (FormatEltName=ORDER_SUMMARY, Rank=590, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_SUMMARY */ 
		ORDER_SUMMARY_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=ORDER_SUMMARY_fr) 
			@aaa:TripleA (FormatEltName=ORDER_SUMMARY, Rank=590, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDER_TYPE */ 
		ORDER_TYPE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=ORDER_TYPE) 
			@aaa:TripleA (FormatEltName=ORDER_TYPE, Rank=311, ScriptDef=order_type.code) 
			@aaa:scpt (value=order_type.code) 
		
		/* ORDINATE_LABEL */ 
		ORDINATE_LABEL : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ORDINATE_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=ORDINATE_LABEL, Rank=440, ScriptDef="DISP_MSG(2{User Message},\"PCK_DS_NB_OF_ORDERS\", TSL_CURRENT_LANGUAGE(), NULL)") 
			@aaa:scpt (value="DISP_MSG(2{User Message},\"PCK_DS_NB_OF_ORDERS\", TSL_CURRENT_LANGUAGE(), NULL)") 
		
		/* ORDINATE_LABEL */ 
		ORDINATE_LABEL_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ORDINATE_LABEL_de) 
			@aaa:TripleA (FormatEltName=ORDINATE_LABEL, Rank=440, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDINATE_LABEL */ 
		ORDINATE_LABEL_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ORDINATE_LABEL_en) 
			@aaa:TripleA (FormatEltName=ORDINATE_LABEL, Rank=440, ScriptDef) 
			@aaa:scpt (value) 
		
		/* ORDINATE_LABEL */ 
		ORDINATE_LABEL_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ORDINATE_LABEL_fr) 
			@aaa:TripleA (FormatEltName=ORDINATE_LABEL, Rank=440, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PARENT_OPER_INDIC */ 
		PARENT_OPER_INDICATOR : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=PARENT_OPER_INDICATOR) 
			@aaa:TripleA (FormatEltName=PARENT_OPER_INDIC, Rank=521, ScriptDef="IF( parent_oper_nat_e IN (0, 7) , \"SINGLE\", IF( parent_oper_nat_e = 2, \"BLOCK\", IF( parent_oper_nat_e = 3, \"CHILD\", NULL ) ) )") 
			@aaa:scpt (value="IF( parent_oper_nat_e IN (0, 7) , \"SINGLE\", IF( parent_oper_nat_e = 2, \"BLOCK\", IF( parent_oper_nat_e = 3, \"CHILD\", NULL ) ) )") 
		
		/* PARENT_OPER_NATURE */ 
		PARENT_OPER_NATURE : AAABusinessTypes:UniName 
			@sql:SQLName (value=PARENT_OPER_NATURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=PARENT_OPER_NATURE, Rank=520, ScriptDef="parent_oper_nat_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
			@aaa:scpt (value="parent_oper_nat_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
		
		/* PARENT_OPER_NATURE */ 
		PARENT_OPER_NATURE_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=PARENT_OPER_NATURE_de) 
			@aaa:TripleA (FormatEltName=PARENT_OPER_NATURE, Rank=520, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PARENT_OPER_NATURE */ 
		PARENT_OPER_NATURE_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=PARENT_OPER_NATURE_en) 
			@aaa:TripleA (FormatEltName=PARENT_OPER_NATURE, Rank=520, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PARENT_OPER_NATURE */ 
		PARENT_OPER_NATURE_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=PARENT_OPER_NATURE_fr) 
			@aaa:TripleA (FormatEltName=PARENT_OPER_NATURE, Rank=520, ScriptDef) 
			@aaa:scpt (value) 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=180, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=480, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniCode 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portfeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=190, ScriptDef=portfolio_id.name) 
			@aaa:scpt (value=portfolio_id.name) 
		
		/* PRICE */ 
		PRICE : AAABusinessTypes:Number 
			@i18n:Label (de=Preis, en=Price, fr=Prix) 
			@sql:SQLName (value=PRICE) 
			@aaa:TripleA (FormatEltName=PRICE, Rank=160, ScriptDef="IF(quote_n <> NULL,quote_n, price_n)") 
			@aaa:scpt (value="IF(quote_n <> NULL,quote_n, price_n)") 
		
		/* QUANTITY */ 
		QUANTITY : AAABusinessTypes:Amount 
			@i18n:Label (de=Anzahl, en=Quantity, fr="Quantité") 
			@sql:SQLName (value=QUANTITY) 
			@aaa:TripleA (FormatEltName=QUANTITY, Rank=150, ScriptDef=quantity_n) 
			@aaa:scpt (value=quantity_n) 
		
		/* RATE */ 
		RATE : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Zinssatz, en="Interest Rate", fr="Taux d\'intérêt") 
			@sql:SQLName (value=RATE) 
			@aaa:TripleA (FormatEltName=RATE, Rank=290, ScriptDef="NUMSTR(rate_p,\"99.00000%\")") 
			@aaa:scpt (value="NUMSTR(rate_p,\"99.00000%\")") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@i18n:Label (de="Server Filter", en="Server Filter", fr="Filtre Serveur") 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=30, ScriptDef="{TA server filter: keep only orders on portfolio that can be seen by the logged user} IF(GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, {action} VIEW , {data_profile} TRUE, {function} FALSE)=1,1,0)") 
			@aaa:scpt (value="{TA server filter: keep only orders on portfolio that can be seen by the logged user} IF(GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, {action} VIEW , {data_profile} TRUE, {function} FALSE)=1,1,0)") 
		
		/* STATUS */ 
		STATUS : AAABusinessTypes:UniName 
			@i18n:Label (de=Auftragsstatus, en="Order Status", fr="Statut ordre") 
			@sql:SQLName (value=STATUS) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STATUS, Rank=230, ScriptDef="status_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
			@aaa:scpt (value="status_e.LABEL[TSL_CURRENT_LANGUAGE()]") 
		
		/* STATUS */ 
		STATUS_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=STATUS_de) 
			@aaa:TripleA (FormatEltName=STATUS, Rank=230, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STATUS */ 
		STATUS_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=STATUS_en) 
			@aaa:TripleA (FormatEltName=STATUS, Rank=230, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STATUS */ 
		STATUS_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=STATUS_fr) 
			@aaa:TripleA (FormatEltName=STATUS, Rank=230, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STOP */ 
		STOP : AAABusinessTypes:Number 
			@i18n:Label (de=Stop, en=Stop, fr=Stop) 
			@sql:SQLName (value=STOP) 
			@aaa:TripleA (FormatEltName=STOP, Rank=250, ScriptDef=stop_quote_n) 
			@aaa:scpt (value=stop_quote_n) 
		
		/* TARGET_NATURE */ 
		TARGET_NATURE : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Auftrag in", en="Order In", fr="Order en") 
			@sql:SQLName (value=TARGET_NATURE) 
			@aaa:TripleA (FormatEltName=TARGET_NATURE, Rank=450, ScriptDef="target_nature_e.LABEL[]") 
			@aaa:scpt (value="target_nature_e.LABEL[]") 
		
		/* TRADED_ACCOUNT_FXFWD */ 
		TRADED_ACCOUNT_FXFWD : AAABusinessTypes:UniName 
			@i18n:Label (de="Traded Account", en="Traded Account", fr="Traded Account") 
			@sql:SQLName (value=TRADED_ACCOUNT_FXFWD) 
			@aaa:TripleA (FormatEltName=TRADED_ACCOUNT_FXFWD, Rank=552, ScriptDef="{PNO CREATE 12 MAY 2012} account2_id.code") 
			@aaa:scpt (value="{PNO CREATE 12 MAY 2012} account2_id.code") 
		
		/* TRADED_ACCOUNT_FXSPO */ 
		TRADED_ACCOUNT_FXSPOT : AAABusinessTypes:UniName 
			@i18n:Label (de="Traded Account", en="Traded Account", fr="Traded Account") 
			@sql:SQLName (value=TRADED_ACCOUNT_FXSPOT) 
			@aaa:TripleA (FormatEltName=TRADED_ACCOUNT_FXSPO, Rank=532, ScriptDef="{PNO CREATE 11 MAY 2012} instr_id.code") 
			@aaa:scpt (value="{PNO CREATE 11 MAY 2012} instr_id.code") 
		
		/* TRADED_CCY_FXFWD */ 
		TRADED_CCY_FXFWD : AAABusinessTypes:UniCode 
			@i18n:Label (en="Traded Ccy") 
			@sql:SQLName (value=TRADED_CCY_FXFWD) 
			@aaa:TripleA (FormatEltName=TRADED_CCY_FXFWD, Rank=550, ScriptDef="{PNO CREATE 12 MAY 2012} acc2_currency_id.code") 
			@aaa:scpt (value="{PNO CREATE 12 MAY 2012} acc2_currency_id.code") 
		
		/* TRADED_CCY_FXSPOT */ 
		TRADED_CCY_FXSPOT : AAABusinessTypes:UniCode 
			@i18n:Label (en="Traded Ccy") 
			@sql:SQLName (value=TRADED_CCY_FXSPOT) 
			@aaa:TripleA (FormatEltName=TRADED_CCY_FXSPOT, Rank=530, ScriptDef="{PNO CREATE 11 MAY 2012} op_currency_id.code") 
			@aaa:scpt (value="{PNO CREATE 11 MAY 2012} op_currency_id.code") 
		
		/* UPDATE_RIGHT */ 
		UPDATE_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de=Aktualisieren, en=Modify, fr=Modifier) 
			@sql:SQLName (value=UPDATE_RIGHT) 
			@aaa:TripleA (FormatEltName=UPDATE_RIGHT, Rank=460, ScriptDef="GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE)") 
			@aaa:scpt (value="GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE)") 
		
		/* VALIDITY_DATE */ 
		VALIDITY_DATE : AAABusinessTypes:Date 
			@i18n:Label (de="Gültigkeit", en=Validity, fr="Validité") 
			@sql:SQLName (value=VALIDITY_DATE) 
			@aaa:TripleA (FormatEltName=VALIDITY_DATE, Rank=260, ScriptDef=order_limit_d) 
			@aaa:scpt (value=order_limit_d) 
		
		/* VALUE_DATE */ 
		VALUE_DATE : AAABusinessTypes:Date 
			@i18n:Label (de=Valutadatum, en="Value Date", fr="Date valeur") 
			@sql:SQLName (value=VALUE_DATE) 
			@aaa:TripleA (FormatEltName=VALUE_DATE, Rank=170, ScriptDef=value_d) 
			@aaa:scpt (value=value_d) 
	} 
	/* PCK_DS_PG_COMMENTS */ 
	PCK_DS_PG_COMMENTS 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Order Entry") 
		@aaa:FormatFunctionDictId (value=34) 
		@sql:SQLName (value=PCK_DS_PG_COMMENTS) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=case_management, FinFuncName="Order Entry", FormatFunctionDictId=34, FormatName=PCK_DS_PG_COMMENTS) 
	{ 
		/* DESCRIPTION */ 
		DESCRIPTION : AAABusinessTypes:String2000 
			@i18n:Label (en=Description, fr=Description) 
			@sql:SQLName (value=DESCRIPTION) 
			@aaa:TripleA (FormatEltName=DESCRIPTION, ScriptDef=description_c) 
			@aaa:scpt (value=description_c) 
		
		/* seqno */ 
		seqno : AAABusinessTypes:Int PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, ScriptDef="{Filter cases on PG comments} nature_e=100 {User value 100 = Report Comments for PG}") 
			@aaa:scpt (value="{Filter cases on PG comments} nature_e=100 {User value 100 = Report Comments for PG}") 
		
		/* SORTING */ 
		SORTING : AAABusinessTypes:Int 
			@sql:SQLName (value=SORTING) 
			@aaa:TripleA (FormatEltName=SORTING, ScriptDef=type_id.rank_n) 
			@aaa:scpt (value=type_id.rank_n) 
		
		/* TYPE_NAME */ 
		TYPE_NAME : AAABusinessTypes:Name 
			@i18n:Label (en="Comment Type", fr="Type de commentaire") 
			@sql:SQLName (value=TYPE_NAME) 
			@aaa:TripleA (FormatEltName=TYPE_NAME, ScriptDef=type_id.name) 
			@aaa:scpt (value=type_id.name) 
	} 
	/* PCK_DS_PG_ORDERS */ 
	PCK_DS_PG_ORDERS 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Order Entry") 
		@sql:SQLName (value=PCK_DS_PG_ORDERS) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_operation, FinFuncName="Order Entry", FinFuncProcName=order_entry, FormatName=PCK_DS_PG_ORDERS) 
	{ 
		/* ACCR_INTERESTS */ 
		ACCR_INTERESTS : AAABusinessTypes:Amount 
			@i18n:Label (de="Stückzins", en="Accrued Interest", fr="Intérêt couru") 
			@sql:SQLName (value=ACCR_INTERESTS) 
			@aaa:TripleA (FormatEltName=ACCR_INTERESTS, Rank=110, ScriptDef="IF(accr_amount_m<>NULL OR accr_amount_m<>0, accr_amount_m, NULL)") 
			@aaa:scpt (value="IF(accr_amount_m<>NULL OR accr_amount_m<>0, accr_amount_m, NULL)") 
		
		/* ASSET_CLASS_NAME */ 
		ASSET_CLASS_NAME : AAABusinessTypes:UniLongName 
			@i18n:Label (de=Anlageklasse, en="Asset Class", fr="Classe d\'actif") 
			@sql:SQLName (value=ASSET_CLASS_NAME) 
			@aaa:TripleA (FormatEltName=ASSET_CLASS_NAME, Rank=60, ScriptDef="instr_id.CLASSIFY[GET_APPL_PARAM(\"DS_CLASSIF_ASSET_CLASS\")].list_id.denom") 
			@aaa:scpt (value="instr_id.CLASSIFY[GET_APPL_PARAM(\"DS_CLASSIF_ASSET_CLASS\")].list_id.denom") 
		
		/* DELETE_RIGHT */ 
		DELETE_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de="Löschen", en=Delete, fr=Supprimer) 
			@sql:SQLName (value=DELETE_RIGHT) 
			@aaa:TripleA (FormatEltName=DELETE_RIGHT, Rank=210, ScriptDef="GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, DELETE, TRUE, FALSE)") 
			@aaa:scpt (value="GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, DELETE, TRUE, FALSE)") 
		
		/* FACTSHEET */ 
		FACTSHEET : AAABusinessTypes:UniName 
			@i18n:Label (de=Steckbrief, en="Fact Sheet", fr="Fiche signalétique") 
			@sql:SQLName (value=FACTSHEET) 
			@aaa:TripleA (FormatEltName=FACTSHEET, Rank=150, ScriptDef="IF(nature_e = 1, fact_sheet_e.LABEL[])") 
			@aaa:scpt (value="IF(nature_e = 1, fact_sheet_e.LABEL[])") 
		
		/* FACTSHEET_E */ 
		FACTSHEET_E : AAABusinessTypes:Int 
			@sql:SQLName (value=FACTSHEET_E) 
			@aaa:TripleA (FormatEltName=FACTSHEET_E, Rank=160, ScriptDef="{DO NOT DELETE: format element used when generating the proposal generator report to know if the factsheet related to the order should be included in the report} fact_sheet_e") 
			@aaa:scpt (value="{DO NOT DELETE: format element used when generating the proposal generator report to know if the factsheet related to the order should be included in the report} fact_sheet_e") 
		
		/* HIERARCHY */ 
		HIERARCHY : AAABusinessTypes:UniNote 
			@i18n:Label (de=Hierarchie, en=Hierarchy, fr="Hiérarchie") 
			@sql:SQLName (value=HIERARCHY) 
			@aaa:TripleA (FormatEltName=HIERARCHY, Rank=230, ScriptDef="PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%d]\", portfolio_id.name, portfolio_id.code, @ORDER_NATURE_TXT, @ORDER_NATURE)") 
			@aaa:scpt (value="PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%d]\", portfolio_id.name, portfolio_id.code, @ORDER_NATURE_TXT, @ORDER_NATURE)") 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de="Instrument Code", en="Instrument Code", fr="Code de l\'instrument") 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=40, ScriptDef="IF(instr_id.nature_e=4, {then} op_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code, {else} instr_id.code )") 
			@aaa:scpt (value="IF(instr_id.nature_e=4, {then} op_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODE\")].code, {else} instr_id.code )") 
		
		/* INSTR_NAME_ISIN */ 
		INSTR_NAME_ISIN : AAABusinessTypes:UniNote 
			@i18n:Label (de=Instrument/ISIN, en="Instrument Name/ISIN", fr=Instrument/ISIN) 
			@sql:SQLName (value=INSTR_NAME_ISIN) 
			@aaa:TripleA (FormatEltName=INSTR_NAME_ISIN, Rank=50, ScriptDef="IF(instr_id.SYNONYM[GET_APPL_PARAM(\"DS_ISIN_CODE_INSTRUMENT\")].code <> NULL, {then} CONCAT(CONCAT(instr_id.name,\" / \"),instr_id.SYNONYM[GET_APPL_PARAM(\"DS_ISIN_CODE_INSTRUMENT\")].code), {else} IF(instr_id.nature_e=4, {then} op_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODIF\")].code, {else} instr_id.name ) )") 
			@aaa:scpt (value="IF(instr_id.SYNONYM[GET_APPL_PARAM(\"DS_ISIN_CODE_INSTRUMENT\")].code <> NULL, {then} CONCAT(CONCAT(instr_id.name,\" / \"),instr_id.SYNONYM[GET_APPL_PARAM(\"DS_ISIN_CODE_INSTRUMENT\")].code), {else} IF(instr_id.nature_e=4, {then} op_currency_id.SYNONYM[GET_APPL_PARAM(\"DS_CURRENCY_CODIF\")].code, {else} instr_id.name ) )") 
		
		/* ORDER_CURRENCY */ 
		ORDER_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Currency, fr=Devise) 
			@sql:SQLName (value=ORDER_CURRENCY) 
			@aaa:TripleA (FormatEltName=ORDER_CURRENCY, Rank=130, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", op_currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} op_currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", op_currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} op_currency_id.code )") 
		
		/* ORDER_GROSS_AMOUNT */ 
		ORDER_GROSS_AMOUNT : AAABusinessTypes:Amount 
			@i18n:Label (de=Bruttobetrag, en="Gross Amount", fr="Montant brut") 
			@sql:SQLName (value=ORDER_GROSS_AMOUNT) 
			@aaa:TripleA (FormatEltName=ORDER_GROSS_AMOUNT, Rank=100, ScriptDef="IF(nature_e = 1 {Buy}, -op_gross_amount_m, op_gross_amount_m)") 
			@aaa:scpt (value="IF(nature_e = 1 {Buy}, -op_gross_amount_m, op_gross_amount_m)") 
		
		/* order_id */ 
		order_id : AAABusinessTypes:Id 
			@i18n:Label (de=Auftragsnr., en="Order ID", fr="Order ID") 
			@sql:SQLName (value=order_id) 
			@aaa:TripleA (FormatEltName=order_id, Rank=220, ScriptDef=draft_order_id) 
			@aaa:scpt (value=draft_order_id) 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE : AAABusinessTypes:Enum 
			@i18n:Label (de=Kauf/Verkauf, en=Buy/Sell, fr=Achat/Vente) 
			@sql:SQLName (value=ORDER_NATURE) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE, Rank=20, ScriptDef=nature_e) 
			@aaa:scpt (value=nature_e) 
		
		/* ORDER_NATURE_TXT */ 
		ORDER_NATURE_TXT : AAABusinessTypes:UniCode 
			@i18n:Label (de=Kauf/Verkauf, en=Buy/Sell, fr=Achat/Vente) 
			@sql:SQLName (value=ORDER_NATURE_TXT) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE_TXT, Rank=30, ScriptDef="nature_e.LABEL[]") 
			@aaa:scpt (value="nature_e.LABEL[]") 
		
		/* ORDER_NET_AMOUNT */ 
		ORDER_NET_AMOUNT : AAABusinessTypes:Amount 
			@i18n:Label (de=Nettobetrag, en="Net Amount", fr="Montant net") 
			@sql:SQLName (value=ORDER_NET_AMOUNT) 
			@aaa:TripleA (FormatEltName=ORDER_NET_AMOUNT, Rank=90, ScriptDef="IF(nature_e = 1 {Buy}, -op_net_amount_m, op_net_amount_m)") 
			@aaa:scpt (value="IF(nature_e = 1 {Buy}, -op_net_amount_m, op_net_amount_m)") 
		
		/* ORDER_PTF_AMOUNT */ 
		ORDER_PTF_AMOUNT : AAABusinessTypes:Amount 
			@i18n:Label (de="Nettobetrag in Ptf Währung", en="Net Amount in Ptf Curr.", fr="Montant net en devise Ptf") 
			@sql:SQLName (value=ORDER_PTF_AMOUNT) 
			@aaa:TripleA (FormatEltName=ORDER_PTF_AMOUNT, Rank=120, ScriptDef="IF(nature_e = 1 {Buy}, -pf_net_amount_m, pf_net_amount_m)") 
			@aaa:scpt (value="IF(nature_e = 1 {Buy}, -pf_net_amount_m, pf_net_amount_m)") 
		
		/* PERC_MKT_SEG_OBJ */ 
		PERC_MKT_SEG_OBJ : AAABusinessTypes:Number 
			@i18n:Label (de="% des Marktsegment-Zielwertes", en="% of Market Segment Objective", fr="% de l\'obj. du segment marché") 
			@sql:SQLName (value=PERC_MKT_SEG_OBJ) 
			@aaa:TripleA (FormatEltName=PERC_MKT_SEG_OBJ, Rank=180, ScriptDef="IF(market_segment_id<>NULL AND GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id=function_result_id AND &instr_id=NULL AND &market_segment_id=market_segment_id AND &portfolio_id=portfolio_id AND &strategy_id.nature_e IN (1,2)).obj_weight_n>0, pf_net_amount_m/ ( GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id=function_result_id AND &instr_id=NULL AND &market_segment_id=market_segment_id AND &portfolio_id=portfolio_id AND &strategy_id.nature_e IN (1,2)).obj_weight_n * GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id=function_result_id AND &portfolio_id=portfolio_id AND &strat_level_n=1 AND &level_n=1 AND &strategy_id.nature_e = 1 {Asset Allocation} AND &current_market_value_m<>0 AND &current_market_value_m<>NULL AND (&parent_market_segment_id=NULL OR &parent_market_segment_id=0)).current_market_value_m ) *100 *100, NULL)") 
			@aaa:scpt (value="IF(market_segment_id<>NULL AND GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id=function_result_id AND &instr_id=NULL AND &market_segment_id=market_segment_id AND &portfolio_id=portfolio_id AND &strategy_id.nature_e IN (1,2)).obj_weight_n>0, pf_net_amount_m/ ( GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id=function_result_id AND &instr_id=NULL AND &market_segment_id=market_segment_id AND &portfolio_id=portfolio_id AND &strategy_id.nature_e IN (1,2)).obj_weight_n * GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id=function_result_id AND &portfolio_id=portfolio_id AND &strat_level_n=1 AND &level_n=1 AND &strategy_id.nature_e = 1 {Asset Allocation} AND &current_market_value_m<>0 AND &current_market_value_m<>NULL AND (&parent_market_segment_id=NULL OR &parent_market_segment_id=0)).current_market_value_m ) *100 *100, NULL)") 
		
		/* PERC_PORTFOLIO */ 
		PERC_PORTFOLIO : AAABusinessTypes:Number 
			@i18n:Label (de="% des Portfolios", en="% of Portfolio", fr="% du Portfefeuille") 
			@sql:SQLName (value=PERC_PORTFOLIO) 
			@aaa:TripleA (FormatEltName=PERC_PORTFOLIO, Rank=170, ScriptDef="pf_net_amount_m/ GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id=function_result_id AND &portfolio_id=portfolio_id AND &strat_level_n=1 AND &level_n=1 AND &strategy_id.nature_e = 1 {Asset Allocation} AND &current_market_value_m<>0 AND &current_market_value_m<>NULL AND (&parent_market_segment_id=NULL OR &parent_market_segment_id=0)).current_market_value_m *100") 
			@aaa:scpt (value="pf_net_amount_m/ GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id=function_result_id AND &portfolio_id=portfolio_id AND &strat_level_n=1 AND &level_n=1 AND &strategy_id.nature_e = 1 {Asset Allocation} AND &current_market_value_m<>0 AND &current_market_value_m<>NULL AND (&parent_market_segment_id=NULL OR &parent_market_segment_id=0)).current_market_value_m *100") 
		
		/* PRICE */ 
		PRICE : AAABusinessTypes:Number 
			@i18n:Label (de=Preis, en=Price, fr=Prix) 
			@sql:SQLName (value=PRICE) 
			@aaa:TripleA (FormatEltName=PRICE, Rank=80, ScriptDef="IF(quote_n <> NULL,quote_n, price_n)") 
			@aaa:scpt (value="IF(quote_n <> NULL,quote_n, price_n)") 
		
		/* PTF_CURRENCY */ 
		PTF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Portfoliowährung", en="Portfolio Currency", fr="Devise du portefeuille") 
			@sql:SQLName (value=PTF_CURRENCY) 
			@aaa:TripleA (FormatEltName=PTF_CURRENCY, Rank=140, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", pf_currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} pf_currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", pf_currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} pf_currency_id.code )") 
		
		/* QUANTITY */ 
		QUANTITY : AAABusinessTypes:Amount 
			@i18n:Label (de="Stück", en=Quantity, fr="Quantité") 
			@sql:SQLName (value=QUANTITY) 
			@aaa:TripleA (FormatEltName=QUANTITY, Rank=70, ScriptDef=quantity_n) 
			@aaa:scpt (value=quantity_n) 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef=0) 
			@aaa:scpt (value=0) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@i18n:Label (de="Server Filter", en="Server Filter", fr="Filtre Serveur") 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=10, ScriptDef="IF(GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE)=1,1,0)") 
			@aaa:scpt (value="IF(GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE)=1,1,0)") 
		
		/* TARGET_TYPE */ 
		TARGET_TYPE : AAABusinessTypes:UniLongName 
			@i18n:Label (de="Art des Ziels", en="Target Nature", fr="Nature d\'objectif") 
			@sql:SQLName (value=TARGET_TYPE) 
			@aaa:TripleA (FormatEltName=TARGET_TYPE, Rank=190, ScriptDef="target_nature_e.LABEL[]") 
			@aaa:scpt (value="target_nature_e.LABEL[]") 
		
		/* UPDATE_RIGHT */ 
		UPDATE_RIGHT : AAABusinessTypes:Flag 
			@i18n:Label (de=Aktualisieren, en=Modify, fr=Modifier) 
			@sql:SQLName (value=UPDATE_RIGHT) 
			@aaa:TripleA (FormatEltName=UPDATE_RIGHT, Rank=200, ScriptDef="GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE)") 
			@aaa:scpt (value="GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, UPDATE, TRUE, FALSE)") 
	} 
	/* PCK_DS_PG_PTCC */ 
	PCK_DS_PG_PTCC 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Order Entry") 
		@sql:SQLName (value=PCK_DS_PG_PTCC) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Order Entry", FinFuncProcName=order_entry, FormatName=PCK_DS_PG_PTCC) 
	{ 
		/* AMT_TO_INV */ 
		AMT_TO_INV : AAABusinessTypes:Amount 
			@i18n:Label (de=Investitionsbetrag, en="Amount To Invest", fr="Montant à investir") 
			@sql:SQLName (value=AMT_TO_INV) 
			@aaa:TripleA (FormatEltName=AMT_TO_INV, Rank=240, ScriptDef="{This format element displays the amount to invest if the objective is not met} IF( {Highest level filtered} (level_n = 1 AND strat_level_n = 1) OR {Null if objective is met or null} @OBJ_COMPLIANCE_INDICATOR<2 OR obj_weight_cont_n = NULL, NULL, (obj_weight_cont_n - eff_weight_cont_n) * TOT_MAX(@PTF_TOTAL_MKT_VAL,1) / 100 {factor 100, because weights are expressed in percentage)})") 
			@aaa:scpt (value="{This format element displays the amount to invest if the objective is not met} IF( {Highest level filtered} (level_n = 1 AND strat_level_n = 1) OR {Null if objective is met or null} @OBJ_COMPLIANCE_INDICATOR<2 OR obj_weight_cont_n = NULL, NULL, (obj_weight_cont_n - eff_weight_cont_n) * TOT_MAX(@PTF_TOTAL_MKT_VAL,1) / 100 {factor 100, because weights are expressed in percentage)})") 
		
		/* CHECK_STRAT */ 
		CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=CHECK_STRAT, Rank=140, ScriptDef="IF( strat_level_n = 1 AND disp_parent_ext_strat_elem_id.level_n = 0 {At strategy level}, 1 {Always compliant at strategy level as allocation is 100%}, {ELSE} strat_check_e )") 
			@aaa:scpt (value="IF( strat_level_n = 1 AND disp_parent_ext_strat_elem_id.level_n = 0 {At strategy level}, 1 {Always compliant at strategy level as allocation is 100%}, {ELSE} strat_check_e )") 
		
		/* data_secu_prof_id */ 
		data_secu_prof_id : AAABusinessTypes:Id 
			@sql:SQLName (value=data_secu_prof_id) 
			@aaa:TripleA (FormatEltName=data_secu_prof_id, Rank=10, ScriptDef=portfolio_id.data_secu_prof_id) 
			@aaa:scpt (value=portfolio_id.data_secu_prof_id) 
		
		/* investment_profile_i */ 
		investment_profile_id : AAABusinessTypes:Id 
			@sql:SQLName (value=investment_profile_id) 
			@aaa:TripleA (FormatEltName=investment_profile_i, Rank=30, ScriptDef=ext_strategy_link_id.ref_strategy_id) 
			@aaa:scpt (value=ext_strategy_link_id.ref_strategy_id) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE : AAABusinessTypes:UniString1000 
			@i18n:Label (de=Investitionsstrategie, en="Investment Strategy", fr="Stratégie d\'investissement") 
			@sql:SQLName (value=MKT_STRUCTURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MKT_STRUCTURE, Rank=80, ScriptDef="{This format element is used to display the complete name of an element. It is only displaying market segments with the complete path described until level 4. For deeper levels, the scripts must be updated. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. ATTENTION: As the PRINTF keyword is limited to 10 arguments, the construction of the investment structure is splitted into several PRINTF keywords. This will allow the possibility to add easly extra investment structure levels for customization projects.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%i]\", @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), PRINTF(\"%s[HIERLEV%i]%s%s%s%s\", @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.market_segment_id ) {End of CONCAT} ) {End of IF for level 2}, {level 1 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} , market_segment_id ) {End of PRINTF} ) {End of IF for level 1} ) )") 
			@aaa:scpt (value="{This format element is used to display the complete name of an element. It is only displaying market segments with the complete path described until level 4. For deeper levels, the scripts must be updated. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. ATTENTION: As the PRINTF keyword is limited to 10 arguments, the construction of the investment structure is splitted into several PRINTF keywords. This will allow the possibility to add easly extra investment structure levels for customization projects.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%i]\", @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), PRINTF(\"%s[HIERLEV%i]%s%s%s%s\", @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.market_segment_id ) {End of CONCAT} ) {End of IF for level 2}, {level 1 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} , market_segment_id ) {End of PRINTF} ) {End of IF for level 1} ) )") 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_de : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_de) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_en : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_en) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_fr : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_fr) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE_SORT */ 
		MKT_STRUCTURE_SORT : AAABusinessTypes:Int 
			@i18n:Label (de="Sortierung der Investitionsstrategie-Struktur", en="Sorting - Investment Strategy", fr="Triage - Stratégie d\'investissement") 
			@sql:SQLName (value=MKT_STRUCTURE_SORT) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE_SORT, Rank=90, ScriptDef="{This format element is used to define an order in the market structure (format element MKT_STRUCTURE) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: MKT_STRUCTURE_SORT := Identifier related to head strategy + Sum of the identifiers related to market segments: the market segment are automatically sorted in ascending way by the financial serveur, using the ranks in the classifications + Number between 0 and 1: only if we are at instrument level (main or sub-level), then we can sort the instrument by market value in the WUI } {--------------------------------------------} ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id) + ABS(id)") 
			@aaa:scpt (value="{This format element is used to define an order in the market structure (format element MKT_STRUCTURE) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: MKT_STRUCTURE_SORT := Identifier related to head strategy + Sum of the identifiers related to market segments: the market segment are automatically sorted in ascending way by the financial serveur, using the ranks in the classifications + Number between 0 and 1: only if we are at instrument level (main or sub-level), then we can sort the instrument by market value in the WUI } {--------------------------------------------} ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id) + ABS(id)") 
		
		/* MKT_VALUE */ 
		MKT_VALUE : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktwert, en="Market Value", fr="Valeur d\'inventaire") 
			@sql:SQLName (value=MKT_VALUE) 
			@aaa:TripleA (FormatEltName=MKT_VALUE, Rank=100, ScriptDef="IF( current_market_value_m <> NULL, current_market_value_m, 0)") 
			@aaa:scpt (value="IF( current_market_value_m <> NULL, current_market_value_m, 0)") 
		
		/* OBJ_COMPLIANCE_INDIC */ 
		OBJ_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Gradmesser des Strategieabgleichs", en=Compliance, fr="Conformité") 
			@sql:SQLName (value=OBJ_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_COMPLIANCE_INDIC, Rank=160, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT_L which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT_L which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
		
		/* OBJ_SEVERITY_INDICAT */ 
		OBJ_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad-Anzeiger, en="Severity Indicator", fr="Indicateur de sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_INDICAT, Rank=150, ScriptDef="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=OBJ_SEVERITY_LABEL, Rank=130, ScriptDef="{This format element displays the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective. If the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( 1 * strategy_elt_id.criticalness_e > 0, {The multiplication by 1 is a trick to transform a NULL value into 0} IF( ( 1 * strategy_id.criticalness_e > 0) AND (1 * strategy_elt_id.criticalness_e < 1 * strategy_id.criticalness_e), {The multiplication by 1 is a trick to transform a NULL value into 0} strategy_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()], strategy_elt_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), NULL ) )") 
			@aaa:scpt (value="{This format element displays the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective. If the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( 1 * strategy_elt_id.criticalness_e > 0, {The multiplication by 1 is a trick to transform a NULL value into 0} IF( ( 1 * strategy_id.criticalness_e > 0) AND (1 * strategy_elt_id.criticalness_e < 1 * strategy_id.criticalness_e), {The multiplication by 1 is a trick to transform a NULL value into 0} strategy_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()], strategy_elt_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), NULL ) )") 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_de) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=130, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_en) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=130, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_fr) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=130, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_VALUE */ 
		OBJ_SEVERITY_VALUE : AAABusinessTypes:Enum 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_VALUE) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_VALUE, Rank=120, ScriptDef="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
			@aaa:scpt (value="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
		
		/* OBJECTIVE_WEIGHT */ 
		OBJECTIVE_WEIGHT : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Optimaler Zielwert", en="Objective\'s Optimal Weight", fr="Poids optimal de l\'objectif") 
			@sql:SQLName (value=OBJECTIVE_WEIGHT) 
			@aaa:TripleA (FormatEltName=OBJECTIVE_WEIGHT, Rank=220, ScriptDef="{This format element is used to display the optimal objective weight (after derivation) of a market segment or an instrument. } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( level_n = 1 AND strat_level_n = 1, \"100.00% +/- 0.00%\", IF( obj_weight_cont_n = NULL, NULL, IF( obj_weight_cont_marg_n = NULL, PRINTF(\"%6.2f%s\", 1*obj_weight_cont_n, \"% +/- 0.00%\"), {ELSE} PRINTF(\"%6.2f%s%5.2f%s\", obj_weight_cont_n, \"% +/-\", obj_weight_cont_marg_n, \"%\"))))") 
			@aaa:scpt (value="{This format element is used to display the optimal objective weight (after derivation) of a market segment or an instrument. } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( level_n = 1 AND strat_level_n = 1, \"100.00% +/- 0.00%\", IF( obj_weight_cont_n = NULL, NULL, IF( obj_weight_cont_marg_n = NULL, PRINTF(\"%6.2f%s\", 1*obj_weight_cont_n, \"% +/- 0.00%\"), {ELSE} PRINTF(\"%6.2f%s%5.2f%s\", obj_weight_cont_n, \"% +/-\", obj_weight_cont_marg_n, \"%\"))))") 
		
		/* portfolio_list_id */ 
		portfolio_list_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_list_id) 
			@aaa:TripleA (FormatEltName=portfolio_list_id, Rank=40, ScriptDef=ext_strategy_link_id.list_id) 
			@aaa:scpt (value=ext_strategy_link_id.list_id) 
		
		/* PTF_TOTAL_MKT_VAL */ 
		PTF_TOTAL_MKT_VAL : AAABusinessTypes:Amount 
			@sql:SQLName (value=PTF_TOTAL_MKT_VAL) 
			@aaa:TripleA (FormatEltName=PTF_TOTAL_MKT_VAL, Rank=230, ScriptDef="IF( level_n = 1 AND strat_level_n = 1,current_market_value_m)") 
			@aaa:scpt (value="IF( level_n = 1 AND strat_level_n = 1,current_market_value_m)") 
		
		/* REF_CURR */ 
		REF_CURR : AAABusinessTypes:UniName 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=REF_CURR) 
			@aaa:TripleA (FormatEltName=REF_CURR, Rank=110, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef=0) 
			@aaa:scpt (value=0) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=50, ScriptDef="{This format element is used as a filter to extract only market segments for the asset allocation used for rebalancing} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n=1 AND disp_parent_ext_strat_elem_id <>NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL))),0,1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} AND {Keep only asset allocation strategy nature} strat_nat_e = 1 AND {Keep only allocation nature} nature_e = 1 AND {Keep only the Asset allocation used for rebalancing} calculated_e = 1") 
			@aaa:scpt (value="{This format element is used as a filter to extract only market segments for the asset allocation used for rebalancing} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n=1 AND disp_parent_ext_strat_elem_id <>NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL))),0,1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} AND {Keep only asset allocation strategy nature} strat_nat_e = 1 AND {Keep only allocation nature} nature_e = 1 AND {Keep only the Asset allocation used for rebalancing} calculated_e = 1") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_FULL_NAME, Rank=60, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) ) ) ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) ) ) ) )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=60, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=60, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=60, ScriptDef) 
			@aaa:scpt (value) 
		
		/* strategy_id */ 
		strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=strategy_id) 
			@aaa:TripleA (FormatEltName=strategy_id, Rank=20, ScriptDef="IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
			@aaa:scpt (value="IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
		
		/* STRATEGY_UNIQUE_IDEN */ 
		STRATEGY_UNIQUE_IDENTIFIER : AAABusinessTypes:Id 
			@sql:SQLName (value=STRATEGY_UNIQUE_IDENTIFIER) 
			@aaa:TripleA (FormatEltName=STRATEGY_UNIQUE_IDEN, Rank=70, ScriptDef="{This format element is used to guarantee the unicity of the identifier of the strategy used in the format element MKT_STRUCTURE} {---------------------------} @strategy_id + @investment_profile_id + @portfolio_list_id") 
			@aaa:scpt (value="{This format element is used to guarantee the unicity of the identifier of the strategy used in the format element MKT_STRUCTURE} {---------------------------} @strategy_id + @investment_profile_id + @portfolio_list_id") 
		
		/* SUB_CHECK_STRAT */ 
		SUB_CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=SUB_CHECK_STRAT, Rank=170, ScriptDef="{This format element displays the compliance of instrument level at the last corresponding market segment. For market segment above the last market segment, the value will be NULL. For example, if we have: Stock EUR Danone Bombardier CHF Temenos Bond EUR French Tresaury Then market segments EUR and CHF are considered as last market segments } {---------------------------------} IF( SUM(SEL_FMTCHILDREN(disp_parent_ext_strat_elem_id, id, id, 1, instr_id <> NULL, 1)) > 0 {the sum is greater than 0 if the row is related to a last market segment}, substrat_check_e {if row is a last market segment}, {ELSE} 99 {if row is not a last market segment. 99 is just a convention to avoid using NULL value which will lead to missunderstanding.} )") 
			@aaa:scpt (value="{This format element displays the compliance of instrument level at the last corresponding market segment. For market segment above the last market segment, the value will be NULL. For example, if we have: Stock EUR Danone Bombardier CHF Temenos Bond EUR French Tresaury Then market segments EUR and CHF are considered as last market segments } {---------------------------------} IF( SUM(SEL_FMTCHILDREN(disp_parent_ext_strat_elem_id, id, id, 1, instr_id <> NULL, 1)) > 0 {the sum is greater than 0 if the row is related to a last market segment}, substrat_check_e {if row is a last market segment}, {ELSE} 99 {if row is not a last market segment. 99 is just a convention to avoid using NULL value which will lead to missunderstanding.} )") 
		
		/* SUB_COMPLIANCE_INDIC */ 
		SUB_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Compliance Gradmesser (Detail)", en="Sub-levels Compliance", fr="Conformité des sous-niveaux") 
			@sql:SQLName (value=SUB_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_COMPLIANCE_INDIC, Rank=190, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of instrument levels based on the format element SUB_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CHECK_STRAT which is used.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = 99, NULL {Market segment is not a last market segment containing instruments}, {ELSE} IF( @SUB_CHECK_STRAT = NULL, 0 {No Instruments Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Instruments Objectives Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Instrument Level Compliant}, 6 {Instrument Level Not Compliant} )))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of instrument levels based on the format element SUB_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CHECK_STRAT which is used.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = 99, NULL {Market segment is not a last market segment containing instruments}, {ELSE} IF( @SUB_CHECK_STRAT = NULL, 0 {No Instruments Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Instruments Objectives Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Instrument Level Compliant}, 6 {Instrument Level Not Compliant} )))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
		
		/* SUB_SEVERITY_INDICAT */ 
		SUB_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Schweregrad-Anzeiger (Detail)", en="Sub-levels Severity Indicator", fr="Indicateur de sévérité des sous-niveaux") 
			@sql:SQLName (value=SUB_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_SEVERITY_INDICAT, Rank=180, ScriptDef="{This format element returns the highest severity value of instrument level at a last market segment, when this last market segment has one or more of its instruments not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all instruments which are not compliant The rules are the following: 1) The system checks whether the instrument level is compliant or not, using the format element SUB_CHECK_STRAT. If it is compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the instruments objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the instruments objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all instruments (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the instrument level is compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the instruments objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the instruments objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {Some severities are not defined and the corresponding actual weights are not compliant. So, the system computes an array of not compliant instruments and extracts the highest value for the severity which must be NULL} {ELSE} {IF( STAT(} {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1 AND &strategy_elt_id.criticalness_e = NULL, &strategy_elt_id.criticalness_e, , , 1) ).maximum <> NULL, -3,} {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1, &criticalness_e, , , 1)} {New script to improve system response time} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE, strat_check_e > 1 AND instr_id <> NULL, 1) ).maximum ) ) )") 
			@aaa:scpt (value="{This format element returns the highest severity value of instrument level at a last market segment, when this last market segment has one or more of its instruments not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all instruments which are not compliant The rules are the following: 1) The system checks whether the instrument level is compliant or not, using the format element SUB_CHECK_STRAT. If it is compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the instruments objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the instruments objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all instruments (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the instrument level is compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the instruments objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the instruments objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {Some severities are not defined and the corresponding actual weights are not compliant. So, the system computes an array of not compliant instruments and extracts the highest value for the severity which must be NULL} {ELSE} {IF( STAT(} {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1 AND &strategy_elt_id.criticalness_e = NULL, &strategy_elt_id.criticalness_e, , , 1) ).maximum <> NULL, -3,} {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1, &criticalness_e, , , 1)} {New script to improve system response time} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE, strat_check_e > 1 AND instr_id <> NULL, 1) ).maximum ) ) )") 
		
		/* WEIGHT_AFTER */ 
		WEIGHT_AFTER : AAABusinessTypes:Number 
			@i18n:Label (de="Anteil nachher", en="Weight After", fr="Poids après") 
			@sql:SQLName (value=WEIGHT_AFTER) 
			@aaa:TripleA (FormatEltName=WEIGHT_AFTER, Rank=210, ScriptDef="IF( level_n = 1 AND strat_level_n = 1, 1, eff_weight_cont_n*0.01 )") 
			@aaa:scpt (value="IF( level_n = 1 AND strat_level_n = 1, 1, eff_weight_cont_n*0.01 )") 
		
		/* WEIGHT_BEFORE */ 
		WEIGHT_BEFORE : AAABusinessTypes:Number 
			@i18n:Label (de="Anteil vorher", en="Weight Before", fr="Poids avant") 
			@sql:SQLName (value=WEIGHT_BEFORE) 
			@aaa:TripleA (FormatEltName=WEIGHT_BEFORE, Rank=200, ScriptDef="IF( level_n = 1 AND strat_level_n = 1, 1, act_weight_cont_n*0.01 )") 
			@aaa:scpt (value="IF( level_n = 1 AND strat_level_n = 1, 1, act_weight_cont_n*0.01 )") 
	} 
	/* PCK_DS_PTCC_CONSTR */ 
	PCK_DS_PTCC_CONSTR 
		@aaa:FormatColumnFilter (value=CONSTRAINTS_FILTER) 
		@aaa:FormatFunction (value="Order Entry") 
		@sql:SQLName (value=PCK_DS_PTCC_CONSTR) 
		@aaa:TripleA (ColumnFilter=CONSTRAINTS_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Order Entry", FinFuncProcName=order_entry, FormatName=PCK_DS_PTCC_CONSTR) 
	{ 
		/* ALLOC_CONSTR_FILTER */ 
		ALLOC_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=ALLOC_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=ALLOC_CONSTR_FILTER, Rank=11, ScriptDef="{This format element allows only the display of the following Constraints: - Allocation Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Allocation Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)), 1,0)") 
		
		/* CHECK_CONSTR */ 
		CHECK_CONSTR : AAABusinessTypes:Enum 
			@sql:SQLName (value=CHECK_CONSTR) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR, Rank=100, ScriptDef=constraint_check_e) 
			@aaa:scpt (value=constraint_check_e) 
		
		/* CHECK_CONSTR_L */ 
		CHECK_CONSTR_L : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Einschränkungen", en="Constraint Compliance", fr="Conformité de la contrainte") 
			@sql:SQLName (value=CHECK_CONSTR_L) 
			@aaa:TripleA (FormatEltName=CHECK_CONSTR_L, Rank=101, ScriptDef="IF(constraint_check_e IN (1), \"Constraint Compliant\", \"Constraint Not Compliant\")") 
			@aaa:scpt (value="IF(constraint_check_e IN (1), \"Constraint Compliant\", \"Constraint Not Compliant\")") 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* CONSTR_COMPLIANCE_IN */ 
		CONSTR_COMPLIANCE_INDICATOR : AAABusinessTypes:UniLongName 
			@i18n:Label (de="Einschränkung", en="Constraint Compliance", fr="Conformité de la contrainte") 
			@sql:SQLName (value=CONSTR_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=CONSTR_COMPLIANCE_IN, Rank=103, ScriptDef="{This format element is used to display compliance indication regarding the Constraints related to the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_CONSTR_L which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, @CHECK_CONSTR_L, {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"GREEN\" - \"1\" becomes \"YELLOW\" - \"2\" becomes \"ORANGE\" - \"3\" becomes \"RED\"} {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 0, \"GREEN\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 1, \"YELLOW\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 2, \"ORANGE\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 3, \"RED\", NULL)))))") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the Constraints related to the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_CONSTR_L which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, @CHECK_CONSTR_L, {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"GREEN\" - \"1\" becomes \"YELLOW\" - \"2\" becomes \"ORANGE\" - \"3\" becomes \"RED\"} {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 0, \"GREEN\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 1, \"YELLOW\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 2, \"ORANGE\", {ELSE} IF( @CONSTR_SEVERITY_INDICATOR = 3, \"RED\", NULL)))))") 
		
		/* CONSTR_LABEL_PART_1 */ 
		CONSTR_LABEL_PART_1 : AAABusinessTypes:UniNote 
			@i18n:Label (de="Beschreibung der Einschränkung", en="Constraint Description", fr="Description de la contrainte") 
			@sql:SQLName (value=CONSTR_LABEL_PART_1) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_LABEL_PART_1, Rank=600, ScriptDef="{This format element displays the firt part of Constraint label to describe as most as possible the Constraint. It is also translated} {-------------------------------------------------------------------------------------------------------} {For Allocation Constraints} IF( model_constr_elt_id.constr_nat_e = 1, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_ALLOC_CSTR\", TSL_CURRENT_LANGUAGE(), NULL) ), {For Constraints Sets} IF(strat_nat_e = 4, NULL, {For Security Out Constraints} IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"%s [\", @MIN_OBJ_SEC_OUT), PRINTF(\"%s %s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\",TSL_CURRENT_LANGUAGE(), NULL), @MIN_OBJ_SEC_OUT) ), IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"%s%s [\", @MIN_OBJ_SEC_OUT, \"%\"), PRINTF(\"%s %s%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\",TSL_CURRENT_LANGUAGE(), NULL), @MIN_OBJ_SEC_OUT, \"%\") ), {For Security In Constraints} IF( model_constr_elt_id.constr_nat_e = 2, IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_IN_CSTR_1\", TSL_CURRENT_LANGUAGE(), NULL) ), IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_IN_CSTR_2\",TSL_CURRENT_LANGUAGE(), NULL) ) )) ) ) ) ) )") 
			@aaa:scpt (value="{This format element displays the firt part of Constraint label to describe as most as possible the Constraint. It is also translated} {-------------------------------------------------------------------------------------------------------} {For Allocation Constraints} IF( model_constr_elt_id.constr_nat_e = 1, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_ALLOC_CSTR\", TSL_CURRENT_LANGUAGE(), NULL) ), {For Constraints Sets} IF(strat_nat_e = 4, NULL, {For Security Out Constraints} IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"%s [\", @MIN_OBJ_SEC_OUT), PRINTF(\"%s %s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\",TSL_CURRENT_LANGUAGE(), NULL), @MIN_OBJ_SEC_OUT) ), IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"%s%s [\", @MIN_OBJ_SEC_OUT, \"%\"), PRINTF(\"%s %s%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\",TSL_CURRENT_LANGUAGE(), NULL), @MIN_OBJ_SEC_OUT, \"%\") ), {For Security In Constraints} IF( model_constr_elt_id.constr_nat_e = 2, IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_IN_CSTR_1\", TSL_CURRENT_LANGUAGE(), NULL) ), IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, PRINTF(\"%s [\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_IN_CSTR_2\",TSL_CURRENT_LANGUAGE(), NULL) ) )) ) ) ) ) )") 
		
		/* CONSTR_LABEL_PART_1 */ 
		CONSTR_LABEL_PART_1_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_1_de) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_1, Rank=600, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_1 */ 
		CONSTR_LABEL_PART_1_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_1_en) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_1, Rank=600, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_1 */ 
		CONSTR_LABEL_PART_1_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_1_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_1, Rank=600, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_2 */ 
		CONSTR_LABEL_PART_2 : AAABusinessTypes:UniNote 
			@i18n:Label (de="Beschreibung der Einschränkung", en="Constraint Description", fr="Description de la contrainte") 
			@sql:SQLName (value=CONSTR_LABEL_PART_2) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_LABEL_PART_2, Rank=601, ScriptDef="{This format element displays the second part of Constraint label to describe as most as possible the Constraint. It is also translated} {-------------------------------------------------------------------------------------------------------} {For Allocation Constraints} IF( model_constr_elt_id.constr_nat_e = 1, \"]\", {For Constraints Sets} IF(strat_nat_e = 4, NULL, {For Security Out Constraints} IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"] %s %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\", \"de\", NULL), DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\", \"de\", NULL)), PRINTF(\"] %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\",TSL_CURRENT_LANGUAGE(), NULL)) ), IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"] %s %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\", \"de\", NULL), DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\", \"de\", NULL)), PRINTF(\"] %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\",TSL_CURRENT_LANGUAGE(), NULL)) ), {For Security In Constraints} IF( model_constr_elt_id.constr_nat_e = 2, IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"]\", IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, \"]\" )) ) ) ) ) )") 
			@aaa:scpt (value="{This format element displays the second part of Constraint label to describe as most as possible the Constraint. It is also translated} {-------------------------------------------------------------------------------------------------------} {For Allocation Constraints} IF( model_constr_elt_id.constr_nat_e = 1, \"]\", {For Constraints Sets} IF(strat_nat_e = 4, NULL, {For Security Out Constraints} IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"] %s %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\", \"de\", NULL), DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\", \"de\", NULL)), PRINTF(\"] %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\",TSL_CURRENT_LANGUAGE(), NULL)) ), IF( model_constr_elt_id.constr_nat_e = 3 AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, IF( TSL_CURRENT_LANGUAGE() = \"de\", PRINTF(\"] %s %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR1\", \"de\", NULL), DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\", \"de\", NULL)), PRINTF(\"] %s\", DISP_MSG(\"User Message\",\"PCK_DS_SEC_OUT_CSTR2\",TSL_CURRENT_LANGUAGE(), NULL)) ), {For Security In Constraints} IF( model_constr_elt_id.constr_nat_e = 2, IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"]\", IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, \"]\" )) ) ) ) ) )") 
		
		/* CONSTR_LABEL_PART_2 */ 
		CONSTR_LABEL_PART_2_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_2_de) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_2, Rank=601, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_2 */ 
		CONSTR_LABEL_PART_2_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_2_en) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_2, Rank=601, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_LABEL_PART_2 */ 
		CONSTR_LABEL_PART_2_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=CONSTR_LABEL_PART_2_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_LABEL_PART_2, Rank=601, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_POSITION_AFTE */ 
		CONSTR_POSITION_AFTER : AAABusinessTypes:Number 
			@i18n:Label (de="Position vorher", en="Position After", fr="Position après") 
			@sql:SQLName (value=CONSTR_POSITION_AFTER) 
			@aaa:TripleA (FormatEltName=CONSTR_POSITION_AFTE, Rank=43, ScriptDef="{This format element displays the weight after orders of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, eff_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n*1 * portfolio_id.mkt_val_m ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the weight after orders of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, eff_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n*1 * portfolio_id.mkt_val_m ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
		
		/* CONSTR_POSITION_BEFO */ 
		CONSTR_POSITION_BEFORE : AAABusinessTypes:Number 
			@i18n:Label (de="Position nachher", en="Position Before", fr="Position avant") 
			@sql:SQLName (value=CONSTR_POSITION_BEFORE) 
			@aaa:TripleA (FormatEltName=CONSTR_POSITION_BEFO, Rank=42, ScriptDef="{This format element displays the weight before orders of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, current_market_value_m*1 ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the weight before orders of the corresponding market segment for an Allocation Constraint and the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint. For Security In and Security Out Constraints, the bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( strat_nat_e = 4 {Constraints Set} OR model_constr_elt_id.dim_instr_dict_id = 400 {List of instrument}, NULL, {ELSE} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_weight_cont_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, act_qty_n*1 + model_constr_elt_id.min_weight_n*1, {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, current_market_value_m*1 ) {End of sixth IF} ) {End of fifth IF} ) {End of fourth IF} ) {End of third IF} ) {End of second IF} ) {End of first IF}") 
		
		/* CONSTR_REF_CURR */ 
		CONSTR_REF_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=CONSTR_REF_CURR) 
			@aaa:TripleA (FormatEltName=CONSTR_REF_CURR, Rank=40, ScriptDef="{This format element displays the Constraint currency if its bound type is in amount} {------------------------------------------------------------------} IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", model_constr_elt_id.constr_bound_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, model_constr_elt_id.constr_bound_curr_id.code ) )") 
			@aaa:scpt (value="{This format element displays the Constraint currency if its bound type is in amount} {------------------------------------------------------------------} IF( model_constr_elt_id.constr_bound_nat_e = 1 {Amount}, IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", model_constr_elt_id.constr_bound_curr_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, model_constr_elt_id.constr_bound_curr_id.code ) )") 
		
		/* CONSTR_SET_FILTER */ 
		CONSTR_SET_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTR_SET_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTR_SET_FILTER, Rank=14, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set } {-------------------------------------------------------------------------} IF( {Constraints Sets} (strat_nat_e = 4 AND level_n = 2), 1,0)") 
		
		/* CONSTR_SEVERITY_INDI */ 
		CONSTR_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad-Anzeiger, en="Severity Indicator", fr="Indicateur de sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_INDI, Rank=102, ScriptDef="{This script indicates, using \"traffic lights\", if the Constraints defined on a market segment, an instrument or a list of instruments is inline with the actual weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint itself. \"Traffic lights\" are: - \"0\" when actual weight does not breach the Constraint - \"1\" when actual weight breaches the Constraint, but the Constraint severity is not defined as requesting a clarification or blocking - \"2\" when actual weight breaches the Constraints and the Constraint severity is defined as requesting a clarification, but not blocking - \"3\" when actual weight breaches the Constraints and the Constraint severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the actual weight (act_weight_cont_n) of the market segment, instrument or instrument list breaches the Constraint or not. If the actual weight is not breaching the Constraint, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"3\" is returned and the script ends here. Otherwise, the script goes to the next step. 3) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"2\" is returned otherwise it is the value \"1\". In any case, the script ends here. REMARKS: Security Out Constraints are not evaluated here, because they are in fact mandate exclusion} {-------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (1,2, 3) {Allocation, Security In and Security Out Constraints} OR strat_nat_e = 4 {Constraints Sets}, {If actual weight is not breaching the Constraint, the returned value is \"0\"} IF( constraint_check_e = 1, 0, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"2\"} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 3, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"1\". If it is not the case, the returned value is \"0\".} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 2, 1 ))), NULL )") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if the Constraints defined on a market segment, an instrument or a list of instruments is inline with the actual weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint itself. \"Traffic lights\" are: - \"0\" when actual weight does not breach the Constraint - \"1\" when actual weight breaches the Constraint, but the Constraint severity is not defined as requesting a clarification or blocking - \"2\" when actual weight breaches the Constraints and the Constraint severity is defined as requesting a clarification, but not blocking - \"3\" when actual weight breaches the Constraints and the Constraint severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the actual weight (act_weight_cont_n) of the market segment, instrument or instrument list breaches the Constraint or not. If the actual weight is not breaching the Constraint, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"3\" is returned and the script ends here. Otherwise, the script goes to the next step. 3) The script checks whether the Constraint severity (criticalness_e) is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the Constraint severity is greater or equal to the severity threshold, the value \"2\" is returned otherwise it is the value \"1\". In any case, the script ends here. REMARKS: Security Out Constraints are not evaluated here, because they are in fact mandate exclusion} {-------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (1,2, 3) {Allocation, Security In and Security Out Constraints} OR strat_nat_e = 4 {Constraints Sets}, {If actual weight is not breaching the Constraint, the returned value is \"0\"} IF( constraint_check_e = 1, 0, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"2\"} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 3, {Otherwise if the Constraint severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"1\". If it is not the case, the returned value is \"0\".} {ELSE} IF( @CONSTR_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 2, 1 ))), NULL )") 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef="{This format element displays the severity (also known as criticity) defined on the Constraint. f the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] )") 
			@aaa:scpt (value="{This format element displays the severity (also known as criticity) defined on the Constraint. f the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] )") 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_de) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_en) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_LABE */ 
		CONSTR_SEVERITY_LABEL_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=CONSTR_SEVERITY_LABEL_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_LABE, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_SEVERITY_VALU */ 
		CONSTR_SEVERITY_VALUE : AAABusinessTypes:Enum 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=CONSTR_SEVERITY_VALUE) 
			@aaa:TripleA (FormatEltName=CONSTR_SEVERITY_VALU, Rank=90, ScriptDef="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the Constraint} {-----------------------------------------------------------} criticalness_e") 
			@aaa:scpt (value="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the Constraint} {-----------------------------------------------------------} criticalness_e") 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Massnahme bezgl. der Einschränkung", en="Constraint Treatment", fr="Traitement de la contrainte") 
			@sql:SQLName (value=CONSTR_TREAT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef="IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_treat_e <> 0 {The value <None> for treatment is not taken into account for the display}, model_constr_elt_id.constr_treat_e.LABEL[TSL_CURRENT_LANGUAGE()])") 
			@aaa:scpt (value="IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_treat_e <> 0 {The value <None> for treatment is not taken into account for the display}, model_constr_elt_id.constr_treat_e.LABEL[TSL_CURRENT_LANGUAGE()])") 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_de) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_en) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTR_TREAT */ 
		CONSTR_TREAT_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTR_TREAT_fr) 
			@aaa:TripleA (FormatEltName=CONSTR_TREAT, Rank=80, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_FILTER */ 
		CONSTRAINTS_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTRAINTS_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_FILTER, Rank=10, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Einschränkungen", en="Constraints Set", fr="Set de contraintes") 
			@sql:SQLName (value=CONSTRAINTS_SET) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=CONSTRAINTS_SET, Rank=37, ScriptDef="{This format element displays the name of the Constraint, if it is an elment of a Constraints Set. The algorithm first try to find its translated denomination, then its denomination. Remarks: If translated or default denomination does not exist for the element, then nothing is displayed. This is because it is impossible to define a name for elements of Constraint Sets} {--------------------------------------------------------------} IF( strat_nat_e = 4, strategy_elt_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, NULL )") 
			@aaa:scpt (value="{This format element displays the name of the Constraint, if it is an elment of a Constraints Set. The algorithm first try to find its translated denomination, then its denomination. Remarks: If translated or default denomination does not exist for the element, then nothing is displayed. This is because it is impossible to define a name for elements of Constraint Sets} {--------------------------------------------------------------} IF( strat_nat_e = 4, strategy_elt_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, NULL )") 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_de) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=37, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_en) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=37, ScriptDef) 
			@aaa:scpt (value) 
		
		/* CONSTRAINTS_SET */ 
		CONSTRAINTS_SET_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CONSTRAINTS_SET_fr) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_SET, Rank=37, ScriptDef) 
			@aaa:scpt (value) 
		
		/* data_secu_prof_id */ 
		data_secu_prof_id : AAABusinessTypes:Id 
			@sql:SQLName (value=data_secu_prof_id) 
			@aaa:TripleA (FormatEltName=data_secu_prof_id, Rank=1, ScriptDef=portfolio_id.data_secu_prof_id) 
			@aaa:scpt (value=portfolio_id.data_secu_prof_id) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT : AAABusinessTypes:UniLongName 
			@i18n:Label (de="Fester Anteil", en="Fixed Objective", fr="Objectif fixe") 
			@sql:SQLName (value=FIXED_WEIGHT) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef="{This format element checks whether the Allocation Constraint is defined with fixed objectives or not. If it fixed objectives, then the value \"Yes\" is displayed.} {----------------------------------------------------------------------} IF(model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint} AND fixed_cell_f = 1, DISP_MSG(\"User Message\",\"PCK_DS_FIXED_OBJ\",TSL_CURRENT_LANGUAGE(),NULL), NULL)") 
			@aaa:scpt (value="{This format element checks whether the Allocation Constraint is defined with fixed objectives or not. If it fixed objectives, then the value \"Yes\" is displayed.} {----------------------------------------------------------------------} IF(model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint} AND fixed_cell_f = 1, DISP_MSG(\"User Message\",\"PCK_DS_FIXED_OBJ\",TSL_CURRENT_LANGUAGE(),NULL), NULL)") 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_de : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_de) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_en : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_en) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* FIXED_WEIGHT */ 
		FIXED_WEIGHT_fr : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=FIXED_WEIGHT_fr) 
			@aaa:TripleA (FormatEltName=FIXED_WEIGHT, Rank=53, ScriptDef) 
			@aaa:scpt (value) 
		
		/* id */ 
		id : AAABusinessTypes:Id 
			@sql:SQLName (value=id) 
			@aaa:TripleA (FormatEltName=id, Rank=5, ScriptDef=id) 
			@aaa:scpt (value=id) 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Instrument, en="Instrument Code", fr="Code de l\'instrument") 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=500, ScriptDef="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, instr_id.code, NULL )") 
			@aaa:scpt (value="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, instr_id.code, NULL )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_DENOM, Rank=501, ScriptDef="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, {DB DENOM} IF(instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {DB NAME} instr_id.name ) )") 
			@aaa:scpt (value="IF( model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, {DB DENOM} IF(instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom<>NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {DB NAME} instr_id.name ) )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=501, ScriptDef) 
			@aaa:scpt (value) 
		
		/* instr_id */ 
		instr_id : AAABusinessTypes:Id 
			@sql:SQLName (value=instr_id) 
			@aaa:TripleA (FormatEltName=instr_id, Rank=6, ScriptDef=instr_id) 
			@aaa:scpt (value=instr_id) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrumentliste, en="Instrument List", fr="Liste d\'instruments") 
			@sql:SQLName (value=INSTR_LIST_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef="{This format element checks whether it is an Instrument or an Instrument Liste related to the Security In Constraints. If it is an Instrument List, then its translated denomination is searched, otherwise it is its denomination and at last its name} {-----------------------------------------------------------------------} IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instruments}, IF( GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).name ) )") 
			@aaa:scpt (value="{This format element checks whether it is an Instrument or an Instrument Liste related to the Security In Constraints. If it is an Instrument List, then its translated denomination is searched, otherwise it is its denomination and at last its name} {-----------------------------------------------------------------------} IF( model_constr_elt_id.dim_instr_dict_id = 400 {List of instruments}, IF( GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} GET_OBJECT(\"list\", model_constr_elt_id.instr_object_id).name ) )") 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_LIST_DENOM */ 
		INSTR_LIST_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_LIST_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_LIST_DENOM, Rank=502, ScriptDef) 
			@aaa:scpt (value) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* MARKET_STRUCTURE */ 
		MARKET_STRUCTURE : AAABusinessTypes:UniNote 
			@i18n:Label (de=Marktsegment, en="Market Segment", fr="Segment de marché") 
			@sql:SQLName (value=MARKET_STRUCTURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MARKET_STRUCTURE, Rank=35, ScriptDef="{This format element is used to display the complete name of a market segment on which an Allocation Constraint is applied. The complete path is described until level 10, without the level 1 corresponding to an instrument. For deeper levels, the scripts must be updated. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1, PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {level 11 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 11}, {level 10 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 10}, {level 9 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 9}, {level 8 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 8}, {level 7 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 7}, {level 6 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 6}, {level 5 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 5}, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, {Start of first argument of CONCAT} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} ) {End of IF for level 2} ) )") 
			@aaa:scpt (value="{This format element is used to display the complete name of a market segment on which an Allocation Constraint is applied. The complete path is described until level 10, without the level 1 corresponding to an instrument. For deeper levels, the scripts must be updated. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1, PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {level 11 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 11}, {level 10 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 10}, {level 9 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 9}, {level 8 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 8}, {level 7 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 7}, {level 6 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 6}, {level 5 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 5}, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, CONCAT( {Start of first argument of CONCAT} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} ,\" -> \" ) {End of CONCAT} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, {Start of first argument of CONCAT} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} ) {End of IF for level 2} ) )") 
		
		/* MARKET_STRUCTURE */ 
		MARKET_STRUCTURE_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=MARKET_STRUCTURE_de) 
			@aaa:TripleA (FormatEltName=MARKET_STRUCTURE, Rank=35, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MARKET_STRUCTURE */ 
		MARKET_STRUCTURE_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=MARKET_STRUCTURE_en) 
			@aaa:TripleA (FormatEltName=MARKET_STRUCTURE, Rank=35, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MARKET_STRUCTURE */ 
		MARKET_STRUCTURE_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=MARKET_STRUCTURE_fr) 
			@aaa:TripleA (FormatEltName=MARKET_STRUCTURE, Rank=35, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MAX_OBJ */ 
		MAX_OBJ : AAABusinessTypes:Number 
			@i18n:Label (de="Oberer Zielwert", en="Maximum Objective", fr="Objectif maximum") 
			@sql:SQLName (value=MAX_OBJ) 
			@aaa:TripleA (FormatEltName=MAX_OBJ, Rank=58, ScriptDef="{This format element retrieves the maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1, 2) {Allocation and Security In Constraints}, model_constr_elt_id.max_weight_n, NULL )") 
			@aaa:scpt (value="{This format element retrieves the maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1, 2) {Allocation and Security In Constraints}, model_constr_elt_id.max_weight_n, NULL )") 
		
		/* MAX_OBJ_TYPE_OTHER */ 
		MAX_OBJ_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Oberer Zielwert-Typ", en="Maximum Objective Type", fr="Type de l\'objectif maximum") 
			@sql:SQLName (value=MAX_OBJ_TYPE_OTHER) 
			@aaa:TripleA (FormatEltName=MAX_OBJ_TYPE_OTHER, Rank=61, ScriptDef="{This format element retrieves the bound type for maximum objective defined by a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, @CONSTR_REF_CURR, IF( model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", DOMAIN().language_dict_id, NULL), NULL ) ) )") 
			@aaa:scpt (value="{This format element retrieves the bound type for maximum objective defined by a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, @CONSTR_REF_CURR, IF( model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", DOMAIN().language_dict_id, NULL), NULL ) ) )") 
		
		/* MAX_OBJ_TYPE_PERCENT */ 
		MAX_OBJ_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Oberer Zielwert-Typ", en="Maximum Objective Type", fr="Type de l\'objectif maximum") 
			@sql:SQLName (value=MAX_OBJ_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=MAX_OBJ_TYPE_PERCENT, Rank=60, ScriptDef="{This format element retrieves the bound type for maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", {ELSE} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", NULL ) )") 
			@aaa:scpt (value="{This format element retrieves the bound type for maximum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", {ELSE} IF( max_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", NULL ) )") 
		
		/* MIN_OBJ */ 
		MIN_OBJ : AAABusinessTypes:Number 
			@i18n:Label (de="Unterer Zielwert", en="Minimum Objective", fr="Objectif minimum") 
			@sql:SQLName (value=MIN_OBJ) 
			@aaa:TripleA (FormatEltName=MIN_OBJ, Rank=54, ScriptDef="{This format element retrieves the minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1,2) {Allocation and Security In Constraints}, model_constr_elt_id.min_weight_n, NULL )") 
			@aaa:scpt (value="{This format element retrieves the minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e IN (1,2) {Allocation and Security In Constraints}, model_constr_elt_id.min_weight_n, NULL )") 
		
		/* MIN_OBJ_SEC_OUT */ 
		MIN_OBJ_SEC_OUT : AAABusinessTypes:UniName 
			@i18n:Label (de="Menge ausser Verwaltungsvollmacht", en="Quantity Out Of Mandate", fr="Quantité hors mandat") 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT, Rank=62, ScriptDef="{This format element retrieves the minimum objective defined by a Security Out Constraint. This format element is in fact used in the format element [CONSTR_LABEL]} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints}, PRINTF(\"%5.2f\", model_constr_elt_id.min_weight_n) )") 
			@aaa:scpt (value="{This format element retrieves the minimum objective defined by a Security Out Constraint. This format element is in fact used in the format element [CONSTR_LABEL]} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints}, PRINTF(\"%5.2f\", model_constr_elt_id.min_weight_n) )") 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Typ der Menge ausser Verwaltungsvollmacht", en="Type of Quantity Out Of Mandate", fr="Type de la quantité hors mandat") 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_OTHER) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=65, ScriptDef="{This format element retrieves the bound type for minimum objective defined by a Security Out Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), NULL )") 
			@aaa:scpt (value="{This format element retrieves the bound type for minimum objective defined by a Security Out Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), NULL )") 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_OTHER_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_OTHER_de) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=65, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_OTHER_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_OTHER_en) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=65, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_OTHER_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_OTHER_fr) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=65, ScriptDef) 
			@aaa:scpt (value) 
		
		/* MIN_OBJ_SEC_OUT_TYPE */ 
		MIN_OBJ_SEC_OUT_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Typ der Menge ausser Verwaltungsvollmacht", en="Type of Quantity Out Of Mandate", fr="Type de la quantité hors mandat") 
			@sql:SQLName (value=MIN_OBJ_SEC_OUT_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_SEC_OUT_TYPE, Rank=64, ScriptDef="{This format element retrieves the bound type for minimum objective defined by a Security Out Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, \"%\", NULL )") 
			@aaa:scpt (value="{This format element retrieves the bound type for minimum objective defined by a Security Out Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 3 {Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage}, \"%\", NULL )") 
		
		/* MIN_OBJ_TYPE_OTHER */ 
		MIN_OBJ_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Unterer Zielwert-Typ", en="Minimum Objective Type", fr="Type de l\'objectif minimum") 
			@sql:SQLName (value=MIN_OBJ_TYPE_OTHER) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_TYPE_OTHER, Rank=57, ScriptDef="{This format element retrieves the bound type for minimum objective defined by a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, @CONSTR_REF_CURR, IF( model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", DOMAIN().language_dict_id, NULL), NULL ) ) )") 
			@aaa:scpt (value="{This format element retrieves the bound type for minimum objective defined by a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints}, IF( model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount}, @CONSTR_REF_CURR, IF( model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", DOMAIN().language_dict_id, NULL), NULL ) ) )") 
		
		/* MIN_OBJ_TYPE_PERCENT */ 
		MIN_OBJ_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Unterer Zielwert-Typ", en="Minimum Objective Type", fr="Type de l\'objectif minimum") 
			@sql:SQLName (value=MIN_OBJ_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=MIN_OBJ_TYPE_PERCENT, Rank=56, ScriptDef="{This format element retrieves the bound type for minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", {ELSE} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", NULL ) )") 
			@aaa:scpt (value="{This format element retrieves the bound type for minimum objective defined by an Allocation Constraint or a Security In Constraint.} {-----------------------------------------------------------------------------} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 1 {Allocation Constraints}, \"%\", {ELSE} IF( min_weight_cont_n <> NULL AND model_constr_elt_id.constr_nat_e = 2 {Security In Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Percentage}, \"%\", NULL ) )") 
		
		/* MODELL_CONSTR_FILTER */ 
		MODELL_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=MODELL_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=MODELL_CONSTR_FILTER, Rank=15, ScriptDef="{This format element allows only the display of the following Constraints: - Allocation Constraint - Security In Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1, 0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Allocation Constraint - Security In Constraint } {-------------------------------------------------------------------------} IF( {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1, 0)") 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Portfolionummer, en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=30, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=31, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* POSITION_TYPE_OTHER */ 
		POSITION_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Aktueller Anteil-Typ", en="Actual Weight Type", fr="Type du poids actuel") 
			@sql:SQLName (value=POSITION_TYPE_OTHER) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=POSITION_TYPE_OTHER, Rank=52, ScriptDef="{This format element displays the constraint bound type for the actual weight of the corresponding market segment for an Allocation Constraint and the constraint bound type for the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, @REF_CURRENCY, NULL ) )") 
			@aaa:scpt (value="{This format element displays the constraint bound type for the actual weight of the corresponding market segment for an Allocation Constraint and the constraint bound type for the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), {ELSE} IF( model_constr_elt_id.constr_nat_e = 2 {Security In Constraint} AND model_constr_elt_id.constr_bound_nat_e = 1 {Constraint in amount} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, @REF_CURRENCY, NULL ) )") 
		
		/* POSITION_TYPE_OTHER */ 
		POSITION_TYPE_OTHER_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=POSITION_TYPE_OTHER_de) 
			@aaa:TripleA (FormatEltName=POSITION_TYPE_OTHER, Rank=52, ScriptDef) 
			@aaa:scpt (value) 
		
		/* POSITION_TYPE_OTHER */ 
		POSITION_TYPE_OTHER_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=POSITION_TYPE_OTHER_en) 
			@aaa:TripleA (FormatEltName=POSITION_TYPE_OTHER, Rank=52, ScriptDef) 
			@aaa:scpt (value) 
		
		/* POSITION_TYPE_OTHER */ 
		POSITION_TYPE_OTHER_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=POSITION_TYPE_OTHER_fr) 
			@aaa:TripleA (FormatEltName=POSITION_TYPE_OTHER, Rank=52, ScriptDef) 
			@aaa:scpt (value) 
		
		/* POSITION_TYPE_PERCEN */ 
		POSITION_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Aktueller Anteil-Typ", en="Actual Weight Type", fr="Type du poids actuel") 
			@sql:SQLName (value=POSITION_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=POSITION_TYPE_PERCEN, Rank=51, ScriptDef="{This format element displays the constraint bound type for the actual weight of the corresponding market segment for an Allocation Constraint and the constraint bound type for the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, \"%\", {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"%\", NULL ) )") 
			@aaa:scpt (value="{This format element displays the constraint bound type for the actual weight of the corresponding market segment for an Allocation Constraint and the constraint bound type for the actual weight of the corresponding instrument for a Security In Constraint or a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 1 {Allocation Constraint}, \"%\", {ELSE} IF( model_constr_elt_id.constr_nat_e IN (2, 3) {Security In and Security Out Constraints} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"%\", NULL ) )") 
		
		/* REF_CURRENCY */ 
		REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=REF_CURRENCY, Rank=25, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* REMAINING_POS_TYPE_O */ 
		REMAINING_POS_TYPE_OTHER : AAABusinessTypes:UniCode 
			@i18n:Label (de="Sonstiges in Verwaltungsmandat", en="Remaining in Management Mandate", fr="Restant dans le mandat de gestion") 
			@sql:SQLName (value=REMAINING_POS_TYPE_OTHER) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=REMAINING_POS_TYPE_O, Rank=69, ScriptDef="{This format element displays the constraint bound type for the remaining weight of the corresponding instrument for a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), NULL )") 
			@aaa:scpt (value="{This format element displays the constraint bound type for the remaining weight of the corresponding instrument for a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, DISP_MSG(\"User Message\",\"PCK_DS_CSTR_IN_QTY\", TSL_CURRENT_LANGUAGE(), NULL), NULL )") 
		
		/* REMAINING_POS_TYPE_O */ 
		REMAINING_POS_TYPE_OTHER_de : AAABusinessTypes:UniCode 
			@sql:SQLName (value=REMAINING_POS_TYPE_OTHER_de) 
			@aaa:TripleA (FormatEltName=REMAINING_POS_TYPE_O, Rank=69, ScriptDef) 
			@aaa:scpt (value) 
		
		/* REMAINING_POS_TYPE_O */ 
		REMAINING_POS_TYPE_OTHER_en : AAABusinessTypes:UniCode 
			@sql:SQLName (value=REMAINING_POS_TYPE_OTHER_en) 
			@aaa:TripleA (FormatEltName=REMAINING_POS_TYPE_O, Rank=69, ScriptDef) 
			@aaa:scpt (value) 
		
		/* REMAINING_POS_TYPE_O */ 
		REMAINING_POS_TYPE_OTHER_fr : AAABusinessTypes:UniCode 
			@sql:SQLName (value=REMAINING_POS_TYPE_OTHER_fr) 
			@aaa:TripleA (FormatEltName=REMAINING_POS_TYPE_O, Rank=69, ScriptDef) 
			@aaa:scpt (value) 
		
		/* REMAINING_POS_TYPE_P */ 
		REMAINING_POS_TYPE_PERCENT : AAABusinessTypes:UniCode 
			@i18n:Label (de="Sonstiges in Verwaltungsmandat", en="Remaining in Management Mandate", fr="Restant dans le mandat de gestion") 
			@sql:SQLName (value=REMAINING_POS_TYPE_PERCENT) 
			@aaa:TripleA (FormatEltName=REMAINING_POS_TYPE_P, Rank=68, ScriptDef="{This format element displays the constraint bound type for the remaining weight of the corresponding instrument for a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"%\", NULL )") 
			@aaa:scpt (value="{This format element displays the constraint bound type for the remaining weight of the corresponding instrument for a Security Out Constraint.} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, \"%\", NULL )") 
		
		/* REMAINING_POSITION */ 
		REMAINING_POSITION : AAABusinessTypes:Number 
			@i18n:Label (de="Sonstiges in Verwaltungsmandat", en="Remaining in Management Mandate", fr="Restant dans le mandat de gestion") 
			@sql:SQLName (value=REMAINING_POSITION) 
			@aaa:TripleA (FormatEltName=REMAINING_POSITION, Rank=66, ScriptDef="{This format element displays the remaining weight of the corresponding instrument for a Security Out Constraint. The bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 AND eff_weight_cont_n <> NULL {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 AND eff_qty_n <> NULL {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n, 0 ) {End of second IF} ) {End of first IF}") 
			@aaa:scpt (value="{This format element displays the remaining weight of the corresponding instrument for a Security Out Constraint. The bound type is also evaluated to display correctly the actual weight} {---------------------------------------------------------------------------------------} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 2 AND eff_weight_cont_n <> NULL {Constraint in percentage} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_weight_cont_n, {ELSE} IF( model_constr_elt_id.constr_nat_e = 3 {Security Out Constraint} AND model_constr_elt_id.constr_bound_nat_e = 3 AND eff_qty_n <> NULL {Constraint in quantity} AND model_constr_elt_id.dim_instr_dict_id = 900 {Instrument}, eff_qty_n, 0 ) {End of second IF} ) {End of first IF}") 
		
		/* SECU_IN_CONSTR_FILTE */ 
		SECU_IN_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SECU_IN_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=SECU_IN_CONSTR_FILTE, Rank=12, ScriptDef="{This format element allows only the display of the following Constraints: - Security In Constraint } {-------------------------------------------------------------------------} IF( {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Security In Constraint } {-------------------------------------------------------------------------} IF( {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2), 1,0)") 
		
		/* SECU_OUT_CONSTR_FILT */ 
		SECU_OUT_CONSTR_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SECU_OUT_CONSTR_FILTER) 
			@aaa:TripleA (FormatEltName=SECU_OUT_CONSTR_FILT, Rank=13, ScriptDef="{This format element allows only the display of the following Constraints: - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Security Out Constraint } {-------------------------------------------------------------------------} IF( {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1,0)") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
	} 
	/* PCK_DS_PTCC_OBJ */ 
	PCK_DS_PTCC_OBJ 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Order Entry") 
		@sql:SQLName (value=PCK_DS_PTCC_OBJ) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Order Entry", FinFuncProcName=order_entry, FormatName=PCK_DS_PTCC_OBJ) 
	{ 
		/* CHECK_STRAT */ 
		CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=CHECK_STRAT, Rank=100, ScriptDef=strat_check_e) 
			@aaa:scpt (value=strat_check_e) 
		
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* CUSTODY_ACCOUNT */ 
		CUSTODY_ACCOUNT : AAABusinessTypes:UniInfo 
			@i18n:Label (en="Custoday Account") 
			@sql:SQLName (value=CUSTODY_ACCOUNT) 
			@aaa:TripleA (FormatEltName=CUSTODY_ACCOUNT, Rank=3002, ScriptDef) 
			@aaa:scpt (value) 
		
		/* data_secu_prof_id */ 
		data_secu_prof_id : AAABusinessTypes:Id 
			@sql:SQLName (value=data_secu_prof_id) 
			@aaa:TripleA (FormatEltName=data_secu_prof_id, Rank=1, ScriptDef=portfolio_id.data_secu_prof_id) 
			@aaa:scpt (value=portfolio_id.data_secu_prof_id) 
		
		/* DEPOSIT_NAME */ 
		DEPOSIT_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Lagerstelle, en=Deposit, fr="Dépositaire") 
			@sql:SQLName (value=DEPOSIT_NAME) 
			@aaa:TripleA (FormatEltName=DEPOSIT_NAME, Rank=3001, ScriptDef=deposit_id.name) 
			@aaa:scpt (value=deposit_id.name) 
		
		/* DETAILS */ 
		DETAILS : AAABusinessTypes:UniNote 
			@i18n:Label (de=Details, en=Details, fr="Détails") 
			@sql:SQLName (value=DETAILS) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=DETAILS, Rank=2005, ScriptDef="IF( disp_parent_ext_strat_elem_id.instr_id = NULL, NULL, {ELSE} IF( instr_id.nature_e = 4 {Cash}, {Cash position} IF( ext_oper_id = NULL, \"Actual position\", {ELSE} PRINTF( \"%s order on %s\", op_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], IF( ext_oper_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_oper_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, ext_oper_id.instr_id.name ) ) ), {None cash position} IF( ext_oper_id = NULL, \"Actual position\", {ELSE} PRINTF( \"%s order\", op_nat_e.LABEL[TSL_CURRENT_LANGUAGE()] ) ) ) )") 
			@aaa:scpt (value="IF( disp_parent_ext_strat_elem_id.instr_id = NULL, NULL, {ELSE} IF( instr_id.nature_e = 4 {Cash}, {Cash position} IF( ext_oper_id = NULL, \"Actual position\", {ELSE} PRINTF( \"%s order on %s\", op_nat_e.LABEL[TSL_CURRENT_LANGUAGE()], IF( ext_oper_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_oper_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, ext_oper_id.instr_id.name ) ) ), {None cash position} IF( ext_oper_id = NULL, \"Actual position\", {ELSE} PRINTF( \"%s order\", op_nat_e.LABEL[TSL_CURRENT_LANGUAGE()] ) ) ) )") 
		
		/* DETAILS */ 
		DETAILS_de : AAABusinessTypes:UniNote 
			@sql:SQLName (value=DETAILS_de) 
			@aaa:TripleA (FormatEltName=DETAILS, Rank=2005, ScriptDef) 
			@aaa:scpt (value) 
		
		/* DETAILS */ 
		DETAILS_en : AAABusinessTypes:UniNote 
			@sql:SQLName (value=DETAILS_en) 
			@aaa:TripleA (FormatEltName=DETAILS, Rank=2005, ScriptDef) 
			@aaa:scpt (value) 
		
		/* DETAILS */ 
		DETAILS_fr : AAABusinessTypes:UniNote 
			@sql:SQLName (value=DETAILS_fr) 
			@aaa:TripleA (FormatEltName=DETAILS, Rank=2005, ScriptDef) 
			@aaa:scpt (value) 
		
		/* HEAD_FILTER */ 
		HEAD_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=HEAD_FILTER) 
			@aaa:TripleA (FormatEltName=HEAD_FILTER, Rank=11, ScriptDef="{This format element is used as a filter to extract only head strategy level (Asset Allocation and Dummy Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {To be sure that the head strategies are not included in a Benchmark composition} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategy is not a Recommendation List or a Constraint Set} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis} AND leaf_f = 1, {Otherwise, if context (domain) is set with a specific instrument, the system will create 2 double rows and the WUI will not support it} 1, 0)") 
			@aaa:scpt (value="{This format element is used as a filter to extract only head strategy level (Asset Allocation and Dummy Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {To be sure that the head strategies are not included in a Benchmark composition} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategy is not a Recommendation List or a Constraint Set} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis} AND leaf_f = 1, {Otherwise, if context (domain) is set with a specific instrument, the system will create 2 double rows and the WUI will not support it} 1, 0)") 
		
		/* id */ 
		id : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=id) 
			@aaa:TripleA (FormatEltName=id, Rank=5, ScriptDef="NUMSTR(id)") 
			@aaa:scpt (value="NUMSTR(id)") 
		
		/* INSTR_CODE */ 
		INSTR_CODE : AAABusinessTypes:UniCode 
			@sql:SQLName (value=INSTR_CODE) 
			@aaa:TripleA (FormatEltName=INSTR_CODE, Rank=499, ScriptDef=instr_id.code) 
			@aaa:scpt (value=instr_id.code) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Instrument, en=Instrument, fr=Instrument) 
			@sql:SQLName (value=INSTR_DENOM) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=INSTR_DENOM, Rank=20, ScriptDef="{DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name )") 
			@aaa:scpt (value="{DB DENOM} IF( instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} instr_id.name )") 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_de) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_en) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* INSTR_DENOM */ 
		INSTR_DENOM_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTR_DENOM_fr) 
			@aaa:TripleA (FormatEltName=INSTR_DENOM, Rank=20, ScriptDef) 
			@aaa:scpt (value) 
		
		/* instr_id */ 
		instr_id : AAABusinessTypes:Id 
			@sql:SQLName (value=instr_id) 
			@aaa:TripleA (FormatEltName=instr_id, Rank=6, ScriptDef=instr_id) 
			@aaa:scpt (value=instr_id) 
		
		/* investment_profile_i */ 
		investment_profile_id : AAABusinessTypes:Id 
			@sql:SQLName (value=investment_profile_id) 
			@aaa:TripleA (FormatEltName=investment_profile_i, Rank=8, ScriptDef=ext_strategy_link_id.ref_strategy_id) 
			@aaa:scpt (value=ext_strategy_link_id.ref_strategy_id) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Investment-Profil, en="Investment Profile", fr="Profil d\'investissement") 
			@sql:SQLName (value=IP_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef="{This format element displays the name of the Investment Profile containing the strategies. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link_id.ref_strategy_id.name )") 
			@aaa:scpt (value="{This format element displays the name of the Investment Profile containing the strategies. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, ext_strategy_link_id.ref_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} ext_strategy_link_id.ref_strategy_id.name )") 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef) 
			@aaa:scpt (value) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef) 
			@aaa:scpt (value) 
		
		/* IP_FULL_NAME */ 
		IP_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=IP_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=IP_FULL_NAME, Rank=25, ScriptDef) 
			@aaa:scpt (value) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE : AAABusinessTypes:UniString1000 
			@i18n:Label (de=Investitionsstrategie, en="Investment Strategy", fr="Stratégie d\'investissement") 
			@sql:SQLName (value=MKT_STRUCTURE) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef="{This format element is used to display the complete name of an element. It can be a market segment or an instrument, but the complete path is described until level 10. For deeper levels, the scripts must be updated. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. ATTENTION: As the PRINTF keyword is limited to 10 arguments, the construction of the investment structure is splitted into several PRINTF keywords. This will allow the possibility to add easly extra investment structure levels for customization projects.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]%s\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER, PRINTF(\"%s%s%s%s%s\", {This PRINTF keyword is used to be able to display the results of 5 other PRINTF keywords below. Only 2 arguments are currently use and the 3 remaining ones can be used for customization} {###########} {HERE IT IS POSSIBLE TO ADD UNTIL 3 \"PRINTF\" KEYWORDS TO DISPLAY AN INVESTMENT STRUCTURE HAVING MORE THAN 20 LEVELS} {###########} PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {This PRINTF keyword is used as the fourth argument of the PRINTF keyword above} {###########} {HERE IT IS POSSIBLE TO ADD UNTIL 9 ARGUMENTS TO DISPLAY AN INVESTMENT STRUCTURE HAVING MORE THAN 11 LEVELS} {###########} {level 11 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 11}, PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {This PRINTF keyword is used as the fifth argument of the PRINTF keyword above} {level 10 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 10}, {level 9 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 9}, {level 8 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 8}, {level 7 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 7}, {level 6 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 6}, {level 5 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 5}, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.market_segment_id ) {End of CONCAT} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} , market_segment_id ) {End of PRINTF} ) {End of IF for level 2}, {level 1 arg instr} IF( instr_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, PRINTF(\"%s[HIERLEV%i]%s[HIERLEV%i]\", {DB DENOM} IF( disp_parent_ext_strat_elem_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} disp_parent_ext_strat_elem_id.instr_id.name ), ABS(disp_parent_ext_strat_elem_id), @INSTR_DENOM, ABS(id)), IF( instr_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL, PRINTF(\"%s[HIERLEV%i]\", @INSTR_DENOM, ABS(id)) ) ) {End of IF for level 1} ) ) ) ) )", SortingRank=1) 
			@aaa:scpt (value="{This format element is used to display the complete name of an element. It can be a market segment or an instrument, but the complete path is described until level 10. For deeper levels, the scripts must be updated. The usage of that format element is to be able to display a tree view in the WUI, based on Design Studio code generator. Remarks: The complete path is translated using first the translated denomination, if not available the denomination is used and at last the name. ATTENTION: As the PRINTF keyword is limited to 10 arguments, the construction of the investment structure is splitted into several PRINTF keywords. This will allow the possibility to add easly extra investment structure levels for customization projects.} {------------------------------------------------------------------------------------------------------------------------------------------------} IF( strat_level_n = 1 AND level_n = 1, PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER), PRINTF(\"%s[HIERLEV%s]%s[HIERLEV%i]%s[HIERLEV%i]%s\", @PORTFOLIO_NAME, @PORTFOLIO_CODE, @IP_FULL_NAME, @investment_profile_id, @STRATEGY_FULL_NAME, @STRATEGY_UNIQUE_IDENTIFIER, PRINTF(\"%s%s%s%s%s\", {This PRINTF keyword is used to be able to display the results of 5 other PRINTF keywords below. Only 2 arguments are currently use and the 3 remaining ones can be used for customization} {###########} {HERE IT IS POSSIBLE TO ADD UNTIL 3 \"PRINTF\" KEYWORDS TO DISPLAY AN INVESTMENT STRUCTURE HAVING MORE THAN 20 LEVELS} {###########} PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {This PRINTF keyword is used as the fourth argument of the PRINTF keyword above} {###########} {HERE IT IS POSSIBLE TO ADD UNTIL 9 ARGUMENTS TO DISPLAY AN INVESTMENT STRUCTURE HAVING MORE THAN 11 LEVELS} {###########} {level 11 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 11}, PRINTF(\"%s%s%s%s%s%s%s%s%s%s\", {This PRINTF keyword is used as the fifth argument of the PRINTF keyword above} {level 10 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 10}, {level 9 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 9}, {level 8 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 8}, {level 7 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 7}, {level 6 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 6}, {level 5 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 5}, {level 4 arg mkt seg}IF(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id ) {End of PRINTF} ) {End of IF for level 4}, {level 3 arg mkt seg}IF(disp_parent_ext_strat_elem_id.market_segment_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL AND disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, disp_parent_ext_strat_elem_id.market_segment_id.name) {End of first argument of CONCAT} , disp_parent_ext_strat_elem_id.market_segment_id ) {End of CONCAT} ) {End of IF for level 3}, {level 2 arg mkt seg}IF(market_segment_id <> NULL AND instr_id = NULL AND disp_parent_ext_strat_elem_id.market_segment_id <> NULL, PRINTF(\"%s[HIERLEV%i]\", {Start of first argument of PRINTF} IF( market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, market_segment_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, market_segment_id.name) {End of first argument of CONCAT} , market_segment_id ) {End of PRINTF} ) {End of IF for level 2}, {level 1 arg instr} IF( instr_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id <> NULL, PRINTF(\"%s[HIERLEV%i]%s[HIERLEV%i]\", {DB DENOM} IF( disp_parent_ext_strat_elem_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.instr_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} {DB NAME} disp_parent_ext_strat_elem_id.instr_id.name ), ABS(disp_parent_ext_strat_elem_id), @INSTR_DENOM, ABS(id)), IF( instr_id <> NULL AND disp_parent_ext_strat_elem_id.instr_id = NULL, PRINTF(\"%s[HIERLEV%i]\", @INSTR_DENOM, ABS(id)) ) ) {End of IF for level 1} ) ) ) ) )") 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_de : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_de) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef, SortingRank=1) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_en : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_en) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef, SortingRank=1) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE */ 
		MKT_STRUCTURE_fr : AAABusinessTypes:UniString1000 
			@sql:SQLName (value=MKT_STRUCTURE_fr) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE, Rank=42, ScriptDef, SortingRank=1) 
			@aaa:scpt (value) 
		
		/* MKT_STRUCTURE_SORT */ 
		MKT_STRUCTURE_SORT : AAABusinessTypes:Int 
			@i18n:Label (de="Sortierung der Investitionsstrategie-Struktur", en="Sorting - Investment Strategy", fr="Triage - Stratégie d\'investissement") 
			@sql:SQLName (value=MKT_STRUCTURE_SORT) 
			@aaa:TripleA (FormatEltName=MKT_STRUCTURE_SORT, Rank=43, ScriptDef="{This format element is used to define an order in the market structure (format element MKT_STRUCTURE) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: MKT_STRUCTURE_SORT := Identifier related to head strategy + Sum of the identifiers related to market segments: the market segment are automatically sorted in ascending way by the financial serveur, using the ranks in the classifications + Number between 0 and 1: only if we are at instrument level (main or sub-level), then we can sort the instrument by market value in the WUI } {--------------------------------------------} ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id) + IF( disp_parent_ext_strat_elem_id.instr_id <> NULL, 1, {ELSE} IF( instr_id <> NULL, 0, {ELSE} ABS(id) ) )") 
			@aaa:scpt (value="{This format element is used to define an order in the market structure (format element MKT_STRUCTURE) for the display in the WUI. It has only a meaning regarding the WUI, not Triple A directly. The order is defined by a sorting in ascending way on the value returned by the format. This value is an addition of the following attributes: MKT_STRUCTURE_SORT := Identifier related to head strategy + Sum of the identifiers related to market segments: the market segment are automatically sorted in ascending way by the financial serveur, using the ranks in the classifications + Number between 0 and 1: only if we are at instrument level (main or sub-level), then we can sort the instrument by market value in the WUI } {--------------------------------------------} ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id) + ABS(disp_parent_ext_strat_elem_id) + IF( disp_parent_ext_strat_elem_id.instr_id <> NULL, 1, {ELSE} IF( instr_id <> NULL, 0, {ELSE} ABS(id) ) )") 
		
		/* MKT_VAL */ 
		MKT_VAL : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktwert, en="Market Value", fr="Valeur d\'inventaire") 
			@sql:SQLName (value=MKT_VAL) 
			@aaa:TripleA (FormatEltName=MKT_VAL, Rank=44, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( current_market_value_m <> NULL, current_market_value_m, 0) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( current_market_value_m <> NULL, current_market_value_m, 0) )") 
		
		/* MKT_VALUE_REF_CURR */ 
		MKT_VALUE_REF_CURR : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=MKT_VALUE_REF_CURR) 
			@aaa:TripleA (FormatEltName=MKT_VALUE_REF_CURR, Rank=45, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* NO_LINK_FILTER */ 
		NO_LINK_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=NO_LINK_FILTER) 
			@aaa:TripleA (FormatEltName=NO_LINK_FILTER, Rank=12, ScriptDef="{This format element is used as a filter to extract positions when no strategy links exist} {-----------------------------------------------------------} IF( strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3) {to extract positions}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used as a filter to extract positions when no strategy links exist} {-----------------------------------------------------------} IF( strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3) {to extract positions}, 1, 0 )") 
		
		/* OBJ_COMPLIANCE_INDIC */ 
		OBJ_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Gradmesser des Strategieabgleichs", en=Compliance, fr="Conformité") 
			@sql:SQLName (value=OBJ_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_COMPLIANCE_INDIC, Rank=103, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element OBJ_SEVERITY_INDICATOR. Otherwise, its the format element CHECK_STRAT which is used. For head strategy level (level and strategy level are equal to 1), the objectives compliance is always ok optimal objective weight and actual weight are both equal to 100.00%.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0 AND level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @CHECK_STRAT = NULL, 0 {No Objectives Defined}, {ELSE} IF( @CHECK_STRAT = 0, 1 {Not Evaluated}, {ELSE} IF( @CHECK_STRAT = 1, 2 {Compliant}, 6 {Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" becomes \"No Objectives Defined\" - \"1\" becomes \"Not Evaluated\" - \"2\" becomes \"Compliant\" - \"3\" becomes \"Not Compliant - Low Severity\" - \"4\" becomes \"Not Compliant - Medium Severity\" - \"5\" becomes \"Not Compliant - High Severity\"} {ELSE} IF( level_n = 1 AND strat_level_n = 1, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))))) )") 
		
		/* OBJ_SEVERITY_INDICAT */ 
		OBJ_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de=Schweregrad-Anzeiger, en="Severity Indicator", fr="Indicateur de sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_INDICAT, Rank=101, ScriptDef="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if the actual weight of a market segment or an instrument is inline with its objective weight. The \"traffic lights\" are based on the severity (also known as criticity) associated to the market segment or instrument objective weight. \"Traffic lights\" are: - \"0\" when objective is not defined - \"1\" when objective is not evaluated - \"2\" when actual weight is in the set [objective weight - margin; objective weight + margin] - \"3\" when actual weight is not in the set [objective weight - margin; objective weight + margin], but the severity is not defined as requesting a clarification or blocking - \"4\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as requesting a clarification, but not blocking - \"5\" when actual weight is not in the set [objective weight - margin; objective weight + margin] and the severity is defined as blocking The bussiness rules are the following: 1) The script checks whether the objective is defined or not. If the objective is not defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether the objective is evaluated or not. If the objective is not evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether the actual weight (act_weight_cont_n) of the market segment or instrument is included in the set [objective weight - margin; objective weight + margin] or not. If the actual weight is in the set, then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether the severity (criticalness_e) of the market segment or instrument is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If the severity of the market segment or instrument is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If objective is not defined, the returned value is \"0\"} IF( @CHECK_STRAT = NULL, 0, {If objective is not evaluated, the returned value is \"1\"} IF( @CHECK_STRAT = 0, 1, {If actual weight is in the set [objective - margin; objective + margin], the returned value is \"2\"} IF( @CHECK_STRAT = 1, 2, {Otherwise if the severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if the severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @OBJ_SEVERITY_VALUE >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL : AAABusinessTypes:UniName 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef="{This format element displays the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective. If the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), IF( strategy_id.criticalness_e = 0, NULL, strategy_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), IF( strategy_elt_id.criticalness_e = 0, NULL, strategy_elt_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ) ), NULL ) )") 
			@aaa:scpt (value="{This format element displays the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective. If the value is <None> (0), then nothing is returned (NULL value)} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, IF( criticalness_e = 0, NULL, {ELSE} criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), IF( strategy_id.criticalness_e = 0, NULL, strategy_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ), IF( strategy_elt_id.criticalness_e = 0, NULL, strategy_elt_id.criticalness_e.LABEL[TSL_CURRENT_LANGUAGE()] ) ), NULL ) )") 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_de : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_de) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_en : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_en) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_LABEL */ 
		OBJ_SEVERITY_LABEL_fr : AAABusinessTypes:UniName 
			@sql:SQLName (value=OBJ_SEVERITY_LABEL_fr) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_LABEL, Rank=91, ScriptDef) 
			@aaa:scpt (value) 
		
		/* OBJ_SEVERITY_VALUE */ 
		OBJ_SEVERITY_VALUE : AAABusinessTypes:Enum 
			@i18n:Label (de=Schweregrad, en=Severity, fr="Sévérité") 
			@sql:SQLName (value=OBJ_SEVERITY_VALUE) 
			@aaa:TripleA (FormatEltName=OBJ_SEVERITY_VALUE, Rank=90, ScriptDef="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
			@aaa:scpt (value="{This format element displays a numerical value corresponding to the severity (also known as criticity) defined on the market segment or instrument objective. The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {-----------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
		
		/* OBJECTIVE_WEIGHT */ 
		OBJECTIVE_WEIGHT : AAABusinessTypes:UniInfo 
			@i18n:Label (de="Optimaler Zielwert", en="Objective\'s Optimal Weight", fr="Poids optimal de l\'objectif") 
			@sql:SQLName (value=OBJECTIVE_WEIGHT) 
			@aaa:TripleA (FormatEltName=OBJECTIVE_WEIGHT, Rank=80, ScriptDef="{This format element is used to display the optimal objective weight (after derivation) of a market segment or an instrument. } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, \"100.00% +/- 0.00%\", IF( obj_weight_cont_n = NULL, NULL, IF( obj_weight_cont_marg_n = NULL, PRINTF(\"%6.2f%s\", obj_weight_cont_n, \"% +/- 0.00%\"), {ELSE} PRINTF(\"%6.2f%s%5.2f%s\", obj_weight_cont_n, \"% +/-\", obj_weight_cont_marg_n, \"%\")))) )") 
			@aaa:scpt (value="{This format element is used to display the optimal objective weight (after derivation) of a market segment or an instrument. } {---------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, \"100.00% +/- 0.00%\", IF( obj_weight_cont_n = NULL, NULL, IF( obj_weight_cont_marg_n = NULL, PRINTF(\"%6.2f%s\", obj_weight_cont_n, \"% +/- 0.00%\"), {ELSE} PRINTF(\"%6.2f%s%5.2f%s\", obj_weight_cont_n, \"% +/-\", obj_weight_cont_marg_n, \"%\")))) )") 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Portfolionummer, en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=40, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* PORTFOLIO_FILTER */ 
		PORTFOLIO_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=PORTFOLIO_FILTER) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_FILTER, Rank=14, ScriptDef="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level} AND TOT_SUM( 1, strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, portfolio_id ) > 0 {No Objectives}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level} AND TOT_SUM( 1, strat_nat_e = 0 AND nature_e IN (2, 3) AND level_n IN (2, 3, 4) {to extract positions}, portfolio_id ) > 0 {No Objectives}, 1, 0 )") 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* portfolio_list_id */ 
		portfolio_list_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_list_id) 
			@aaa:TripleA (FormatEltName=portfolio_list_id, Rank=9, ScriptDef=ext_strategy_link_id.list_id) 
			@aaa:scpt (value=ext_strategy_link_id.list_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=41, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=15, ScriptDef="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded. Portfolios and positions related Portfolios having no strategy links are included too.} {-----------------------------------------------------------} @STRATEGY_FILTER OR @PORTFOLIO_FILTER OR @HEAD_FILTER OR @NO_LINK_FILTER") 
			@aaa:scpt (value="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded. Portfolios and positions related Portfolios having no strategy links are included too.} {-----------------------------------------------------------} @STRATEGY_FILTER OR @PORTFOLIO_FILTER OR @HEAD_FILTER OR @NO_LINK_FILTER") 
		
		/* STRATEGY_FILTER */ 
		STRATEGY_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=STRATEGY_FILTER) 
			@aaa:TripleA (FormatEltName=STRATEGY_FILTER, Rank=13, ScriptDef="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded.} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND (ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}) AND IF( abcissa_list_id = NULL AND ordinate_list_id = NULL AND instr_id = NULL, 0, 1)") 
			@aaa:scpt (value="{This format element is used as a filter to extract only strategy elements (market segments and instruments) for strategies included or not in an Investment Profile composition. It means that strategies included in the composition of a Benchmark will be excluded.} {-----------------------------------------------------------} {condition 1} IF( (abcissa_list_id = NULL AND ordinate_list_id <> NULL AND instr_id = NULL) {allows filtering the subtotals of 2 dimensions grids} OR (level_n = 1 AND disp_parent_ext_strat_elem_id <> NULL AND disp_parent_ext_strat_elem_id.level_n <> 0 {allows filtering grand-totals of the sub-strategies except of the grand-total of the head strategy} AND (strat_nat_e = 2 OR (ext_strategy_link_id.grid_id.nature_e IN (2,3) OR ext_strategy_link_id.grid_list_id <> NULL) ) ), {then} 0,{else} 1) {allows filtering the subtotals of the sub-grids coming from grid lists, market structures or market structure subset} {condition 2} AND strat_nat_e IN (1, 2) {condition 3} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {head strategies and sub-strategies must not be included in a Benchmark composition} {condition 4} AND (strat_level_n <> 1 OR level_n <> 1) {grid levels are filtered as both values (level and strategy level) are equal to \"1\"} {condition 5} AND IF( (level_n > 4 AND instr_id.nature_e = 4 {Cash account}), 0, 1 ) {condition 6} AND (ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}) AND IF( abcissa_list_id = NULL AND ordinate_list_id = NULL AND instr_id = NULL, 0, 1)") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) ) ) ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( disp_parent_ext_strat_elem_id.strategy_id!=NULL, IF( disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, disp_parent_ext_strat_elem_id.strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} disp_parent_ext_strat_elem_id.strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) ) ) ) )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=30, ScriptDef) 
			@aaa:scpt (value) 
		
		/* strategy_id */ 
		strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=strategy_id) 
			@aaa:TripleA (FormatEltName=strategy_id, Rank=7, ScriptDef="IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
			@aaa:scpt (value="IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} IF( disp_parent_ext_strat_elem_id.strategy_id != NULL, disp_parent_ext_strat_elem_id.strategy_id, {ELSE} strategy_id ) ) ) )") 
		
		/* STRATEGY_UNIQUE_IDEN */ 
		STRATEGY_UNIQUE_IDENTIFIER : AAABusinessTypes:Id 
			@sql:SQLName (value=STRATEGY_UNIQUE_IDENTIFIER) 
			@aaa:TripleA (FormatEltName=STRATEGY_UNIQUE_IDEN, Rank=38, ScriptDef="{This format element is used to guarantee the unicity of the identifier of the strategy used in the format element MKT_STRUCTURE} {---------------------------} @strategy_id + @investment_profile_id + @portfolio_list_id") 
			@aaa:scpt (value="{This format element is used to guarantee the unicity of the identifier of the strategy used in the format element MKT_STRUCTURE} {---------------------------} @strategy_id + @investment_profile_id + @portfolio_list_id") 
		
		/* SUB_CHECK_STRAT */ 
		SUB_CHECK_STRAT : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CHECK_STRAT) 
			@aaa:TripleA (FormatEltName=SUB_CHECK_STRAT, Rank=200, ScriptDef="STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, strat_check_e,,1) ).maximum") 
			@aaa:scpt (value="STAT( {This keyword is used to extract the highest value} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, strat_check_e,,1) ).maximum") 
		
		/* SUB_COMPLIANCE_INDIC */ 
		SUB_COMPLIANCE_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Compliance Gradmesser (Detail)", en="Sub-levels Compliance", fr="Conformité des sous-niveaux") 
			@sql:SQLName (value=SUB_COMPLIANCE_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_COMPLIANCE_INDIC, Rank=203, ScriptDef="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of sub-levels based on the format element SUB_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CHECK_STRAT which is used.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = NULL, 0 {No Sub-Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Sub-Levels Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Sub-Levels Compliant}, 6 {Sub-Level(s) Not Compliant} ))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objective weights defined in the Portfolio investment profile. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance of sub-levels based on the format element SUB_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CHECK_STRAT which is used.} {-----------------------------------------------------------------------} {New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF( (DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL) OR @NO_LINK_FILTER = 1, NULL, {Check if the Case Management is not active and if it is the case, use the standard subcompliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CHECK_STRAT = NULL, 0 {No Sub-Objectives Defined}, {ELSE} IF( @SUB_CHECK_STRAT = 0, 1 {Sub-Levels Not Evaluated}, {ELSE} IF( @SUB_CHECK_STRAT = 1, 2 {Sub-Levels Compliant}, 6 {Sub-Level(s) Not Compliant} ))), {If the Case Management component is active, use the subcompliance indicator, but with following rules: - Value equal to \"-1\" becomes 2 - Value equal to \"-2\" becomes 0 - Value equal to \"-3\" becomes 1 - Value smaller than system parameters SESSION_BLOCK_CRITICALNESS and STRAT_BLOCKCONSTR_CRITICALNESS becomes 3 - Value greater or equal to system parameter SESSION_BLOCK_CRITICALNESS becomes 5 - Value greater or equal to system parameter STRAT_BLOCKCONSTR_CRITICALNESS becomes 4} {ELSE} IF( @SUB_SEVERITY_INDICATOR = NULL, NULL, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -1, 2, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -2, 0, {ELSE} IF( @SUB_SEVERITY_INDICATOR = -3, 1, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {ELSE} IF( @SUB_SEVERITY_INDICATOR >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))))) )") 
		
		/* SUB_SEVERITY_INDICAT */ 
		SUB_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@i18n:Label (de="Schweregrad-Anzeiger (Detail)", en="Sub-levels Severity Indicator", fr="Indicateur de sévérité des sous-niveaux") 
			@sql:SQLName (value=SUB_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_SEVERITY_INDICAT, Rank=202, ScriptDef="{This format element returns the highest severity value of direct sub-levels of a market segment, when this market segment has one or more of its direct sub-levels not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all direct sub-levels which are not compliant The rules are the following: 1) The system checks whether the direct sub-levels are compliant or not, using the format element SUB_CHECK_STRAT. If they are compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the direct sub-levels objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the direct sub-levels objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all direct sub-levels (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the direct sub-levels are compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the direct sub-levels objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the direct sub-levels objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {Some direct sub-levels severity are not defined and the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity which must be NULL} {ELSE} {IF( STAT(} {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1 AND &strategy_elt_id.criticalness_e = NULL, &strategy_elt_id.criticalness_e, , , 1) ).maximum <> NULL, -3,} {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1, &criticalness_e, , , 1)} {New script to improve system response time} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE,strat_check_e > 1,1) ).maximum ) ) )") 
			@aaa:scpt (value="{This format element returns the highest severity value of direct sub-levels of a market segment, when this market segment has one or more of its direct sub-levels not compliant regarding actual weight and objective weight with margin. The highest value is only computed between all direct sub-levels which are not compliant The rules are the following: 1) The system checks whether the direct sub-levels are compliant or not, using the format element SUB_CHECK_STRAT. If they are compliant, the value \"-1\" is returned and the script stops here. 2) Otherwise, the system checks whether the direct sub-levels objectives are defined or not, using the format element SUB_CHECK_STRAT. If they are not defined, the value \"-2\" is returned and the script stops here. This is only the case for cash and equivalent (money market, etc...). 3) Otherwise, the system checks whether the direct sub-levels objectives are evaluated or not, using the format element SUB_CHECK_STRAT. If they are not evaluated, the value \"-3\" is returned and the script stops here. 4) At last, the system will compute an array of all direct sub-levels (in memory, not in database) which are not compliant. From that array, the highest value of the severity (criticity) is extracted and returned. Remark: The computation of the array is based on a little trick \"&disp_parent_ext_strat_elem_id = id\". This means, in fact, that the system must return all the strategy element whose parent market segment id is the same as the current strategy element. In other words, it returns the sub-levels of the current market segment} {---------------------------------------------------------------------------------} {System checks whether the direct sub-levels are compliant or not. If yes, the value -1 is returned} IF( @SUB_CHECK_STRAT = 1, -1, {System checks whether the direct sub-levels objectives are defined or not. If no, the value -2 is returned} {ELSE} IF( @SUB_CHECK_STRAT = NULL, -2, {System checks whether the direct sub-levels objectives are evaluated or not. If no, the value -3 is returned} {ELSE} IF( @SUB_CHECK_STRAT = 0, -3, {Some direct sub-levels severity are not defined and the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity which must be NULL} {ELSE} {IF( STAT(} {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1 AND &strategy_elt_id.criticalness_e = NULL, &strategy_elt_id.criticalness_e, , , 1) ).maximum <> NULL, -3,} {The direct sub-levels objectives are defined but the corresponding actual weights are not compliant. So, the system computes an array of not compliant direct sub-levels and extracts the highest value for the severity (criticity).} {ELSE IF} STAT( {This keyword is used to extract the highest value} {GET_OBJECT_ARRAY(GET_ENTITY(\"ext_strategy_element\"), &disp_parent_ext_strat_elem_id=id AND &strat_check_e > 1, &criticalness_e, , , 1)} {New script to improve system response time} SEL_FMTCHILDREN (disp_parent_ext_strat_elem_id, id, id, @OBJ_SEVERITY_VALUE,strat_check_e > 1,1) ).maximum ) ) )") 
		
		/* WEIGHT_AFTER */ 
		WEIGHT_AFTER : AAABusinessTypes:Number 
			@i18n:Label (de="Anteil nachher", en="Weight After", fr="Poids après") 
			@sql:SQLName (value=WEIGHT_AFTER) 
			@aaa:TripleA (FormatEltName=WEIGHT_AFTER, Rank=71, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, 1, eff_weight_cont_n*0.01 ) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, 1, eff_weight_cont_n*0.01 ) )") 
		
		/* WEIGHT_BEFORE */ 
		WEIGHT_BEFORE : AAABusinessTypes:Number 
			@i18n:Label (de="Anteil vorher", en="Weight Before", fr="Poids avant") 
			@sql:SQLName (value=WEIGHT_BEFORE) 
			@aaa:TripleA (FormatEltName=WEIGHT_BEFORE, Rank=70, ScriptDef="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, 1, act_weight_cont_n*0.01 ) )") 
			@aaa:scpt (value="{New addition filter to display data only at instrument level when instrument dimension is set to instrument} IF(DOMAIN().dim_instr_dict_id=900 {instrument} AND instr_id=NULL, NULL, IF( level_n = 1 AND strat_level_n = 1, 1, act_weight_cont_n*0.01 ) )") 
	} 
	/* PCK_DS_PTCC_SUMMARY */ 
	PCK_DS_PTCC_SUMMARY 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Order Entry") 
		@sql:SQLName (value=PCK_DS_PTCC_SUMMARY) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_strategy_element, FinFuncName="Order Entry", FinFuncProcName=order_entry, FormatName=PCK_DS_PTCC_SUMMARY) 
	{ 
		/* client_id */ 
		client_id : AAABusinessTypes:Id 
			@sql:SQLName (value=client_id) 
			@aaa:TripleA (FormatEltName=client_id, Rank=4, ScriptDef=portfolio_id.third_id) 
			@aaa:scpt (value=portfolio_id.third_id) 
		
		/* CONSTRAINTS_FILTER */ 
		CONSTRAINTS_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=CONSTRAINTS_FILTER) 
			@aaa:TripleA (FormatEltName=CONSTRAINTS_FILTER, Rank=12, ScriptDef="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
			@aaa:scpt (value="{This format element allows only the display of the following Constraints: - Constraints Set - Allocation Constraint - Security In Constraint - Security Out Constraint } {-------------------------------------------------------------------------} IF({Constraints Sets} (strat_nat_e = 4 AND level_n = 2) OR {Allocation Constraints} (model_constr_elt_id.constr_nat_e = 1 AND (min_weight_cont_n <> NULL OR max_weight_cont_n <> NULL OR fixed_cell_f = 1)) OR {Security In Constraints} (model_constr_elt_id.constr_nat_e = 2 AND level_n = 2) OR {Security Out Constraints} (model_constr_elt_id.constr_nat_e = 3 AND level_n = 2), 1, 0)") 
		
		/* data_secu_prof_id */ 
		data_secu_prof_id : AAABusinessTypes:Id 
			@sql:SQLName (value=data_secu_prof_id) 
			@aaa:TripleA (FormatEltName=data_secu_prof_id, Rank=1, ScriptDef=portfolio_id.data_secu_prof_id) 
			@aaa:scpt (value=portfolio_id.data_secu_prof_id) 
		
		/* manager_id */ 
		manager_id : AAABusinessTypes:Id 
			@sql:SQLName (value=manager_id) 
			@aaa:TripleA (FormatEltName=manager_id, Rank=3, ScriptDef=portfolio_id.comm_mgr_id) 
			@aaa:scpt (value=portfolio_id.comm_mgr_id) 
		
		/* PORTFOLIO_CODE */ 
		PORTFOLIO_CODE : AAABusinessTypes:UniCode 
			@i18n:Label (de=Portfolionummer, en="Portfolio Code", fr="Code du portefeuille") 
			@sql:SQLName (value=PORTFOLIO_CODE) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_CODE, Rank=36, ScriptDef=portfolio_id.code) 
			@aaa:scpt (value=portfolio_id.code) 
		
		/* PORTFOLIO_FILTER */ 
		PORTFOLIO_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=PORTFOLIO_FILTER) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_FILTER, Rank=11, ScriptDef="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level}, 1, 0)") 
			@aaa:scpt (value="{This format element is used to filter only Portfolios level.} {-----------------------------------------------------------} IF( level_n = 0 {Portfolio level}, 1, 0)") 
		
		/* portfolio_id */ 
		portfolio_id : AAABusinessTypes:Id 
			@sql:SQLName (value=portfolio_id) 
			@aaa:TripleA (FormatEltName=portfolio_id, Rank=2, ScriptDef=portfolio_id) 
			@aaa:scpt (value=portfolio_id) 
		
		/* PORTFOLIO_NAME */ 
		PORTFOLIO_NAME : AAABusinessTypes:UniName 
			@i18n:Label (de=Portfolio, en=Portfolio, fr=Portefeuille) 
			@sql:SQLName (value=PORTFOLIO_NAME) 
			@aaa:TripleA (FormatEltName=PORTFOLIO_NAME, Rank=37, ScriptDef=portfolio.name) 
			@aaa:scpt (value=portfolio.name) 
		
		/* PTF_MKT_VALUE */ 
		PTF_MKT_VALUE : AAABusinessTypes:Amount 
			@i18n:Label (de=Marktwert, en="Market Value", fr="Valeur d\'inventaire") 
			@sql:SQLName (value=PTF_MKT_VALUE) 
			@aaa:TripleA (FormatEltName=PTF_MKT_VALUE, Rank=50, ScriptDef="{current_market_value_m} portfolio_id.mkt_val_m") 
			@aaa:scpt (value="{current_market_value_m} portfolio_id.mkt_val_m") 
		
		/* REF_CURRENCY */ 
		REF_CURRENCY : AAABusinessTypes:UniCode 
			@i18n:Label (de="Währung", en=Ccy., fr=Devise) 
			@sql:SQLName (value=REF_CURRENCY) 
			@aaa:TripleA (FormatEltName=REF_CURRENCY, Rank=51, ScriptDef="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
			@aaa:scpt (value="IF( GET_APPL_PARAM(\"DS_CURRENCY_CODE\") <> NULL, SYNONYM(\"currency\", DOMAIN().currency_id, GET_APPL_PARAM(\"DS_CURRENCY_CODE\"), 1).code, {ELSE} DOMAIN().currency_id.code )") 
		
		/* seqno */ 
		seqno : AAABusinessTypes:LongInt PK required 
			@sql:SQLName (value=seqno) 
			@aaa:TripleA (FormatEltName=seqno, Rank=0, ScriptDef) 
			@aaa:scpt (value) 
		
		/* _SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=_SERVER_FILTER, Rank=13, ScriptDef="{This format element is used to filter only highest strategy level. The strategies may be included in an Investment Profile composition or not.} {-----------------------------------------------------------} IF( TOT_SUM(1, @STRATEGY_FILTER = 1, portfolio_id) > 0, @STRATEGY_FILTER, @PORTFOLIO_FILTER )") 
			@aaa:scpt (value="{This format element is used to filter only highest strategy level. The strategies may be included in an Investment Profile composition or not.} {-----------------------------------------------------------} IF( TOT_SUM(1, @STRATEGY_FILTER = 1, portfolio_id) > 0, @STRATEGY_FILTER, @PORTFOLIO_FILTER )") 
		
		/* SEVERITY */ 
		SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SEVERITY) 
			@aaa:TripleA (FormatEltName=SEVERITY, Rank=201, ScriptDef="{This format element displays the value for the severity (also known as criticity) of the objective defined on market segments and instruments The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {---------------------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
			@aaa:scpt (value="{This format element displays the value for the severity (also known as criticity) of the objective defined on market segments and instruments The value of the packaging parameter DS_OBJECTIVES_SEVERITY_FLAG indicates whether the severity of a modelling constraint overrride the severity of the corresponding objective} {---------------------------------------------------------------------} {Check if the severity of the objective is overriden and if it is the case, use directly the attribute criticalness_e} IF( STRNUM(GET_APPL_PARAM(\"DS_OBJECTIVES_SEVERITY_FLAG\")) = 1, criticalness_e, { If the severity of objective is not overriden, use the following rules are applied: 1. If severity of objective is smaller than severity of strategy, the severity of the strategy is used 2. Otherwise, the severity of the objective is used } IF( strategy_elt_id.criticalness_e <> NULL, IF( (strategy_id.criticalness_e <> NULL) AND (strategy_elt_id.criticalness_e < strategy_id.criticalness_e), strategy_id.criticalness_e, strategy_elt_id.criticalness_e ), NULL ) )") 
		
		/* STRATEGY_FILTER */ 
		STRATEGY_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=STRATEGY_FILTER) 
			@aaa:TripleA (FormatEltName=STRATEGY_FILTER, Rank=10, ScriptDef="{This format element is used to filter only main strategy level (Asset Allocation and Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategies are Asset Allocation or Model Portfolio} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {Strategies are not included in a Benchmark composition} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}, 1, 0 )") 
			@aaa:scpt (value="{This format element is used to filter only main strategy level (Asset Allocation and Model Portfolio)} {-----------------------------------------------------------} IF( strat_level_n = 1 {An head strategy has a strategy level equal to 1} AND disp_parent_ext_strat_elem_id.level_n = 0 {To select only head strategies directly below the Portfolio (level = 0)} AND strategy_id.nature_e IN (1, 2) {To be sure that the head strategies are Asset Allocation or Model Portfolio} AND ext_strategy_link_id.ref_strategy_id.nature_e <> 23 {Strategies are not included in a Benchmark composition} AND ext_strategy_link_id.link_nat_e <> 4 {\"Strategy (Check Only)\" is only used for performance analysis}, 1, 0 )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME : AAABusinessTypes:UniInfo 
			@i18n:Label (de=Strategie, en=Strategy, fr="Stratégie") 
			@sql:SQLName (value=STRATEGY_FULL_NAME) 
			@aaa:TripleA (AttrMultiLanguage=true, FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
			@aaa:scpt (value="{This format element displays the name of the main Allocation Strategy used. The translations are also taken into account.} {-------------------------------------------------------------------------------------------------------------} IF( parent_strategy_id!=NULL, IF( parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, parent_strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} parent_strategy_id.name ) , IF( strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom <> NULL, strategy_id.DENOMINATION[TSL_CURRENT_LANGUAGE()].denom, {ELSE} strategy_id.name ) )") 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_de : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_de) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_en : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_en) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef) 
			@aaa:scpt (value) 
		
		/* STRATEGY_FULL_NAME */ 
		STRATEGY_FULL_NAME_fr : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=STRATEGY_FULL_NAME_fr) 
			@aaa:TripleA (FormatEltName=STRATEGY_FULL_NAME, Rank=41, ScriptDef) 
			@aaa:scpt (value) 
		
		/* strategy_id */ 
		strategy_id : AAABusinessTypes:Id 
			@sql:SQLName (value=strategy_id) 
			@aaa:TripleA (FormatEltName=strategy_id, Rank=5, ScriptDef="IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )") 
			@aaa:scpt (value="IF( parent_strategy_id != NULL, parent_strategy_id, strategy_id )") 
		
		/* SUB_CONSTR_CHECK */ 
		SUB_CONSTR_CHECK : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CONSTR_CHECK) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_CHECK, Rank=300, ScriptDef="{This format element returns the first value, from highest to lowest, of the Constraints verification status for each portfolio Then, this value is used in the format element SUBCONSTR_COMPLIANCE to display whether a Constraint is breached or not.} {------------------------------------------------------------} TOT_FIRST( constraint_check_e, constraint_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"constraint_check_e\"} AND @CONSTRAINTS_FILTER, constraint_check_e, portfolio_id {to get the value per portfolio}, DESC )") 
			@aaa:scpt (value="{This format element returns the first value, from highest to lowest, of the Constraints verification status for each portfolio Then, this value is used in the format element SUBCONSTR_COMPLIANCE to display whether a Constraint is breached or not.} {------------------------------------------------------------} TOT_FIRST( constraint_check_e, constraint_check_e IN (0, 1, 2, 3, 4, 5, 6, 7, 8) {we take all the value of the attribute \"constraint_check_e\"} AND @CONSTRAINTS_FILTER, constraint_check_e, portfolio_id {to get the value per portfolio}, DESC )") 
		
		/* SUB_CONSTR_COMPLIANC */ 
		SUB_CONSTR_COMPLIANCE : AAABusinessTypes:Int 
			@i18n:Label (de="Abweichungen in Bezug auf Einschränkungen (Detail)", en="Constraints Compliance", fr="Conformité des contraintes") 
			@sql:SQLName (value=SUB_CONSTR_COMPLIANCE) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_COMPLIANC, Rank=306, ScriptDef="{This format element is used to display compliance indication regarding the Constraints defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CONSTR_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CONSTR_CHECK = NULL, 0 {No Constraints Defined}, {ELSE} IF( @SUB_CONSTR_CHECK = 0, 1 {Constraints Not Evaluated}, {ELSE} IF( @SUB_CONSTR_CHECK = 1, 2 {Constraints Verified}, 6 {Some Constraints Breached} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Constraints Defined\" - \"1\" is for \"Constraints Not Evaluated\" - \"2\" is for \"Constraints Verified\" - \"3\" is for \"Some Constraints Breached - Low Severity\" - \"4\" is for \"Some Constraints Breached - Medium Severity\" - \"5\" is for \"Some Constraints Breached - High Severity\"} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 5, 5, NULL )))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the Constraints defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_CONSTR_SEVERITY_INDICATOR. Otherwise, its the format element SUB_CONSTR_CHECK which is used.} {-----------------------------------------------------------------------} {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_CONSTR_CHECK = NULL, 0 {No Constraints Defined}, {ELSE} IF( @SUB_CONSTR_CHECK = 0, 1 {Constraints Not Evaluated}, {ELSE} IF( @SUB_CONSTR_CHECK = 1, 2 {Constraints Verified}, 6 {Some Constraints Breached} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Constraints Defined\" - \"1\" is for \"Constraints Not Evaluated\" - \"2\" is for \"Constraints Verified\" - \"3\" is for \"Some Constraints Breached - Low Severity\" - \"4\" is for \"Some Constraints Breached - Medium Severity\" - \"5\" is for \"Some Constraints Breached - High Severity\"} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_CONSTR_SEVERITY_INDICATOR = 5, 5, NULL )))))) )") 
		
		/* SUB_CONSTR_SEVERITY */ 
		SUB_CONSTR_SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_CONSTR_SEVERITY) 
			@aaa:TripleA (FormatEltName=SUB_CONSTR_SEVERITY, Rank=304, ScriptDef="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant Constraints} {---------------------------------------------------------------------} TOT_MAX( criticalness_e, constraint_check_e IN (2, 3, 4, 5, 6, 7, 8) AND criticalness_e <> NULL AND @CONSTRAINTS_FILTER, portfolio_id )") 
			@aaa:scpt (value="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant Constraints} {---------------------------------------------------------------------} TOT_MAX( criticalness_e, constraint_check_e IN (2, 3, 4, 5, 6, 7, 8) AND criticalness_e <> NULL AND @CONSTRAINTS_FILTER, portfolio_id )") 
		
		/* SUB_CSTR_SEVERITY_IN */ 
		SUB_CONSTR_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@sql:SQLName (value=SUB_CONSTR_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_CSTR_SEVERITY_IN, Rank=305, ScriptDef="{This script indicates, using \"traffic lights\", if all the Constraints on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint. As this severity must be displayed at Portfolio level, this is done in the format element SUB_CONSTR_SEVERITY . \"Traffic lights\" are: - \"0\" when no Constraints are defined - \"1\" when no Constraints are evaluated - \"2\" when all Constraints are compliant - \"3\" when some Constraints are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some Constraints are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some Constraints are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether Constraints are defined or not. If no Consttraints are defined then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether Constraints are evaluated or not. If no Consttraints are evluated then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the Constraints are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no Constraints are defined, the returned value is \"0\"} IF( @SUB_CONSTR_CHECK = NULL, 0, {If no Constraints are evaluated, the returned value is \"1\"} IF( @SUB_CONSTR_CHECK = 0, 1, {If all Constraints are compliant, the returned value is \"2\"} IF( @SUB_CONSTR_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if all the Constraints on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the Constraint. As this severity must be displayed at Portfolio level, this is done in the format element SUB_CONSTR_SEVERITY . \"Traffic lights\" are: - \"0\" when no Constraints are defined - \"1\" when no Constraints are evaluated - \"2\" when all Constraints are compliant - \"3\" when some Constraints are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some Constraints are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some Constraints are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether Constraints are defined or not. If no Consttraints are defined then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether Constraints are evaluated or not. If no Consttraints are evluated then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the Constraints are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant Constraints is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} {If no Constraints are defined, the returned value is \"0\"} IF( @SUB_CONSTR_CHECK = NULL, 0, {If no Constraints are evaluated, the returned value is \"1\"} IF( @SUB_CONSTR_CHECK = 0, 1, {If all Constraints are compliant, the returned value is \"2\"} IF( @SUB_CONSTR_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_CONSTR_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 )))))") 
		
		/* SUB_OBJ_CHECK */ 
		SUB_OBJ_CHECK : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_OBJ_CHECK) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_CHECK, Rank=200, ScriptDef="{This format element is used to indicate whether a sub-level (starting from Head strategy level) is compliant or not regarding its objectives and actual weights} {--------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, substrat_check_e, NULL )") 
			@aaa:scpt (value="{This format element is used to indicate whether a sub-level (starting from Head strategy level) is compliant or not regarding its objectives and actual weights} {--------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, substrat_check_e, NULL )") 
		
		/* SUB_OBJ_COMPLIANCE */ 
		SUB_OBJ_COMPLIANCE : AAABusinessTypes:Int 
			@i18n:Label (de="Strategieabgleich-Gradmesser (Detail)", en="Objectives Compliance", fr="Conformité des objectifs") 
			@sql:SQLName (value=SUB_OBJ_COMPLIANCE) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_COMPLIANCE, Rank=204, ScriptDef="{This format element is used to display compliance indication regarding the objectives defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_OBJ_SEVERITY_INDICATOR. Otherwise, its the format element SUB_OBJ_CHECK which is used.} {-----------------------------------------------------------------------} IF( @PORTFOLIO_FILTER = 1, 99 {No strategy links}, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_OBJ_CHECK = NULL, 0 {No Objectives Defined}, {ELSE} IF( @SUB_OBJ_CHECK = 0, 1 {Objectives Not Evaluated}, {ELSE} IF( @SUB_OBJ_CHECK = 1, 2 {Objectives Compliant}, 6 {Some Objectives Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Objectives Defined\" - \"1\" is for \"Objectives Not Evaluated\" - \"2\" is for \"Objectives Compliant\" - \"3\" is for \"Some Objectives Not Compliant - Low Severity\" - \"4\" is for \"Some Objectives Not Compliant - Medium Severity\" - \"5\" is for \"Some Objectives Not Compliant - High Severity\"} IF( @SUB_OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))) )") 
			@aaa:scpt (value="{This format element is used to display compliance indication regarding the objectives defined on the Portfolio. It checks whether the Case Management is active or not. If it is the case, then the \"traffic lights\" is used to indicate the compliance based on the format element SUB_OBJ_SEVERITY_INDICATOR. Otherwise, its the format element SUB_OBJ_CHECK which is used.} {-----------------------------------------------------------------------} IF( @PORTFOLIO_FILTER = 1, 99 {No strategy links}, {Check if the Case Management is not active and if it is the case, use the standard compliance indicator} IF( STRNUM(GET_APPL_PARAM(\"CASE_ACTIVATION_FLAG\")) = 0, IF( @SUB_OBJ_CHECK = NULL, 0 {No Objectives Defined}, {ELSE} IF( @SUB_OBJ_CHECK = 0, 1 {Objectives Not Evaluated}, {ELSE} IF( @SUB_OBJ_CHECK = 1, 2 {Objectives Compliant}, 6 {Some Objectives Not Compliant} ))), {If the Case Management component is active, use the \"traffic lights\" compliance indicator, but with following rules: - \"0\" is for \"No Objectives Defined\" - \"1\" is for \"Objectives Not Evaluated\" - \"2\" is for \"Objectives Compliant\" - \"3\" is for \"Some Objectives Not Compliant - Low Severity\" - \"4\" is for \"Some Objectives Not Compliant - Medium Severity\" - \"5\" is for \"Some Objectives Not Compliant - High Severity\"} IF( @SUB_OBJ_SEVERITY_INDICATOR = 0, 0, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 1, 1, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 2, 2, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 3, 3, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 4, 4, {ELSE} IF( @SUB_OBJ_SEVERITY_INDICATOR = 5, 5, NULL ))))))) )") 
		
		/* SUB_OBJ_SEVERITY */ 
		SUB_OBJ_SEVERITY : AAABusinessTypes:Enum 
			@sql:SQLName (value=SUB_OBJ_SEVERITY) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_SEVERITY, Rank=202, ScriptDef="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant objectives defined on market segments and instruments} {---------------------------------------------------------------------} TOT_MAX(@SEVERITY, substrat_check_e IN (2, 3, 4, 5, 6, 7, 8) AND @SEVERITY <> NULL, @strategy_id + @portfolio_id)") 
			@aaa:scpt (value="{This format element displays the highest value for the severity (also known as criticity) between all the not compliant objectives defined on market segments and instruments} {---------------------------------------------------------------------} TOT_MAX(@SEVERITY, substrat_check_e IN (2, 3, 4, 5, 6, 7, 8) AND @SEVERITY <> NULL, @strategy_id + @portfolio_id)") 
		
		/* SUB_OBJ_SEVERITY_IND */ 
		SUB_OBJ_SEVERITY_INDICATOR : AAABusinessTypes:Int 
			@sql:SQLName (value=SUB_OBJ_SEVERITY_INDICATOR) 
			@aaa:TripleA (FormatEltName=SUB_OBJ_SEVERITY_IND, Rank=203, ScriptDef="{This script indicates, using \"traffic lights\", if all the objectives defined on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the objectives. As this severity must be displayed at Portfolio level, this is done in the format element @SUB_OBJ_SEVERITY . \"Traffic lights\" are: - \"0\" when no objectives are defined - \"1\" when no objectives are evaluated - \"2\" when all objectives are compliant - \"3\" when some objectives are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some objectives are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some objectives are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether objectives are defined or not. If no objectives are defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether objectives are defined or not. If no objectives are evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the objectives are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, {If no objectives are defined, the returned value is \"0\"} IF( @SUB_OBJ_CHECK = NULL, 0, {If no objectives are evaluated, the returned value is \"1\"} IF( @SUB_OBJ_CHECK = 0, 1, {If all objectives are compliant, the returned value is \"2\"} IF( @SUB_OBJ_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))) )") 
			@aaa:scpt (value="{This script indicates, using \"traffic lights\", if all the objectives defined on the Portfolio are compliant or not. The \"traffic lights\" are based on the severity (also known as criticity) associated to the objectives. As this severity must be displayed at Portfolio level, this is done in the format element @SUB_OBJ_SEVERITY . \"Traffic lights\" are: - \"0\" when no objectives are defined - \"1\" when no objectives are evaluated - \"2\" when all objectives are compliant - \"3\" when some objectives are not compliant, but their severity is not defined as requesting a clarification or blocking - \"4\" when some objectives are not compliant and at least one of their severity is defined as requesting a clarification, but not blocking - \"5\" when some objectives are not compliant and at least one their severity is defined as blocking The bussiness rules are the following: 1) The script checks whether objectives are defined or not. If no objectives are defined, then the value is \"0\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 2) The script checks whether objectives are defined or not. If no objectives are evaluated, then the value is \"1\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 3) The script checks whether all the objectives are compliant not. If they are all compliant then the value is \"2\" and the script ends here. Otherwise, no values are returned and the script goes to the next step. 4) The script checks whether the severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as blocker for saving an order session. The severity threshold is given by the system parameter SESSION_BLOCK_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"5\" is returned and the script ends here. Otherwise, the script goes to the next step. 5) The script checks whether tthe severity (criticalness_e) of the not compliant objectives is greater or equal to the severity threshold defined as requesting a clarification before saving an order session. The severity threshold is given by the system parameter STRAT_BLOCKCONSTR_CRITICALNESS. If at least one severity is greater or equal to the severity threshold, the value \"4\" is returned otherwise it is the value \"3\". In any case, the script ends here.} {-------------------------------------------------------------------------------------------} IF( @STRATEGY_FILTER = 1, {If no objectives are defined, the returned value is \"0\"} IF( @SUB_OBJ_CHECK = NULL, 0, {If no objectives are evaluated, the returned value is \"1\"} IF( @SUB_OBJ_CHECK = 0, 1, {If all objectives are compliant, the returned value is \"2\"} IF( @SUB_OBJ_CHECK = 1, 2, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as blocker for an order session saving, the returned value is \"5\"} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"SESSION_BLOCK_CRITICALNESS\")), 5, {Otherwise if one or more of their severity is greater or equal to the severity threshold defined as requesting a clarification for an order session saving, the returned value is \"4\". If it is not the case, the returned value is \"3\".} {ELSE} IF( @SUB_OBJ_SEVERITY >= STRNUM(GET_APPL_PARAM(\"STRAT_BLOCKCONSTR_CRITICALNESS\")), 4, 3 ))))) )") 
	} 
	/* REP_STD_ORDER_ENTRY */ 
	REP_STD_ORDER_ENTRY 
		@aaa:FormatColumnFilter (value=SERVER_FILTER) 
		@aaa:FormatFunction (value="Order Entry") 
		@sql:SQLName (value=REP_STD_ORDER_ENTRY) 
		@aaa:TripleA (ColumnFilter=SERVER_FILTER, EntitySQLName=ext_operation, FinFuncName="Order Entry", FinFuncProcName=order_entry, FormatName=REP_STD_ORDER_ENTRY) 
	{ 
		/* ASSET_CLASS_DENOM */ 
		ASSET_CLASS_DENOM : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ASSET_CLASS_DENOM) 
			@aaa:TripleA (FormatEltName=ASSET_CLASS_DENOM, Rank=110, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ASSET_CLASS_NAME Modified by : CKO Comment : Retrieving the asset class denom. Modification : Reporting classif usage. } instr_id.CLASSIFY[@ASSET_CLASSIF].list_id.DENOMINATION[DOMAIN().language_dict_id].denom") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ASSET_CLASS_NAME Modified by : CKO Comment : Retrieving the asset class denom. Modification : Reporting classif usage. } instr_id.CLASSIFY[@ASSET_CLASSIF].list_id.DENOMINATION[DOMAIN().language_dict_id].denom") 
		
		/* ASSET_CLASS_RANK */ 
		ASSET_CLASS_RANK : AAABusinessTypes:Int 
			@sql:SQLName (value=ASSET_CLASS_RANK) 
			@aaa:TripleA (FormatEltName=ASSET_CLASS_RANK, Rank=100, ScriptDef="{ Created : 24 January 2011 Author : CKO Comment : Retrieving the asset class rank. } instr_id.CLASSIFY[@ASSET_CLASSIF].rank_n") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Comment : Retrieving the asset class rank. } instr_id.CLASSIFY[@ASSET_CLASSIF].rank_n") 
		
		/* ASSET_CLASSIF */ 
		ASSET_CLASSIF : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=ASSET_CLASSIF) 
			@aaa:TripleA (FormatEltName=ASSET_CLASSIF, Rank=90, ScriptDef="{ Created : 24 January 2011 Author : CKO Comment : Retrieving the asset classification for reporting } GET_APPL_PARAM(\"REP_CLASSIF_ASSET_CLASS\")") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Comment : Retrieving the asset classification for reporting } GET_APPL_PARAM(\"REP_CLASSIF_ASSET_CLASS\")") 
		
		/* CURRENCY_CODIF */ 
		CURRENCY_CODIF : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=CURRENCY_CODIF) 
			@aaa:TripleA (FormatEltName=CURRENCY_CODIF, Rank=40, ScriptDef="{ Created : 24 January 2011 Author : CKO Comment : Retrieving the currency codification for reporting } GET_APPL_PARAM(\"REP_CURRENCY_CODE\")") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Comment : Retrieving the currency codification for reporting } GET_APPL_PARAM(\"REP_CURRENCY_CODE\")") 
		
		/* CURRENT_MKT_VAL */ 
		CURRENT_MKT_VAL : AAABusinessTypes:Amount 
			@sql:SQLName (value=CURRENT_MKT_VAL) 
			@aaa:TripleA (FormatEltName=CURRENT_MKT_VAL, Rank=190, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PERC_PORTFOLIO Comment : Centralizing computation to avoid multiple call. } GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id = function_result_id AND &portfolio_id = portfolio_id AND &strat_level_n=1 AND &level_n = 1 AND &strategy_id.nature_e = 1 {Asset Allocation} AND &current_market_value_m <> 0 AND &current_market_value_m <> NULL AND (&parent_market_segment_id = NULL OR &parent_market_segment_id = 0) ).current_market_value_m") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PERC_PORTFOLIO Comment : Centralizing computation to avoid multiple call. } GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id = function_result_id AND &portfolio_id = portfolio_id AND &strat_level_n=1 AND &level_n = 1 AND &strategy_id.nature_e = 1 {Asset Allocation} AND &current_market_value_m <> 0 AND &current_market_value_m <> NULL AND (&parent_market_segment_id = NULL OR &parent_market_segment_id = 0) ).current_market_value_m") 
		
		/* FACTSHEET */ 
		FACTSHEET : AAABusinessTypes:Int 
			@sql:SQLName (value=FACTSHEET) 
			@aaa:TripleA (FormatEltName=FACTSHEET, Rank=240, ScriptDef="{ Created : 27 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - FACTSHEET_E Comment : Retrieving the factsheet enum id } fact_sheet_e") 
			@aaa:scpt (value="{ Created : 27 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - FACTSHEET_E Comment : Retrieving the factsheet enum id } fact_sheet_e") 
		
		/* FACTSHEET_LABEL */ 
		FACTSHEET_LABEL : AAABusinessTypes:UniName 
			@sql:SQLName (value=FACTSHEET_LABEL) 
			@aaa:TripleA (FormatEltName=FACTSHEET_LABEL, Rank=250, ScriptDef="{ Created : 27 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - FACTSHEET Comment : Retrieving the factsheet label for Buy orders (nature_e = 1) } IF(nature_e = 1, fact_sheet_e.LABEL[DOMAIN().language_dict_id] )") 
			@aaa:scpt (value="{ Created : 27 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - FACTSHEET Comment : Retrieving the factsheet label for Buy orders (nature_e = 1) } IF(nature_e = 1, fact_sheet_e.LABEL[DOMAIN().language_dict_id] )") 
		
		/* INCLUDE_FACTSHEET */ 
		INCLUDE_FACTSHEET : AAABusinessTypes:Flag 
			@sql:SQLName (value=INCLUDE_FACTSHEET) 
			@aaa:TripleA (FormatEltName=INCLUDE_FACTSHEET, Rank=260, ScriptDef="{ Created : 27 January 2011 Author : CKO Comment : Must the factsheet be included in the report. Available value 0 = None, 1 = Excluded, 2 = Included. } IF(@FACTSHEET = 2, 1, {ELSE} 0 )") 
			@aaa:scpt (value="{ Created : 27 January 2011 Author : CKO Comment : Must the factsheet be included in the report. Available value 0 = None, 1 = Excluded, 2 = Included. } IF(@FACTSHEET = 2, 1, {ELSE} 0 )") 
		
		/* INSTR_ISIN */ 
		INSTR_ISIN : AAABusinessTypes:UniCode 
			@sql:SQLName (value=INSTR_ISIN) 
			@aaa:TripleA (FormatEltName=INSTR_ISIN, Rank=70, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - INSTR_ISIN Modified by : CKO Comment : Retrieving the isin code. } SYNONYM(\"instrument\", instr_id, @INSTRUMENT_CODIF, 0).code") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - INSTR_ISIN Modified by : CKO Comment : Retrieving the isin code. } SYNONYM(\"instrument\", instr_id, @INSTRUMENT_CODIF, 0).code") 
		
		/* INSTR_NAME */ 
		INSTR_NAME : AAABusinessTypes:UniName 
			@sql:SQLName (value=INSTR_NAME) 
			@aaa:TripleA (FormatEltName=INSTR_NAME, Rank=50, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - INSTR_NAME Comment : Retrieving the instrument name. If the instrument is a cash account (nature=4), we take the currency code according to the codification. } IF(instr_id.nature_e = 4, op_currency_id.SYNONYM[GET_APPL_PARAM(\"CURRENCY_CODIF\")].code, {ELSE} instr_id.name )") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - INSTR_NAME Comment : Retrieving the instrument name. If the instrument is a cash account (nature=4), we take the currency code according to the codification. } IF(instr_id.nature_e = 4, op_currency_id.SYNONYM[GET_APPL_PARAM(\"CURRENCY_CODIF\")].code, {ELSE} instr_id.name )") 
		
		/* INSTR_NAME_ISIN */ 
		INSTR_NAME_ISIN : AAABusinessTypes:UniNote 
			@sql:SQLName (value=INSTR_NAME_ISIN) 
			@aaa:TripleA (FormatEltName=INSTR_NAME_ISIN, Rank=80, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - INSTR_NAME_ISIN Modified by : CKO Comment : Concatenating the instrument name and isin. Modification : Previous format element usage. } IF(@INSTR_ISIN <> NULL, CONCAT(CONCAT(@INSTR_NAME,\" / \"),@INSTR_ISIN), {ELSE} @INSTR_NAME )") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - INSTR_NAME_ISIN Modified by : CKO Comment : Concatenating the instrument name and isin. Modification : Previous format element usage. } IF(@INSTR_ISIN <> NULL, CONCAT(CONCAT(@INSTR_NAME,\" / \"),@INSTR_ISIN), {ELSE} @INSTR_NAME )") 
		
		/* INSTRUMENT_CODIF */ 
		INSTRUMENT_CODIF : AAABusinessTypes:UniInfo 
			@sql:SQLName (value=INSTRUMENT_CODIF) 
			@aaa:TripleA (FormatEltName=INSTRUMENT_CODIF, Rank=60, ScriptDef="{ Created : 24 January 2011 Author : CKO Comment : Retrieving the instrument codification for reporting } GET_APPL_PARAM(\"REP_INSTRUMENT_CODE\")") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Comment : Retrieving the instrument codification for reporting } GET_APPL_PARAM(\"REP_INSTRUMENT_CODE\")") 
		
		/* OBJ_WEIGHT */ 
		OBJ_WEIGHT : AAABusinessTypes:Number 
			@sql:SQLName (value=OBJ_WEIGHT) 
			@aaa:TripleA (FormatEltName=OBJ_WEIGHT, Rank=210, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PERC_MKT_SEG_OBJ Comment : Centralizing computation to avoid multiple call. } GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id = function_result_id AND &instr_id = NULL AND &market_segment_id = market_segment_id AND &portfolio_id = portfolio_id AND &strategy_id.nature_e IN (1,2) ).obj_weight_n") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PERC_MKT_SEG_OBJ Comment : Centralizing computation to avoid multiple call. } GET_BEST_OBJECT ( GET_ENTITY(\"ext_strategy_element\"), &function_result_id = function_result_id AND &instr_id = NULL AND &market_segment_id = market_segment_id AND &portfolio_id = portfolio_id AND &strategy_id.nature_e IN (1,2) ).obj_weight_n") 
		
		/* ORDER_CURRENCY */ 
		ORDER_CURRENCY : AAABusinessTypes:UniCode 
			@sql:SQLName (value=ORDER_CURRENCY) 
			@aaa:TripleA (FormatEltName=ORDER_CURRENCY, Rank=170, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_CURRENCY Comment : Retrieving currency of the order. Modification : using format element reference for codification. } SYNONYM(\"currency\", op_currency_id, @CURRENCY_CODIF, 1).code") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_CURRENCY Comment : Retrieving currency of the order. Modification : using format element reference for codification. } SYNONYM(\"currency\", op_currency_id, @CURRENCY_CODIF, 1).code") 
		
		/* ORDER_GROSS_AMOUNT */ 
		ORDER_GROSS_AMOUNT : AAABusinessTypes:Amount 
			@sql:SQLName (value=ORDER_GROSS_AMOUNT) 
			@aaa:TripleA (FormatEltName=ORDER_GROSS_AMOUNT, Rank=150, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_GROSS_AMOUNT Comment : Retrieving the order gross amount. } op_gross_amount_m") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_GROSS_AMOUNT Comment : Retrieving the order gross amount. } op_gross_amount_m") 
		
		/* ORDER_NATURE */ 
		ORDER_NATURE : AAABusinessTypes:Enum 
			@sql:SQLName (value=ORDER_NATURE) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE, Rank=20, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_NATURE Comment : Retrieving the nature of the order. } nature_e") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_NATURE Comment : Retrieving the nature of the order. } nature_e") 
		
		/* ORDER_NATURE_TXT */ 
		ORDER_NATURE_TXT : AAABusinessTypes:UniCode 
			@sql:SQLName (value=ORDER_NATURE_TXT) 
			@aaa:TripleA (FormatEltName=ORDER_NATURE_TXT, Rank=30, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_NATURE_TXT Comment : Retrieving the translated label of the order nature. } nature_e.LABEL[DOMAIN().language_dict_id]") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_NATURE_TXT Comment : Retrieving the translated label of the order nature. } nature_e.LABEL[DOMAIN().language_dict_id]") 
		
		/* ORDER_NET_AMOUNT */ 
		ORDER_NET_AMOUNT : AAABusinessTypes:Amount 
			@sql:SQLName (value=ORDER_NET_AMOUNT) 
			@aaa:TripleA (FormatEltName=ORDER_NET_AMOUNT, Rank=140, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_NET_AMOUNT Comment : Retrieving the order net amount. } op_net_amount_m") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_NET_AMOUNT Comment : Retrieving the order net amount. } op_net_amount_m") 
		
		/* ORDER_PTF_AMOUNT */ 
		ORDER_PTF_AMOUNT : AAABusinessTypes:Amount 
			@sql:SQLName (value=ORDER_PTF_AMOUNT) 
			@aaa:TripleA (FormatEltName=ORDER_PTF_AMOUNT, Rank=160, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_PTF_AMOUNT Comment : Retrieving the net amount in portfolio currency. The sign depends on the opearation nature. (nature = 1 => Buy) } pf_net_amount_m") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_PTF_AMOUNT Comment : Retrieving the net amount in portfolio currency. The sign depends on the opearation nature. (nature = 1 => Buy) } pf_net_amount_m") 
		
		/* PERC_MKT_SEG_OBJ */ 
		PERC_MKT_SEG_OBJ : AAABusinessTypes:Number 
			@sql:SQLName (value=PERC_MKT_SEG_OBJ) 
			@aaa:TripleA (FormatEltName=PERC_MKT_SEG_OBJ, Rank=220, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PERC_MKT_SEG_OBJ Comment : - } IF(market_segment_id <> NULL AND @OBJ_WEIGHT > 0, pf_net_amount_m / (@OBJ_WEIGHT * @CURRENT_MKT_VAL) * 100 * 100, {ELSE} NULL )") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PERC_MKT_SEG_OBJ Comment : - } IF(market_segment_id <> NULL AND @OBJ_WEIGHT > 0, pf_net_amount_m / (@OBJ_WEIGHT * @CURRENT_MKT_VAL) * 100 * 100, {ELSE} NULL )") 
		
		/* PERC_PORTFOLIO */ 
		PERC_PORTFOLIO : AAABusinessTypes:Number 
			@sql:SQLName (value=PERC_PORTFOLIO) 
			@aaa:TripleA (FormatEltName=PERC_PORTFOLIO, Rank=200, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PERC_PORTFOLIO Comment : - } pf_net_amount_m / @CURRENT_MKT_VAL * 100") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PERC_PORTFOLIO Comment : - } pf_net_amount_m / @CURRENT_MKT_VAL * 100") 
		
		/* PRICE */ 
		PRICE : AAABusinessTypes:Number 
			@sql:SQLName (value=PRICE) 
			@aaa:TripleA (FormatEltName=PRICE, Rank=130, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PRICE Comment : Retrieving the price. } IF(quote_n <> NULL, quote_n, {ELSE} price_n )") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PRICE Comment : Retrieving the price. } IF(quote_n <> NULL, quote_n, {ELSE} price_n )") 
		
		/* PTF_CURRENCY */ 
		PTF_CURRENCY : AAABusinessTypes:UniCode 
			@sql:SQLName (value=PTF_CURRENCY) 
			@aaa:TripleA (FormatEltName=PTF_CURRENCY, Rank=180, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PTF_CURRENCY Comment : Retrieving currency of the portfolio. Modification : using format element reference for codification. } SYNONYM(\"currency\", pf_currency_id, @CURRENCY_CODIF, 1).code") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - PTF_CURRENCY Comment : Retrieving currency of the portfolio. Modification : using format element reference for codification. } SYNONYM(\"currency\", pf_currency_id, @CURRENCY_CODIF, 1).code") 
		
		/* QUANTITY */ 
		QUANTITY : AAABusinessTypes:Amount 
			@sql:SQLName (value=QUANTITY) 
			@aaa:TripleA (FormatEltName=QUANTITY, Rank=120, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - QUANTITY Comment : Retrieving the quantity. } quantity_n") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - QUANTITY Comment : Retrieving the quantity. } quantity_n") 
		
		/* SERVER_FILTER */ 
		SERVER_FILTER : AAABusinessTypes:Flag 
			@sql:SQLName (value=SERVER_FILTER) 
			@aaa:TripleA (FormatEltName=SERVER_FILTER, Rank=10, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - SERVER_FILTER Comment : - } IF(GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE)=1, 1, {ELSE} 0 )") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - SERVER_FILTER Comment : - } IF(GET_ADMIN_RIGHTS(\"portfolio\", portfolio_id, VIEW, TRUE, FALSE)=1, 1, {ELSE} 0 )") 
		
		/* TARGET_TYPE */ 
		TARGET_TYPE : AAABusinessTypes:UniLongName 
			@sql:SQLName (value=TARGET_TYPE) 
			@aaa:TripleA (FormatEltName=TARGET_TYPE, Rank=230, ScriptDef="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_NATURE_TXT Comment : Retrieving the translated label of the target nature. } target_nature_e.LABEL[DOMAIN().language_dict_id]") 
			@aaa:scpt (value="{ Created : 24 January 2011 Author : CKO Based on : PCK_DS_PG_ORDERS - ORDER_NATURE_TXT Comment : Retrieving the translated label of the target nature. } target_nature_e.LABEL[DOMAIN().language_dict_id]") 
	} 
} 
