# UTF-8
# UTF-8
# UTF-8
Domain AAADSListCompo 
	@java:Package (value=com.odcgroup.aaa.administration) 
namespace "http://www.odcgroup.com/aaa-ds-listcompo" 
metamodelVersion 4.3.0.20110527 
Datasets { 
	ListCompoAll basedOn AAAEntities:ListCompo default synchronized 
	{ 
		entity -> entity [AAAIdentifierDatasets:DictEntityIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		list -> list [AAAIdentifierDatasets:ListAAAIdentifier] 
		object -> object 
		objectCurrency -> objectCurrency [AAAIdentifierDatasets:CurrencyIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		objectExtendedPos -> objectExtendedPos [AAAIdentifierDatasets:ExtendedPosIdentifier] 
			@svc:Services (MMLSpecific=true, MappingDir=TAtoMML, MappingRule="if entity = (1007) then := &(object)") 
		objectGeographic -> objectGeographic [AAAIdentifierDatasets:GeographicIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		objectGrid -> objectGrid [AAAIdentifierDatasets:GridIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		objectInstrument -> objectInstrument [AAAIdentifierDatasets:InstrumentIdentifier] 
			@svc:Services (MMLSpecific=true, MappingDir=TAtoMML, MappingRule="if entity = (900) then := &(object)") 
		objectManager -> objectManager [AAAIdentifierDatasets:ManagerIdentifier] 
			@svc:Services (MMLSpecific=true, MappingDir=TAtoMML, MappingRule="if entity = (803) then := &(object)") 
		objectPortfolio -> objectPortfolio [AAAIdentifierDatasets:PortfolioIdentifier] 
			@svc:Services (MMLSpecific=true, MappingDir=TAtoMML, MappingRule="if entity = (800) then := &(object)") 
		objectSector -> objectSector [AAAIdentifierDatasets:SectorIdentifer] 
			@svc:Services (LoadPermittedValues=true) 
		objectStrategy -> objectStrategy [AAAIdentifierDatasets:StrategyIdentifier] 
			@svc:Services (MMLSpecific=true, MappingDir=TAtoMML, MappingRule="if entity = (500) then := &(object)") 
		objectThirdParty -> objectThirdParty [AAAIdentifierDatasets:ThirdPartyIdentifier] 
			@svc:Services (MMLSpecific=true, MappingDir=TAtoMML, MappingRule="if entity = (600) then := &(object)") 
		rankN -> rankN 
		validityD -> validityD 
	} 
	ListCompoList basedOn AAAEntities:ListCompo 
	{ 
		currencyCode -> objectCurrency.code 
			@i18n:Label (en="Currency Code", fr="Code de la devise", de="Kode der Währung") 
			@svc:Services (LoadPermittedValues=true) 
		currencyExtDenomination -> objectCurrency.extDenomination 
			@i18n:Label (en=Currency, fr=Devise, de=Währung) 
			@svc:Services (MMLSpecific=true) 
		dictEntityName -> entity.name 
			@i18n:Label (en=Entity, fr=Entité, de=Entität) 
		entityDict -> entity.dict 
		geographicCode -> objectGeographic.code 
			@i18n:Label (en="Country Code", fr="Code du pays", de="Kode des Lands") 
		geographicExtDenomination -> objectGeographic.extDenomination 
			@i18n:Label (en=Country, fr=Pays, de=Land) 
			@svc:Services (MMLSpecific=true) 
		gridCode -> objectGrid.code 
			@i18n:Label (en="Grid Code", fr="Code de la grille", de="Kode des Rasters") 
		gridExtDenomination -> objectGrid.extDenomination 
			@i18n:Label (en=Grid, fr=Grille, de=Raster) 
			@svc:Services (MMLSpecific=true) 
		instrumentCode -> objectInstrument.code 
			@i18n:Label (en="Instrument Code", fr="Code de l\'instrument", de="Kode des Instruments") 
		instrumentExtDenomination -> objectInstrument.extDenomination 
			@i18n:Label (en=Instrument, fr=Instrument, de=Instrument) 
			@svc:Services (MMLSpecific=true) 
		listCode -> list.code 
			@i18n:Label (en=List, fr=Liste, de=Liste) 
		listExtDenomination -> list.extDenomination 
			@i18n:Label (en=List, fr=Liste, de=Liste) 
			@svc:Services (MMLSpecific=true) 
		listId -> list.id 
		managerCode -> objectManager.code 
			@i18n:Label (en="Manager Code", fr="Code du gestionnaire", de="Kode des Verwalters") 
			@svc:Services (LoadPermittedValues=false) 
		managerName -> objectManager.name 
			@i18n:Label (en=Manager, fr=Gestionnaire, de=Verwalter) 
		object -> object 
		portfolioCode -> objectPortfolio.code 
			@i18n:Label (en="Portfolio Code", fr="Code du portefeuille", de="Kode des Portfolios") 
			@svc:Services (LoadPermittedValues=false) 
		portfolioName -> objectPortfolio.name 
			@i18n:Label (en=Portfolio, fr=Portefeuille, de=Portfolio) 
		rankN -> rankN 
		sectorCode -> objectSector.code 
			@i18n:Label (en=Sector, fr=Secteur, de=Branche) 
			@svc:Services (LoadPermittedValues=false) 
		sectorCodificationCode -> objectSector.codification.code 
			@i18n:Label (en="Sector Codification", fr="Codification Secteur", de=Branchen-Kodifizierung) 
			@svc:Services (LoadPermittedValues=false) 
		sectorExtDenomination -> objectSector.extDenomination 
			@i18n:Label (en=Sector, fr=Secteur, de=Branche) 
			@svc:Services (MMLSpecific=true) 
		strategyCode -> objectStrategy.code 
			@i18n:Label (en=Strategy, fr=Stratégie, de=Strategie) 
			@svc:Services (LoadPermittedValues=false) 
		strategyExtDenomination -> objectStrategy.extDenomination 
			@i18n:Label (en=Strategy, fr=Stratégie, de=Strategie) 
			@svc:Services (MMLSpecific=true) 
		thirdPartyCode -> objectThirdParty.code 
			@i18n:Label (en="Third Party Code", fr="Code du tiers", de="Kode der Dritte") 
			@svc:Services (LoadPermittedValues=false) 
		thirdPartyExtDenomination -> objectThirdParty.extDenomination 
			@i18n:Label (en="Third Party", de=Dritte, fr=Tiers) 
			@svc:Services (MMLSpecific=true) 
		thirdPartyName -> objectThirdParty.name 
			@i18n:Label (en="Third Party Name", fr="Nom du tiers", de="Name der Dritte") 
		validityD -> validityD 
	} 
} 
