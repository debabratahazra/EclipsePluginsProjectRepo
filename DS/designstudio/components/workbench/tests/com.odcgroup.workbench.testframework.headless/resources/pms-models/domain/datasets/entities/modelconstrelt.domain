# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
Domain AAADSModelConstrElt 
	@java:Package (value=com.odcgroup.aaa.administration) 
namespace "http://www.odcgroup.com/aaa-ds-modelconstrelt" 
metamodelVersion 4.3.0.20110527 
Datasets { 
	ModelConstrEltAll basedOn AAAEntities:ModelConstrElt synchronized 
	{ 
		applicationFieldE -> applicationFieldE 
		calcMaxWeightN -> calcMaxWeightN 
		calcMinWeightN -> calcMinWeightN 
		constrBoundCurr -> constrBoundCurr [AAAIdentifierDatasets:CurrencyIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		constrBoundNatE -> constrBoundNatE 
		constrNatE -> constrNatE 
		constrTreatE -> constrTreatE 
		creationModeE -> creationModeE 
		criticalnessE -> criticalnessE 
		denom -> denom 
		dimInstr -> dimInstr [AAAIdentifierDatasets:DictEntityIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		endD -> endD 
		/* It is the denomination of the Security Out Constraint (element). Denomination is displayed in user's language, if it is not available then nothing is displayed.
It is calculated via pre-computed data based on the slave format PCK_PREC_MDC_ELT_SQL using SQL language. */ 
		extDenomination -> extDenomination 
			@svc:Services (MMLSpecific=true) 
		extDenominationDe -> extDenominationDe 
			@svc:Services (MMLSpecific=true) 
		extDenominationEn -> extDenominationEn 
			@svc:Services (MMLSpecific=true) 
		extDenominationFr -> extDenominationFr 
			@svc:Services (MMLSpecific=true) 
		extSqlCalcD -> extSqlCalcD 
			@svc:Services (MMLSpecific=true) 
		fixedCellF -> fixedCellF 
		id -> id 
		ignoreMarginF -> ignoreMarginF 
		instrObject -> instrObject 
		instrument -> instrument [AAAIdentifierDatasets:InstrumentIdentifier] 
			@svc:Services (MMLSpecific=true) 
		instrumentList -> instrumentList [AAAIdentifierDatasets:ListAAAIdentifier] 
			@svc:Services (MMLSpecific=true) 
		marketSegment -> marketSegment [AAAIdentifierDatasets:MarketSegmentIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		maxWeightN -> maxWeightN 
		minWeightN -> minWeightN 
		modelConstraint -> modelConstraint [AAAIdentifierDatasets:ModelConstraintIdentifier] 
		natureE -> natureE 
		priorityN -> priorityN 
		tradingOrderNatE -> tradingOrderNatE 
	} 
	/* This dataset is used to retrieve constraint elements of modelling constraints having nature  &quot;Security Out&quot;.

- nature &quot;Allocation&quot; = allocation constraint
- nature &quot;Security In&quot; = security constraint
- nature &quot;Security Out&quot; = exclusion constraint
- nature &quot;Trading&quot; = constraint on position */ 
	SecurityOutConstraintElementList basedOn AAAEntities:ModelConstrElt 
	{ 
		beginD -> modelConstraint.beginD 
			@i18n:Label (fr="Date de début") 
		constrBoundNatE -> constrBoundNatE 
		constrTreatE -> constrTreatE 
			@i18n:Label (en=Treatment, fr=Traitement, de=Behandlung) 
		criticalnessE -> criticalnessE 
			@i18n:Label (en=Severity, fr="Sévérité") 
		deleteRightF -> modelConstraint.portfolio.deleteRightF 
			@svc:Services (MMLSpecific=true) 
		dimPortSqlnameC -> modelConstraint.dimPort.sqlnameC 
		endD -> endD 
			@i18n:Label (de=Enddatum) 
		/* This attribute is used to indicate whether the constraint's end date is greater than the current date or null. If it is the case, the value is true */ 
		endDateF : AAABusinessTypes:Flag 
			@i18n:Label 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (cDATA OpenQuery="(t0.end_d > getDate() or t0.end_d is null)") 
		/* It is the denomination of the Security Out Constraint (element). Denomination is displayed in user's language, if it is not available then nothing is displayed.
It is calculated via pre-computed data based on the slave format PCK_PREC_MDC_ELT_SQL using SQL language. */ 
		extDenomination -> extDenomination 
			@i18n:Label (en=Description, fr=Description, de=Beschreibung) 
			@svc:Services (MMLSpecific=true) 
		id -> id 
		/* This attribute is used to indicate whether the constraint is active or not.
An active constraint must match all the following conditions described below:
  1. Its begin date must be equal or smaller than the current date
  2. Its begin date must be the most recent between all matching records of condition 1.
  3. Its end date must be empty (null) or greater than the current date

Otherwise, the constraint is considered as inactive */ 
		inactiveF : AAABusinessTypes:Id 
			@i18n:Label (en=Inactive, fr=Inactif, de=Inaktiv) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (cDATA OpenQuery="(t0.model_constraint_id @operator @value or t0.end_d <=getDate())") 
		instrumentCode -> instrument.code 
			@i18n:Label (en="Instrument Code", fr="Code de l\'instrument", de="Kode des Instruments") 
		/* It is the denomination of the related Instrument. Denomination is displayed in user's language, but if it is not available then the default translation is used instead.
It is calculated via pre-computed data based on the slave format PCK_PREC_INSTR_SQL using SQL language. */ 
		instrumentExtDenomination -> instrument.extDenomination 
			@i18n:Label (en=Instrument, fr=Instrument, de=Instrument) 
			@svc:Services (MMLSpecific=true) 
		minWeightN -> minWeightN 
			@i18n:Label (en=Quantity, fr="Quantité", de=Menge) 
		modelConstraintEndD -> modelConstraint.endD 
		/* It is the denomination of the Exclusion Constraint (set). Denomination is displayed in user's language, if it is not available then nothing is displayed.
It is calculated via pre-computed data based on the slave format PCK_PREC_MOD_CON_SQL using SQL language. */ 
		modelConstraintExtDenomination -> modelConstraint.extDenomination 
			@i18n:Label 
			@svc:Services (MMLSpecific=true) 
		modelConstraintId -> modelConstraint.id 
			@i18n:Label (en="Set Identifier", fr="Identifiant du set", de="Bezeichner des Set") 
		modelConstraintNatureE -> modelConstraint.natureE 
		portObject -> modelConstraint.portObject 
		updateRightF -> modelConstraint.portfolio.updateRightF 
			@svc:Services (MMLSpecific=true) 
	} 
	/* This dataset is used to administrate the constraint element of a modelling constraint having nature  &quot;Security Out&quot;.

- nature &quot;Allocation&quot; = allocation constraint
- nature &quot;Security In&quot; = security constraint
- nature &quot;Security Out&quot; = exclusion constraint
- nature &quot;Trading&quot; = constraint on position */ 
	SecurityOutConstraintElement basedOn AAAEntities:ModelConstrElt 
	{ 
		constrNatE -> constrNatE 
		constrTreatE -> constrTreatE 
			@i18n:Label (en=Treatment, fr=Traitement, de=Behandlung) 
		/* This computed attribute is only used to put a condition on the other fields (when used in a fragment or module) to make them editable or not through the same Design Studio's module and pageflow */ 
		createF : mml:boolean default=true 
			@i18n:Label (en=Creation, fr="Création", de=Erstellung) 
		criticalnessE -> criticalnessE 
			@i18n:Label (en=Severity, fr="Sévérité") 
		denom -> denom 
		/* This computed attribute is only used to put a condition on the other fields (when used in a fragment or module) to make them editable or not through the same Design Studio's module and pageflow */ 
		editF : mml:boolean default=false 
			@i18n:Label (en=Editable, fr=Modifiable, de=Editierbar) 
		endD -> endD 
			@i18n:Label (de=Enddatum) 
		/* This attribute is used to store constraint's description in English. It is in fact a denomination in English language. */ 
		englishDescription singleValued -> denomination [AAADSDenomination:DenominationAll] 
			@i18n:Label (en="English Description", fr="Description en anglais", de="Englische Beschreibung") 
			@"http://www.odcgroup.com/mdf/qualifier":qualifier (entity.sqlnameC=model_constr_elt, object="#id", language.code=en) 
		/* It is the denomination of the Security Out Constraint (element). Denomination is displayed in user's language, if it is not available then nothing is displayed.
It is calculated via pre-computed data based on the slave format PCK_PREC_MDC_ELT_SQL using SQL language. */ 
		extDenomination -> extDenomination 
			@i18n:Label (en=Description, fr=Description, de=Beschreibung) 
			@svc:Services (MMLSpecific=true) 
		/* This attribute is used to store constraint's description in French. It is in fact a denomination in French language. */ 
		frenchDescription singleValued -> denomination [AAADSDenomination:DenominationAll] 
			@i18n:Label (en="French Description", fr="Description en français", de="Französische Beschreibung") 
			@"http://www.odcgroup.com/mdf/qualifier":qualifier (entity.sqlnameC=model_constr_elt, object="#id", language.code=fr) 
		/* This attribute is used to store constraint's description in German. It is in fact a denomination in German language. */ 
		germanDescription singleValued -> denomination [AAADSDenomination:DenominationAll] 
			@i18n:Label (en="German Description", fr="Description en allemand", de="Deutsche Beschreibung") 
			@"http://www.odcgroup.com/mdf/qualifier":qualifier (entity.sqlnameC=model_constr_elt, object="#id", language.code=de) 
		id -> id 
		instrObject -> instrObject 
			@i18n:Label 
		instrument -> instrument [AAAIdentifierDatasets:InstrumentIdentifier] 
			@svc:Services (MMLSpecific=true) 
		minWeightN -> minWeightN 
			@i18n:Label (en=Quantity, de=Menge, fr="Quantité") 
		modelConstraint -> modelConstraint [AAAIdentifierDatasets:ModelConstraintIdentifier] 
		portfolio -> modelConstraint.portfolio [AAAIdentifierDatasets:PortfolioIdentifier] 
			@svc:Services (MMLSpecific=true) 
	} 
	/* This dataset is used to administrate the constraint element of a modelling constraint having nature &quot;Allocation&quot;.

- nature &quot;Allocation&quot; = allocation constraint
- nature &quot;Security In&quot; = security constraint
- nature &quot;Security Out&quot; = exclusion constraint
- nature &quot;Trading&quot; = constraint on position */ 
	AllocationConstraintElement basedOn AAAEntities:ModelConstrElt 
	{ 
		applicationFieldE -> applicationFieldE 
		constrBoundNatE -> constrBoundNatE 
		constrTreatE -> constrTreatE 
		creationModeE -> creationModeE 
		criticalnessE -> criticalnessE 
			@i18n:Label (en=Severity, fr="Sévérité") 
		fixedCellF -> fixedCellF 
			@i18n:Label (en="Fixed Objective", fr="Objectif fixe", de="Fix Ziel") 
		id -> id 
		ignoreMarginF -> ignoreMarginF 
		marketSegment -> marketSegment [AAAIdentifierDatasets:MarketSegmentIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		maxWeightN -> maxWeightN 
			@i18n:Label (en="Maximum Weight", fr="Poids maximum", de="Maximum Gewicht") 
		minWeightN -> minWeightN 
			@i18n:Label (en="Minimum weight", fr="Poids minimum", de="Minimum Gewicht") 
		modelConstraint -> modelConstraint [AAAIdentifierDatasets:ModelConstraintIdentifier] 
		natureE -> natureE 
		tradingOrderNatE -> tradingOrderNatE 
	} 
} 
