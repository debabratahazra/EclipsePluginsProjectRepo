# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
# UTF-8
Domain AAADSStrategy 
	@java:Package (value=com.odcgroup.aaa.administration) 
namespace "http://www.odcgroup.com/aaa-ds-strategy" 
metamodelVersion 4.3.0.20110527 
Datasets { 
	StrategyAll basedOn AAAEntities:Strategy synchronized 
	{ 
		benchEntity -> benchEntity [AAAIdentifierDatasets:DictEntityIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		benchFreqN -> benchFreqN 
		benchFreqUnitE -> benchFreqUnitE 
		benchObject -> benchObject 
		code -> code 
		complianceFreqN -> complianceFreqN 
		complianceFreqUnitE -> complianceFreqUnitE 
		criticalnessE -> criticalnessE 
			@i18n:Label (en=Severity, fr="Sévérité") 
		currency -> currency [AAAIdentifierDatasets:CurrencyIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		dataSecuProf -> dataSecuProf [AAAIdentifierDatasets:DataSecuProfIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		deleteRightF -> deleteRightF 
			@svc:Services (MMLSpecific=true) 
		denom -> denom 
		dimGrid -> dimGrid [AAAIdentifierDatasets:DictEntityIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		extDenomination -> extDenomination 
			@svc:Services (MMLSpecific=true) 
		extDenominationDe -> extDenominationDe 
			@svc:Services (MMLSpecific=true) 
		extDenominationEn -> extDenominationEn 
			@svc:Services (MMLSpecific=true) 
		extDenominationFr -> extDenominationFr 
			@svc:Services (MMLSpecific=true) 
		extSqlCalcD -> extSqlCalcD 
			@svc:Services (MMLSpecific=true) 
		fluctMarginN -> fluctMarginN 
		grid -> grid [AAAIdentifierDatasets:GridIdentifier] 
			@svc:Services (MMLSpecific=true) 
		gridObject -> gridObject 
		heartUploadE -> heartUploadE 
		id -> id 
		instrFilterList -> instrFilterList [AAAIdentifierDatasets:ListAAAIdentifier] 
		invProfRiskLevelN -> invProfRiskLevelN 
		irregularF -> irregularF 
		lastComplianceUpdateD -> lastComplianceUpdateD 
		lastStoredBenchD -> lastStoredBenchD 
		lastUpdateD -> lastUpdateD 
		list -> list [AAAIdentifierDatasets:ListAAAIdentifier] 
			@svc:Services (MMLSpecific=true) 
		marketSegment -> marketSegment [AAAIdentifierDatasets:MarketSegmentIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		name -> name 
		natureE -> natureE 
		parentStrategy -> parentStrategy [AAAIdentifierDatasets:StrategyIdentifier] 
		portfolio -> portfolio [AAAIdentifierDatasets:PortfolioIdentifier] 
		quoteValRule -> quoteValRule [AAAIdentifierDatasets:ValRuleIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		rebalancingStrategy -> rebalancingStrategy [AAAIdentifierDatasets:StrategyIdentifier] 
		relativeMarginF -> relativeMarginF 
		retDetLevE -> retDetLevE 
		riskF -> riskF 
		stratRebalD -> stratRebalD 
		subNatureE -> subNatureE 
		type -> type [AAAIdentifierDatasets:TypeIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		updateRightF -> updateRightF 
			@svc:Services (MMLSpecific=true) 
	} 
	StrategyList basedOn AAAEntities:Strategy 
	{ 
		/* It is the code of the Strategy */ 
		code -> code 
			@i18n:Label 
		/* It is the code of the Strategy's currency */ 
		currencyCode -> currency.code 
			@i18n:Label (en="Currency Code", fr="Code de la devise", de="Code der Währung") 
			@svc:Services (LoadPermittedValues=true) 
		/* It is the denomination of the Strategy's currency. Denomination is displayed in user's language, but if it is not available then the default translation is used instead.
It is calculated via pre-computed data based on the slave format PCK_PREC_CUR_SQL using SQL language. */ 
		currencyExtDenomination -> currency.extDenomination 
			@i18n:Label (en=Currency, fr=Devise, de=Währung) 
			@svc:Services (MMLSpecific=true) 
		/* It is the name of the Strategy's currency */ 
		currencyName -> currency.name 
			@i18n:Label (en="Currency Name", fr="Nom de la devise", de="Name der Währung") 
		/* It is the denomination of the Strategy. Only the default denomination is taken into account, translated denominations are not evaluated. */ 
		denom -> denom 
			@i18n:Label 
		/* It is the denomination of the Strategy. Denomination is displayed in user's language, but if it is not available then the default translation is used instead.
It is calculated via pre-computed data based on the slave format PCK_PREC_STRAT_SQL using SQL language. */ 
		extDenomination -> extDenomination 
			@svc:Services (MMLSpecific=true) 
		/* It is the denomination of the grid on which the strategy is based. Denomination is displayed in user's language, but if it is not available then the default translation is used instead.
It is calculated via pre-computed data based on the slave format PCK_PREC_GRID_SQL using SQL language.
The document FDS_WEB_TRANS_QueryAndPreDefinedQuery.doc gives more details about pre-computed data. */ 
		gridExtDenomination -> grid.extDenomination 
			@i18n:Label (en=Grid, fr=Grille, de=Raster) 
			@svc:Services (MMLSpecific=true) 
		id -> id 
		/* It is the denomination of the market segment on which the strategy is based. Only the default denomination is taken into account, translated denominations are not evaluated. */ 
		marketSegmentDenom -> marketSegment.denom 
			@i18n:Label (en="Market Segment", fr="Segment de marché", de=Marktsegment) 
		/* It is the denomination of the market segment on which the strategy is based. Denomination is displayed in user's language, but if it is not available then the default translation is used instead.
It is calculated via pre-computed data based on the slave format PCK_PREC_MKTSEG_SQL using SQL language. */ 
		marketSegmentExtDenomination -> marketSegment.extDenomination 
			@i18n:Label (en="Market Segment", fr="Segment de marché", de=Marktsegment) 
			@svc:Services (MMLSpecific=true) 
		/* This attribute is used in page-flow to redirect the different actions lead by icon (View, Update, Delete, Copy, ...) */ 
		mode : mml:string default=view 
		/* It is the name of the Strategy */ 
		name -> name 
		/* It is the nature of the Strategy.
32 values are allowed:
&bull;	&lt;All&gt;
&bull;	Asset Allocation
&bull;	Model Portfolio
&bull;	Recommendation List
&bull;	Constraint Set
&bull;	Index
&bull;	Currency Allocation
&bull;	Global Order Quantity
&bull;	Instr Order Quantity
&bull;	Instr Result Quantity
&bull;	Instr Order Portfolio %
&bull;	Instr Result Portfolio %
&bull;	Market Seg Result Portfolio %
&bull;	Switch Instrument
&bull;	Cash Result Portfolio %
&bull;	Currency Hedge
&bull;	Portfolio Order Quantity
&bull;	Portfolio Resulting Quantity
&bull;	Weighted Switch Instrument
&bull;	Trading Constraint
&bull;	Allocation Constraint
&bull;	Investment Profile
&bull;	Benchmark
&bull;	Surveyed Securities List
&bull;	Conversion
&bull;	Arbitrage
&bull;	Combined Sell/Buy
&bull;	Instr. Resulting of Mkt Sgt
&bull;	Composite
&bull;	Instr. Res. % of Strat Mkt Sgt
&bull;	Risk Strategy */ 
		natureE -> natureE 
		/* It is the sub-nature of the Strategy.
4 values are allowed:
&bull; &lt;None&gt;
&bull; Constant Weight
&bull; Load Ratio
&bull; Dummy Portfolio */ 
		subNatureE -> subNatureE 
			@i18n:Label 
		/* It is the name of the Strategy's type */ 
		typeCode -> type.code 
			@i18n:Label (en="Type Code", fr="Code du type", de="Code des Typs") 
			@svc:Services (LoadPermittedValues=true) 
		/* It is the denomination of the Strategy's type. Denomination is displayed in user's language, but if it is not available then the default translation is used instead.
It is calculated via pre-computed data based on the slave format PCK_PREC_TYPE_SQL using SQL language. */ 
		typeExtDenomination -> type.extDenomination 
			@i18n:Label (en=Type, fr=Type, de=Typ) 
			@svc:Services (MMLSpecific=true) 
		/* It is the name of the Strategy's type */ 
		typeName -> type.name 
			@i18n:Label (en="Type Name", fr="Nom du type", de="Name des Typs") 
		updateRightF -> updateRightF 
			@i18n:Label 
			@svc:Services (MMLSpecific=true) 
	} 
	StrategySearchCriteria basedOn AAAEntities:Strategy 
	{ 
		/* It is the code of the Strategy */ 
		code -> code 
			@i18n:Label 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=2) 
		/* It is the code of the Strategy's currency.
It is an auto-complete field, based on the searchCode attribute of the currency */ 
		currencySearchCode -> currency.code 
			@i18n:Label (en=Currency, fr=Devise, de=Währung) 
			@svc:Services (LoadPermittedValues=true) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (cDATA Lookup="Query.autoCompleteURI=/wui/ajax-xml/autocompleteoutput/Currency\r\nQuery.autoCompletePostValue=code\r\nQuery.autoCompleteTextValue=code\r\nQuery.maxRowCount=20\r\nQuery.DSOutput=AAADSCurrency:CurrencyList\r\nQuery.DSOutput.orderBy.o1.attribute=code\r\nQuery.fs.TargetDS=AAADSCurrency:CurrencySearchCriteria\r\nQuery.fs.level=1\r\nQuery.fs.f1.attribute=searchCode\r\nQuery.fs.f1.Op=BEGINS_WITH\r\nQuery.fs.f1.value1=valueOf(@value)\r\nQuery.attributeInclude=searchCode,code,name,extDenomination,extIsoSynC", DisplayRank=5) 
		/* It is the denomination of the Strategy. Only the default denomination is taken into account, translated denominations are not evaluated. */ 
		denom -> denom 
			@i18n:Label 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=4) 
		/* It is the denomination of the Strategy. Translated denomination is taken into account first, but if it is not available then the default denomination is taken into account.
It is calculated via pre-computed data based on the slave format PCK_PREC_STRAT_SQL using SQL language. */ 
		extDenomination -> extDenomination 
			@svc:Services (MMLSpecific=true) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=4) 
		/* It is the code of the Strategy's grid.
It is an auto-complete field, based on the searchCode attribute of the Grid.

It is calculated via pre-computed data based on the slave format PCK_PREC_GRID_SQL using SQL language.
The document FDS_WEB_TRANS_QueryAndPreDefinedQuery.doc gives more details about pre-computed data. */ 
		gridSearchCode -> grid.code 
			@i18n:Label (en=Grid, fr=Grille, de=Raster) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=9, cDATA Lookup="Query.autoCompleteURI=/wui/ajax-xml/autocompleteoutput/Grid\r\nQuery.autoCompletePostValue=code\r\nQuery.autoCompleteTextValue=code\r\nQuery.maxRowCount=10\r\nQuery.maxRowCountForLookup=500\r\nQuery.DSOutput=AAADSGrid:GridList\r\nQuery.DSOutput.orderBy.o1.attribute=code\r\nQuery.fs.TargetDS=AAADSGrid:GridSearchCriteria\r\nQuery.fs.level=1\r\nQuery.fs.f1.attribute=searchCode\r\nQuery.fs.f1.Op=BEGINS_WITH\r\nQuery.fs.f1.value1=valueOf(@value)\r\nQuery.attributeInclude=extDenomination,searchCode,name,typeCode,code,natureE") 
		id -> id 
		marketSegmentId -> marketSegment.id 
		/* It is the name of the market segment on which the strategy is based.
It is an auto-complete field, based on the searchCode attribute of Market Segment. */ 
		marketSegmentName -> marketSegment.name 
			@i18n:Label (en="Market Segment", fr="Segment de marché", de=Marktsegment) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (cDATA Lookup="Query.autoCompleteURI=/wui/ajax-xml/autocompleteoutput/MarketSegment\r\nQuery.autoCompletePostValue=name\r\nQuery.autoCompleteTextValue=name\r\nQuery.maxRowCount=15\r\nQuery.DSOutput=AAADSMarketSegment:MarketSegmentList\r\nQuery.DSOutput.orderBy.o1.attribute=name\r\nQuery.fs.TargetDS=AAADSMarketSegment:MarketSegmentSearchCriteria\r\nQuery.fs.level=1\r\nQuery.fs.f1.attribute=searchCode\r\nQuery.fs.f1.Op=BEGINS_WITH\r\nQuery.fs.f1.value1=valueOf(@value)\r\nQuery.attributeInclude=searchCode,name,extDenomination", DisplayRank=8) 
		/* It is the name of the Strategy */ 
		name -> name 
			@i18n:Label 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=3) 
		/* It is the nature of the Strategy.
32 values are allowed:
&bull;	&lt;All&gt;
&bull;	Asset Allocation
&bull;	Model Portfolio
&bull;	Recommendation List
&bull;	Constraint Set
&bull;	Index
&bull;	Currency Allocation
&bull;	Global Order Quantity
&bull;	Instr Order Quantity
&bull;	Instr Result Quantity
&bull;	Instr Order Portfolio %
&bull;	Instr Result Portfolio %
&bull;	Market Seg Result Portfolio %
&bull;	Switch Instrument
&bull;	Cash Result Portfolio %
&bull;	Currency Hedge
&bull;	Portfolio Order Quantity
&bull;	Portfolio Resulting Quantity
&bull;	Weighted Switch Instrument
&bull;	Trading Constraint
&bull;	Allocation Constraint
&bull;	Investment Profile
&bull;	Benchmark
&bull;	Surveyed Securities List
&bull;	Conversion
&bull;	Arbitrage
&bull;	Combined Sell/Buy
&bull;	Instr. Resulting of Mkt Sgt
&bull;	Composite
&bull;	Instr. Res. % of Strat Mkt Sgt
&bull;	Risk Strategy */ 
		natureE -> natureE 
			@i18n:Label 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=6) 
		/* It is a logical structure grouping several attributes allowing to identify a business object (Instrument, Portfolio, &hellip;) used as framework of search when a user enter a value into a search field.
According to the attributes in that structure, the records with one of those attributes with a value starting by the value set by the user are loaded.
For Strategy, the structure includes:
- Code
- Name
- Denomination */ 
		searchCode : mml:string 
			@i18n:Label (en="Search Pattern", fr="Modèle de recherche", de=Suchmuster) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (cDATA OpenQuery="exists (select 1 from vs_strategy v where v.id = t0.id and v.pattern @operator @valueToUpper and (v.language_code = @language or v.language_code=\'\'))", DisplayRank=1) 
		/* It is the code of the Strategy's type.
It is an auto-complete field, based on the searchCode attribute of the Type. */ 
		typeCode -> type.code 
			@i18n:Label (en=Type, fr=Type, de=Typ) 
			@svc:Services (LoadPermittedValues=true) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (cDATA Lookup="Query.autoCompleteURI=/wui/ajax-xml/autocompleteoutput/Type\r\nQuery.autoCompletePostValue=code\r\nQuery.autoCompleteTextValue=code\r\nQuery.DSOutput=AAADSType:TypeList\r\nQuery.DSOutput.orderBy.o1.attribute=name\r\nQuery.fs.TargetDS=AAADSType:TypeSearchCriteria\r\nQuery.fs.level=1\r\nQuery.fs.f1.mode=HIDDEN\r\nQuery.fs.f1.attribute=attributeDict\r\nQuery.fs.f1.Op=EQUAL\r\nQuery.fs.f1.value1=500005\r\nQuery.fs.f2.attribute=searchCode\r\nQuery.fs.f2.Op=BEGINS_WITH\r\nQuery.fs.f2.value1=valueOf(@value)\r\nQuery.attributeInclude=searchCode,code,name,extDenomination", DisplayRank=7) 
	} 
	StrategyAdmin basedOn AAAEntities:Strategy 
	{ 
		/* This computed attribute is only used to put a condition on the other fields (when used in a fragment or module) to make them editable or not through the same Design Studio's module and pageflow */ 
		activeHistoryF : mml:boolean default=true 
			@i18n:Label (en="Active History", fr="Historique actif", de="Aktive Historische") 
		benchEntity -> benchEntity [AAAIdentifierDatasets:DictEntityIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		benchFreqN -> benchFreqN 
		benchFreqUnitE -> benchFreqUnitE 
		benchObject -> benchObject 
		code -> code 
		complianceFreqN -> complianceFreqN 
		complianceFreqUnitE -> complianceFreqUnitE 
		criticalnessE -> criticalnessE 
			@i18n:Label (en=Severity, fr="Sévérité") 
		currency -> currency [AAAIdentifierDatasets:CurrencyIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		currencyCode -> currency.code 
			@i18n:Label (en=Currency, fr=Devise, de="Währung") 
			@svc:Services (LoadPermittedValues=true) 
		dataSecuProf -> dataSecuProf [AAAIdentifierDatasets:DataSecuProfIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		dataSecuProfCode -> dataSecuProf.code 
			@i18n:Label (en="Data Security Profile", fr="Profil de sécurité des données", de=Datensicherheitsprofil) 
		deleteRightF -> deleteRightF 
			@svc:Services (MMLSpecific=true) 
		denom -> denom 
		dimGrid -> dimGrid [AAAIdentifierDatasets:DictEntityIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		extDenomination -> extDenomination 
			@svc:Services (MMLSpecific=true) 
		extDenominationDe -> extDenominationDe 
			@svc:Services (MMLSpecific=true) 
		extDenominationEn -> extDenominationEn 
			@svc:Services (MMLSpecific=true) 
		extDenominationFr -> extDenominationFr 
			@svc:Services (MMLSpecific=true) 
		extSqlCalcD -> extSqlCalcD 
			@svc:Services (MMLSpecific=true) 
		fluctMarginN -> fluctMarginN 
		grid -> grid [AAAIdentifierDatasets:GridIdentifier] 
			@svc:Services (MMLSpecific=true) 
		gridExtDenomination -> grid.extDenomination 
			@svc:Services (MMLSpecific=true) 
		gridObject -> gridObject 
		heartUploadE -> heartUploadE 
		id -> id 
		instrFilterList -> instrFilterList [AAAIdentifierDatasets:ListAAAIdentifier] 
		invProfRiskLevelN -> invProfRiskLevelN 
		irregularF -> irregularF 
		lastComplianceUpdateD -> lastComplianceUpdateD 
		lastStoredBenchD -> lastStoredBenchD 
		lastUpdateD -> lastUpdateD 
		list -> list [AAAIdentifierDatasets:ListAAAIdentifier] 
			@svc:Services (MMLSpecific=true) 
		listExtDenomination -> list.extDenomination 
			@svc:Services (MMLSpecific=true) 
		marketSegment -> marketSegment [AAAIdentifierDatasets:MarketSegmentIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		marketSegmentExtDenomination -> marketSegment.extDenomination 
			@i18n:Label (en="Parent Market Segment", fr="Segment de marché parent", de="Übergeordnetes Marktsegment") 
			@svc:Services (MMLSpecific=true) 
		/* This attribute is used in page-flow to redirect the different actions lead by icon (View, Update, Delete, Copy, ...) */ 
		mode : mml:string default=view 
			@i18n:Label (en=Mode, fr=Mode, de=Mode) 
		name -> name 
		natureE -> natureE 
		parentStrategy -> parentStrategy [AAAIdentifierDatasets:StrategyIdentifier] 
		parentStrategyExtDenomination -> parentStrategy.extDenomination 
			@i18n:Label (en="Parent Strategy", fr="Stratégie parent", de="Übergeordnete Strategie") 
			@svc:Services (MMLSpecific=true) 
		portfolio -> portfolio [AAAIdentifierDatasets:PortfolioIdentifier] 
		quoteValRule -> quoteValRule [AAAIdentifierDatasets:ValRuleIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		rebalancingStrategy -> rebalancingStrategy [AAAIdentifierDatasets:StrategyIdentifier] 
		relativeMarginF -> relativeMarginF 
		retDetLevE -> retDetLevE 
		riskF -> riskF 
		stratRebalD -> stratRebalD 
		subNatureE -> subNatureE 
		type -> type [AAAIdentifierDatasets:TypeIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		typeExtDenomination -> type.extDenomination 
			@i18n:Label (en=Type, fr=Type, de=Typ) 
			@svc:Services (MMLSpecific=true) 
		updateRightF -> updateRightF 
			@svc:Services (MMLSpecific=true) 
	} 
} 
