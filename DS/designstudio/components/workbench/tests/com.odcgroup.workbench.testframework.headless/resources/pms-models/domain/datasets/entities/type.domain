# UTF-8
# UTF-8
# UTF-8
Domain AAADSType 
	@java:Package (value=com.odcgroup.aaa.administration) 
namespace "http://www.odcgroup.com/aaa-ds-type" 
metamodelVersion 4.3.0.20110527 
Datasets { 
	TypeAll basedOn AAAEntities:Type synchronized 
	{ 
		attribute -> attribute [AAAIdentifierDatasets:DictAttributeIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		autocreatedF -> autocreatedF 
		code -> code 
			@svc:Services (LoadPermittedValues=true) 
		denom -> denom 
		extDenomination -> extDenomination 
			@svc:Services (MMLSpecific=true) 
		extDenominationDe -> extDenominationDe 
			@svc:Services (MMLSpecific=true) 
		extDenominationEn -> extDenominationEn 
			@svc:Services (MMLSpecific=true) 
		extDenominationFr -> extDenominationFr 
			@svc:Services (MMLSpecific=true) 
		extSqlCalcD -> extSqlCalcD 
			@svc:Services (MMLSpecific=true) 
		id -> id 
		instrNatE -> instrNatE 
		name -> name 
		operNatE -> operNatE 
		parentType -> parentType [AAAIdentifierDatasets:TypeIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		rankN -> rankN 
		sellPositionF -> sellPositionF 
	} 
	TypeCombo basedOn AAAEntities:Type 
	{ 
		attribute -> attribute [AAAIdentifierDatasets:DictAttributeIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		autocreatedF -> autocreatedF 
		code -> code 
		denom -> denom 
		id -> id 
		instrNatE -> instrNatE 
		name -> name 
			@svc:Services (LoadPermittedValues=true) 
		operNatE -> operNatE 
		parentType -> parentType [AAAIdentifierDatasets:TypeIdentifier] 
			@svc:Services (LoadPermittedValues=true) 
		rankN -> rankN 
		sellPositionF -> sellPositionF 
	} 
	TypeList basedOn AAAEntities:Type 
	{ 
		attributeEntityName -> attribute.entity.name 
		attributeName -> attribute.name 
		/* It is the code of the Type */ 
		code -> code 
			@i18n:Label 
		/* It is the denomination of the Type. Only the default denomination is taken into account, translated denominations are not evaluated. */ 
		denom -> denom 
		/* It is the denomination of the Type. Denomination is displayed in user's language, but if it is not available then the default translation is used instead.
It is calculated via pre-computed data based on the slave format PCK_PREC_TYPE_SQL using SQL language. */ 
		extDenomination -> extDenomination 
			@svc:Services (MMLSpecific=true) 
		id -> id 
		instrNatE -> instrNatE 
		/* It is the name of the Type */ 
		name -> name 
		operNatE -> operNatE 
		parentTypeCode -> parentType.code 
			@i18n:Label (en="Parent Type", fr="Type Parent", de="Übergeordneter Typ") 
		parentTypeExtDenomination -> parentType.extDenomination 
			@svc:Services (MMLSpecific=true) 
		/* It is the rank of the Type */ 
		rankN -> rankN 
	} 
	TypeSearchCriteria basedOn AAAEntities:Type 
	{ 
		attributeDict -> attribute.dict 
		/* It is the code of the Type */ 
		code -> code 
			@i18n:Label 
			@svc:Services (LoadPermittedValues=true) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=2) 
		/* It is the denomination of the Type. Only the default denomination is taken into account, translated denominations are not evaluated. */ 
		denom -> denom 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=4) 
		/* It is the denomination of the Type. Translated denomination is taken into account first, but if it is not available then the default denomination is taken into account.
It is calculated via pre-computed data based on the slave format PCK_PREC_TYPE_SQL using SQL language. */ 
		extDenomination -> extDenomination 
			@svc:Services (MMLSpecific=true) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=4) 
		/* It is the name of the Type */ 
		name -> name 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (DisplayRank=3) 
		/* It is the rank of the Type */ 
		rankN -> rankN 
		/* It is a logical structure grouping several attributes allowing to identify a business object (Instrument, Portfolio, &hellip;) used as framework of search when a user enter a value into a search field.
According to the attributes in that structure, the records with one of those attributes with a value starting by the value set by the user are loaded.
For Type, the structure includes:
- Code
- Name
- Denomination */ 
		searchCode : mml:string 
			@i18n:Label (en="Search Pattern", fr="Modèle de recherche", de=Suchmuster) 
			@"http://www.odcgroup.com/mdf/querybuilder":querybuilder (cDATA OpenQuery="exists (select 1 from vs_type v where v.id = t0.id and v.pattern @operator @valueToUpper and (v.language_code = @language or v.language_code=\'\'))", DisplayRank=1) 
	} 
} 
