# UTF-8
Domain TestCase 
	@aaa:TripleA (UDEntities=true) 
	@java:Package (value=aaa.ud_entities.moneymapv1) 
namespace "http://www.odcgroup.com/testcase" 
metamodelVersion 4.3.0.20110527 
Classes { 
	UdAllAssociations 
		@i18n:Label (en="UDE Test For All Associations", fr="UDE Test Association en Français") 
		@aaa:TripleA (EntityName="Ud All Associations", EntitySQLName=udt_ud_all_associations, Secured=true) 
	{ 
		bRefOneOneToStandardEntity -> AAAEntities:Portfolio required 
			@i18n:Label (en="Association required by reference to standard entity with cardinality one ", fr="Association en Français") 
			@aaa:TripleA (AttrSQLName=b_ref_1_1_to_std_entity_id, AttrName="By Reference One-One to Standard Entity", ParentTypeEntity="", ParentTypeAttr="") 
		
		bRefOneOneToUDEntity -> TestCase:UdReferencedEntity required 
			@i18n:Label (en="Association required by reference to UD entity with cardinality one ") 
			@aaa:TripleA (AttrSQLName=b_ref_1_1_to_ud_entity_id, AttrName="By Reference One-One to UDEntity", ParentTypeEntity="", ParentTypeAttr="") 
		
		bRefZeroOneToStandardEntity -> AAAEntities:Portfolio 
			@i18n:Label (en="Association not required by reference to standard entity with cardinality one ") 
			@aaa:TripleA (AttrSQLName=b_ref_0_1_to_std_entity_id, AttrName="By Reference Zero-One to Standard Entity", ParentTypeEntity="", ParentTypeAttr="") 
		
		bRefZeroOneToUDEntity -> TestCase:UdReferencedEntity 
			@i18n:Label (en="Association not required by reference to UD entity with cardinality one ") 
			@aaa:TripleA (AttrSQLName=b_ref_0_1_to_ud_entity_id, AttrName="By Reference Zero-One to UD Entity", ParentTypeEntity="", ParentTypeAttr="") 
		
		id : AAABusinessTypes:Id PK required 
			@i18n:Label (en="Identifier ") 
			@aaa:TripleA (AttrSQLName=id, AttrName=Identifier) 
		
		parentRefOneOneToStandardEntityP -> AAAEntities:Portfolio 
		reverse 
		{ 
				parentEntity <- TestCase:UdAllAssociations:parentRefOneOneToStandardEntityP * 
					@i18n:Label (en="Reverse to parent entity") 
					@aaa:TripleA (AttrSQLName=parent_entity_id, AttrName="Parent Entity") 
		} 
			@i18n:Label (en="Association required by reference to standard entity with cardinality one pointing to parent entity") 
			@aaa:TripleA (AttrSQLName=parent_ref_1_to_std_entity_id, AttrName="Parent Ref One One To Standard Entity", ParentTypeEntity="[AAAEntities:AdjustOperation#commPartyType]", ParentTypeAttr="[AAAEntities:AdjustOperation#commPartyType]", AttrDataType=id_t) 
		
		parentRefOneOneToUdEntity -> TestCase:UdReferencedEntity 
		reverse 
		{ 
				parentEntity <- TestCase:UdAllAssociations:parentRefOneOneToUdEntity * 
					@i18n:Label (en="Reverse to parent entity") 
					@aaa:TripleA (AttrSQLName=parent_entity, AttrName="Self reverse association") 
		} 
			@i18n:Label (en="Association required by reference to UD entity with cardinality one pointing to parent entity") 
			@aaa:TripleA (AttrSQLName=parent_ref_11_to_ud_entity_id, AttrName="By Reference to Parent UD Entity", ParentTypeEntity="", ParentTypeAttr="") 
		
		refToTypeEntity -> AAAEntities:Type 
			@i18n:Label (en="Association to type entity with no parent") 
			@aaa:TripleA (AttrSQLName=ref_to_type_entity, AttrName="Ref To Type Entity", ParentTypeEntity="", ParentTypeAttr="") 
		
		RefToTypeEntityUsingParent -> AAAEntities:Type 
			@i18n:Label (en="Association to type entity with parent") 
			@aaa:TripleA (AttrSQLName=ref_to_type_using_parent_id, AttrName="Reference to Entity Type with parent", ParentTypeEntity="[AAAEntities:Portfolio#type]", ParentTypeAttr="[AAAEntities:Portfolio#type]") 
		
		testAssociation -> AAAEntities:Portfolio required 
			@i18n:Label (en="Test Association ") 
			@aaa:TripleA (AttrSQLName=test_association, AttrName="Test Association", ParentTypeEntity="", ParentTypeAttr="", AttrDataType=id_t) 
		
		testAssociation2 -> AAAEntities:DictAttribute 
			@i18n:Label (en="Test Association 2") 
			@aaa:TripleA (AttrSQLName=test_association2, AttrName="Test Association2", ParentTypeEntity="", ParentTypeAttr="", AttrDataType=dict_t) 
	} 
	UdAllDataTypes 
		@i18n:Label (en="UDE Test For All Data Types but string 2000, 3000, 4000 because of page size limitation") 
		@aaa:TripleA (EntityName="Ud All Data Types", EntitySQLName=udt_ud_all_data_types, Secured=true) 
	{ 
		amountT : AAABusinessTypes:Amount 
			@i18n:Label (en=Amount) 
			@aaa:TripleA (AttrSQLName=amount_m, AttrName=Amount) 
		
		codeT : AAABusinessTypes:Code BK 
			@i18n:Label (en=Code) 
			@aaa:TripleA (AttrSQLName=code, AttrName=Code) 
		
		dateT : AAABusinessTypes:Date 
			@i18n:Label (en=Date) 
			@aaa:TripleA (AttrSQLName=date_d, AttrName=date) 
		
		datetimeT : AAABusinessTypes:Datetime 
			@i18n:Label (en=Datetime) 
			@aaa:TripleA (AttrSQLName=datetime_d, AttrName=Datetime) 
		
		dictT : AAABusinessTypes:Dict 
			@i18n:Label (en=Dict) 
			@aaa:TripleA (AttrSQLName=dict_dict_id, AttrName=dict) 
		
		exchangeT : AAABusinessTypes:Exchange 
			@i18n:Label (en=Exchange) 
			@aaa:TripleA (AttrSQLName=exchange_rate, AttrName=Exchange) 
		
		Id : AAABusinessTypes:Id PK required 
			@i18n:Label (en="Identifier ", fr="Attribute en Français") 
			@aaa:TripleA (AttrSQLName=id, AttrName=Identifier) 
		
		idT : AAABusinessTypes:Id 
			@i18n:Label (en=Id) 
			@aaa:TripleA (AttrSQLName=id_id, AttrName=Id) 
		
		infoT : AAABusinessTypes:Info 
			@i18n:Label (en=Info) 
			@aaa:TripleA (AttrSQLName=info_c, AttrName=Info) 
		
		intT : AAABusinessTypes:Int 
			@i18n:Label (en=Integer) 
			@aaa:TripleA (AttrSQLName=int_i, AttrName=Int) 
		
		longAmountT : AAABusinessTypes:LongAmount 
			@i18n:Label (en="Long amount") 
			@aaa:TripleA (AttrSQLName=long_amount_m, AttrName="Long Amount") 
		
		longIntT : AAABusinessTypes:LongInt 
			@i18n:Label (en="Long integer") 
			@aaa:TripleA (AttrSQLName=long_integer_li, AttrName="Long Int") 
		
		LongNameT : AAABusinessTypes:LongName 
			@i18n:Label (en="Long Name") 
			@aaa:TripleA (AttrSQLName=long_name_c, AttrName="Long Name") 
		
		maskT : AAABusinessTypes:Mask 
			@i18n:Label (en=Mask) 
			@aaa:TripleA (AttrSQLName=mask_mask, AttrName=Mask) 
		
		nameT : AAABusinessTypes:Name 
			@i18n:Label (en=Name) 
			@aaa:TripleA (AttrSQLName=name_c, AttrName=Name) 
		
		noteT : AAABusinessTypes:Note 
			@i18n:Label (en=Note) 
			@aaa:TripleA (AttrSQLName=note_c, AttrName=Note) 
		
		numberT : AAABusinessTypes:Number 
			@i18n:Label (en=Number) 
			@aaa:TripleA (AttrSQLName=number_n, AttrName=Number) 
		
		percentT : AAABusinessTypes:Percent 
			@i18n:Label (en=Percent) 
			@aaa:TripleA (AttrSQLName=percent_p, AttrName=Percent) 
		
		periodT : AAABusinessTypes:Period 
			@i18n:Label (en=Period) 
			@aaa:TripleA (AttrSQLName=period_si, AttrName=Period) 
		
		phoneT : AAABusinessTypes:Phone 
			@i18n:Label (en=Phone) 
			@aaa:TripleA (AttrSQLName=phone_c, AttrName=Phone) 
		
		shortInfoT : AAABusinessTypes:ShortInfo 
			@i18n:Label (en="Short Info") 
			@aaa:TripleA (AttrSQLName=shortinfo_c, AttrName="Short Info") 
		
		smallintT : AAABusinessTypes:SmallInt 
			@i18n:Label (en="Small Integer") 
			@aaa:TripleA (AttrSQLName=smallint_si, AttrName=Smallint) 
		
		String1000T : AAABusinessTypes:String1000 
			@i18n:Label (en="String 1000 Characters") 
			@aaa:TripleA (AttrSQLName=string1000_c, AttrName="String 1000") 
		
		sysnameT : AAABusinessTypes:SysName 
			@i18n:Label (en="System name") 
			@aaa:TripleA (AttrSQLName=sysname_c, AttrName=Sysname) 
		
		textT : AAABusinessTypes:Text 
			@i18n:Label (en="Text ") 
			@aaa:TripleA (AttrSQLName=text_bi, AttrName=Text) 
		
		timestampT : AAABusinessTypes:Timestamp 
			@i18n:Label (en=Timestamp) 
			@aaa:TripleA (AttrSQLName=timestamp_t, AttrName=Timestamp) 
		
		tinyintT : AAABusinessTypes:Tinyint 
			@i18n:Label (en="Tiny Integer") 
			@aaa:TripleA (AttrSQLName=tinyint_ti, AttrName=Tinyint) 
		
		unicodeT : AAABusinessTypes:UniCode 
			@i18n:Label (en=Unicode) 
			@aaa:TripleA (AttrSQLName=unicode_c, AttrName=Unicode) 
		
		uniInfoT : AAABusinessTypes:UniInfo 
			@i18n:Label (en="Unicode Info") 
			@aaa:TripleA (AttrSQLName=uni_info_c, AttrName="Unicode Info") 
		
		uniLongNameT : AAABusinessTypes:UniLongName 
			@i18n:Label (en="Unicode Long Name") 
			@aaa:TripleA (AttrSQLName=uni_long_name_c, AttrName="Unicode Long Name") 
		
		UniNameT : AAABusinessTypes:UniName 
			@i18n:Label (en="Unicode Name") 
			@aaa:TripleA (AttrSQLName=uni_name_c, AttrName="Unicode Name") 
		
		uniNoteT : AAABusinessTypes:UniNote 
			@i18n:Label (en="Unicode Note") 
			@aaa:TripleA (AttrSQLName=uni_note_c, AttrName="Unicode Note") 
		
		uniPhoneT : AAABusinessTypes:UniPhone 
			@i18n:Label (en="Unicode Phone") 
			@aaa:TripleA (AttrSQLName=uni_phone_c, AttrName="Unicode Phone") 
		
		uniShortInfoT : AAABusinessTypes:UniShortInfo 
			@i18n:Label (en="Unicode  Short Info") 
			@aaa:TripleA (AttrSQLName=uni_shortinfo_c, AttrName="Unicode Short Info") 
		
		uniString1000T : AAABusinessTypes:UniString1000 
			@i18n:Label (en="Unicode String 1000") 
			@aaa:TripleA (AttrSQLName=uni_string1000_c, AttrName="Unicode String 1000") 
		
		uniSysnameT : AAABusinessTypes:UniSysName 
			@i18n:Label (en="Unicode System Name") 
			@aaa:TripleA (AttrSQLName=uni_sysname_c, AttrName="Unicode Sysname") 
		
		uniTextT : AAABusinessTypes:UniText 
			@i18n:Label (en="Unicode Text") 
			@aaa:TripleA (AttrSQLName=uni_text_c, AttrName="Unicode Text") 
		
		uniUrlT : AAABusinessTypes:UniURL 
			@i18n:Label (en="Unicode URL") 
			@aaa:TripleA (AttrSQLName=uni_url_c, AttrName="Unicode URL") 
		
		urlT : AAABusinessTypes:URL 
			@i18n:Label (en=URL) 
			@aaa:TripleA (AttrSQLName=url_url, AttrName=URL) 
	} 
	UdReferencedEntity 
		@i18n:Label (en="UDE Test For References") 
		@aaa:TripleA (EntitySQLName=udt_test_referenced_entity, EntityName="Ud Referenced Entity", Secured=false) 
	{ 
		code : AAABusinessTypes:Code BK required 
			@i18n:Label (en=Code) 
			@aaa:TripleA (AttrSQLName=code_c, AttrName=Code) 
		
		id : AAABusinessTypes:Id PK required 
			@i18n:Label (en="Identifier ") 
			@aaa:TripleA (AttrSQLName=id, AttrName=Identifier) 
	} 
	UdPermittedValues 
		@i18n:Label (en="UDE Test For Enumerations") 
		@aaa:TripleA (EntitySQLName=udt_test_all_perm_values, EntityName="Ud Permitted Values", Secured=false) 
	{ 
		idt : AAABusinessTypes:Id PK required 
			@i18n:Label (en="Identifier ") 
			@aaa:TripleA (AttrSQLName=idt, AttrName=Idt) 
		
		parentEnumStd : AAAEnumerations:PortfolioNatureE required default=Standard 
			@i18n:Label (en="Attribute Based on standard Enumeration not owning the values") 
			@aaa:TripleA (AttrSQLName=parent_enum_std_e, AttrName="UD Based on ParentStandard Enum") 
		
		parentEnumUd : TestCase:UdEnumeration required default=Zero 
			@i18n:Label (en="Attribute Based on UD Enumeration not owning the values") 
			@aaa:TripleA (AttrSQLName=parent_enum_ud_e, AttrName="UD Based on Parent UD enumeration") 
		
		parentFlagStd : AAAEnumerations:PortfolioActiveF required default=No 
			@i18n:Label (en="Attribute Based on standard Flag not owning the values") 
			@aaa:TripleA (AttrSQLName=parent_flag_std_f, AttrName="UD Based on Parent Standard Flag") 
		
		parentFlagUd : TestCase:UdFlag required default=Yes 
			@i18n:Label (en="Attribute Based on UD Flag not owning the values") 
			@aaa:TripleA (AttrSQLName=parent_flag_ud_f, AttrName="UD Based on Parent UD Flag") 
		
		UdEnumeration : TestCase:UdEnumeration required default=Zero 
			@aaa:TripleA (AttrSQLName=ud_enumeration, AttrName="Ud Enumeration") 
		
		UdFlag : TestCase:UdFlag required default=Yes 
			@aaa:TripleA (AttrSQLName=ud_flag, AttrName="Ud Flag") 
	} 
} 
Enumerations { 
	UdEnumeration : mml:integer 
		@i18n:Label (en="Enuemeration ", fr="Enumeration en Français") 
		@aaa:TripleA (EntitySQLName="[TestCase:UdPermittedValues#UdEnumeration]", AttrSQLName="[TestCase:UdPermittedValues#UdEnumeration]") 
		Zero=0 
			@i18n:Label (en=Zero, fr="Zéro") 
			@aaa:TripleA (PermValName=Zero, PermValRank=1) 
		One=1 
			@i18n:Label (en=One, fr=Un) 
			@aaa:TripleA (PermValName=One, PermValRank=2) 
	
	UdFlag : mml:boolean 
		@i18n:Label (en="UDE Test For Flag") 
		@aaa:TripleA (EntitySQLName="[TestCase:UdPermittedValues#UdFlag]", AttrSQLName="[TestCase:UdPermittedValues#UdFlag]") 
		Yes=true 
			@i18n:Label (en=True, fr=Oui) 
			@aaa:TripleA (PermValName=Yes, PermValRank=1) 
		No=false 
			@i18n:Label (en=False, fr=Non) 
			@aaa:TripleA (PermValName=No, PermValRank=2) 
	
} 
