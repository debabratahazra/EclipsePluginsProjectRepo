/*
 * generated by Xtext
 */
package com.odcgroup.workbench.el.ui.contentassist;

import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.common.types.xtext.ui.ITypesProposalProvider.Filter;
import org.eclipse.xtext.conversion.IValueConverter;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import ch.vorburger.el.services.ELGrammarAccess;

import com.google.inject.Inject;

/**
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on
 * how to customize content assistant
 */
public class DSELProposalProvider extends AbstractDSELProposalProvider {
	
	@Inject 
	ELGrammarAccess grammarAccess;

	@SuppressWarnings("restriction")
	@Override
	public void completeKeyword(Keyword keyword,
			ContentAssistContext contentAssistContext,
			ICompletionProposalAcceptor acceptor) {
		
		Keyword FALSE_KW = grammarAccess.getXBooleanLiteralAccess().getFALSEKeyword_1_0_1();
		Keyword TRUE_KW = grammarAccess.getXBooleanLiteralAccess().getIsTrueTRUEKeyword_1_1_0_1();
		Keyword NULL_KW = grammarAccess.getXNullLiteralAccess().getNULLKeyword_1_1();
		
		if (keyword.getValue().equals(TRUE_KW.getValue())
				|| keyword.getValue().equals(FALSE_KW.getValue())
				|| keyword.getValue().equals(NULL_KW.getValue())) {
			return;
		}
		super.completeKeyword(keyword, contentAssistContext, acceptor);
	}

	@Override
	protected void completeJavaTypes(ContentAssistContext context, EReference reference, Filter filter, ICompletionProposalAcceptor acceptor) {
		// don't propose java types
	}
	
	@Override
	protected void completeJavaTypes(ContentAssistContext context, EReference reference, ICompletionProposalAcceptor acceptor) {
		// don't propose java types
	}
	
	@Override
	protected void completeJavaTypes(ContentAssistContext context, EReference reference, IValueConverter<String> valueConverter, Filter filter, ICompletionProposalAcceptor acceptor) {
		// don't propose java types
	}
	
	@Override
	protected void completeJavaTypes(ContentAssistContext context, EReference reference, boolean forced, IValueConverter<String> valueConverter, Filter filter, ICompletionProposalAcceptor acceptor) {
		// don't propose java types
	}
}
