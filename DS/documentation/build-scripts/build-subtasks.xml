<?xml version="1.0" encoding="UTF-8"?>
<project name="build-subtasks" default="info-subtasks" basedir=".">

    <target name="info-subtasks">
        <echo message="Usable targets are:"/>
    	<echo message="- style-xhtml-book"/>
    	<echo message="- style-eclipsehelp-book"/>
    	<echo message="- style-htmlhelp-book"/>
    	<echo message="- copy-eclipseplugin"/>
    	<echo message="- create-eclipseplugin-jar"/>
        <echo message="Required properties are :"/>
        <echo message="- $${transtype} : output type"/>
        <echo message="- $${target} : output folder"/>
    	<echo message="- $${dita-book.name} : DITA book name"/>
        <echo message="- $${dita-map.name}  : DITA map name"/>
    	<echo message="- $${toolkit} : path to toolkit"/>
        <echo message="- $${dita-books} : source folder containing the dita books"/>
        <echo message="- $${eclipseplugin.template} : path to eclipse plugin template folder "/>
        <echo message="- $${eclipseplugin.namespace} : namespace used when creating eclipse plugin"/>
        <echo message="- $${ds.version} : DS build version"/>
        <echo message="- $${build.timestamp} : build timestamp"/>
        <echo message="- $${delivery.target} : delivery target "/>
    </target>

    <!-- styling -->

    <target name="style-xhtml-book">
		<antcall target="copy-styles"/>
        <antcall target="copy-htmlsite"/>
	</target>

    <target name="style-eclipsehelp-book" depends="init-output-dirs">
    	<antcall target="copy-styles"/>
    	
    	<replaceregexp
        	match="href=&quot;(\./)?"
        	replace="href=&quot;\./${dita-books}/${dita-book.name}/"
        	byline="true"
        >
    	    <fileset dir="${dita-book.output.dir}/${dita-book.name}">
           	    <exclude name="index.xml"/>
            	<exclude name="plugin.xml"/>
        		<include name="*.xml"/>
           	</fileset>
        </replaceregexp>
        <replaceregexp
        	match="&lt;toc label=&quot;(.*)&quot; topic=&quot;(\./)?"
        	replace="&lt;toc label=&quot;\1&quot; topic=&quot;\./${dita-books}/${dita-book.name}/"
        	byline="true"
        >
    	    <fileset dir="${dita-book.output.dir}/${dita-book.name}">
           	    <exclude name="index.xml"/>
            	<exclude name="plugin.xml"/>
        		<include name="*.xml"/>
           	</fileset>
        </replaceregexp>
        <replaceregexp
        	match="label=&quot;\./"
        	replace="label=&quot;\./${dita-books}/${dita-book.name}/"
        	byline="true"
        >
    	    <fileset dir="${dita-book.output.dir}/${dita-book.name}">
           	    <exclude name="index.xml"/>
            	<exclude name="plugin.xml"/>
        		<include name="*.xml"/>
           	</fileset>
        </replaceregexp>
    </target>

    <target name="style-htmlhelp-book">
    	<antcall target="copy-styles"/>
        <antcall target="move-htmlhelp-ditabook"/>
    </target>

    <target name="style-pdf-book">
        <antcall target="move-pdf-ditabook"/>
    </target>

   	<!-- sub tasks -->

	<target name="init-output-dirs">
	    <property name="target.output.dir" location="${target}/${transtype}"/>
	    <property name="dita-book.output.dir" location="${target.output.dir}/${dita-books}"/>
	</target>

    <target name="copy-styles" depends="init-output-dirs">
		<copy todir="${dita-book.output.dir}/${dita-book.name}/style" overwrite="true">
   	    	<fileset dir="${toolkit}/style" />
   	    </copy>
	</target>

	<target name="copy-frameset" depends="init-output-dirs">
		<copy todir="${dita-book.output.dir}/${dita-book.name}" overwrite="true">
   	    	<fileset dir="${toolkit}/frameset" />
   	    </copy>
	</target>

    <target name="copy-htmlsite" depends="init-output-dirs">
		<copy todir="${dita-book.output.dir}/${dita-book.name}" overwrite="true">
   	    	<fileset dir="${htmlsite.template}" />
   	    </copy>
	</target>

    <target name="copy-eclipsehelp-ditabook" depends="init-output-dirs">
        <copy todir="${target.output.dir}" overwrite="true">
           	<fileset dir="${dita-book.output.dir}/${dita-book.name}">
           	    <exclude name="index.xml"/>
            	<exclude name="plugin.xml"/>
        		<include name="*.xml"/>
           	</fileset>
        </copy>

        <!--  Substitute the @DS-VERSION@ and @DS-TITLE@ placeholders -->
        <replaceregexp
        	match="@DS-VERSION@"
        	replace="${ds.version}"
        	byline="true"
        >
    	    <fileset dir="${target.output.dir}">
        		<include name="*.xml"/>
           	</fileset>
        </replaceregexp>
        <replaceregexp
        	match="@DS-TITLE@"
        	replace="${ds.title}"
        	byline="true"
        >
    	    <fileset dir="${target.output.dir}">
        		<include name="*.xml"/>
           	</fileset>
        </replaceregexp>
	</target>

    <target name="copy-eclipseplugin" depends="init-output-dirs">
   	     <copy todir="${target.output.dir}" overwrite="true">
	       	<fileset dir="${eclipseplugin.template}" />
	       	<filterset>
   	         	<filter token="DS-VERSION" value="${ds.version}"/>
   	         	<filter token="BUILD-TIMESTAMP" value="${build.timestamp}"/>
   	     	</filterset>
	    </copy>
    </target>

    <target name="create-eclipseplugin-jar" depends="init-output-dirs">
        <jar destfile="${target.output.dir}/${eclipseplugin.namespace}_${ds.version}.jar"
             manifest="${target.output.dir}/META-INF/MANIFEST.MF">
            <fileset dir="${target.output.dir}">
        		<include name="META-INF/**"/>
            	<include name="${dita-books}/**"/>
            	<include name="workspace-*/**"/>
        		<include name="*.xml"/>
        		<include name="build.properties"/>
        	</fileset>
        </jar>
    </target>

    <target name="move-htmlhelp-ditabook" depends="init-output-dirs">
    	<replaceregexp
        	match="&lt;param name=&quot;Local&quot; value=&quot;(.\/)?"
        	replace="&lt;param name=&quot;Local&quot; value=&quot;\./${dita-books}/${dita-book.name}/"
        	byline="true"
        >
    	    <fileset dir="${dita-book.output.dir}/${dita-book.name}">
        		<include name="*.hhc"/>
           	</fileset>
        </replaceregexp>
        <replaceregexp
            	match="^(\w.*\.html)"
            	replace="${dita-books}/${dita-book.name}/\1"
            	byline="true"
            >
        	    <fileset dir="${dita-book.output.dir}/${dita-book.name}">
            		<include name="*.hhp"/>
               	</fileset>
        </replaceregexp>
        <replaceregexp
            	match="${dita-books}/${dita-book.name}/Default topic=(\./)?"
            	replace="Default topic=./${dita-books}/${dita-book.name}/"
            	byline="true"
            >
        	    <fileset dir="${dita-book.output.dir}/${dita-book.name}">
            		<include name="*.hhp"/>
               	</fileset>
        </replaceregexp>
        <!--  Substitute the @DS-VERSION@ and @DS-TITLE@ placeholders -->
        <replaceregexp
        	match="@DS-VERSION@"
        	replace="${ds.version}"
        	byline="true"
        >
    	    <fileset dir="${dita-book.output.dir}/${dita-book.name}">
        		<include name="*.hh?"/>
           	</fileset>
        </replaceregexp>
        <replaceregexp
        	match="@DS-TITLE@"
        	replace="${ds.title}"
        	byline="true"
        >
    	    <fileset dir="${dita-book.output.dir}/${dita-book.name}">
        		<include name="*.hh?"/>
           	</fileset>
        </replaceregexp>    	
        <move todir="${target.output.dir}" overwrite="true">
           	<fileset dir="${dita-book.output.dir}/${dita-book.name}">
        		<include name="*.hh?"/>
           	</fileset>
        </move>
<!--        <delete>
            <fileset dir="${dita-book.output.dir}/${dita-book.name}">
                <include name="*.chm"/>
            </fileset>
        </delete>
-->	</target>

    <target name="move-pdf-ditabook" depends="init-output-dirs">
        <move todir="${target.output.dir}" overwrite="true">
           	<fileset dir="${dita-book.output.dir}/${dita-book.name}">
        		<include name="*.pdf"/>
           	</fileset>
        </move>
	</target>

    <!-- delivery subtasks -->

    <target name="deliver-DS-plugins">
		<property name="delivery.output" location="${delivery.target}/${ds.version}/plugins"/>
		<mkdir dir="${delivery.output}"/>
		<copy todir="${delivery.output}">
    		<fileset dir="${target}/eclipsehelp">
    			<exclude name="com.odcgroup.infocenter.*.jar"/>
    			<include name="com.odcgroup.*.jar"/>
    		</fileset>
    	</copy>
	</target>

    <!-- -Dskip.infocenter=true skips the Infocenter re-publication
         This is needed because only one of normally several parallel branch builds can publish to the Infocenter.
     -->
    <target name="deliver-DS-infocenter" unless="skip.infocenter">
		<copy todir="${ds-infocenter}" verbose="true">
    		<fileset dir="${target}/eclipsehelp">
    			<include name="com.odcgroup.infocenter.*.jar"/>
    		</fileset>
    	</copy>
	</target>

    <target name="deliver-sdk-designstudio">
		<property name="delivery.output" location="${delivery.target}/${ds.version}/sdk/eclipse-design-studio"/>
		<!-- delivers chm file -->
        <mkdir dir="${delivery.output}"/>
		<copy todir="${delivery.output}">
			<fileset dir="${target}/htmlhelp">
				<include name="*.chm"/>
			</fileset>
		</copy>
	</target>

    <!-- publish maven subtasks -->

	<target name="publish-eclipseplugin-maven-local-repo">
	    <fail unless="maven.eclipseplugin.filename" message="property maven.eclipseplugin.filename must be set with the name of the eclipse plugin to publish."/>
   		<fail unless="maven.groupId" message="property maven.groupId must be set."/>
   		<fail unless="maven.artifactId" message="property maven.artifactId must be set."/>

	    <property name="delivery.output" location="${delivery.target}/${ds.version}/DS-plugins"/>
		<exec executable="cmd">
	        <arg value="/c"/>
	        <arg value="mvn"/>
	        <arg value="install:install-file"/>
		    <arg value="-Dfile=${delivery.output}/${maven.eclipseplugin.filename}"/>
    		<arg value="-DgroupId=${maven.groupId}"/>
			<arg value="-DartifactId=${maven.artifactId}"/>
			<arg value="-Dversion=${ds.version}-SNAPSHOT"/>
			<arg value="-Dpackaging=ds-plugin"/>
			<arg value="-DgeneratePom=true"/>
	    </exec>
	</target>

    <target name="publish-eclipseplugin-maven-remote-repo">
    	<fail unless="maven.eclipseplugin.filename" message="property maven.eclipseplugin.filename must be set with the name of the eclipse plugin to publish."/>
   		<fail unless="maven.groupId" message="property maven.groupId must be set."/>
   		<fail unless="maven.artifactId" message="property maven.artifactId must be set."/>
   		<fail unless="maven.repoId" message="property maven.repoId must be set."/>
   		<fail unless="maven.repoUrl" message="property maven.repoUrl must be set."/>

	  <property name="delivery.output" location="${delivery.target}/${ds.version}/plugins"/>

		<exec executable="cmd">
	        <arg value="/c"/>
	        <arg value="mvn"/>
	        <arg value="deploy:deploy-file"/>
		    <arg value="-DrepositoryId=${maven.repoId}"/>
		    <arg value="-Durl=${maven.repoUrl}"/>
		    <arg value="-Dfile=${delivery.output}/${maven.eclipseplugin.filename}"/>
    		<arg value="-DgroupId=${maven.groupId}"/>
			<arg value="-DartifactId=${maven.artifactId}"/>
			<arg value="-Dversion=${ds.version}-SNAPSHOT"/>
		    <arg value="-DuniqueVersion=false"/>
			<arg value="-Dpackaging=jar"/>
			<arg value="-DgeneratePom=true"/>
	    </exec>
	</target>
</project>