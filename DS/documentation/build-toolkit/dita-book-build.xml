<?xml version="1.0" encoding="UTF-8" ?>
<project name="dita-book-build" default="info" basedir=".">
    <target name="info">
        <!-- target build -->
        <echo message="Usable target: build"/>
        <echo message="Required properties are :"/>
        <echo message="- $${transtype} : output type"/>
        <echo message="- $${dita-book.basedir} : source folder containing the dita book"/> 
        <echo message="- $${dita-book} : dita book relative folder path"/>
        <echo message="- $${dita-map}  : dita map used as entry point"/>        
        <echo message="- $${target} : output folder"/>
        <!-- target clean-target -->
	    <echo message="Usable target: clean-target"/>
	    <echo message="Required properties are :"/>
	    <echo message="- $${transtype} : output type"/>             
	    <echo message="- $${target} : output folder"/>
    </target>
        
    <target name="init">
    	<!-- infrastructure properties -->
    	<!--property name="dita.dir" location="./dost" /-->
        <property name="dita.dir" location="./DITA-OT1.4.1"/>
        <!--property name="dita.dir" location="./DITA-OT1.4.2.1"/-->
    	<!-- /infrastructure properties -->
    </target>
    
    <target name="init.output.dir">
        <property name="output.dir" location="${target}/${transtype}"/>
    </target>
        
    <target name="build" depends="init, init.output.dir">
        <!--
        Required properties are :
        - ${transtype} : output type
        - ${dita-book.basedir} : source folder containing the dita book 
        - ${dita-book} : dita book relative folder path
        - ${dita-map}  : dita map used as entry point        
        - ${target} : output folder
        
        takes file ${dita-book.basedir}/${dita-book}/${dita-map} as source dita map.
         
        if transtype=xhtml:
        	Generates output in ${target}/xhtml/${dita-book}
        -->
        
        <!-- sets properties -->
        <basename property="dita-map.name" file="${dita-map}" suffix="ditamap"/>        
        <property name="dita.temp" location="${target}/${transtype}/.ditatemp"/>
        
        <!-- creates output -->    
        <mkdir dir="${output.dir}"/>        
                    
        <!-- calls dost -->
        <property name="extdost.output.dir" location="${output.dir}/${dita-book}"/>
        <property name="extdost.args.input" location="${dita-book.basedir}/${dita-book}/${dita-map}"/>
        <property name="extdost.cssroot" location="./style"/>                
        <if>
            <or>
            	<equals arg1="${transtype}" arg2="pdf" />
            	<equals arg1="${transtype}" arg2="wordrtf" />
            </or>
            <then>
                <!-- default OT xsl -->
                <property name="extdost.xsl" location="${dita.dir}/xsl/dita2xhtml.xsl"/>
            </then>
            <else>
                <!-- customized XSL's -->
                <property name="extdost.xsl" location="${toolkit}/xsl/dita2xhtml.xsl"/>   
            </else>
        </if>        
        <java classname="org.apache.tools.ant.launch.Launcher"
         	fork="true"
            failonerror="true"                
            taskname="dost-build"
        >
        	<classpath>
            	<pathelement location="${ant.home}/lib/ant-launcher.jar"/>            			
            </classpath>
            			   
       		<arg value="-lib"/>
            <arg value="${dita.dir}/lib"/>
            <arg value="-buildfile"/>
            <arg file="${dita.dir}/build.xml"/>
            <!-- dost infrastructure -->
            <arg value="-Ddita.dir=${dita.dir}" />
            <arg value="-Ddita.extname=.dita" />
            <arg value="-Ddita.temp.dir=${dita.temp}" />
            <arg value="-Dclean.temp=yes" />
            <!-- CSS handling -->
            <arg value="-Dargs.copycss=yes" />  
            <arg value="-Dargs.css=odyssey.css" />
            <arg value="-Dargs.cssroot=${extdost.cssroot}" />    	    			
            <arg value="-Dargs.csspath=style" />
            <!-- generation args -->  
            <arg value="-Dargs.xhtml.toc=${dita-map.name}-toc" />    	    
            <arg value="-Dtranstype=${transtype}" />
            <arg value="-Doutput.dir=${extdost.output.dir}" />			
            <arg value="-Dargs.input=${extdost.args.input}" />
            <arg value="-Dhhc.dir=." />
            <arg value="-Dargs.xsl=${extdost.xsl}"/>
            <!-- target -->    
            <arg value="init"/>
    	</java>
        
    	<!-- clean dita temp folder -->
    	<delete dir="${dita.temp}"/>
        <delete file="${extdost.output.dir}/dita.list" quiet="true"/>
    </target>   
    
    <target name="clean-target" depends="init.output.dir">
        <mkdir dir="${output.dir}"/> 
        <delete includeemptydirs="true">
           	<fileset dir="${output.dir}" includes="**/*"/>
        </delete>
	</target>
</project>
