<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/dtd/concept.dtd">
<concept id="devguide_programmersguide_architecture_features">
	<title>Feature Architecture</title>
	<prolog>
		<author type="creator">Kai Kreuzer</author>
		<metadata>
			<keywords>
				<indexterm>features</indexterm>
			</keywords>
		</metadata>
	</prolog>
	<conbody>
		<p>
			The following image illustrates the different (Design Studio <!-- <fn>Design Studio consists out of these Design Studio features AND a big number of
		    further features that Design Studio is build on top, such as the Eclipse platform and frameworks like EMF, GMF etc.</fn>-->) features
		    of Design Studio and their dependencies. All features only depend on features that are "below" and they have never a dependency on
		    any feature that is above or beside. This means that one could start removing features from the top without breaking the application,
		    i.e. the result would be a working application with reduced functionality.
		</p>
		<p><image href="images/features.png" /></p>
		<p>
			The purpose of the features is the following (from bottom to top):
			<ul>
				<li>3rd Party Feature:
					<p>This feature contains all plugins from 3rd parties that are not part of any 3rd party feature. This is the case for plugins
					which are either not distributed with an according feature or plugins where the inclusion of the whole feature is not
					wanted as it would blow up Design Studio more than necessary (such as specific WST plugins or apache commons plugins).</p>
				</li>
				<li>Workbench Feature:
					<p>This feature contains all plugins that build the core functionality of Design Studio and which provide common frameworks
					for all designers (e.g. for comparison, search, validation etc.)</p>
				</li>
				<li>Domain Feature:
					<p>This feature contains all plugins relevant for the Domain designer.</p>
				</li>
				<li>Pageflow Feature:
					<p>This feature contains all plugins relevant for the Pageflow designer.</p>
				</li>
				<li>Workflow Feature:
					<p>This feature contains all plugins relevant for the Workflow designer.</p>
				</li>
				<li>Page Feature:
					<p>This feature contains all plugins relevant for the Page designer, which provides
					editors for pages, modules and fragments at the same time. The Page designer highly 
					depends on the Domain designer, so it cannot be used without the Domain designer being
					present.</p>
				</li>
				<li>Rule Feature:
					<p>This feature contains all plugins relevant for the Rule designer. This feature
					includes all VisualRules features, which are developed by Innovations, and plugins
					to integrate this product seemlessly into Design Studio. The Rule designer highly 
					depends on the Domain designer, so it cannot be used without the Domain designer being
					present.</p>
				</li>
				<li>Cross-Integration Feature:
					<p>This feature contains all plugins which provide functionality that integrates 
					different designers with each other (such as the selection of a pageflow in a workflow
					activity). These functionalities have been deliberately removed from the designer
					features in order to avoid circular dependencies and to maintain a clean modular 
					architecture of Design Studio.</p>
				</li>
				<li>AAA Feature:
					<p>This feature contains plugins which provide specific functionality for Design Studio
					to integrate with TripleA. This feature can be seen as optional and is not required
					if Design Studio is not used in conjunction with TripleA.</p>
				</li>
				<li>CDM Feature:
					<p>This feature contains plugins which provide specific functionality for developing
					CDM applications. This feature can be seen as optional and is not required
					if Design Studio is not used in a CDM context.</p>
				</li>
				<li>OCS Feature:
					<p>This feature contains plugins which provide specific functionality for working with
					OCS applications. This includes all functionality that relies on the presence of an
					OCS installation as well as specific developer tools and custo migration support.</p>
				</li>
				<li>Test Feature:
					<p>This feature contains test fragments that is only included into the Design Studio
					package during the internal build and testing. These plugin fragments contain all unit
					tests that need to be run as plugin tests, i.e. in the context of a running Eclipse instance.</p>
				</li>
			</ul>
		</p>
	</conbody>

</concept>
