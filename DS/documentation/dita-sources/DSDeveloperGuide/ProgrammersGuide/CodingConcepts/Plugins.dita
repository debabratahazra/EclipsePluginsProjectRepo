<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/dtd/concept.dtd">
<concept id="concept-19-02-2008--12-45-22">
	<title>Plugins</title>
	<prolog>
		<author type="creator">Kai Kreuzer</author>

		<metadata>
			<keywords>
				<indexterm>plugins</indexterm>
			</keywords>
		</metadata>
	</prolog>
	<conbody>
		<p>
			In order to have a common structure of the Design Studio plugins, here are some general rules that should be
			respected when creating new plugins or adding new content to existing ones.
		</p>
		<section>
			<title>Naming Conventions</title>
			<simpletable>
				<sthead>
					<stentry>Type</stentry>
					<stentry>Name</stentry>
					<stentry>Description</stentry>
					<stentry>Example</stentry>
				</sthead>
				<strow>
					<stentry>Plugin on filesystem</stentry>
					<stentry>
						<codeph>com.odcgroup.&lt;category&gt;.&lt;concern&gt;[.ui]</codeph>
					</stentry>
					<stentry>
						<p>
							<codeph>category</codeph>
							can be any model type like domain, page etc. but also more general things like workbench,
							cdm etc. In general, this should refer to an existing feature.
						</p>
						<p>
							<codeph>concern</codeph>
							refers to any of the general or cross-cutting concerns like model, editor, generation, compare etc.
							In some cases a special naming might be required, but in general the same kinds of concerns should
							be found across all modeltypes.
						</p>
						<p>
							All plugins that do contributions to the UI (or depend on any other UI plugin), must end with .ui
							in their name to clearly mark this fact.
						</p>
					</stentry>
					<stentry>
						<codeph>com.odcgroup.pageflow.model</codeph>
					</stentry>
				</strow>
				<strow>
					<stentry>Plugin in workspace</stentry>
					<stentry>
						<codeph>&lt;category&gt;-&lt;concern&gt;[-ui]</codeph>
					</stentry>
					<stentry>
						<p>
							Same as plugin on filesystem, but without the com.odcgroup prefix and a dash for better readability in the workspace.
						</p>
					</stentry>
					<stentry>
						<codeph>pageflow-model</codeph>
					</stentry>
				</strow>
				<strow>
					<stentry>Java source and output folders</stentry>
					<stentry>
							<ul>
								<li>/src/main/java</li>
								<li>/src/main/resources</li>
								<li>/src/generated/java (optional)</li>
								<li>/src/generated/resources (optional)</li>
								<li>/src/main/oaw (optional)</li>
								<li>/target/classes (output)</li>
							</ul>
					</stentry>
					<stentry>
						<p>
							Java source names should be according to Maven naming conventions.
						</p>
					</stentry>
					<stentry>
						<codeph>n/a</codeph>
					</stentry>
				</strow>
				<strow>
					<stentry>Java packages</stentry>
					<stentry>
						<codeph>&lt;pluginname&gt;/&lt;subpackage&gt;</codeph>
					</stentry>
					<stentry>
						<p>
							Java packages must always start with the pluginname.
						</p>
					</stentry>
					<stentry>
						<codeph>com.odcgroup.pageflow.model.api</codeph>
					</stentry>
				</strow>
				<strow>
					<stentry>internal Java packages</stentry>
					<stentry>
						<codeph>&lt;pluginname&gt;/internal/&lt;subpackage&gt;</codeph>
					</stentry>
					<stentry>
						<p>
							All Java packages that are NOT exported to other plugins (i.e. are internal to the plugin / not part of its API)
							must be in below an "internal" package.
						</p>
					</stentry>
					<stentry>
						<codeph>com.odcgroup.pageflow.model.internal.impl</codeph>
					</stentry>
				</strow>
				<strow>
					<stentry>Activator</stentry>
					<stentry>
						<codeph>&lt;category&gt;&lt;concern&gt;[UI]Core</codeph>
					</stentry>
					<stentry>
						<p>
							As the activator is the main entry point to a plugin, it should not simply be called <codeph>Activator</codeph>,
							but rather have a dedicated name that refers to the plugin name itself.
						</p>
					</stentry>
					<stentry>
						<codeph>PageflowSearchUICore</codeph>
					</stentry>
				</strow>
			</simpletable>
		</section>
		<section>
			<title>Structure</title>
			<simpletable>
				<sthead>
					<stentry>Type</stentry>
					<stentry>Name</stentry>
					<stentry>Description</stentry>
					<stentry>Example</stentry>
				</sthead>
				<strow>
					<stentry>Activator</stentry>
					<stentry>.
					</stentry>
					<stentry>
						<p>
							All UI plugins should have an Activator that extends <codeph>AbstractUIActivator</codeph>, while all other plugins
							should extend <codeph>AbstractActivator</codeph>.
						</p>
						<p>
							The activator should be the class to define the main constants (and general static helper methods) for the public API. 
						</p>
					</stentry>
					<stentry>
						n/a
					</stentry>
				</strow>
				<strow>
					<stentry>Plugin Dependencies</stentry>
					<stentry>.
					</stentry>
					<stentry>
						<p>
							Design Studio plugins should only depend upon other Design Studio plugins with the exception of the plugins in the workbench feature.
						</p>
						<p>
							non-UI plugins must not depend on any UI plugin.
						</p>
					</stentry>
					<stentry>
						n/a
					</stentry>
				</strow>
				<strow>
					<stentry>Location of icons</stentry>
					<stentry>
						<codeph>/icons</codeph>
					</stentry>
					<stentry>
						<p>
							All required icons of a UI plugin should be placed in an icon folder in the root of the plugin.
							Remember that this folder needs to be added to the build.properties file.
						</p>
					</stentry>
					<stentry>
						<codeph>com.odcgroup.pageflow.import.ui/icons</codeph>
					</stentry>
				</strow>
				<strow>
					<stentry>Location of schemas</stentry>
					<stentry>
						<codeph>/schema</codeph>
					</stentry>
					<stentry>
						<p>
							All required exsd files of extension point definitions should be placed in a schema folder in the root of the plugin.
							Remember that this folder needs to be added to the build.properties file.
						</p>
					</stentry>
					<stentry>
						<codeph>com.odcgroup.pageflow.import/schema</codeph>
					</stentry>
				</strow>
			</simpletable>
		</section>
	</conbody>

</concept>
