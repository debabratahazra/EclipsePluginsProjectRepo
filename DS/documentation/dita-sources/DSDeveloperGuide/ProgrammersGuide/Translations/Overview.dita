<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/dtd/concept.dtd">
<concept id="devguide_programmersguide_translationdesigner_overview">
	<title>Translations Overview</title>
	<prolog>
		<author type="creator">Alain Tripod</author>
		<metadata>
			<keywords>
				<indexterm>translation</indexterm>
			</keywords>
		</metadata>
	</prolog>
	<conbody>
	
		<section>
			<title>Translation Framework</title>		
			
			<p>
				The Translation framework provides the following functionalities to the developer.
			
				<ul>
					<li>Languages preferences</li>
					<li>Provides a mechanism to attach translations to any objects</li>
					<li>Visit a model containing translations</li>
					<li>Import and Export translations</li>
					<li>Provides views to changes the translations attached to an object</li>
					<li>Provides an editor to see all translations defined in models</li>
					<li>Provide different code generator</li>
					 
				</ul> 
			</p>
			
			<p> 
				The following table give a brief description of all plugins related to translations
			</p>
			
			<simpletable>
				<sthead>
					<stentry>Source Plugin</stentry>
					<stentry>Description</stentry>
				</sthead>
				<strow>
					<stentry>com.odcgroup.translation.core</stentry>
					<stentry>
					The source plugin project <b>translation-core</b> defines the core API for accessing
					the languages preferences, for readind and writing translations. It provides also a mechanism to 
					listen to translations changes and to visit all the translations declared within a model. The visiting
					mechanism is used in particular by the code generator, the translation exporter, and the translation
					editor.
					</stentry>
				</strow>
				<strow>
					<stentry>com.ocdgroup.translation.custo.core</stentry>
					<stentry>
					The source plugin project <b>translation-custo-core</b> defines some custom mechanisms required
					for custom OFS Project. It is based on the core framework. 
					</stentry>
				</strow>
				<strow>
					<stentry>com.odcgroup.translation.ui</stentry>
					<stentry>
					The source plugin project <b>translation-ui</b> defines the classes and interfaces required to 
					display translations, and to provide mechanisms to edit the translations. 
					</stentry>
				</strow>
				<strow>
					<stentry>com.ocdgroup.translation.custo.ui</stentry>
					<stentry>
					The source plugin project <b>translation-custo-ui</b> defines some custom mechanisms required
					for custom project. It is based on the API defined in the plugin com.odcgroup.translation.ui.  
					</stentry>
				</strow>
				<strow>
					<stentry>com.ocdgroup.translation.generation</stentry>
					<stentry>
					The source plugin project <b>translation-generation</b> defines all the mechanism
					to define code generators.
					</stentry>
				</strow>
				<strow>
					<stentry>com.ocdgroup.translation.custo.generation</stentry>
					<stentry>
					The source plugin project <b>translation-custo-generation</b> defines custom
					generators required by custom OFS project.
					</stentry>
				</strow>
				<strow>
					<stentry>com.ocdgroup.translation.migration</stentry>
					<stentry>
					The source plugin project <b>translation-migration</b> defines all the mechanism
					to migrate translations from the old framework, to the new one.
					</stentry>
				</strow>
			</simpletable>			
			
		</section>		
		
		<section>
			<title>How to get a translation ?</title>		
			
			<p>
			
				<codeblock>
IProject project = ...;
Object anObject = ...;
ITranslationManager manager = TranslationCore.getTranslationManager(project);
ITranslation translation = manager.getTranslation(anObject);
if (translation != null) { // null if the object doesn't support translation.
    try {
        translation.setText(ITranslationKinf.NAME, "Hello World");
        //...
    } finally {
        // when you're done with the translation, release it.
	    translation.release();
    }
}
				</codeblock>


			</p>
		</section>
		
	</conbody>

</concept>
