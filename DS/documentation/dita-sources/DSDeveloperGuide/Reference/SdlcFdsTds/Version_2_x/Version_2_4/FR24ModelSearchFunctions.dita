<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"http://docs.oasis-open.org/dita/dtd/topic.dtd">
<topic id="SdlcFdsTdsVersion_2_4_sr3">
  <title>FR 24: "Designing Search Functionality in Design Studio"</title>
	<body>
		<section>
			<title>Description</title>
			<p>
				The purpose of this document is to provide technical design to implement a search functionality specified in the functional design specification 
				<xref href="https://lausvn.oams.com/cgi-bin/viewvc.cgi/devel/projects/doc/active/Design_Studio/1.40.0/03.%20Construction%20%28Design%29/FDS_DS1.40-SearchFieldEventdoc" scope="external">FDS_DS1.40-SearchFieldEvent</xref>
				document.  This document specifies how the functional features from the functional specification are implemented in the Page Designer.
			</p>
			<p>				
				This feature enables the users to design search specific components for the new search functionality in the Triple'A+ environment.
			</p>

		</section>
		<section>
			<title>FDS Link</title>
			<p>
				<xref href="https://lausvn.oams.com/cgi-bin/viewvc.cgi/devel/projects/doc/active/Design_Studio/1.40.0/03.%20Construction%20%28Design%29/FDS_DS1.40-SearchFieldEvent.doc" scope="external">FDS_DS1.40-SearchFieldEvent.doc</xref>
			</p>
		</section>
		<section>
			<title>JIRA Issue(s)</title>
			<p>
				<xref href="http://rd.oams.com/browse/DS-2681" scope="external">DS-2681:Create model for filter,used in; event, auto-complete widgets</xref>
			</p>
			<p>
				<xref href="http://rd.oams.com/browse/DS-2680" scope="external">DS-2680:Event dedicated to search </xref>
			</p>
			<p>
				<xref href="http://rd.oams.com/browse/DS-2692" scope="external">DS-2692:Qualify module to "search" </xref>
			</p>
		</section>
		<section>
			<title>TDS</title>
			<p>
				<ol>
					<li><b>Page Model changes (3.2 FSD)</b>
						<p>
						The Search functionality requires additional information to be specified on certain widgets or on the corresponding
						events.  This information comprises the search criteria and the filters that are based on the domain model.This new functionality 
						necessitates the need to introduce a new model element called "Snippet" in the Page Model.	A snippet can be adapted to
						the search criteria, the search filter, filter sets etc. These snippets are contained in a Widget, in an Event or in itself.
						</p>
						<p><image href="../images/PageModel.png" /></p>	
						<p>
						Page meta-model is also adapted accordingly to specify snippet types, snippet properties, widget-snippet, event-snippet relationships.  These changes
						lets you define of functional components like FilterSet, Filter, Query, TabDisplay and their respective properties and their relationship to widgets and events. 
						</p>	
						<p>
						Java interfaces and implementations for each of the snippet types, adapters, factory and utility classes needs to be implemented that can be used by the UI.
						</p>						
						<p><image href="../images/SnippetModel.png" /></p>						
					</li>
					
					<li><b>New type of Event (3.3 FSD)</b>
						<p>
						The Search functionality requires a new type of event called "Search Event" to be specified on different widgets.  This is in addition
						to the already existing simplified and advanced events.  With the introduction of 'search event' a new attribute 'nature' is added for event 
						model to differentiate different event types.
						</p>	
						<p>
						This also requires a lot of changes to the UI that manages the events for widgets. These changes include,
						</p>	
						<ul>
							<li>User friendly event definition dialog by introducing tabs instead of groups (which made the event definition complex)</li>
							<li>Creating Controls for Search snippet, FilterSet snippet, Filter definition dialog, Domain Attribute selection etc</li>
						</ul> 						
						<p><image href="../images/snippetcontrols.png"/></p>					
					</li>
					<li><b>List of Filter Operators</b>
					<p>The list of operators is shared between DS and the Triple'A+ WUI.  This requires these operators to be loaded from a common resource.</p>
					<p>Operators vary by type of the filter attribute.  A new method is added to <i>com.odcgroup.page.metamodel.util.MetaModelRegistry</i> which loads the
					operators by the entity</p>					
						<p><image href="../images/operators.png" /></p>	
					</li>
					<li><b>Search Module (3.9 FSD)</b>					
						<p>This feature requires a new property to be specified on the module widget which qualifies it for search specific functionality.  The module
						can be a input module for filter criteria entry, or an output module for displaying results or a container module for including both.</p>
						<p>It also requires some containment rules when a module is qualified as search specific.  The containment rules are done in an utility class
						<i>com.odcgroup.page.model.util.SearchModuleUtils</i>.  These static methods are used to check containment of search modules, and the validity of the modules.</p>
						<p><image href="../images/searchmodules.png" /></p>	
					</li>
					<li><b>Generation</b>
					<p>All the properties associated with the snippets are transformed into XGUI parameters.  Each snippet type has its specific transformer to handle the transformation of
					its properties.</p>
					<p><image href="../images/snippetgeneration.png" /></p>	
					</li>
				</ol>
			</p>
		</section>
	</body>
</topic>
