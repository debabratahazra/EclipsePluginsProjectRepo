<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"http://docs.oasis-open.org/dita/dtd/topic.dtd">
<topic id="SdlcFdsTdsVersion_2_4_sr6">
  <title>SR 6: Domain Designer should support high volume, and other perf. related tasks</title>
	<body>
		<section>
			<title>Description</title>
			<p></p>
			<p>The main objectives are
				<ul>
					<li>Domain Designer - reduce the time taken to display attribute's detail</li>
					<li>Refactor Data Type Synchronization to improve performance.</li>
					<li>Domain Compare - support large models</li>
					<li>Domain Validation - Add a constraint preventing duplicated dataset name in current project and dependencies</li>
					<li>General WUI/EAR classpath container optimisation</li>
				</ul>
			</p>
		</section>
		<section>
			<title>JIRA Issue(s)</title>
			<p>
				<xref href="http://rd.oams.com/browse/DS-1849" scope="external">DS-1849: Domain Designer takes a long time to display attribute's detail</xref>
			</p>
			<p>
				<xref href="http://rd.oams.com/browse/DS-1750" scope="external">DS-1750: Cache rule model domain synchronization</xref>
			</p>
			<p>
				<xref href="http://rd.oams.com/browse/DS-2158" scope="external">DS-2158: Provide accurate compare model that can support large models such as imported meta-dict</xref>
			</p>
			<p>
				<xref href="http://rd.oams.com/browse/DS-1984" scope="external">DS-1984: Validation preventing duplicated Dataset name in current project and dependencies</xref>
			</p>
			<p>
				<xref href="http://rd.oams.com/browse/DS-2984" scope="external">DS-2984: DS appears "blocked", when saving *.xml files (WUI/EAR classpath container optimisation)</xref>
			</p>
		</section>
		<section>
			<title>TDS</title>
			<p><b>display attribute's detail</b></p>
			<p>
			The rendering of attribute's detail takes a lot of time. The main reason is due to the validation decorator which visits
			the entire domain tree and trigger all validation rules for the current visited element.
			</p>
			<p>
			In order to improve performance, we have slighty refactored the validation decorator by removing the execution of all 
			validation rules, and now the error markers (red cross) are attributed based on the result of the last model validation.
			</p>
			
			<p><b>Data Type Synchronization</b></p>
			<p>
				The data type synchronization tries to be clever and to only merge the deltas between the mml definition and the data types stored in VR. Unfortunately, the process
				of reading the data types from the VR model is very slow, so that a lot of time elapses just to calculate this delta.				
			</p>
			<p>
				As the data type transformation from mml to VR is very fast as well as synchronizing a complete package with data types, this strategy should be implemented instead.
				We have one subpackage per domain model, so that we only need to update all data types of one domain, if there are changes to an mml file.
				Only on a full build, we will re-synchronize all domain models of a project. 
			</p>
			
			<p><b>Domain Compare</b></p>
			<p>
			The domain compare takes a considerable amount of time in case of more number of differences.  
			This is attributed to drawing a rounded rectangle around the model elements for which differences are found.  The solution is not to render the rounded rectangle when
			the differences were more than 100.  In case of differences more than 100, only the model element is highlighted in the tree viewer. 
			<i>com.odcgroup.mdf.compare.viewer.content.part.MdfModelContentMergeTabFolder</i> class is adapted for this behavior to include a custom PaintListener and a SelectionListener.
			</p>
			<p>Similarly <i>com.odcgroup.mdf.compare.viewer.content.MdfModelContentMergeViewer</i> is also adapted to disable the line on the center part
			indicating the difference between left and right part in case the structural differences are more than 100.</p>
			<p><b>Domain Validation</b></p>
			<p>A new constraint <i>isNameAlreadyTaken(MdfEntity entity)</i> is added to <i>com.odcgroup.mdf.validation.validator.MdfModelValidator</i> that checks if the name is already
			taken for any domain element with in the given project or among its dependencies</p>
			<p><b>WUI/EAR classpath container optimisation</b></p>
			<p>
			The all.jar introduce in the OCS installation caused the ear classpath provider to load all jar in a classloader to resolve manifests. 
			By excluding this all.jar from the ear classpath provider, Design Studio doesn't hang anymore. 
			Additionally, the implementation was changed to avoid 
			<ul>
				<li>the scan of the installation per project using the ear/wui classpath provider</li>
				<li>the change in Triple'A installation directory property caused the classpath to be initialized twice</li>
			</ul> 
			</p>
		</section>
	</body>
</topic>
