<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="SdlcFdsTdsVersion_4_2_b2f001">
	<title>FDS_DSR11_TECH35: Display Long Code / Long Synonym / Meta-Dict size data to upload</title>
	<body>
		<section>
			<title>Description</title>
			<p>
				The existing import of the Triple’A Meta-Dictionary into Design Studio must be updated to take into account
				modifications regarding the change of the length of the code and synonym.
			</p>
		</section>
		<section>
			<title>FDS Link</title>
			<p>
				<xref
					href="https://lausvn/svn/devel/projects/doc/active/triplea_plus/R11/03.%20Construction%20(Design)/TECHNOLOGY/DS/FDS_DSR11_TECH035_LongCode_MetadictImport.doc"
					scope="external">FDS_DSR11_TECH035_LongCode_MetadictImport.doc</xref>
			</p>
		</section>
		<section>
			<title>JIRA Issue(s)</title>
			<p>
				<xref href="http://rd.oams.com/browse/DS-4177" scope="external">DS-4177</xref>
			</p>
		</section>
		<section>
			<title>TDS</title>
			<p></p>
			<b>Domain Designer Changes</b>
			<p>
				<i>Business Types</i>
			</p>
			<p>
				All built-in business types supported by the domain designer are defined in the file BusinessTypes.domain. Within
				this
				<b>Code</b>
				,
				<b>Name</b>
				,
				<b>Dict</b>
				and
				<b>Id</b>
				must be changed
				Code and Name must be changed from varchar(20) to varchar(60)
				As an example.
			</p>
			<ul>
				<li>
					Current:
					<pre>
        Code : string 
		@con:Constraints (maxLength=20) 
		@sql:SQLType (value="varchar(20)") 
		@aaa:TripleA (BType=code_t) 
		@gui:Widget (DisplayType=TextField, chars=20, columns=20, type=text)
							</pre>
				</li>
				<li>
					To:
					<pre>
        Code : string 
		@con:Constraints (maxLength=60) 
		@sql:SQLType (value="varchar(60)") 
		@aaa:TripleA (BType=code_t) 
		@gui:Widget (DisplayType=TextField, chars=60, columns=60, type=text)

							</pre>
				</li>
			</ul>
			<p>
				<b>Dict</b>
				and
				<b>Id</b>
				must be changed from numeric(9,0) to numeric(14,0)
				Using Dict as an example
			</p>
			<ul>
				<li>
					Current:
					<pre>
        Dict : Integer 
		@con:Constraints (precision=9) 
		@sql:SQLType (value="numeric(9,0)") 
		@aaa:TripleA (BType=dict_t) 
		@gui:Widget (DisplayFormat=integer, DisplayType=TextField, chars=9, columns=9, type=integer)

							</pre>
				</li>
				<li>
					To:
					<pre>
        Dict : Integer 
		@con:Constraints (precision=14) 
		@sql:SQLType (value="numeric(14,0)") 
		@aaa:TripleA (BType=dict_t) 
		@gui:Widget (DisplayFormat=integer, DisplayType=TextField, chars=14, columns=14, type=integer)
								</pre>
				</li>
			</ul>
			<p>
				<i>Tables</i>
			</p>
			<p>
				Two new attributes have been added to the schema by the OCS team. These are
				<b>max_db_len_n</b>
				and
				<b>default_display_len_n</b>
				both of which are of sql type smallint_n
			</p>
			<p>Within DS, in the DictAttribute class, you have to declare 2 instance variables mapped to these columns in DB and
				2 getters
			</p>
			<p>
				<i>Annotations</i>
			</p>
			<p>
				In order to store the values of the column
				<b>max_db_len_n</b>
				and
				<b>default_display_len_n</b>
				two new properties (
				<b>AttrMaxDbLength</b>
				and
				<b>AttrDefaultDisplayLength</b>
				both of which should be of type integer) must be added to the annotation under the TripleA namespace.
			</p>
			<p>
				However
				creation not take place if
				<ol>
					<li>The value is not defined in table dict_attribute (null value)</li>
					<li>The value is equal to the one defined by the business type (Code or Name)</li>
				</ol>
			</p>
			<p>
				The annotation has to be created on all imported attributes, based on the points above, whose business type is
				either Name or Code.
				The same applies for or Format elements whose type is Name or Code. However
				<b>dictAttribute</b>
				must exists in the base class of the format element so should get it’s value from the parent class. Which means no
				work is required for this.
			</p>
			<i>UI Extensions</i>
			<p>Altering the domain as described in Business types will change the UI to refelect the new values. In addition to
				this an extra step is required in the MetaDict import.</p>
			<i>Validation</i>
			<p>
				Validation must be done when importing the metadict with the following constraints. For all attributes based on
				Business Type Code
				<ul>
					<li>
						AttrDefaultDisplayLength &lt;= AttrMaxDbLength &lt;= Code.MaxCharacters
		</li>
				</ul>
				For all attributes based on Business Type Name
				<ul>
					<li>
						AttrDefaultDisplayLength &lt;= AttrMaxDbLength &lt;= Name.MaxCharacters
		</li>
				</ul>
			</p>
			<p>
				<b>Page Designer Changes</b>
			</p>
			<i>Domain Widget</i>
			<p>
				The only domain widgets affected by this change those with the property
				<b>Maximum Characters</b>
				(display name) and
				property
				<b>visible in domain</b>
				is set to true. As well as the special widget
				<b>Attribute</b>

				If
				<b>Maximum Characters</b>
				is defined on a widget its value must be set using the following rules.
			</p>
			<p>
				<u>Creating a domain widget from the outline view.</u>
				<ol>
					<li>Copy values from UI extensions (this is the default behaviour).</li>
					<li>Override the default values</li>
				</ol>
				<pre>
    If dataset/attribute has TripleA annotation then
      If annotation has property “AttrDefaultDisplayLength” then
        If value different from value defined in UI extension then
         Iff property Maximum Characters  and ”Width” != “AttrMaxDbLength”.                     
          Assign this value “Maximum Characters” ”Width”.
    </pre>
			</p>
			<p>
				<u>Creating a domain widget from the palette and binding a dataset the properties view</u>
			</p>
			This follows the same rules as the outline view, with the single exception that it does not check the values defined
			in the UI extension.

			<p>In both cases if the value of AttrDefaultDisplayLength cannot be determined for the dataset’s attribute, try to
				inherit the value from the underlying class’ attribute.</p>
			<p>
				<i>Properties</i>
			</p>
			<p>“Max Characters” and “Width” properties value must be automatically updated whenever the associated parent dataset
				is changed or the dataset’s attribute is changed</p>

			<p>These properties inherit their value from “AttrDefaultDisplayLength” defined in the TripleA annotation.
			</p>
			<p>
				<i>Validation Rules</i>
			</p>
			<p>
				<ul>
					<li>
						The value of the property
						<b>Maximum Characters</b>
						(if defined) &lt;=
						<b>AttrDefaultDisplayLength</b>
					</li>
					<li>
						The value of the property
						<b>Width</b>
						(if defined) &lt;=
						<b>AttrDefaultDisplayLength</b>
					</li>
				</ul>
			</p>
			<p>
				<i>XSP Generation</i>
			</p>
			<p>
				Do not generate the xml attribute “chars” or the xml attribute “columns” whenever the value whenever the value of the
				property “Maximum Characters” or “Width” is not defined or is equal to the default value.</p>
			<p>
				<b>Testing</b>
			</p>
			<p>Test coverage in the related areas is not high and some work would be required to provide tests. To ensure
				coverage a combination of unit, integration and SWTBot tests should be written.</p>
			<p>
				<b>Files</b>
				<ul>
					<li>BusinessTypes.domain</li>
					<li>MetaDict2MML.java</li>
					<li>MetaDictDAO.java</li>
					<li>DictAttribute.java</li>
					<li>MdfDatasetDerivedPropertyWidgetBuilder.java</li>
					<li>MdfDatasetMappedPropertyWidgetBuilder.java</li>
					<li>DomainAttributePropertySourceAdapter.java</li>
					<li>DomainAttributePropertyEditor.java</li>

				</ul>
			</p>
		</section>

	</body>
</topic>
