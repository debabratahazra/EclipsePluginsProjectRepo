<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="SdlcFdsTdsVersion_4_2_b2f001">
	<title>Improvements to the Triple'A web local environment for Design Studio ("Official" Embedded Simple Server)</title>
	<body>
		<section>
			<title>Description</title>
			<p>
				The existing import of the Triple’A Meta-Dictionary into Design Studio must be updated to take into account
				modifications regarding the change of the length of the code and synonym.
			</p>
		</section>
		<section>
			<title>FDS Link</title>
			<p>
				<xref
					href="https://lausvn/svn/devel/projects/doc/active/triplea_plus/R11/03.%20Construction%20(Design)/TECHNOLOGY/DS/FDS_DSR11_TECH085_EmbeddedServer.doc"
					scope="external">FDS_DSR11_TECH085_EmbeddedServer.doc</xref>
			</p>
		</section>
		<section>
			<title>JIRA Issue(s)</title>
			<p>
				<xref href="http://rd.oams.com/browse/DS-4030" scope="external">DS-4030</xref>
			</p>
		</section>
		<section>
			<title>TDS</title>
			<p>
				<i> Note: FDS references are in parenthesis	</i>
			</p>
			<b>1. Creating new Embedded Server (FDS 2.2.1)</b>
			<p>
				<b>
					<i>1.1 Add New Server Type: Embedded Server</i>
				</b>
			</p>
			<p>
				The current OCSServer class and interface will be re-factored to introduce the two servers types:
				<ul>
					<li>EmbeddedServer (impl: EmbeddedServer)</li>
					<li>IClassicalServer (ClassicalServer)</li>
				</ul>
			</p>
			<p>
				The methods related to the Classical Server will be moved to the new
				<codeph>ClassicalServer</codeph>
				class and interface
				<ul>
					<li>
						<codeph>public String getInstallationDirectory();</codeph>
					</li>
					<li>
						<codeph>public String getLogDirectory();</codeph>
					</li>
					<li>
						<codeph>public String getEARLocation();</codeph>
					</li>
					<li>
						<codeph>public String getStartScript();</codeph>
					</li>
					<li>
						<codeph>public String getStopScript();</codeph>
					</li>
					<li>
						<codeph>public String getReloadMessagesTouchFile();</codeph>
					</li>
					<li>
						<codeph>public boolean isDisplayAllDeployedFiles();</codeph>
					</li>
				</ul>
			</p>
			<p>
				For now the
				<codeph>EmbeddedServer</codeph>
				class and interface are not expected to contain any methods.
			</p>
			<p>
				<b>
					<i>1.2 Add New Field: listeningPort (FDS 2.2.4)</i>
				</b>
			</p>
			<p>
				A new field will be added to the server:
				<ul>
					<li>listeningPort.</li>
				</ul>
			</p>
			<p>
				The name of the classical server will be changed in:
				<ul>
					<li>
						<codeph>com.odcgroup.ocs.server.util.ServerManager</codeph>
					</li>
				</ul>
				to be "Classical Application Server (Weblogic) on
				<codeph>${port}</codeph>
				"
			</p>
			<p>
				<b>
					<i>1.3 Add Embedded Server Project nature (FDS 2.2.2, 2.2.3)</i>
				</b>
			</p>
			<p>
				A new nature will identify the embedded server projects:
				<ul>
					<li>
						<codeph> com.odcgroup.server.simpleserver</codeph>
					</li>
				</ul>

			</p>
			<p>
				According to this nature, the open project of the workspace will be shown in the Server View. 
			</p>
			<p>
				Only opened projects will be displayed. This will be done by a listener on the workspace to react project :
				<ul>
					<li>creation</li>
					<li>removal</li>
					<li>closing</li>
					<li>reopening</li>
				</ul>
				This will be done by updated the resource change listener on the workspace that
				already check for deployed project
				removal from the workspace (setup here:
				<ul>
					<li>
						<codeph>com.odcgroup.ocs.server.ui.OCSServerUICore.start(BundleContext))</codeph>
					</li>
				</ul>
			</p>
			<p>
				<b>
					<b>
						<i>1.4 Update Pop-up Menu: Add New Embedded Server Link(FDS 2.2.1)</i>
					</b>
				</b>
			</p>
			<p>
				A new entry will added and visible at all time:
				<ul>
					<li>Add New Embedded Server.</li>
				</ul>
			</p>
			<p>
				This will be done in:
				<ul>
					<li>
						<codeph>com.odcgroup.ocs.server.ui.views.ServerView.fillContextualMenu(IMenuManager).</codeph>
					</li>
				</ul>
			</p>
			<p>
				The menu should launch the Template Creation wizard in way similar to :
				<ul>
					<li>
						<codeph>com.odcgroup.aaa.ui.internal.action.AAAAction.runWizard(IWorkbenchWindow)</codeph>
					</li>
				</ul>
			</p>
			<p>
				The menu entry should also be available from the toolbar:
				<ul>
					<li>
						<codeph>com.odcgroup.ocs.server.ui.views.ServerView.contributeToActionBars()</codeph>
					</li>
				</ul>
			</p>
			<p>
				<b>
					<i>1.5 Embedded Server Statuses (FDS 2.2.2)</i>
				</b>
			</p>
			<p>
				The status of the Embedded Server will be the same as for the Classical Server.
				Therefore no change should be done
				here.
			</p>
			<p>
				<b>
					<i>1.6 Servers View (FDS 2.2.5)</i>
				</b>
			</p>
			<p>
				The ServerView is already implemented to hold a list of servers. The method
				<codeph>com.odcgroup.ocs.server.OcsDeployCore.getServer()</codeph>
				will be renamed:
				<codeph> getServers()</codeph>
				and updated to retrieve a list of
				servers (Classical and Embedded) instead of returning the Classical Server only.
			</p>
			<p>
				<b>2 Start/Stop Server (2.2.5)</b>
			</p>
			<b>
				<i>2.1 Start</i>
			</b>
			<p>
				The
				<codeph>com.odcgroup.ocs.server.ui.actions.StartServerAction</codeph>
				method will be updated to start the Classical Server and the Embedded Server. The Embedded Server start will be
				based on
				<codeph> com.odcgroup.ocs.server.simple.StartSimpleServerAction </codeph>
				which is a preview of the Embedded Server starting which solves the classpath too long problem (DS-4098).
			</p>
			<p>
				<b>
					<i>2.2 Start in debug</i>
				</b>
			</p>
			<p>
				To start in debug, the launch will be updated this way:
				<ul>
					<li>
						<codeph>ILaunch launch = configuration.launch(ILaunchManager.DEBUG_MODE, null);</codeph>
					</li>
				</ul>
			</p>

			<b>
				<i>2.3 Stop</i>
			</b>
			<p>
				The ILaunch instance created in the start/start in debug will be kept to stop it using:
				<ul>
					<li>
						<codeph>launch.terminate()</codeph>
					</li>
				</ul>
			</p>
			<p>
				Note: the
				<codeph>com.odcgroup.ocs.server.simple.StartSimpleServerAction</codeph>
				class and its related configuration in the
				<codeph>plugin.xml</codeph>
				will be removed.
			</p>
			<p>
				<b>3 Display and clear the logs (2.2.6)</b>
			</p>
			<p>
				<b>
					<i>3.1 Change the default option of "focus on error"</i>
				</b>
			</p>
			<p>
				The method:
				<ul>
					<li>
						<codeph>com.odcgroup.ocs.server.internal.CommonConsole.getErrorAndWarningConsoleStream()</codeph>
					</li>
				</ul>
				should be updated by removing the line
				<codeph>messageConsole.activate();</codeph>
			</p>
			<p>
				<b>
					<i>3.2 The monitored file should be of the last started server</i>
				</b>
			</p>
			<p>
				The method:
				<ul>
					<li>
						<codeph> com.odcgroup.ocs.server.logs.LogWatcherManager.startAllLogWatchers()</codeph>
					</li>
				</ul>
				will be updated to call
				<ul>
					<li>
						<codeph> com.odcgroup.ocs.server.logs.LogWatcherManager.stopAllLogWatchers()</codeph>
					</li>
				</ul>
				at first and clearing the logConsoles list. Additionally the method:
				<ul>
					<li>
						<codeph> com.odcgroup.ocs.server.logs.LogWatcherManager.getLogLocation(String)</codeph>
					</li>
				</ul>
				should be updated to return the log location of the selected server (instead of the Classical Server).
			</p>
			<p>
				<b>4 Split Triple’A Plus Preferences page into Server Preferences and Runtime Preferences pages (2.2.8)</b>
			</p>
			<p>
				<b>
					<i>4.1 Reorganize preferences page contents</i>
				</b>
				<ol>
					<li>
						Create a new Preference Page for the Embedded Server in the ocs-server-ui project:
						<ul>
							<li>
								<codeph>com.odcgroup.ocs.server.ui.preferences.pages.EmbeddedServerPreferencePage</codeph>
							</li>
						</ul>
						This will include the preferences related to the Embedded Server moved from:
						<ul>
							<li>
								<codeph>com.odcgroup.ocs.support.ui.preferences.pages.OCSRuntimePreferencePage</codeph>
							</li>
						</ul>
						Note: set the category to the Server page id to make it a child of the Server node in the left pane.
					</li>
					<li>
						Rename
						<parmname>OCSRuntimePreferencePage</parmname>
						to
						<parmname>ClassicalServerPreferencePage</parmname>
					</li>
					<li>
						Move Deploy Console entry from
						<parmname>OCSServerPreferencePage</parmname>
						to
						<parmname>ClassicalServerPreferencePage</parmname>
					</li>
				</ol>
			</p>
			<p>
				<b>
					<i>4.2 Update Links on Server menu pop-up (2.2.7)</i>
				</b>
				<ol>
					<li>Rename the existing menu entry "Open Triple'A Plus Server Preferences" to "Open Logging Preferences…"</li>
					<li>Rename the existing menu entry "Open Triple'A Plus Runtime Preferences" to "Open Server Preferences…"</li>
					<li>In ServerView, rename openRuntimePref to openClassicalServerPref, create a new openEmbeddedServerPref field
						which opens the Embedded Server Preferences and has the same label ("Open Server Preferences…")</li>
					<li>
						The logic of showing this menu entry only for Embedded Server (and openClassicalServerPref only for the Classical
						Server) should be implemented in
						<codeph>com.odcgroup.ocs.server.ui.views.ServerView.fillContextualMenu(IMenuManager)</codeph>
					</li>
				</ol>
			</p>
			<p>
				<b>5. Add New Classical Server behavior (2.2.9)</b>
			</p>
			<p>
				The method:
				<ul>
					<li>
						<codeph>com.odcgroup.ocs.server.OcsDeployCore.getServer()</codeph>
					</li>
				</ul>
				will not return the Classical Server anymore if its status is "Not Properly Configured".
			</p>
			<p>
				Additionally a new action will be created for the menu entry "Configure Classical Server"" and the method:
				<ul>
					<li>
						<codeph>com.odcgroup.ocs.server.ui.views.ServerView.fillContextualMenu(IMenuManager)</codeph>
					</li>
				</ul>
				will be updated to show this menu if the Classical Server state is "Not Properly Configured".
			</p>

			<p>
				<b>6. Update Server Project Creation (2.3.1)</b>
			</p>
			<p>
				The existing embedded server will be updated
				<filepath>(CMS: imf/template/server-pms)</filepath>
				. The existing template will be updated this way:
				<ol>
					<li>
						The project name will be introduced as a new parameter (
						<parmname>projectName</parmname>
						).
						The template will be updated to use this parameter to create a project with the specified name and correctly
						configure it (i.e. project file contains the project name)
					</li>
					<li>
						The server port will be introduced as a new parameter (
						<parmname>listeningPort</parmname>
						).
						Additionally a new file, named server.properties, will be included in the server project.
						The port in this file (
						<parmname>key: listening.port</parmname>
						) will be replaced by the listening port.
					</li>
					<li>
						The created project will also have a new nature:
						<ul>
							<li>
								<codeph>com.odcgroup.server.ocsembeddedserver</codeph>
							</li>
						</ul>
						The existing embedded servers located at
						<ul>
							<li>
								<filepath>https://lausvn.oams.com/svn/devel/products/OCS/branches/5.0/business-models/pms/pms-models</filepath>
							</li>
						</ul>
						will also be updated to have this new nature.
					</li>
				</ol>
			</p>

			<p>
				<b>7. Modularity</b>
			</p>
			<p>
				The current split of responsibilities is:
				<ul>
					<li>
						ocs-server(-ui):
						<ul>
							<li>code related to the deployment to External WebLogic Server</li>
						</ul>
					</li>
					<li>
						ocs-support(-ui):
						<ul>
							<li>configuration of OCS location</li>
							<li>extraction of OCS jars</li>
							<li>OCS specific features: add patcher, touch file, unset read only, patch builder, ant prefs value provider, ocs
								schema resolver</li>
						</ul>
					</li>
				</ul>

				The new split of responsibility will be:
				<ul>
					<li>
						ocs-server(-ui)
						<ul>
							<li>common code to the Server View (ui, model)</li>
							<li>common code to console, and log console</li>
							<li>extension point definition</li>
						</ul>
					</li>
					<li>
						ocs-server-external(-ui):
						<ul>
							<li>
								from ocs-support(-ui):
								<ul>
									<li>configuration of OCS location</li>
								</ul>
							</li>
							<li>
								from ocs-server(-ui):
								<ul>
									<li>code specific to WebLogic deployment (builder, ...)</li>
								</ul>
							</li>
						</ul>
					</li>
					<li>
						ocs-support(-ui)
						<ul>
							<li>OCS specific features: add patcher, touch file, unset read only, patch builder, ant prefs value provider, ocs
								schema resolver</li>
						</ul>
					</li>
					<li>
						ocs-server-embedded(-ui):
						<ul>
							<li>
								from ocs-support
								<ul>
									<li>extraction of OCS jars (incl. access to ocs-binaries)</li>
								</ul>
							</li>
							<li>new embedded server control</li>
						</ul>
					</li>
				</ul>
				The ocs-server(-ui) will have no knowledge of the Embedded Server or the WebLogic Server. The
				ocs-server-external(-ui) plugins and ocs-server-embedded(-ui) plugins will contribute to the ocs-server(-ui)
				plugins
				with the following extension point:
				<ul>
					<li>
						Extention point:
						<ul>
							<li>Point ID: OcsServerContributions</li>
							<li>Point Name: Ocs Server Contribution</li>
							<li>
								Attributes:
								<ul>
									<li>priority (string)</li>
									<li>type (instance of IServerContributions)</li>
								</ul>
							</li>
						</ul>
					</li>
				</ul>
				Methods of
				<codeph> IServerContributions:				</codeph>
				<ul>
					<li>
						<codeph>updateDeployedProjects(IOCSServer, IOCSProject[])								</codeph>
						<ul>
							<li>some action can be taken when a project is add/removed from the server view</li>
						</ul>
					</li>
					<li>
						<codeph>
							fillConfigureServerContextMenu(IOCSServer, IMenuManager)
								</codeph>
						<ul>
							<li>used to add configuration entries to the context menu</li>
						</ul>
					</li>
					<li>
						<codeph>
							fillAddServerContextMenu(IOCSServer, IMenuManager)
								</codeph>
						<ul>
							<li>used to add "Add XYZ Server" to the context menu</li>
						</ul>
					</li>
					<li>
						<codeph>
							fillAddServerToolbarMenu(IOCSServer, IToolBarManager)
								</codeph>
						<ul>
							<li>used to add menu entry on the tool bar menu</li>
						</ul>
					</li>
					<li>
						<codeph>
							start(IOCSServer, debug)
								</codeph>
						<ul>
							<li>starts the server</li>
						</ul>
					</li>
					<li>
						<codeph>
							stop(IOCSServer)
								</codeph>
						<ul>
							<li>stops the server</li>
						</ul>
					</li>
				</ul>
			</p>
		</section>
	</body>
</topic>
