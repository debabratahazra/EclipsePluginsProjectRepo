<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="SdlcFdsTdsVersion_6_0_udt_upload">
	<title>User Defined Entities (UDE)</title>
	<body>
		<section>
			<title>Description</title>
			<p>The User Defined Entities (UDE) is a generalization of the existing Triple'A extension mean called User Defined Field which allows a client to add column to existing entities. UDE allows creation of new entities (the physical representation will be a new user table) with the powerful features of Triple'A (relationship with new/existing entities, scripting for default values and input controls). They are seen from front ends (GUI/WUI) like any other regular entities.</p>
			<p>DesignStudio will be used to create new UDE using the domain designer. The user will provide additional information required by Triple'A through domain annotations (using the Triple'A property tab).</p>
			<p>The generation will then produce a Triple'A Gateway import file (see TAPCore_Gateway_ReferenceGuide.doc) which look like:</p>
			<codeblock>
REM Importation of user-defined tables. 
REM This file has been extracted by Design Studio from project: pms-models 
REM Design Studio version: Version: r11 SP1 Build: 6.0.0.20111030231056I 
REM Extraction date: 2011/11/11
SET QUOTE '
SET SEPARATOR ;

CMD INSUPD xd_entity
ATT sqlname_c name
DAT 'acc_profile_compo';'Accounting Profile Compo'

CMD INSUPD xd_attribute
ATT sqlname_c xd_entity_id.sqlname_c name datatype_dict_id.sqlname_c ref_xd_entity_id.sqlname_c primary_f mandatory_f db_mandatory_f default_c perm_val_f business_key_f logical_f
DAT 'acc_profile_id';'acc_profile_compo';'Profile';'id_t';'acc_profile';0;0;0;NULL;0;1;0
DAT 'begin_d';'acc_profile_compo';'Begin Date';'datetime_t';NULL;0;1;1;NULL;0;1;0
			</codeblock>
			<p>The resulting generated file will be included in a separate jar and included in the OCS package by the maven packager plugin.</p>
			<p>The last steps will be a manual process:
			<ul>
			 	<li>The extraction of the generated file to update the Triple'A meta dictionary</li>
			 	<li>The execution of the import script on the Triple'A</li>
			</ul>
			Further integration is expected in the future versions (i.e. RPC).</p>
		</section>
		<section>
			<title>FDS Link</title>
			<p>
				<xref
					href="https://lausvn/svn/devel/projects/doc/active/triplea_plus/6.0/03.%20Construction%20(Design)/FDS_DS11SP1-UDT-Upload.doc"
					scope="external">FDS_DS11SP1-UDT-Upload.doc</xref>
			</p>
		</section>
		<section>
			<title>JIRA Issue(s)</title>
			<p>
				<xref href="http://rd.oams.com/browse/DS-4753" scope="external">DS-4753</xref>
			</p>
		</section>
		<section>
			<title>TDS</title>
			<p>
				<i> Note: FDS references are in parenthesis	</i>
			</p>
			<b>1. Domain Designer (3.1)</b>
			<p><b>Domain creation</b></p>
			<p>The domains containing the UDE definitions will be annotated by the following new attribute of the existing Triple'A annotation</p>
			<codeph>@aaa:TripleA(UDEntity=true)</codeph>
			<p>The Create Domain wizard will have a new check box called</p>
			<codeph>[ ] User Defined Entity model</codeph>
			<p>Checking it will add the <codeph>@aaa:TripleA(UDEntity=true)</codeph> annotation to the domain.</p>
			<p>This check box will be only available if the project is expected to be a Triple'A project (with the corresponding nature)</p>
			<p><i>Note: The annotation can be removed from the annotations tab of the domain.</i></p>
			<p><b>Domain edition</b></p>
			<p>The Triple'A tab will be displayed and made editable if the domain is a UDE domain. The fields available will depend on the selected model. The name of the annotation property is in parenthesis.
			<ul>
			 	<li>Entity SQL Name (<codeph>EntitySQLName</codeph>) for class, enumeration</li>
			 	<li>Entity Name (<codeph>EntityName</codeph>) for class</li>
			 	<li>Attribute SQL Name (<codeph>AttrSQLName</codeph>) for class attribute, class association</li>
			 	<li>Attribute Name (<codeph>AttrName</codeph>) for class attribute, class association, enumeration</li>
			 	<li>Parent Type Entity SQL Name (<codeph>ParentTypeEntity</codeph>) for class association (optional)</li>
			 	<li>Parent Type Attribute SQL Name (<codeph>ParentTypeAttr</codeph>) for class association (optional)</li>
			 	<li>Permitted Value Name (<codeph>PermValName</codeph>) for enumerated value</li>
			 	<li>Permitted Value Rank (<codeph>PermValRank</codeph>) for enumerated value</li>
			</ul></p>
			<p><b>Domain validation</b></p>
			<p>Several validations are applied on the entered properties (SQL name constraints, Business Type, Suffix, Uniqueness, Primary Key, Enumeration attribute, Mandatory fields - see FDS 3.1.3 for details).</p>
			<b>2. Code Generation (3.2, 4)</b>
			<p>A new plugin called <codeph>com.odcgroup.aaa.generation</codeph> will be created and part of the <codeph>com.odcgroup.aaa</codeph> feature.</p>
			<p>A new cartridge will be created: <codeph>UD Entities</codeph> under a new category: <codeph>AAA</codeph>.</p>
			<p><i>Note: As this file needs to be generated in a separate jar, the necessity of a new category was not avoidable.</i></p>
			<p>The output for a project will be one Triple'A Gateway import format file for the whole project (several UDE domains will be created, i.e. entities and enumeration). Some ordering rules might need to be applied (i.e. references cannot be created before tables). However the auto create mode available in Triple'A might be used to overcome this.</p>
			<p>The generation of the file will be a two steps process:
			<ul>
			 	<li>Browse the domains and apply the mapping rule to create Triple'A gateway commands</li>
			 	<li>Serialize the commands in a file</li>
			</ul></p>
			<p>The creation of an internal representation of the Triple'A gateway commands is done to ease the future extension of the feature which will update the Triple'A instance using a dedicated RPC or another online mean.</p>
			<p>The model mapping will follow the detailed rules defined in the FDS (4.2).</p>
			<b>3. Triple'A meta-dictionary import (3.3)</b>
			<p>As DS is the master of UDE, those entities needs to be ignored during the meta-dictionary import. Additional rule will also apply in parent type attribute setting (to be clarified)</p>
			<b>4. Custom packager (3.4)</b>
			<p>The newly generated source folder need to be packaged in a new jar (pms-models-gen-5.1.0-aaa.jar). To do so, the maven configuration of the generator plugin needs to be updated to take in account this new source folder. This will be done by changing the configuration of the <codeph>com.odcgroup.maven.plugin:maven-ds-generator-plugin</codeph> in the <codeph>com.odcgroup.odp:ocs-core</codeph> pom by adding a new generatedArtifacts definition like this:</p>
			<codeblock>
&lt;generatedArtifact&gt;
	&lt;sources&gt;src/aaa&lt;/sources&gt;
	&lt;classifier&gt;aaa&lt;/classifier&gt;
	&lt;javaSource&gt;false&lt;/javaSource&gt;
	&lt;requiredFolders/&gt;
&lt;/generatedArtifact&gt;
			</codeblock>
		</section>
	</body>
</topic>
 