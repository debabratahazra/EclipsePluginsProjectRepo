<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="SdlcFdsTdsVersion_7_0_Xtooltip">
  <title>Extended tooltip</title>
  <body> 
    <section>
      <title>Description</title>
      <p>Extended tooltips (Xtooltips) can mix the data and widgets and come with a professional layout.
       Design studio supports to create the Xtooltips and apply the  Xtooltips to module's widgets. </p>
    </section>
    <section>
      <title>FDS Link</title>
      <p>
      <xref href="https://lausvn/svn/devel/projects/doc/active/triplea_plus/6.0/03.%20Construction%20(Design)/FDS_DS12-XTooltipDesign.doc"  scope= "external" >FDS_DS12-XTooltipDesign.doc</xref>
     </p>
    </section>
    <section>
      <title>JIRA Issue(s)</title>
      <p>
    <xref href="http://rd.oams.com/browse/DS-4678" scope="external">DS-4678</xref>
   </p>
    </section>
    <section>
      <title>TDS</title>
      <p>
    <i> Note: FDS references are in parenthesis </i>
   </p>
    </section>
    <section>
      <title>1 Xtooltip Fragment</title>
    </section>
    <section>
      <b>1.1 Fragment Wizard UI(4.1)</b>
    </section>
    <section>
      <p>The current fragment creation wizard UI has to change to support creation of Regular type fragment and Xtooltip type fragment,
        add the Fragment types 'Xtooltip' and 'Regular' labeled   Radio button  in the fragment wizard ui. the createExtendedControls() method in NewFragmentWizardPage needs to be adapted  according to the new fragment creation wizard UI  in the FDS.</p>
    </section>
   
     <section>
     <b>1.2 Add New Fragment type Property </b>
     </section> 
     <section> 
       <p>  A new property is required  on fragment Widgets to   identify fragment type and filter the palette widgets.
        Creat a fragment type property in  xgui-widget-library.metamodel. create a new  fragmenttype data type in data-type.metamodel with xtooltip and regular as data  values. 
         set the fragmenttype data type and default value ‘Xtolltip’  to the fragment  type property. </p>
         <p>  Add this  property to the already existing Fragment widget in page-designer.metamodels</p>
     </section>
     <section>
      <b>1.3  Xtooltip Widegt (4.1.2)</b>
       <p>   Xtooltip widget is a new Widget used only in Xtooltip type Fragments. 
             To create a new Xtooltip widget  ,the  first step is to   Add  a  ‘Xtoolip widget in page-designer.metamodels,set the Translation support to Name and then create a figure  class ‘com.odcgroup.page.ui.figure.Xtooltip’ in page-ui plugin.
             map the figure to the Xtooltip widget by creating a ‘ Xtooltip’ Renderer info in page-designer.uimodel</p>
        <p>To validate the drop of the widgets with in the Xtolltip ,Create  Accountability rules for 'Xtooltip->Grid' in page-designer.metamodels.</p>   
         
      </section> 
      <section>
      <b>1.4 Palette content(4.1.4)</b> 
      <p>Xtooltip type fragment palette contains only Xtolltip supported  widgets (Refer FDS 4.1.4 for supported widgets) ,so a new palette is required for the Widget type ‘Fragment’ .
         to create a new palette for Xtooltip type fragments, add  a new palette in page-designer.uimodels by setting property type to ‘fragmenttype’ ,property value to ‘Xtooltip’ and widget type ‘Fragment’.
         create palette groups under the ‘Xtooltip’  palette for  panels,labels,editables,modifiable and special.
         set the supported Palette Group items in each group . </p>
       <p>pseudo code to get the palette for Xtooltip type Fragment:</p> 
      <codeblock> If (WidgetTypeConstants.FRAGMENT.equals(widget.getName())) {
	 PropertyType propertyType =      rootWidget.findProperty(PropertyTypeConstants.FRAGMENTTYPE).getType();
                  String value = rootWidget.getPropertyValue(PropertyTypeConstants. FRAGMENTTYPE);
	   palette = uiModel.findPalette(widget, propertyType, value);
   } 
     </codeblock> 
     
      </section>
      <section>
      <b>1.5 XSP Generation(9)</b>
       <p> To generate the code as per the template mentioned in the FDS, a transformer class ‘com.odcgroup.page.transformer.XtooltipWidgetTransformer’ need to create in page-transformmodel plugin.
       map the ‘ XtolltipWidgetTransformer’ class to the ‘ Xtooltip’  widget by  creating a ‘Xtooltip’  widget transformer in  page-designer.transformmodel.
        need to create Generic Property Transformer for 'Hold Xtooltip Fragment' property and 'Delay' property in page-designer.transformmodel.</p>
     </section>
     <section>
      <title>2 Xtooltip Module</title>
    </section> 
    <section>
      <b>2.1 Module Creation Wizard:(4.2.1)</b>
      <p>To create an Xtooltip Type Modules, in the Module creation wizard page UI an ‘Extended tooltip’ module type option   is required. 
        Create a ‘Extended tooltip’ radio button in createModuleTypeGroup() method in the NewModuleWizardPage  to Add the ‘Extended tooltip’ option in the UI.</p>
     </section>
     <section>
     <b>2.2 PaletteContent(4.2.3)</b>
     </section>
     <section>
     <p> Xtooltip type module palette contain only the Xtooltip supported widgets.
         to show only the xtooltip supported widgets in Xtooltip type module palette, Create a new xtooltip  palette in page-designer.uimodels  by setting the property  type to ‘module type’ , property value to ‘xtooltip’and widget type to module.creat the panels,labels,editable,modifiable,special   palette groups under  the  xtooltip  palette.
        add the xtooltip supported items mentioned in FDS to each palette group. </p>
     <p>pseudo code to get the palette for Xtooltip type Module:</p>
     <codeblock> If (WidgetTypeConstants.Module.equals(widget.getName())) {
	 PropertyType propertyType =      rootWidget.findProperty(PropertyTypeConstants.MODULETYPE).getType();
                  String value = rootWidget.getPropertyValue(PropertyTypeConstants. MODULETYPE);
	   palette = uiModel.findPalette(widget, propertyType, value);
     } 
      </codeblock>
    </section>
    <section> 
     <title>3 Add  Xtooltip Properties to the Widgets</title>
     </section>
     <section>
     <p>to set the xtooltip on the widgets requires a  new xtooltip properties to be added to the widgets</p>
     <p> create a Xtooltip property Tab by extending the org.eclipse.ui.views.properties.tabbed.propertySections, org.eclipse.ui.views.properties.tabbed.propertyTab ,org.eclipse.ui.views.properties.tabbed.propertyContributor extensions.</p>
      </section>
     <section> 
      <b>3.1 Add following properties under Xtooltip Category:</b>
      </section>
      <section>
      <ul>
        <li> Property Name: Xtooltip Type</li>
        <li>  Category : Xtooltip</li>
        <li>  Data type: Xtooltip</li>
        <li>  Data Values:none,Data accessed on request,data based on current dataset</li>
        <li>Default value:none</li>
       </ul> 
      </section>
       <section>
       <ul>
       <li> Property Name:Include Xtooltip fragment</li>
       <li>Category :Xtooltip </li>
       <li>Data Type:IncludeXtooltipfragment </li>
       <li>Datatype Editor :com.odcgroup.page.ui.properties.XtooltipFragmentEditor</li>
        </ul>
       </section>
       <section>
      <ul>
        <li>Property Name: Hold Xtooltip fragment</li>
        <li>Category :Xtooltip</li>
        <li>Data Type type:Boolean</li> 
        <li>properyt default value : false</li>
       </ul>
       </section>
       <section>
       <ul>
        <li> Property Name: Delay</li>
        <li>Category :Xtooltip</li>
        <li>Data type: PositiveNumber</li>
        <li> Property default value: 700 </li>
       </ul>
    <p>Create  the data types in the  data-type.metamodel and propertys in  xgui-widget-library.metamodel</p>
       </section>
     
     <section>
       <title>4 Add new Event and Function in page-designer.metamodel </title>
       <p>a mouseover event need to create to trigger a xtooltip on the widget by mouseover .Add a onmouseover Event in page-designer.metamodel with property type 'tid' </p>
       <p> mouseover event supports a new function named 'qtip'.add a 'qtip' function in the page-designer.metamodel and set the event type to onmouseover event.create parameters for  the 'qtip' function.
          Get the target list from the qtip function’s  'qtiptarget' parameter's 'qtiptarget' data type and show it in the Event creation Dialog. </p>
      </section>
     
   </body>
</topic>
   