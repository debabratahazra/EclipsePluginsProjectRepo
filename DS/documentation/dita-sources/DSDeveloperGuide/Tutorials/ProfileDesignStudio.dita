<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/dtd/task.dtd">
<task id="devguide_tutorials_profiledesignstudio">
  <title>Profile Design Studio</title>
	<prolog>
		<author type="creator">Alain Tripod</author>

		<metadata>
			<keywords>
				<indexterm>profiler</indexterm>
			</keywords>
		</metadata>
	</prolog>
  <taskbody>
    <context>
    In order to be able to profile some parts of Design Studio during a debugging session you can
    following the following steps.
    </context>
  	<steps>
	  	<step>
	  		<cmd>Install JProfiler. You can find an installer somewhere in our local network.</cmd>
	  	</step>
	  	<step>
	  		<cmd>Start Design Studio by using the following VM arguments. 
	  		We assume JProfiler has been installed in C:\Program Files\jprofiler5.
	  		You can also change the port number (8849 is the default value).</cmd>
	  		<info>
	  			<p>
		  			<ul>
		  				<li>-agentlib:jprofilerti=port=8849  "-Xbootclasspath/a:C:\Program Files\jprofiler5\bin\agent.jar"</li>
	  				</ul>
	  			</p>
	  		</info>
			<stepxmp>
					<p>
						<image href="images/JProfilerArguments.png"/>
					</p>
			</stepxmp>
		</step>
		<step>
		 <cmd>Add native library to the Windows path.</cmd>
		  <info><p><ul><li>C:\Program Files\jprofiler5\bin\windows</li></ul></p></info>
		</step>
	  	<step>
	  		<cmd>Launch Design Studio. If the JProfiler agent is successfully started 
	  		you should see in the Console something similar to this:</cmd>
	  		<info>
	  			<p>
	  				<ul>
					<li>JProfiler&gt; Protocol version 26</li>
					<li>JProfiler&gt; Using JVMTI</li>
					<li>JProfiler&gt; JVMTI version 1.1 detected.</li>
					<li>JProfiler&gt; 32-bit library</li>
					<li>JProfiler&gt; Listening on port: 8849.</li>
					<li>JProfiler&gt; Instrumenting native methods.</li>
					<li>JProfiler&gt; Native library initialized</li>
					<li>JProfiler&gt; VM initialized</li>
					<li>JProfiler&gt; Waiting for a connection from the JProfiler GUI ...</li>
	  				</ul>
	  			</p>
	  		</info>
	  	</step>
	  	<step>
	  		<cmd>Finally start a JProfiler session. The following screenshot shows the minimal
	  		requirements to connect to the JVM that run DesignStudio. Once JProfiler is connected to the JVM, the Eclipse Console should 
			show something similar to the following lines, depending on your session's settings: 
	  		</cmd>
			<info>
				<p>
					<ul>
					<li>JProfiler&gt; Using sampling (1 ms)</li>
					<li>JProfiler&gt; Time measurement: elapsed time</li>
					<li>JProfiler&gt; CPU profiling enabled</li>
					<li>JProfiler&gt; Hotspot compiler enabled</li>
					<li>JProfiler&gt; Starting org/eclipse/equinox/launcher/Main ...</li>	  			
					</ul>
				</p>
			</info>
			<stepxmp>
					<p>
						<image href="images/JProfilerSession.png"/>
					</p>
			</stepxmp>
	  	</step>
  	</steps>
  </taskbody>

</task>
