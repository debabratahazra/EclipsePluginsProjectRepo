<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="domain_class">
	<title>Application</title>
	<prolog>
		<author type="creator">Olivier Cevaer</author>

		<metadata>
			<keywords>
				<indexterm>application</indexterm>
				<indexterm>table</indexterm>
				<indexterm>class</indexterm>
			</keywords>
		</metadata>
	</prolog>
	<conbody>
		<p>Applications represent T24 meta-model with all tables this product contains.
			T24 applications can be imported in
			DS where they become domain classes. One T24 table with fields is a domain class
			with attributes in DS.
		</p>
		<p>
			Foreign key fields become associations by reference in the DS class, pointing to the referenced class.
			For instance,
			a foreign key referencing the CUSTOMER table, becomes an association referencing the Customer class.
			DS reports error
			when a referenced class cannot be found. When importing an application into DS you need to have all referenced
			application in your project.
		</p>
		<p>T24 meta-model presents "flat" tables where all fields are exposed the same way, whatever its type is. Foreign
			key, single value field or
			multiple value, are presented as one field. DS domain designer is UML class diagram
			compliant:
		</p>
		<p>Multi-value fields in T24 means that a field, within a table record, can have a collection of values.
			An
			address can,
			for instance, require more than one line. The adrLines attribute of the Address class is, in that case, a multi-value field.
			Multi-value
			fields can
			be grouped. Back to the address example, a customer can have more than one address, where an address is
			composed by
			many
			lines: street, country...
			When transforming T24 applications into DS domain files, these
			multi-value fields
			become
			separate classes. Their names
			are created by the DS import process and don't match any existing
			T24 table.
			The
			application has an association by value with cardinality many pointing to this created class, conforming to UML Class 
			diagram.
			For
			the address example: the class Address is created during the import and the class Customer has an
			association (by
			value, many) pointing to it.
		</p>
		<p>This concept of multiple value fields supports two levels, not more. A multiple value field can contain a multiple
			value field.
			We then talk about sub-value field. For a multiple value like addresses, adrLines is a sub-value field
			as it can have more
			than one occurrence.
		</p>
		<p>
			The following picture illustrates the example described in previous paragraphs:
			<image href="../../Images/domainImages/AddressUML.jpg"></image>
		</p>
		<p>Applications are not supposed to be edited after being imported. No change done on application domain model in DS
			can be deployed on T24.</p>
	</conbody>
	<related-links>
		<link href="./domain_model.dita" />
		<link href="./Class/class_attribute.dita" />
	</related-links>
</concept>
