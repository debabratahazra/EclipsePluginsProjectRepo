<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd" []>
<reference id="naming_conventions">
  <title>Naming conventions</title>
  <prolog>
    <author type="creator">Claude Vedovini</author>
    <metadata>
      <keywords>
        <indexterm>conventions</indexterm>
        <indexterm>naming conventions</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="entities">
      <title>Entities</title>
      <p>Entity names should be
    nouns, in mixed cases with the first letter of each internal word
    capitalised. Try to keep your class names simple and descriptive. Use
    whole words. Avoid acronyms and abbreviations (unless the abbreviation is
    much more widely used than the long form, such as URL or HTML).
    </p>
    </section>
    <section id="properties">
      <title>Properties</title>
      <p>A property name is an
    unlimited-length sequence of Unicode letters and digits, beginning with a
    letter, the dollar sign <codeph>$</codeph>, or the underscore character <codeph>_</codeph>. The
    convention, however, is to always begin your property names with a letter,
    not <codeph>$</codeph> or <codeph>_</codeph>. Additionally, the dollar sign character, by convention, is
    never used at all. You may find some situations where auto-generated names
    will contain the dollar sign, but your property names should always avoid
    using it. A similar convention exists for the underscore character; while
    it is technically legal to begin your property&apos;s name with <codeph>_</codeph>, this
    practice is discouraged. White space is not permitted. </p>
      <p>Subsequent
    characters may be letters, digits, dollar signs, or underscore characters.
    Conventions (and common sense) apply to this rule as well. When choosing a
    name for your properties, use full words instead of cryptic abbreviations.
    Doing so will make your code easier to read and understand. In many cases,
    it will also make your code self-documenting; fields named &quot;cadence&quot;,
    &quot;speed&quot;, and &quot;gear&quot;, for example, are much more intuitive than abbreviated
    versions, such as &quot;s&quot;, &quot;c&quot;, and &quot;g&quot;. Also keep in mind that the name you
    choose must not be a keyword or reserved word; see section  <xref href="reserved_words.dita"/>.</p>
      <p>If the name you choose consists of only one word,
    spell that word in all lowercase letters. If it consists of more than one
    word, capitalise the first letter of each subsequent word. The names
    &quot;gearRatio&quot; and &quot;currentGear&quot; are prime examples of this convention.
    </p>
    </section>
    <section id="constants">
      <title>Constants</title>
      <p>The names of constants
    (such as enumerated values) should be all uppercase with words separated
    by underscores (<codeph>_</codeph>). </p>
    </section>
    <section id="namespaces">
      <title>Namespaces</title>
      <p>Namespaces created
    for components of the Design Studio solutions should have one of the following
    forms: <ul>
          <li>
            <codeph>http://www.temenos.com/pma</codeph>
          </li>
          <li>
            <codeph>urn:com.temenos:domain-name</codeph>
          </li>
        </ul></p>
      <p>Namespaces created as extensions or customisation of the
    Design Studio solutions should reference the client for which they have been
    created (for example: <codeph>urn:ch.bcv:pma).</codeph> </p>
    </section>
    <section id="java_packages">
      <title>Java package</title>
      <p>The prefix of a
    unique package name is always written in all-lowercase ASCII letters and
    should be one of the top-level domain names (currently com, edu, gov, mil,
    net, org, or one of the English two-letter codes identifying countries as
    specified in ISO Standard 3166, 1981). </p>
      <p>Subsequent components of
    the package name vary according to an organization&apos;s own internal naming
    conventions. Such conventions might specify that certain directory name
    components be division, department, project, machine, or login names.
    </p>
    </section>
  </refbody>
  <related-links>
    <link href="reserved_words.dita">
<?xm-replace_text Reserved words?>    </link>
  </related-links>
</reference>
