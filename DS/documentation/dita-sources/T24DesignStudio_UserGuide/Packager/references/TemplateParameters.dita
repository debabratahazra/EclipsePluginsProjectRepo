<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd" []>
<reference id="template-packager">
	<title>Template parameters</title>
	<refbody>
		<section>
			<title>Common Parameters</title>
			<simpletable>
				<sthead>
					<stentry>Parameter</stentry>
					<stentry>Description</stentry>
				</sthead>
				<strow>
					<stentry>project-name</stentry>
					<stentry>
						Becomes the prefix of created projects.
						for instance, if you enter
						<i>MyPrefix</i>
						, the process will
						create
						the
						project "MyPrefix-models" among others. Default value is
						<i>ft-custosample</i>
					</stentry>
				</strow>
				<strow>
					<stentry>groupId</stentry>
					<stentry>
						Becomes the
						<i>groupId</i>
						value
						in the created pom.xml file of packager project.
					</stentry>
				</strow>
				<strow>
					<stentry>release</stentry>
					<stentry>Target release of the package, for instance R15. This becomes the first characters of the tar/jar name the
						packager generates. For consistency matter, set value you can find in the CURRENT.RELEASE field of the SPF SYSTEM
						record.
					</stentry>
				</strow>
				<strow>
					<stentry>component-name</stentry>
					<stentry>
						Contributes to the tar/jar name the packager generates.
						It is also the name of the jar(TAFJ) or folder
						(TAFC) holding the compiled basic routines inside the jar/tar.
						When you customize T24 you are not supposed to use a
						T24 core component name but creating your own name.
						It is recommended to stay close to
						T24 naming convention.
						T24
						component names can be found in the
						PGM.DATA.CONTROL, where first two
						letters
						belong to
						EB.PRODUCT table and full
						component name to
						EB.COMPONENT one.
					</stentry>
				</strow>
				<strow>
					<stentry>version</stentry>
					<stentry>Version number of your choice. for instance 15.04. It contributes to the tar/jar name the packager
						generates.
					</stentry>
				</strow>
				<strow>
					<stentry>rev</stentry>
					<stentry> Revision number of your choice. for instance: 1. It contributes to the tar/jar name the packager
						generates.
						It is always better to give a revision number to a package for keeping tracks of incremental changes you
						install on
						T24.
					</stentry>
				</strow>
			</simpletable>
			<p>The parameters listed above can be changed in pom.xml files after template creation.</p>
			<p>
				Following Parameters are required only if you need to compile and package basic code.
				If you only work with
				models and data records, simply set NA to following ones but TAFJ HOME,
				TAFJ plug-ins require at start. You can
				update them
				in the
				<filepath>[project]-packager\Launch T24 Packager.launch</filepath>
				at any time after template creation.
			</p>
		</section>

		<section>
			<title>TAFJ Specific Parameters</title>
			These Parameters must be absolute paths pointing to TAFJ installation you are using locally.
			They are used when
			<xref href="../tasks/LaunchingPackagerTAFJ.dita">packager is launched</xref>
			from your Design Studio IDE. These parameters are directly passed to maven when running
			<xref href="../tasks/PackagingOnRemoteServer.dita">packager on remmote server </xref>
			for continuous integration.
			<p>
				<simpletable>
					<sthead>
						<stentry>Parameter</stentry>
						<stentry>Description</stentry>
					</sthead>
					<strow>
						<stentry>TAFJ HOME</stentry>
						<stentry>
							TAFJ_HOME Location. for instance:
							<filepath>[TAFJ-Installation]\Temenos\TAFJ</filepath>
						</stentry>
					</strow>
					<strow>
						<stentry>insertDir</stentry>
						<stentry>
							Folder where routines called by $INSERT basic command can be found . for instance:
							<filepath>[TAFJ-Installation]\Temenos\h2\UD\T24_BP.</filepath>
							Remember this folder path, you will need it when toggling the TAFJ project nature.
							It must match the Insert folder
							property.
						</stentry>
					</strow>
					<strow>
						<stentry>libDir</stentry>
						<stentry>
							Folder holding JAR files where routines can be found. for instance:
							<filepath>[TAFJ-Installation]\Temenos\jboss\modules\com\temenos\t24\main</filepath>
							Remember this folder path, you will need it when toggling the TAFJ project nature.
							It must match the JARs folder
							property (precompiled in TAFJ properties file).
						</stentry>
					</strow>
				</simpletable>
			</p>
		</section>
		<section>
			<title>TAFC Specific Parameters</title>
			<simpletable>
				<sthead>
					<stentry>Parameter</stentry>
					<stentry>Description</stentry>
				</sthead>
				<strow>
					<stentry>t24Home</stentry>
					<stentry>
						Location of your TAFC installation, pointing to the bnk.run folder. for instance:
						<filepath>[TAFC-installation]\Temenos\bnk\bnk.run</filepath>
					</stentry>
				</strow>
				<strow>
					<stentry>t24infra</stentry>
					<stentry>
						Location of your Visual studio installation, pointing to the Infra folder. for instance:
						<filepath>[ModelBank-installation]\Temenos\infra</filepath>
					</stentry>
				</strow>
			</simpletable>
		</section>
	</refbody>
	<related-links>
		<link href="../tasks/LaunchingPackagerTAFJ.dita"></link>
		<link href="../tasks/PackagingOnRemoteServer.dita"></link>
	</related-links>
</reference>

