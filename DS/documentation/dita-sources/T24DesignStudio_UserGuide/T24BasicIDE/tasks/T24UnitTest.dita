<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd" []>
<task id="t24unit_test">
	<title>Unit testing T24 code</title>
	<taskbody>
		<context>
			<p>
				<b>T24 Unit test</b>
			</p>
			<p>
				Any subroutine which can be run independently in T24 server can be treated as a T24 Unit. T24 Unit test is a
				subroutine which executes a T24 Unit with predefined data and compares with expected results to determine its
				logical
				correctness.
			</p>
			<p>
				<b>Creating tests</b>
			</p>
			<p>
				Any Subroutine which follows the below said rules can be treated as T24 Unit test and can be executed in T24
				Server
				from Eclipse plug-in.
			</p>
			<p>
				<u>Rules:</u>
			</p>
			<p>
				<ul>
					<li>
						<p>Name of the Subroutine should contain the word Test anywhere [Eg., EB.RUN.RULE.Test or Test.EB.RUN.RULE]</p>
					</li>
					<li>
						<p>Each test case sholud use tResult and tErrorMessage variables to pass results [failed/passed] and error message
							[if failed] respectively to local subroutine T24UNIT.BUILD.REPORT
						</p>
					</li>
				</ul>
			</p>
			<p>
				<b>T24 Unit test wizard</b>
			</p>
			<p>
				T24 Unit test wizard helps in creating unit tests by obtaining the location and name of the file through a page
				and by creating a stub code which can be easily modified to suite the needs of the test.
			</p>
		</context>
		<steps>
			<step>
				<cmd>This wizard can be reached by File>New>T24 Unit test or right-click on a T24 source file where the test file
					name would be used from the selection.
				</cmd>
				<info>
					<p>
						<image href="../images/T24Unittest.jpg" alt="T24 Unit test" align="left" />
					</p>
				</info>
			</step>
			<step>
				<cmd>The wizard page has two fields to obtain the directory in which the test file has to be created and the test
					file name. File names are validated against patterns while inputting.
				</cmd>
				<info>
					<p>
						<image href="../images/T24Unittestwizardpage.jpg" alt="T24 Unit test Wizard" align="left" />
					</p>
				</info>
			</step>
			<step>
				<cmd>T24 Unit test - Autogenerated Code
				</cmd>
				<info>
					<p>
						<image href="../images/T24Unittestcode.jpg" alt="T24 Unit test Code" align="left" />
					</p>
				</info>
			</step>
			<step>
				<cmd>
					<b>Running Tests: </b>
					A T24 Unit test file or a folder containing T24 Unit tests [name of the folder should contain the word Test
					anywhere]
					can be selected to run as T24 Unit test. Do right-click on the test or the test folder and select Run As
					>T24 Unit test
					which will trigger the selected test files to be executed in T24 server and the results would be
					processed before
					being displayed in a tree view. Test code will be saved, compiled in T24 before executed. The
					results
					[failed/passed]
					with error message [if failed] will be converted into nodes in the tree view.
				</cmd>
				<info>
					<p>
						<image href="../images/T24unit_testrunas.JPG" alt="Running Tests" align="left" />
					</p>
				</info>
			</step>
		</steps>
		<result>
			<p>
				Results of the executed tests would be displayed in T24 Unit view. This view would show the time taken for
				execution, number of tests sent for execution, number of tests passed, number of tests failed and number of tests
				did
				not run due to reasons like compilation failure, etc.,
			</p>
			<p>
				The progress bar shows the progress of the tests. The tree view will show the tests, test cases inside and their
				results. View toolbar holds three action buttons one to clear the view, second to rerun the current tests and third
				button to show only failed tests in the viewer. A test can be selected in the viewer to open the corresponding file
				in the editor or to run it again.
			</p>
			<p>
				<image href="../images/T24Unit_testview.JPG" alt="Display Test Results" align="left" />
			</p>
		</result>
	</taskbody>
</task>