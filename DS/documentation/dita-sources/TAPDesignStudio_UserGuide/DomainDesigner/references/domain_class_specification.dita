<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd" []>
<reference id="domain_class_specification">
  <title>Class properties</title>
  <prolog>
    <author type="creator">Claude Vedovini</author>
    <metadata>
      <keywords>
        <indexterm>class properties</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="section_685041DF88BE480CAC4862F7C2790ECE">
      <title>Core properties</title>
      <simpletable id="simpletable_CA97A6B13F354403B59BC5950F2CB3D0">
        <sthead>
          <stentry>Property</stentry>
          <stentry>Type</stentry>
          <stentry>Description</stentry>
          <stentry>Default value</stentry>
          <stentry>Example</stentry>
        </sthead>
        <strow>
          <stentry>Name</stentry>
          <stentry>String</stentry>
          <stentry>
            <p>The class name, a camel-cased identifier.</p>
            <p>
       For more
       information about naming conventions for entities, see section
       <xref href="naming_conventions.dita#naming_conventions/entities">Naming conventions</xref>
       .
      </p>
          </stentry>
          <stentry>&#160;</stentry>
          <stentry>
            <codeph>PortfolioManager</codeph>
          </stentry>
        </strow>
        <strow>
          <stentry>Superclass</stentry>
          <stentry>Class</stentry>
          <stentry> The parent class. <note type="remember">Parent/child relationship in the object-oriented sense means that the child class will inherit the characteristics of its parent (attributes, associations and reverse associations, primary key, etc.). </note><p>
       For more information, see section
       <xref href="../concepts/Class/inheritance.dita">Inheritance</xref>
       .
      </p></stentry>
          <stentry>&#160;</stentry>
          <stentry>
            <codeph>Employee</codeph>
          </stentry>
        </strow>
        <strow>
          <stentry>Abstract</stentry>
          <stentry>Boolean</stentry>
          <stentry>
            <p>Whether this class is abstract or not.</p>
            <p>An abstract
       class is a class that has no real existence in the business domain
       but is used to group related
       properties and concepts.
      </p>
          </stentry>
          <stentry>
            <codeph>false</codeph>
          </stentry>
          <stentry>&#160;</stentry>
        </strow>
        <strow>
          <stentry>Documentation</stentry>
          <stentry>Text</stentry>
          <stentry>Documentation that provides information about this attribute.</stentry>
          <stentry>&#160;</stentry>
          <stentry>&#160;</stentry>
        </strow>
      </simpletable>
    </section>
    <section id="section_365465181EFF4993AD411B32999A284E" audience="programmer">
      <title>SQL properties</title>
      <simpletable id="simpletable_5670535E67EF4C0AB9AA91B20894CEB4">
        <sthead>
          <stentry>Property</stentry>
          <stentry>Type</stentry>
          <stentry>Description</stentry>
          <stentry>Default value</stentry>
          <stentry>Example</stentry>
        </sthead>
        <strow>
          <stentry>SQL name</stentry>
          <stentry>String</stentry>
          <stentry> A name that will be used to compose the SQL column or table name, which will then be used to persist this association in a database. <note type="restriction">In some database systems, object names cannot have more than 30 characters. The actual name, therefore, might be accommodated to comply with this constraint. </note></stentry>
          <stentry>If nothing is provided, the system will use the class name.</stentry>
          <stentry>
            <codeph>portfolio_manager</codeph>
          </stentry>
        </strow>
      </simpletable>
    </section>
    <section>
      <p>
    The following section is reserved for
    user-defined entities (UDEs) domains models.
    It describes properties that Triple&apos;A
    Plus Core requires for entities  being imported into the
    repository.
   </p>
      <title>Triple&apos;A Plus Core (UDE) properties</title>
      <simpletable>
        <sthead>
          <stentry>Property</stentry>
          <stentry>Type</stentry>
          <stentry>Description</stentry>
          <stentry>Default value</stentry>
          <stentry>Example</stentry>
        </sthead>
        <strow>
          <stentry>Entity SQL Name</stentry>
          <stentry>String</stentry>
          <stentry>
            <p>Entity SQL name as exported to Triple&apos;A Plus Core. The name must start with &quot;udt_&quot;, respecting naming
       convention enforced by Triple&apos;A Plus Core. </p>
            <p>
       <note type="restriction">This name becomes a table in the Triple&apos;A Plus Core database. It must be maximum 30 characters long and contains only lower case characters and digits. </note>
      </p>
          </stentry>
          <stentry> Class name is automatically transformed from camel case to standard Triple&apos;A Plus Core naming conventions for the SQL name and proposed as the default value. </stentry>
          <stentry>
            <codeph>portfolio</codeph>
          </stentry>
        </strow>
        <strow>
          <stentry>Entity Name</stentry>
          <stentry>String</stentry>
          <stentry>
            <p>Entity business name as exported to Triple&apos;A Plus Core.
      </p>
          </stentry>
          <stentry> Class name is automatically transformed from camel case to standard Triple&apos;A Plus Core naming conventions for the entity name and proposed as the default value. </stentry>
          <stentry>
            <codeph>Portfolio Entity</codeph>
          </stentry>
        </strow>
        <strow>
          <stentry>Secured</stentry>
          <stentry>Boolean</stentry>
          <stentry>
            <p>When a Triple&apos;A Plus Core entity is secured, access to its data are controlled.
       The connected user must
       have accurate data profile and rights set in Triple&apos;A Plus Core GUI to view, update, and delete a row of such entity.
      </p>
          </stentry>
          <stentry>false</stentry>
          <stentry>
            <codeph>true</codeph>
          </stentry>
        </strow>
      </simpletable>
    </section>
  </refbody>
  <related-links>
    <link href="../concepts/TripleADomains/TripleAUDE.dita"/>
    <link href="naming_conventions.dita">
<?xm-replace_text Naming conventions?>    </link>
    <link href="../concepts/Class/inheritance.dita">
<?xm-replace_text Inheritance?>    </link>
    <link href="../concepts/Class/domain_class.dita">
<?xm-replace_text Classes?>    </link>
    <link href="../tasks/ManagingClasses/creating_a_class.dita">
<?xm-replace_text Creating classes?>    </link>
  </related-links>
</reference>
