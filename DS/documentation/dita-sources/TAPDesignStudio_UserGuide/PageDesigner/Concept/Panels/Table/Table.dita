<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/dtd/concept.dtd" []>
<concept id="Concept-07-05-2008--14-12-54">
  <title>Tables</title>
  <prolog>
    <author type="creator">Mathias Astier</author>
    <metadata>
      <keywords>
        <indexterm>table</indexterm>
        <indexterm>tree</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <p>
   A table is used to present tabular data such as a:
   <ul>
        <li>Flat list</li>
        <li>Tree (a list becomes a tree as soon as one grouping is declared)</li>
      </ul>
  </p>
    <p>
   A table&apos;s data can be:
   <ul>
        <li>Grouped by a table column. Many groups can be designed for a single table. A group can be a hierarchy. A hierarchy results in a tree where the depth cannot be known at design time when the group has only one node per grouped value in the tree. For instance, in a portfolio hierarchy, one of the displayed portfolios can have children and grand-children, while another one has no child at all. A group applied on a portfolio name will display a single node per portfolio. For displaying a hierarchy, the Triple&apos;A Plus format must be prepared accordingly. Aggregate functions can apply on one or many groups. </li>
        <li>Sorted by one or many columns in ascending or descending order. For a tree, this sorting applies on leafs only, while nodes are sorted as designed in the group properties. </li>
        <li>Filtered with multiple criteria.</li>
      </ul>

  </p>
    <section><title>Editable table</title> An editable table allows users to modify presented values in domain columns. </section>
    <section/>
    <section><title>Summary delegated</title>The purpose of this mode is to present a summary of the data. A database request is created based on the grouping and aggregation defined in the model. <p>
    Only a subset of the transformations are taken into account:
    <ul>
          <li>Grouping column.</li>
          <li>Column with an aggregation.</li>
          <li>Keep filter.</li>
        </ul>
    The following is ignored:
    <ul>
          <li>Sorting information (a default sorting is applied).</li>
          <li>Column with no aggregation.</li>
        </ul>
    The SQL request with aggregate function SUM will be as follows:
    <codeblock>
 SELECT SUM(AGGR_COL_A), SUM(AGGR_COL_B) FROM TABLE_XXX GROUP BY GP_COL_C, GP COL_D
   </codeblock>
   </p></section>
    <section><title>Detailed delegated</title> The purpose of this mode is to offer a scalable way of presenting detailed data. Only the data presented in the view is retrieved from the database (for example, if 20 rows are displayed on the screen, then only 20 rows are retrieved from the database). From a user perspective, this mode is similar to the previously used &quot;in memory&quot; mode that was available up to Triple&apos;A Plus Release 1.30.6. <p>
    When creating a grouping with a hierarchy on a detailed delegated table, the
    user can choose between aggregate data
    mode and raw data mode. The first mode will build a
    hierarchy using the user-defined aggregations to compute the
    values of the parent
    elements (i.e., elements that are not leaves in the hierarchy). The second mode will
    not
    use any aggregation. Instead, all data displayed at any level of the hierarchy are taken
    directly from the input data.
    Note that with the raw data mode, the system prevents the user from adding an
    aggregation.
   </p></section>
    <section><title>In memory</title>With this mode, all data is loaded in memory. This mode, however, might cause problems when there is a large amount of data. This mode was the only one available up to and including Triple&apos;A Plus Release 1.30.6. </section>
  </conbody>
  <related-links>
    <link href="../../../Reference/Panels/Table/TableProperties.dita"/>
    <link href="../../../Task/ManagingTable/ManagingTable.dita"/>
    <link href="./TableToolbar.dita"/>
    <link href="./TableFooter.dita"/>
  </related-links>
</concept>
