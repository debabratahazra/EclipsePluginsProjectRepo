<project name="designstudio" default="build" xmlns:jacoco="antlib:org.jacoco.ant">

    <property environment="env"/>
    <property file="../../version.properties"/>
    
    <property name="documentation.dir" value="${basedir}/../../${docs.plan.dir}" />
	<property name="designstudio.dir" value="${basedir}/../../designstudio"/>
    <property name="doc.dependencies"  value="${documentation.dir}/delivery/${ds.release}.${ds.patch}"/>
    <property name="delivery.dir"      value="${basedir}/delivery"/>

    <property name="jre.zip"         value="${ds.jre.location}/jre_1.6_64_u45_with_strong_cyptography.zip" />

    <property name="eclipse.buildType" value="R"/>
    <property name="p2.postfix" value=""/>

	<property name="ds.maven.extra.args" value=""/> <!-- allow to append extra args to the maven commands -->

    <tstamp>
        <format property="buildId" pattern="yyyyMMddHHmmss'${eclipse.buildType}'" />
    </tstamp>
	
	<echo message="Skipping attributes values"/>
	<echo message="ds.localbuild.skip.win: ${ds.localbuild.skip.win}"/>
	<echo message="ds.localbuild.skip.linux: ${ds.localbuild.skip.linux}"/>
	<echo message="ds.localbuild.skip.mac: ${ds.localbuild.skip.mac}"/>
	<echo message="ds.b2.profile: ${ds.b2.profile}"/>

    <target name="build" depends="project-build, project-delivery, project-publish"/>

    <target name="build-local" depends="project-build, project-delivery, project-publish-local"/>

    <target name="project-build">
		<!-- we have to manually set the buildId in the products (see DS-2220), there is no way in Tycho to do this (yet). -->
		<replace dir="${basedir}/products/com.odcgroup.workbench.t24.products" token="@buildId@" value="${ds.release}.${ds.patch}.${buildId}">
			<include name="*.product" />
		</replace>

        <!-- first build the Eclipse products through Maven -->
		<!-- will also produce a .b2 folder (similar to maven target folder) which contains, amongst (many) other things,
		     a p2 repository of the build.
			The outputs are
			1. The DS product (without binaries) in ${basedir}/products/.b2/products/designstudio/target/products/designstudio-win32.win32.x86.zip
			2. The EDS product in ${basedir}/products/.b2/products/eds/target/products/eds-win32.win32.x86.zip
			3. The generator product in ${basedir}/products/.b2/products/dsgenerator/target/products/dsgenerator-win32.win32.x86.zip
			4. The p2 repository used to update Design Studio via Help>Check for Update in ${basedir}/products/.b2/products/designstudio/target/repository
		-->
		<echo message="Running Maven/Tycho build for Design Studio RCP products with maven used ${ds.maven}" />
		<property name="ds.b2.profile" value="buildProducts"/>
			<exec executable="${env.M2_HOME}/bin/${ds.maven}" failonerror="true" dir="${basedir}" >
<!--			    things might be faster if we do not insist on the clean here
				<arg value="clean"/>-->
				<arg value="install"/>
				<arg value="-P ${ds.b2.profile}"/>
				<arg value="-Dds.release=${ds.release}"/>
				<arg value="-Dds.patch=${ds.patch}"/>
				<arg value="-Dds.t24.marketingversion=${ds.t24.marketingversion}"/>
				<arg value="-Dds.target.platform.version=${ds.target.platform.version}"/>
				<arg value="-Dds.resource.cache.maxsize=${ds.resource.cache.maxsize}"/>	
				<arg value="-Ddesignstudio.dir=${designstudio.dir}"/>
				<arg value="-Dds.p2cache.location=${ds.p2cache.location}"/>
				<arg value="-Dp2.postfix=${p2.postfix}"/>
				<arg value="-DbuildId=${buildId}"/>
				<arg line="${ds.maven.extra.args}"/>
		</exec>
	</target>

<!--******************************************************************************
    **** Generate final distribution     				 
    *******************************************************************************-->
	<target name="project-delivery" depends="delivery-prep,delivery-win,delivery-linux,delivery-mac">
        <!-- finally, mirror the temp build repo (metadata and artifact, we need two calls) to the delivery dir -->
		<!-- T24 -->
		<!-- we'll get rid of the delivery p2repo usage soon. Then we do not produce it anymore
		<exec executable="${eclipse.sdk}/eclipsec" failonerror="true" timeout="3600000">
			<arg line="-application org.eclipse.equinox.p2.metadata.repository.mirrorApplication" />
			<arg line="-source ${basedir}/products/.b2/products/designstudioT24/target/repository" />
			<arg line="-destination ${delivery.dir}/p2repo" />
		</exec>
		<exec executable="${eclipse.sdk}/eclipsec" failonerror="true" timeout="3600000">
			<arg line="-application org.eclipse.equinox.p2.artifact.repository.mirrorApplication" />
			<arg line="-source ${basedir}/products/.b2/products/designstudioT24/target/repository" />
			<arg line="-destination ${delivery.dir}/p2repo" />
		</exec>
		<exec executable="${eclipse.sdk}/eclipsec" failonerror="true" timeout="3600000">
			<arg line="-application org.eclipse.equinox.p2.metadata.repository.mirrorApplication" />
			<arg line="-source ${basedir}/products/.b2/products/edsT24/target/repository" />
			<arg line="-destination ${delivery.dir}/p2repo" />
		</exec>
		<exec executable="${eclipse.sdk}/eclipsec" failonerror="true" timeout="3600000">
			<arg line="-application org.eclipse.equinox.p2.artifact.repository.mirrorApplication" />
			<arg line="-source ${basedir}/products/.b2/products/edsT24/target/repository" />
			<arg line="-destination ${delivery.dir}/p2repo" />
		</exec> -->
	</target>

	<target name="delivery-prep">
		<!-- Create final artifacts in delivery dir -->
		<mkdir dir="${delivery.dir}"/>
	</target>

	<target name="delivery-win" unless="${ds.localbuild.skip.win}">
		
		<!-- the DS T24 full edition -->
		<zip destfile="${delivery.dir}/DesignStudioT24-${ds.release}.${ds.patch}.zip" duplicate="preserve">
			<zipfileset src="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-win32.win32.x86_64.zip" />
			<fileset dir="${basedir}/rootfiles" /> 
			<zipfileset src="${jre.zip}" prefix="jre" />
		</zip>
		
		<!-- the EDS T24 edition -->
		<zip destfile="${delivery.dir}/EDS-T24-${ds.release}.${ds.patch}.zip" duplicate="preserve">
			<zipfileset src="${basedir}/products/.b2/products/edsT24/target/products/edsT24-win32.win32.x86_64.zip" />
			<fileset dir="${basedir}/rootfiles" /> 
			<zipfileset src="${jre.zip}" prefix="jre" />
		</zip>
	</target>

	<target name="delivery-linux" unless="${ds.localbuild.skip.linux}">
		<!-- tar creation for DS T24 -->
			
		<!-- unzip the DS T24 linux product to create tar -->
		<unzip src="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-linux.gtk.x86_64.zip" dest="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-linux.gtk.x86_64"/>
				
		<tar tarfile="${delivery.dir}/DesignStudioT24-${ds.release}.${ds.patch}-linux-gtk-x86_64.tar.gz" longfile="gnu" compression="gzip">
			<tarfileset dir="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-linux.gtk.x86_64" includes="**/DesignStudioT24" filemode="755" />
			<tarfileset dir="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-linux.gtk.x86_64" excludes="DesignStudioT24" />
			<fileset dir="${basedir}/rootfiles" /> 
		</tar>
		<delete dir="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-linux.gtk.x86_64" quiet="true"/>

		<!-- tar creation for EDS T24 -->
		<!-- unzip the EDS T24 linux product to create tar -->
		<unzip src="${basedir}/products/.b2/products/edsT24/target/products/edsT24-linux.gtk.x86_64.zip" dest="${basedir}/products/.b2/products/edsT24/target/products/edsT24-linux.gtk.x86_64" />

		<tar tarfile="${delivery.dir}/EDS-T24-${ds.release}.${ds.patch}-linux.gtk.x86_64.tar.gz" longfile="gnu" compression="gzip">
			<tarfileset dir="${basedir}/products/.b2/products/edsT24/target/products/edsT24-linux.gtk.x86_64" includes="**/EdsT24" filemode="755" />
			<tarfileset dir="${basedir}/products/.b2/products/edsT24/target/products/edsT24-linux.gtk.x86_64" excludes="EdsT24" />
			<fileset dir="${basedir}/rootfiles" /> 
		</tar>
		<delete dir="${basedir}/products/.b2/products/edsT24/target/products/edsT24-linux.gtk.x86_64" quiet="true"/>
	</target>

	<target name="delivery-mac" unless="${ds.localbuild.skip.mac}">
		<fail message="macosx release of DS requires to configure the product-build/t24/module.xml"/>
		<!-- unzip the DS T24 mac product to create tar -->
		<unzip src="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-macosx.cocoa.x86_64.zip" dest="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-macosx.cocoa.x86_64" />
			
		<tar tarfile="${delivery.dir}/DesignStudioT24-${ds.release}.${ds.patch}-macosx.cocoa.x86_64.tar.gz" longfile="gnu" compression="gzip">
			<tarfileset dir="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-macosx.cocoa.x86_64" includes="DesignStudioT24.app\Contents\MacOS\DesignStudioT24" filemode="755" />
			<tarfileset dir="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-macosx.cocoa.x86_64" excludes="DesignStudioT24.app\Contents\MacOS\DesignStudioT24" />
			<fileset dir="${basedir}/rootfiles" />
		</tar>
		<delete dir="${basedir}/products/.b2/products/designstudioT24/target/products/designstudioT24-macosx.cocoa.x86_64" quiet="true"/>
		
		<!-- unzip the EDS T24 mac product to create tar -->
		<unzip src="${basedir}/products/.b2/products/edsT24/target/products/edsT24-macosx.cocoa.x86_64.zip" dest="${basedir}/products/.b2/products/edsT24/target/products/edsT24-macosx.cocoa.x86_64" />
    		
		<tar tarfile="${delivery.dir}/EDS-T24-${ds.release}.${ds.patch}-macosx.cocoa.x86_64.tar.gz" longfile="gnu" compression="gzip">
			<tarfileset dir="${basedir}/products/.b2/products/edsT24/target/products/edsT24-macosx.cocoa.x86_64" includes="EdsT24.app\Contents\MacOS\EdsT24" filemode="755" />
			<tarfileset dir="${basedir}/products/.b2/products/edsT24/target/products/edsT24-macosx.cocoa.x86_64" excludes="EdsT24.app\Contents\MacOS\EdsT24" />
			<fileset dir="${basedir}/rootfiles" />
		</tar>
		<delete dir="${basedir}/products/.b2/products/edsT24/target/products/edsT24-macosx.cocoa.x86_64" quiet="true"/>
	</target>

    <target name="project-publish">
		<property name="remote.dir" value="//oams.com/Software/Incoming Packages/tmp/SDK-DS/${p2.postfix}"/>
		<property name="p2.dist.remote.dir" value="//p2/p2/dist/latest/${ds.release}/before-automated-tests"/>
		<property name="p2.dist.remote.dir.unix" value="/oams/p2/dist/latest/${ds.release}/before-automated-tests"/>
        
		<mkdir dir="${p2.dist.remote.dir}"/>
		<scp todir="cmsbm:00cmsbm@p2.oams.com:${p2.dist.remote.dir.unix}" trust="true">
			<fileset dir="${delivery.dir}">
				<include name="*T24*.zip"/>
				<include name="*.tar.gz"/>
			</fileset>
		</scp>
    </target>

    <target name="project-publish-local">
		<property name="local.t24.delivery.dir" value="${local.delivery.dir}/product/ds-t24"/>

		<mkdir dir="${local.t24.delivery.dir}"/>
		
		<!-- also copy the p2 repo -->
		<copy todir="${local.t24.delivery.dir}">
			<fileset dir="${delivery.dir}">
				<include name="*T24*.zip"/>
				<include name="*.tar.gz"/>
			</fileset>
		</copy>
	</target>

</project>
