# UTF-8
# UTF-8
/* Funds transfer component */
Domain FT_Contract
	@t24:i (module=FT)
	@java:Package (value=com.temenos.t24.datamodel.ft.ft_contract)
namespace "http://www.temenos.com/t24/FT_Contract"
metamodelVersion 1.30.6
Classes {
	/* This application is used to define Correspondent Bank Charges/Commission which will default in FT, when FT.APPL.DEFAULT, field DEF.CORR.BANK.CHGS is set as "Yes".
To default charges applicable for the Receiver (Outward) / Sender (Inward)  of MT103 message, Commission / Charge details can be specified here. i.e. To collect charges based on the Correspondent involved  (Customer of Credit Customer if Receiver Bank not specified or Valid Customer is given in Receiver Bank for Outward & Sender for Inward messages) in the FT Application. For  "OTxx" type of transaction, irrespective of the Message type correspondent bank charges are defaulted based on Debit Customer.
In this application, Charges can be defined for the Correspondent Customer for each Currency with Optional FT.Txn.Type to default charges based on customer or "DEFAULT" with optional Txn type for others.
The order of defaulting of Correspondent charges as per the following- when the charge/commission is defined in the Contract Currency.
1. Customer - Txn.type
2. Customer
3.Default-Txn.type
4 Default
Defaulting is based on exact match if found for the Currency otherwise next level.
Incase a record exists with above order but the Charge/Commission is not defined for the Contract Currency-then nothing is populated.
Forexample : Record has been defined for Customer 100170 And Currency USD & DEFAULT record with USD & GBP-then if an incoming message is processed with Currency GBP for Customer 100170-then No charge is defaulted even through the DEFAULT is available.
Specify atleast one Commission or Charges details for a currency.
Based on the above setup, Correspondent Charges are defaulted in FT as follows:-
Outward MT103.
At the Funds.Transfer Applciation level, BEN.OUR.CHARGES is given as "OUR" then based on the charges defined in CORR.BANK.CHARGES application (for the  Credit Customer if Receiver Bank is not specified or Valid Customer given in Receiver Bank /Default ) for the Credit Currency, system defaults  the charge details along with CHARGE.FOR as "RECEIVER" and these details mapped to Tag 71g of Outward MT103 Message. The amount to be remitted (tag 32) is arrived by adding the Credit Amount PLUS Receiver Charges (Tag 71g).
Irrespective of BEN.OUR.CHARGES field based on the Debit Customer/Default , system also defaults the charges from this application with CHARGE.FOR as "SENDER".
Inward MT103.
While processing Inward MT103 message, if charge to be taken by the Receiver of inward MT103 is not specified in tag 71G, then Receiver charge details are defaulted from CORR.BANK.CHARGES (as defined for the Sender Customer/Default) irrespective of details of Charges (Ben/Our/Sha)
Incase the charges are not defaulted through this application then Charges as defined in FT.TXN.TYPE.CONDITION for the Txn.Type will be defaulted. Refer to FUNDS.TRANSFER user guide for more details. */
	CORR_BANK_CHARGES
		@t24:i (t24Name=CORR.BANK.CHARGES, level=F, type=H, additionalInfo="UNP OEU", allowedFunctions="A C D E H I L P Q R S", localRefAllowed=true)
	{
		/* Id of this application can be either a Valid Customer Number with optional FT.Txn.Type to default Correspondent Bank Commission/ Charges for a Customer or can be "DEFAULT" with optional FT.Txn.Type to default the charges for customer where there is no definition at the customer level.
The order of defaulting of Correspondent charges as per the following- when the charge/commission is defined in the Contract Currency.
1. Customer - Txn.type
2. Customer
3.Default-Txn.type
4 Default
Incase a record exists with above order but the Charge/Commission is not defined for the Contract Currency-then nothing is populated.
Forexample : Record has been defined for Customer 100170 And Currency USD & DEFAULT record with USD & GBP-then if an incoming message is processed with Currency GBP for Customer 100170-then No charge is defaulted even through the DEFAULT is available.
Validation Rules

Valid Values - "Customer "-" Optional Txn.type" or     "DEFAULT"-"Optional Txn.type"
Customer is entered it should be a valid T24 Customer
If Txn.type is given then it should be a valid Txn.type from     FT.TXN.TYPE.CONDITION. */
		CUST_TXN_TYPE -> FT_Contract:CORR_BANK_CHARGES PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=0.0, core=true, businessType=A, t24Name=CUST.TXN.TYPE)
		DESCRIPTION -> byValue FT_Contract:CORR_BANK_CHARGES__DESCRIPTION *
		/* Specify the Currency Market from where the Exchange Rate to be obtained when the Chg.Currency is specified other than the Local currency.
Charge amount will be arrived using the exchange rate applicable for the Currency market as defined here.
Validation Rules

Optional field- Defaulted to Currency market '1'
If entered, must be a valid record from CURRENCY.MARKET Application. */
		CCY_MARKET -> FIN_CurrencyConfig:CURRENCY_MARKET
			@i18n:Label (en="Ccy Market")
			@t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=2.0, core=true, t24Name=CCY.MARKET)
		CHG_CURRENCY -> byValue FT_Contract:CORR_BANK_CHARGES__CHG_CURRENCY *
		COMM_CURRENCY -> byValue FT_Contract:CORR_BANK_CHARGES__COMM_CURRENCY *
		RESERVED11 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=11.0, core=true, t24Name=RESERVED11)
		RESERVED10 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=12.0, core=true, t24Name=RESERVED10)
		RESERVED09 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=13.0, core=true, t24Name=RESERVED09)
		RESERVED08 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=14.0, core=true, t24Name=RESERVED08)
		RESERVED07 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=15.0, core=true, t24Name=RESERVED07)
		RESERVED06 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=16.0, core=true, t24Name=RESERVED06)
		RESERVED05 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=17.0, core=true, t24Name=RESERVED05)
		RESERVED04 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=18.0, core=true, t24Name=RESERVED04)
		RESERVED03 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=19.0, core=true, t24Name=RESERVED03)
		RESERVED02 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=20.0, core=true, t24Name=RESERVED02)
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=22.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=23.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FT_Contract:CORR_BANK_CHARGES__INPUTTER *
		DATE_TIME -> byValue FT_Contract:CORR_BANK_CHARGES__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=26.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=27.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=28.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=29.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=30.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	CORR_BANK_CHARGES__DESCRIPTION
	{
		/* Give the short description for this Correspondent charge record.
Validation Rules

1-35 type A (alphanumeric) characters. Multilanguage field. (Mandatory     input). */
		DESCRIPTION : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, core=true, t24Name=DESCRIPTION)
	}
	CORR_BANK_CHARGES__CHG_CURRENCY
	{
		/* Specify the Currency for which the charge are defined.
Field Chg.Currency to Chg.Amt.Lcl forms a Multivalue set and for every record at least for one currency & charge type is mandatory.
The Basis for defaulting Correspondent Charges based on currency is determined from FT's Credit Currency for Outward MT103 Message & Debit Currency for MT103 Inward Message.
Defaulting of Correspondent charges happens only when the setup is available for the Customer -Txn Type combination for the Currency given in FT then otherwise no defaulting is done.
Validation Rules

Mandatory field
Should be a valid record from CURRENCY Application */
		CHG_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=3.0, core=true, businessType=CCY, t24Name=CHG.CURRENCY)
		CHG_CODE -> byValue FT_Contract:CORR_BANK_CHARGES__CHG_CURRENCY__CHG_CODE *
	}
	CORR_BANK_CHARGES__CHG_CURRENCY__CHG_CODE
	{
		/* Defines all the default Charge Types applicable for the Currency.
Charge type entered here is mapped to CHARGE.TYPE in FT application.
Atleast one Commission or Charge code details for a currency is mandatory for a record here.
Validation Rules

Mandatory when Currency is given.
The Charge Type(s) input in this field must exist on the FT.CHARGE.TYPE
Duplicate / Null values not allowed. */
		CHG_CODE -> ST_ChargeConfig:FT_CHARGE_TYPE
			@t24:i (align=R, inputBehaviour=I, maxLength=20, sysNumber=4.0, core=true, businessType=CHG, t24Name=CHG.CODE)
		/* Specify the charge amount applicable for the currency.
Incase the Charge amount is not entered then based on the charge type, amount is defaulted here. Incase the charge amount involves other than local currency then the amount is arrived by applying exchange rate for the currency market specified in Ccy.Market and stored in next field.
Amount available here is directly mapped to CHARGE.AMT in FT application.
Validation Rules

Optional field
If not entered defaulted from FT.CHARGE.TYPE. */
		CHG_AMT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=5.0, core=true, t24Name=CHG.AMT, typeModifiers="3.X")
		/* Incase the charge currency is different from the Local currency, then the local currency amount is computed using the Ccy.Market specified and same is stored here.
Validation Rules

No input field */
		CHG_AMT_LCL : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=6.0, core=true, t24Name=CHG.AMT.LCL, typeModifiers="USD")
	}
	CORR_BANK_CHARGES__COMM_CURRENCY
	{
		/* Specify the Currency for which the Commission detail is defined.
Field Comm.Currency to Comm.Amt..Lcl forms a Multivalue set and for every record at least for one currency & Charge or Commission type is mandatory.
The Basis for defaulting Correspondent Charges based on currency is determined from FT's Credit Currency for Outward MT103 Message & Debit Currency for MT103 Inward Message.
Defaulting of Correspondent charges happens only when the setup is available for the Customer -Txn Type combination for the Currency given in FT then otherwise no defaulting is done.
Validation Rules

Mandatory field
Should be a valid record from CURRENCY application. */
		COMM_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=7.0, core=true, businessType=CCY, t24Name=COMM.CURRENCY)
		COMM_CODE -> byValue FT_Contract:CORR_BANK_CHARGES__COMM_CURRENCY__COMM_CODE *
	}
	CORR_BANK_CHARGES__COMM_CURRENCY__COMM_CODE
	{
		/* Defines all the default Commission Types applicable for the Currency.
Commission type entered here is mapped to COMMISSION.TYPE in FT application.
Atleast one commission / Charge code details for a Currency  has to be defined here for a customer.
Validation Rules

2 type A (alphanumeric) character Commission type. Multivalue field.     (Optional input.)
The Commission Type(s) input in this field must exist on the     FT.COMMISSION.TYPE
Duplicate / Null values not allowed. */
		COMM_CODE -> ST_ChargeConfig:FT_COMMISSION_TYPE
			@t24:i (align=R, inputBehaviour=I, maxLength=20, sysNumber=8.0, core=true, businessType=CHG, t24Name=COMM.CODE, typeModifiers=COM)
		/* Specify the Commission amount applicable for the currency.
Incase the Commission amount is not entered then the Commission amount is defaulted here from FT.COMMISSION.TYPE , when the FLAT.AMT is given for that commission code.
If the Commission to be calculated using a percentage, then this field should be left as null and during FT processing the commission Amount is calculated using the percentage and FT amount.
Incase Commission amt is given here then same is mapped to FT.
When the Commission amount involves Currency other than local currency then the amount is arrived by applying exchange rate for the currency market specified in Ccy.Market and stored in next field (applicable only for FLAT Amt).
Amount available here is directly mapped to COMMISSION.AMT in FT application.
Validation Rules

Optional field
If not entered defaulted from FT.COMMISSION.TYPE (For FLAT.AMT only) */
		COMM_AMT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=9.0, core=true, t24Name=COMM.AMT, typeModifiers="7.X")
		/* Incase the Commission currency is different from the Local currency, then the local currency amount is computed using the Ccy.Market specified and same is stored here.
Validation Rules

No input field */
		COMM_AMT_LCL : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=10.0, core=true, t24Name=COMM.AMT.LCL, typeModifiers="USD")
	}
	CORR_BANK_CHARGES__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=24.0, core=true, t24Name=INPUTTER)
	}
	CORR_BANK_CHARGES__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=25.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	/* Validation Rules


Rule 1
Rule 2 */
	EB_DUPLICATE
		@t24:i (t24Name=EB.DUPLICATE, level=F, type=L, allowedFunctions="L S", localRefAllowed=false)
	{
		/* DUPLICATE.KEY

Variable key as defined on the EB.DUPLICATE.TYPE file in FIELDS.
If only one FIELD was defined on the EB.DUPLICATE.TYPE file, then the key will be composed, simply of that one FIELD. If more than one FIELD was defined, then the key will be composed of the number of FIELD's defined; joined together with asterisks.
Any contracts that match this key while it is held on file will cause a possible duplicate override, and will added to the TRANS.REF field. The record will be deleted from the EB.DUPLICATE file in accordance with the number of days defined in the PURGE.DAYS field on the EB.DUPLICATE.TYPE file. */
		DUPLICATE_KEY -> FT_Contract:EB_DUPLICATE PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=999, sysNumber=0.0, core=true, businessType=A, t24Name=DUPLICATE.KEY)
		/* PURGE.DAYS
The date that the record will be removed from the file.
This will have been defined in the PURGE.DAYS field on the EB.DUPLICATE.TYPE file. */
		PURGE_DATE : T24BusinessTypes:D
			@i18n:Label (en="Purge Date")
			@t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=1.0, core=true, t24Name=PURGE.DATE)
		/* DUPLICATE.TYPE
The key to the EB.DUPLICATE.TYPE file. */
		DUPLICATE_TYPE -> FT_Contract:EB_DUPLICATE_TYPE
			@i18n:Label (en=Type)
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=2.0, core=true, businessType=A, t24Name=DUPLICATE.TYPE)
		TRANS_REF -> byValue FT_Contract:EB_DUPLICATE__TRANS_REF *
	}
	EB_DUPLICATE__TRANS_REF
	{
		/* TRANSACTION.REF
The list of contracts that match the key to this file. */
		TRANS_REF : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=3.0, core=true, t24Name=TRANS.REF)
	}
	EB_DUPLICATE_TYPE
		@t24:i (t24Name=EB.DUPLICATE.TYPE, level=I, type=H, allowedFunctions="A C E L Q S", localRefAllowed=false)
	{
		/* DUPLICATE.TYPE
The key to the EB.DUPLICATE.TYPE file, formed of an alphanumeric description for the record to be created. */
		DUPLICATE_TYPE -> FT_Contract:EB_DUPLICATE_TYPE PK required
			@i18n:Label (en=Type)
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, core=true, businessType=A, t24Name=DUPLICATE.TYPE)
		DESCRIPTION -> byValue FT_Contract:EB_DUPLICATE_TYPE__DESCRIPTION *
		/* APPLICATION
A valid T24 APPLICATION.
The APPLICATION in which to check for the occurrence of duplicate contracts.
Validation Rules


Mandatory Input
Must be a valid T24 APPLICATION. */
		APPLICATION : T24BusinessTypes:PV required
			@i18n:Label (en=Application)
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=2.0, core=true, t24Name=APPLICATION, typeModifiers=HULTWD)
		/* PURGE.DAYS

A record is generated or updated in the EB.DUPLICATE file if a transaction satisfying the conditions of the EB.DUPLICATE record is input. The date for purging the EB.DUPLICATE record is calculated as the transaction input date plus the number of purge days specified here.


Validation Rules




Mandatory Input */
		PURGE_DAYS : mml:Integer required
			@i18n:Label (en="Purge Days")
			@t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=3.0, core=true, t24Name=PURGE.DAYS)
		FIELDS -> byValue FT_Contract:EB_DUPLICATE_TYPE__FIELDS *
		RESERVED1 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=5.0, core=true, t24Name=RESERVED1)
		RESERVED2 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=6.0, core=true, t24Name=RESERVED2)
		RESERVED3 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=7.0, core=true, t24Name=RESERVED3)
		RESERVED4 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=8.0, core=true, t24Name=RESERVED4)
		RESERVED5 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=9.0, core=true, t24Name=RESERVED5)
		RESERVED6 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=10.0, core=true, t24Name=RESERVED6)
		RESERVED7 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=11.0, core=true, t24Name=RESERVED7)
		RESERVED8 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=12.0, core=true, t24Name=RESERVED8)
		RESERVED9 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=13.0, core=true, t24Name=RESERVED9)
		RESERVED10 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=14.0, core=true, t24Name=RESERVED10)
		RESERVED11 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=15.0, core=true, t24Name=RESERVED11)
		RESERVED12 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=16.0, core=true, t24Name=RESERVED12)
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=17.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=18.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FT_Contract:EB_DUPLICATE_TYPE__INPUTTER *
		DATE_TIME -> byValue FT_Contract:EB_DUPLICATE_TYPE__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=21.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=22.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=23.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=24.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=25.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	EB_DUPLICATE_TYPE__DESCRIPTION
	{
		/* DESCRIPTION
Text field to allow for the input of a general description.
Validation Rules

Mandatory Input. Alpha-numeric characters.
Multivalued Field. */
		DESCRIPTION : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, core=true, t24Name=DESCRIPTION)
	}
	EB_DUPLICATE_TYPE__FIELDS
	{
		/* FIELDS
The fields from the APPLICATION input that are to be checked against for the occurrence of any duplicate contracts.
This may be user-defined field or a user-defined calculated value (field type "I") on STANDARD.SELECTION.
Validation Rules



Mandatory Input
Must be a valid field name or number from the                 STANDARD.SELECTION record for the APPLICATION.


Multivalued field. */
		FIELDS : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, core=true, t24Name=FIELDS)
	}
	EB_DUPLICATE_TYPE__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=19.0, core=true, t24Name=INPUTTER)
	}
	EB_DUPLICATE_TYPE__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=20.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	/* Funds Transfer is a stand-alone module which is fully integrated within the T24 product to provide a total banking service.
Instructions may be entered either manually or fed direct from other electronic communications systems such as Telex or Swift.  All actual output, whether 'paper' or 'wire', is performed by the T24 - Delivery Module.
The Funds Transfer Module is a truly on-line, real-time Application designed to handle all types of Local and Foreign Currency, Inward, Outward and Onward payments.
Also, encompassed within the Funds Transfer Module is a fully operational Standing Order Application.  This Application has user friendly maintenance procedures and provides for fixed and preset payments together with Funds Management initiated by balance levels.  The User may also use the Standing order mechanism to diarise certain non-payment activity.
Charges, Commissions and Value Dates applicable to any type of transfer are under the control of the User and are automatically performed according to Conditions tables.  These tables may be set up as defaults for each transfer type, be established for individual Customers, or provide general conditions for application to a 'selected' group of customers.
Available transactions may be immediately input to the System and validated irrespective of the Value Date.  The option exists to provide limited additional information at any time after the initial input, although the transaction may have already been processed.  This will facilitate the situation where a 'Fixing Rate' must be used in certain Funds Transfer transactions, before the 'Fixing Rate' is actually known.
Any incoming electronic transactions can be handled automatically provided they are formatted to SWIFT standards.  This facility will enable certain transactions to be processed completely without manual intervention.
The production of all printed matter in respect of payments, from pre-printed Bankers Payments to advices, is controlled within the T24 Delivery System Module.  This System will also cater for all automated communications via Telex, Swift or any other electronic transfer.  The only output direct from Funds Transfer is an Activity Journal and an Exception Report.
1.         PRODUCTS PROCESSED BY THE SYSTEM
The main product types handled by this Module can be classified as follows:
1.1        Outward Payments            (incorporating Onward payments)
These may be input manually or be generated automatically from            standing orders or incoming formatted messages.
The types of Outward Payments that can be processed are:
-    Account Transfers            -    Manager cheque (drawn on ourselves)            -    Bank draft            -    Bankers Payment            -    Electronic Transfers via Telex, Swift            -    Local Clearing Payments            -    Direct Drawings
Currently, outward payments are only generated for SIC, if            required for other systems these must be added as a local            enhancement.

1.2        Inward Payments
Inward Payments for the credit to an Account in the bank are            generated manually or automatically from incoming formatted            telexes.
The types of Inward Payments are:
-    Telex, Swift            -    Cheques/Drafts            -    Bankers Payment            -    Mail            -    Local Clearing (currently only SIC)

1.3        Batch Payments
A future enhancement is planned to enable Customers to send-in            magnetic tapes containing numerous payments (e.g. salary            payments) for automatic generation of the payments through the            Funds Transfer System.

1.4        Standing Orders
The Standing Orders Application is an integral part of the            Funds Transfer Application and interfaces directly with the            Funds Transfer main program for the generation of all derived            payments.
The types of Standing Order that can be loaded are:
-    Fixed Payments, with known amount and frequency            -    Preset Payments when amount not known            -    Balance Maintenance with automatic transfer of excess                 funds            -    Balance Maintenance with automatic transfer of funds into                 the account to maintain a minimum balance.            -    Diary Instructions - including non-financial information            -    Direct Debit Authorities held. */
	FUNDS_TRANSFER
		@t24:i (t24Name=FUNDS.TRANSFER, level=F, type=H, additionalInfo="REF NOH BDA UNP OEU PREVIEW", allowedFunctions="A C D E H I L P Q R S", localRefAllowed=true)
	{
		/* Identifies uniquely each Funds Transfer transaction.
The Reference Number will be shown on all output generated from the transaction. If the Funds Transfer operation is not centralised, the Reference Number will be preceded by the Department code from the User Profile.
The Reference Number will be generated automatically when specified as such in the Company table for the Funds Transfer Application. Otherwise, it will need to be entered for each transaction and subsequently checked by the System for uniqueness.
To avoid the necessity to input the complete Reference Number, the User has the facility to input only the sequence number of the transaction to access any transaction which has been input that day. The Application will automatically generate the seven first digits and append them to the front of the sequence number in order to retrieve the requested transaction.
Access to any Funds Transfer transaction from a previous day requires the input of the day number and sequence number, the system will automatically generate the first 4 characters, assuming that the current year is applicable.
Explanation of Reference Number format: FTYYDDDNNNNN where:
FT#Application indicator - FT for the Funds Transfer Application##
YY#Last two digits of year when transaction is processed##
DDD#Julian day number within year when the F.T. is processed##
NNNNN#Sequence number.##
The following ranges of sequential numbers have been assigned:
Range#Usage##
00001 - 09999#Online##
10000 - 19999#Reserved##
20000 - 29999#Bulk Order Payments##
30000 - 39999#Reserved##
40000 - 49999#Standing Orders##
50000 - 59999#Incoming Via Delivery##
60000 - 79999#Clearing Transactions Incoming##
80000 - 89999#Account Closure Settlements##
This range will allow up to 99,999 Funds Transfer transactions to be entered on each single day when FT is a centralised function and many more when processed at the department level.
Thus: FT0030500010 is the 10th Funds Transfer transaction of the 2nd of November 2000.
An option exists whereby for transactions which exceed 99,999 per day a more detailed id can be used by setting the UNIQUE.NO field in AUTO.ID.START
To know more about the signifiance of the UNIQUE.NO field, refer the help text of AUTO.ID.START application.
Mandatory input
12 character standard id - unless UNIQUE.NO selected in AUTO.ID.START otherwise up to 16 characters */
		REF_NO -> FT_Contract:FUNDS_TRANSFER PK required
			@i18n:Label (en="Reference Number")
			@t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=0.0, core=true, businessType=A, t24Name=REF.NO, mask="L##/#####/##############")
		/* Identifies the Transaction Type applicable to the transaction being processed.
There are two basic types, Outward and Inward. (Outward includes Onwards.)
The following Transaction Types are processed by the Funds Transfer Application:

1.   Outward Payment Instructions
These are transactions where the beneficiary of the payment does not maintain an appropriate account relationship and where usually the Bank will credit a Nostro account (foreign currency payment) or a Clearing/ Vostro account (local currency payment) to execute the payment.
Within T24 the Outward Payment orders are classified as follows:
OC   Outward by cheque.  Refers to the issuing by the bank of a Manager cheque or Bank cheque in local Currency in favour of             the beneficiary who does not maintain an account with the             bank.
OD   Outward by draft.  Refers to the issuing by the bank of a Bank Draft (usually in foreign Currency) in favour of the             beneficiary who does not maintain an account with the bank.
OT   Outward by telex.  Refers to the issuing by the bank of a payment via SWIFT or TELEX.  The instructions are usually sent             to the Banks correspondent.  Use of this Transaction Type will             produce both pay and cover cables automatically where             required.
OB   Outward by Bankers Payment.  Refers to the issuing by the bank of a Bankers Payment in local Currency.  This method of             payment is used extensively in the U.K. to perform local             Currency interbank payments between banks only.
BC   Outward by local clearing system.  This transaction type can be customised according to local rules by using the             FT.BC.PARAMETER application.  The only clearing system which             will currently produce payments is the Swiss clearing system,             SIC.

2.   Inward Payment Instructions
These are transactions where the beneficiary of the payment is one of our Customers who requires the funds to be credited to an account in our books.  The Inward Payment are classified as follows:
IC   Inward Payment by cheque or draft.  Refers to the receipt by the bank of a cheque or a draft to be credited to a Customer             account in our books.
IT   Inward by telex.  Refers to the receipt by the bank of a SWIFT or TELEX payment in favour of one of our Customers and where             the proceeds have to be credited to an account in our books.
IM   Inward by mail transfer.  Refers to the receipt by the bank of a mail transfer payment in favour of one of our Customers and             where the proceeds have to be credited in an account in our             books.
IB   Inward by Bankers Payment.  Refers to the receipt by the bank of a Bankers payment in favour of an account in our books (in             U.K. only).
BI   Inward via Local clearing system.  Refers to the receipt by the bank of a local clearing payment in favour of an account             in our books.  These payments are usually generated             automatically via tape or an external link, and can only be             used if defined on FT.LOCAL.CLEARING.

2.1  Inward Direct Debit Instructions
These are local clearing transactions where a customer has an agreement to allow his account to be debited automatically by a specified beneficiary. Direct debit instructions are usually processed automatically from an external source, such as a tape.
BD   Inward local clearing direct debit payment. Refers to the receipt by the bank of a direct debit instruction from an             account in our books.  These payments can only be used if             defined on FT.LOCAL.CLEARING.

3.   Internal Payment Instructions.
Two additional Transaction Types are covered within the Funds Transfer Application:
AC   Account Transfer.  Refers to an Inhouse transfer of funds, i.e. a transfer of funds between two Customer accounts or two             internal accounts in our books.
DW   Direct Drawing.  This refers to transfers from one account to another by correspondent banks who maintain accounts within             our books.
Validation Rules
2 type AAA (alpha A-Z, a-z) character Transaction Type code.  (Mandatory input.)
The Transaction Type Condition table must have been previously created for each Transaction Type before they can be used in the Funds Transfer Application.
The two Internal Transaction Types, follow the logic of the Outward Payments for all processing rules, except as otherwise specified in this documentation. */
		TRANSACTION_TYPE -> FT_Config:FT_TXN_TYPE_CONDITION required
			@i18n:Label (en="Transaction Type")
			@i18n:Tooltip (en="Indicates the Transaction Type")
			@t24:i (align=L, inputBehaviour=F, maxLength=4, sysNumber=1.0, core=true, businessType=A, t24Name=TRANSACTION.TYPE)
		/* Identifies the Account being debited in respect of the transfer transaction.
For Inward Payment Orders, this account will usually contain Our Correspondent Account detail (Nostro account for Foreign Currency and Vostro Account for Local Currency).  For Outward Payment Orders, this account field will usually contain the Account in our books which is specified by the Customer requesting the payment.
To differentiate between an Account Number and a Category code, the Funds Transfer Application will require the letters PL to be appended to the front of any Category code.  Any other input without these letters will be considered to be an Account Number.
Validation Rules
Standard numeric Account Number or  3-10 character Account Mnemonic (uppercase alpha or numeric) - type      MNE.                                   or  6-12 character Internal Account Number (uppercase alpha or numeric)      - type SS.                             or  5 numeric character Profit and Loss Category Code preceded by the letters PL.  (Mandatory input, except for Inward Payments where it becomes Optional.)
For Inward Payments the default value will be the Nostro account of the Currency defined in Debit Currency.  This Nostro account will be automatically defaulted from the nostro table if no other input has been entered in this field.
For Outward Payments, input in this field will be mandatory.
For internal transactions (i.e. AC & DW), input in this field is mandatory.
The entry of an Account number will be verified against the Account File.
The entry of a Category code (preceded by PL) will be verified to the Category File.
If the Transaction Type is INWARD, then this field cannot contain a PL category code or customer account number.  It must be a valid Nostro, Vostro or Internal account.
For outward local clearing (BC) transactions, the account must be a local currency account, unless the ALLOW.FCY.DEBIT field on FT.BC.PARAMETER is set to 'Y'.  For local clearing validation rules, see details for the relevant clearing system under the section 'local clearing rules'. */
		DEBIT_ACCT_NO -> ACM_AccountOpening:ACCOUNT
			@i18n:Label (en="Debit Account")
			@t24:i (align=R, inputBehaviour=F, maxLength=36, sysNumber=2.0, core=true, t24Name=DEBIT.ACCT.NO)
		/* Used to hold Account details when updated from external sources like local clearing */
		IN_DEBIT_ACCT_NO : T24BusinessTypes:A
			@i18n:Label (en="Debit Account (IN)")
			@i18n:Tooltip (en="Account details updated from external sources ")
			@t24:i (align=L, inputBehaviour=N, maxLength=16, sysNumber=3.0, core=true, t24Name=IN.DEBIT.ACCT.NO)
		/* Defines the market in which the account being debited is to be used.
a) If FTDEBIT is set up on MU.TXN.GRP.CCY.MKT as a movement for FT, then the market will be defaulted according to the value set up,           and the field will be no input.
b) The currency market must exist on the currency table for local currency.
c) If the currency market does not equal the currency market of the Debit amount, then an override will be provided.
d) If the transfer involves only local currencies and one of FTCREDIT or FTDEBIT is set up, then the currency market input           must equal the currency market default.
e) If the transfer involves only local currencies and one of FTCREDIT or FTDEBIT is set up, then the currency market input           must equal the currency market defaulted.
Validation Rules
1 numeric valid currency market code.  No input for single market operations (default 1), Mandatory input in multi market. */
		CURRENCY_MKT_DR -> FIN_CurrencyConfig:CURRENCY_MARKET
			@i18n:Label (en="Ccy Market Dr")
			@i18n:Tooltip (en="Market where account being debited is to be used")
			@t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=4.0, core=true, businessType=A, t24Name=CURRENCY.MKT.DR)
		/* Defines the Currency of the Account being debited.
For Inward Payment Orders, this field usually represents the Currency of the Payment Order (i.e. the Currency of the Nostro account which will be debited). For Outward Payment Orders, this field will represent the Currency of the Customer account which is debited to fund the payment transaction.
For Outward Payment Orders, this field together with the Debit Amount field could represent the Transfer Currency and Transfer Amount where the Customer has not specified the actual amount to be transferred, but instead, has requested the Bank to pay the equivalent of the defined amount in another specified Currency.
Example:
Let us suppose that British Bank received a Payment Order from a Customer who requests the Bank to pay in dollars the equivalent of GBP 10,000.00 to Mr Carter who has an account with American Bank, N.Y. The following will then be input:
Debit Account No. 123456 Debit Currency GBP Debit Amount 10,000.00 Credit Currency USD
The Application will then automatically calculate the corresponding amount to be transferred in Dollars using the appropriate Buy/Sell exchange rate from the Currency table.
Validation Rules

3 characters (uppercase alpha) - type SSS. or 1-3 numeric character Currency Code. (Optional input.)
Input will be mandatory when the Debit Amount is entered.
The Currency, if input, must be equal to the local Currency or the Credit Currency, if the debit account no         is a profit and loss category code (indicated by         preceeding PL).
The currency, if input, must always be the same as the currency of the Debit Account No.
For local clearing validation rules, see details for the relevant clearing system under the section 'local         clearing rules'. */
		DEBIT_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@i18n:Label (en="Debit Currency")
			@t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=5.0, core=true, businessType=CCY, t24Name=DEBIT.CURRENCY)
		/* Defines the Transfer amount.
For Inward Payments, this field will represent the natural Transfer Amount requested for the debit  while for Outward Payments the Credit Amount field will represent the natural Transfer Amount.  The field could also be used for outward Transfers when the Customer requests the bank to pay in a specified Currency the equivalent of an amount defined in another Currency.
Validation Rules
1-14 characters plus a decimal point (Standard Amount format) - type AMT.  (Mandatory if Credit Amount not entered otherwise not allowed.)
Each Funds Transfer transaction will always request one Transfer Amount, i.e. either the Debit Amount or the Credit Amount.  Input of both amounts is not allowed. */
		DEBIT_AMOUNT : T24BusinessTypes:AMT
			@i18n:Label (en="Debit Amount")
			@t24:i (align=R, inputBehaviour=F, maxLength=18, sysNumber=6.0, core=true, t24Name=DEBIT.AMOUNT, typeModifiers="5")
		/* Identifies the Date when the Debit entry is to be given value for interest purposes.
For Internal Accounts, the default Debit Value Date is the Processing Date. For other Accounts the rules are as follows:
1. For each Transaction Type, default Value Date Conditions are defined in the FT.TXN.TYPE.CONDITION table. The User will first define in this table the default Value Date for the transfer itself, i.e. the default Value Date which will apply for the Bank (Debit Value Date for inward transfer and the Credit Value Date for the outward transfer).
The Value Date conditions applicable to the Customer entry (Debit Value Date for outward transfers and the Credit Value Date for the inward transfers) are then defined by specifying a number of days to be added (Inward Payments) or subtracted (Outward Payments) from the bank Value Date.
2. The User can also define different Default Value Date conditions for groups of Customers in the Group Condition table. This table will be referenced by the User, when it is required to apply special conditions to particular groups of Customers (as Banks, Staff, Prime Customers, etc...).
3. Default Value Date conditions can also be defined at the Customer level by means of the Customer Condition table. The User will refer to this table when any particular Customer is to receive special conditions.
4. When the Value Date is not input, the Funds Transfer Application will verify (each time) whether the Customer has special Value Date conditions, or is part of a group of Customers which have been afforded special conditions, and if not, apply the Transaction Type default Value Date conditions.
To summarise the priority sequence of conditions:
if not INPUT then CUSTOMER, if not CUSTOMER then GROUP, if not GROUP then TXN TYPE.
For the Default Value Dates, the Application will first generate the Value Date Applicable to the bank (Debit Value Date of inward transfers and Credit value date for outward transfers) and then calculate the Customer, Credit or Debit, Value Date according to the number of days float defined in the appropriate tables.
Debit value dates on outgoing funds transfers can also be calculated by setting the CUT.OFF.RULE field on the AGENCY file and the CUT.OFF.TIME field on the CURRENCY file. For this method to be applied CUT.OFF.RULE must be set to a value of 0 or 1 and CUT.OFF.TIME must be set to a valid time. If these fields are set and no debit value date is entered, the calculated date will be applied, if a debit value date has been entered and it is before the calculated date then an override will be requested.
Note : If there is no record in the Holiday table for the country of the debit currency, the Value Date will be checked against the Local Holiday table record. If the Local Holiday table record is also missing, the transfer will be rejected.
Validation Rules

Up to 9 date characters (standard Date format in range 1950 - 2049) - type D. Any date input by the User, will override the Applicable Default Conditions. (Optional input. default values see Details )
The date entered must not exceed the maximum system forward Value Date defined in the Dates file.
The date entered must not exceed the maximum system back Value Date defined in the Dates file.
If the date exceeds the maximum forward value date defined in the Transaction Type condition table, an override will be requested.
If the date exceeds the maximum forward value date defined in the Transaction Type condition table, an override will be requested.
If the date exceeds the maximum forward value date defined in the Transaction Type condition table, an override will be requested.
If the date exceeds the maximum forward value date defined in the Transaction Type condition table, an override will be requested.
If the date exceeds the maximum back Value Date defined in the Transaction Type condition table, an override is provided.
The Debit Value Date cannot be greater than the Credit Value Date except for AC type transactions that have the DB.AFTER.CR field set to Yes.
For the Inward Payment Orders, an override will be required when the Debit Value Date is before the Processing date.
The Value Date of this field will be checked against the Holiday table of the country of the debit Currency. Any non-working day will require an override.
For Inward transaction types, if the Transaction Type condition table specifies 'NO' default value date, input in this field is mandatory.
If CUT.OFF.TIME (CURRENCY file) and CUT.OFF.RULE (AGENCY file) have both been set then the default debit value date for an outgoing funds transfer will be calculated as follows ;

if the transaction is entered before the cut off time specified on the currency file (for the debit currency) and CUT.OFF.RULE is set to 0, then the debit value date will be today&#8217;s date, if CUT.OFF.RULE is set to 1, then the debit value date will be today&#8217;s date +1 working day.

if the transaction is entered after the cut off time specified on the currency file (for the debit currency) and CUT.OFF.RULE is set to 0, then the debit value date will be the next working day, if CUT.OFF.RULE is set to 1, then the debit value date will be the next working day +1 working day

if neither the credit or debit value date have been entered and the default debit value date is after the default credit value date then the credit value date will be set to the default debit value date */
		DEBIT_VALUE_DATE : T24BusinessTypes:D
			@i18n:Label (en="Debit Value Date")
			@t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=7.0, core=true, t24Name=DEBIT.VALUE.DATE)
		/* Used to capture date info when updated from external sources like delivery message */
		IN_DEBIT_VDATE : T24BusinessTypes:D
			@i18n:Label (en="Debit Value Date (IN)")
			@i18n:Tooltip (en="Date info when updated from external sources")
			@t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=8.0, core=true, t24Name=IN.DEBIT.VDATE)
		/* Specifies information/data to be printed on the debit advice.
Any input in this field will be detailed on the statement or the debit advice as additional narrative for further clarification to the Customer.
Examples of details entered could be:
- Your letter dated ...            - Your references ..... etc.
For local clearing validation rules, see details for the relevant clearing system under the section 'local clearing rules'.
Validation Rules
Up to 16 characters (uppercase alpha or numeric) - type S.  (Optional input.) */
		DEBIT_THEIR_REF : T24BusinessTypes:A
			@i18n:Label (en="Debit Narrative")
			@t24:i (align=L, inputBehaviour=F, maxLength=16, sysNumber=9.0, core=true, t24Name=DEBIT.THEIR.REF)
		/* Specifies information/data to be printed on the credit advice.
On payment received through SWIFT, this field should correspond to the related Transaction Reference Number, i.e. to the reference number of the originating party. This field corresponds to the data from SWIFT (Swift Field 21) on messages type MT 202. It contains identifying information on the original transaction which links to the chain of messages needed to complete the transaction.
Note : This information may also be printed on the account statement depending on the rules specified in both the TRANSACTION table and the statement format in the Delivery System.
For local clearing validation rules, see details for the relevant clearing system under the section 'local clearing rules'.
Validation Rules
Up to 16 characters (uppercase alpha or numeric) - type S. (Optional input.)
This is mandatory if the transaction code has been set up to produce SWIFT message MT400 Payment Advice as it is a mandatory field in the swift processing for this message type. The reference of the incoming collection should be used. */
		CREDIT_THEIR_REF : T24BusinessTypes:A
			@i18n:Label (en="Credit Narrative")
			@t24:i (align=L, inputBehaviour=F, maxLength=27, sysNumber=10.0, core=true, t24Name=CREDIT.THEIR.REF)
		/* Identifies the Account being credited in respect of the transfer transaction.
For inward transfers, this Account will usually correspond to the Account of the Customer beneficiary of the payment. For foreign Currency outward transfers this Account will usually correspond to the Nostro account of the Currency defined in the field Credit Currency.
The Nostro account will be automatically defaulted from the Nostro table if no other input has been entered in this field. For local Currency outward transfers, the Account will default to the Vostro account of the Receiver bank if this has been defined in the Agency record.
Validation Rules

Standard numeric Account number or 3-10 character Account Mnemonic (uppercase alpha, numeric or .) - type MNE. or 6-12         character Internal Account Number (uppercase alpha or         numeric) - type SS. or 5 numeric character Profit and         Loss Category Code preceded by the letters PL. (Optional         input, except for Inward Payments,and for the internal         Transaction Types AC (Account Transfers) and DW (Direct         Drawings) when input is mandatory.)
For the Transaction Types Outward by Telex (OT) and Outward by Draft (OD) the input of an account will also         be mandatory when the Credit Currency is the local         Currency unless there is a local currency Vostro account         defined in the Agency record for the Receiver Bank.
The Credit Account Number must not be the same as the Debit Account Number.
Any Category code will need to be preceded by the letters PL to avoid any confusion with valid Account numbers. It         will only be accepted for the Inward Payment and Account         Transfer Transaction Types.
A Profit and Loss category code will not be accepted if the Debit Account Number already contains a Profit and         Loss Category code. This type of entry must be booked         using the Data Entry Application.
For the Transaction Types Outward by Telex (OT) and Outward by Draft (OD), only a Vostro or a Nostro account         is allowed.
For outward local clearing transaction types (BC) the account must be defined in the FT.LOCAL.CLEARING table in         the BRNCH.NOSTRO.BC field.
For incoming local clearing transaction type BI the account must be defined on the FT.LOCAL.CLEARING table in         the field BRNCH.NOSTRO.BI. For extra local clearing         validation rules, see details for the relevant clearing         system under the section 'local clearing rules'. */
		CREDIT_ACCT_NO -> ACM_AccountOpening:ACCOUNT
			@i18n:Label (en="Credit Account")
			@t24:i (align=R, inputBehaviour=F, maxLength=36, sysNumber=11.0, core=true, t24Name=CREDIT.ACCT.NO)
		/* Defines the market in which the account being credited is to be used.
a) If FTCREDIT is set up on MU.TXN.GRP.CCY.MKT as a movement for FT, then the market will be defaulted according to the value            set up, and the field will be no input.
b) The currency market must exist on the currency table for local currency.
c) If the currency market does not equal the currency market of the Credit amount, then an override will be provided.
d) If the transfer involves only local currencies and neither FTCREDIT or FTDEBIT is set up only input of market 1 is            allowed.
e) If the transfer involves only local currencies and one of FTCREDIT or FTDEBIT is set up, then the currency market input            must equal the currency market defaulted.
Validation Rules
1 numeric valid currency market code.  No input for single market operations (default 1), Mandatory input in multi market. */
		CURRENCY_MKT_CR -> FIN_CurrencyConfig:CURRENCY_MARKET
			@i18n:Label (en="Ccy Market Cr")
			@i18n:Tooltip (en="Market where account being debited is to be used")
			@t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=12.0, core=true, businessType=A, t24Name=CURRENCY.MKT.CR)
		/* Defines the Currency of the Account being credited.
For Outward Payment Orders, this field will usually represent the Currency of the Nostro account to be credited. For Inward Payment Orders, this field will usually represent the Currency of the Customer account to be credited.
Validation Rules

3 characters (uppercase alpha) - type SSS or 1 to 3 numeric character Currency code. (Optional input.)
Mandatory when the Credit Amount is entered.
Must be local Currency or the same as the debit currency, if credit account number is a profit and loss category         code.
Must be local Currency for cheques (OC), Bankers Payments (OB), and Local Clearing Payments. */
		CREDIT_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@i18n:Label (en="Credit Ccy")
			@t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=13.0, core=true, businessType=CCY, t24Name=CREDIT.CURRENCY)
		/* Defines the Transfer amount. (This field will usually be used for Outward Transfers, while the Debit Amount field will usually be used for the Inward Transfers.)
For Outward Payments, this field will represent the natural transfer amount while for Inward Payments it is Debit Amount which will represent the natural transfer amount. This field could, however, also be used for inward transfers when our correspondent requests us to pay a specific Currency and Amount to one of our Customers and to debit another account for the equivalent of the charges.
For "OT" txn types which generates MT103 messages the amount is mentioned only in Credit Amount that will be taken as amount instructed (tag 33B) as well as Amount Credited (tag 32A) unless charges taken from Beneficiary.
Validation Rules

Up to 14 characters plus a decimal point (Standard Amount Format) - type AMT. (Optional input.)
Each Funds Transfer transaction will always request one Transfer Amount; either the Debit Amount or the Credit Amount. Input of both amounts is not     allowed. */
		CREDIT_AMOUNT : T24BusinessTypes:AMT
			@i18n:Label (en="Credit Amount")
			@t24:i (align=R, inputBehaviour=F, maxLength=18, sysNumber=14.0, core=true, t24Name=CREDIT.AMOUNT, typeModifiers="13")
		/* Identifies the date when the Credit entry is to be given value for interest purposes.
For Internal Accounts the default Credit Value Date is the Processing Date. For other Accounts the rules can be summarised as follows: 1. For each Transaction Type, Default Value Date conditions are defined in the Transaction Type Condition table. The User will first define in this table the Default Value Date for the transfer , i.e. the Default Value Date which will apply for the Bank (Debit Value Date for inward transfer and the Credit Value Date for the outward transfer). The Value Date conditions applicable to the Customer entry (Debit Value Date for outward transfers and the Credit Value Date for the inward transfers) are then defined by specifying a number of days to be added (Inward Payments) or subtracted (Outward Payments) from the Bank Value Date.
2. The User can also define different default Value Date conditions for groups of Customers in the Group Condition table. This table will be referenced by the User when applying special conditions to particular groups of Customers (such as Banks, Staff, Prime Customers).
3. Finally, default Value Date conditions can also be defined at the Customer level by means of the Customer Condition table. The User will refer to this table when any particular Customer is to receive special conditions.
When the Value Date is not input, the Funds Transfer Application will verify if the Customer has special Value Date conditions or whether it is part of a group of Customers which have been afforded special conditions, and if not, it will apply the Transaction Type default Value Date conditions.
For the default Value Dates, the Application will first generate the Value Date applicable to the Bank (Debit Value Date of inward transfers and Credit Value Date for outward transfers) and then calculate the Customer Value Date (credit or debit) according to the number of days float defined in the appropriate tables.
Credit value dates on incoming funds transfers can also be calculated by setting the CUT.OFF.TIME field on the CURRENCY file. For this method to be applied CUT.OFF.TIME must be set to a valid time, if this is the case and no credit value date is entered, the calculated date will be applied, if a credit value date has been entered and it is before the calculated date then an override will be requested.
Note : For Outward Payments, if there is no record in the Holiday table for the Country of the credit currency, the Value Date will be checked against the Local Holiday table record. If the Local Holiday table record is also missing, the transfer will be rejected.
Validation Rules

Up to 9 Date characters (Standard Date format in range 1950-2049) - type D. (Optional input. For default values see Details.)
The date entered must not exceed the maximum system forward Value Date defined in the Dates file.
The date entered must not exceed the maximum system back Value Date defined in the Dates file.
If  the date exceeds the maximum forward value date defined in the Transaction Type condition table, an override will be requested.
If the date exceeds the maximum back Value Date defined in the Transaction Type condition table, an override will be requested.
The Debit Value Date cannot be greater than the Credit Value Date except for AC type transactions that have the DB.AFTER.CR field set to Yes.
An override will be requested when this date is prior to the Processing date.
For Outward Payments, an override will be required when the date is not a working day in the country of the credit Currency. For all other   Transaction Types, an override will be requested if the date input is not a local working day.
For the Transaction Types OC (outward by cheque), and OB (outward by bankers payment) the Value Date must be equal to the processing date.
For outward transaction types, if the Transaction Type condition table specifies 'NO' default value date, input in this field mandatory.
If CUT.OFF.TIME (CURRENCY file) has been set then the default credit value date for an incoming funds transfer will be calculated as shown in the following table


Debit value date#Cut off time#Debit/credit currency#Credit value date default##
Debit value date prior or equal to date of receipt#Time of receipt prior or equal to cut off time#Debit currency equal to credit currency#Credit value date equals date of receipt##
As above#As above#Debit currency not equal to credit currency#Credit value date equals date of receipt + 1 working day##
As above#Time of receipt later than cut off time#Debit currency equal to credit currency#Credit value date equals date of receipt + 1 working day##
As above#As above#Debit currency not equal to credit currency#Credit value date equals date of receipt + 2 working days##
Debit value date later than date of receipt#Time of receipt prior or equal to cut off time#Debit currency equal to credit currency#Credit value date equals debit value date##
As above#As above#Debit currency not equal to credit currency#Credit value date equals debit value date + 1 working day##
As above#Time of receipt later than cut off time#Debit currency equal to credit currency#Credit value date equals debit value date + 1 working day##
As above#As above#Debit currency not equal to credit currency#Credit value date equals debit value date + 2 working days## */
		CREDIT_VALUE_DATE : T24BusinessTypes:D
			@i18n:Label (en="Credit Value Date")
			@t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=15.0, core=true, t24Name=CREDIT.VALUE.DATE)
		/* Defines the rate at which the Treasury unit will buy or sell foreign Currency from/to the marketing units.
The Funds Transfer Application will make use of a Treasury Rate each time a transaction involves a conversion of currencies.
The Final exchange rate quoted to Customers (Customer Rate) will be determined by the addition or subtraction of the appropriate Customer Spread to/from the Treasury Buy/Sell Rate.
A detailed explanation of the function of these fields can be found in the Currency Table Overview.
The Default Treasury Rate will be as per Currency table depending on value of transaction.
When a rate has been obtained from a Dealer, the reference of an associated FX deal, optionally may be input in the next field Negotiated Dealer Reference.
Validation Rules


1-12 type R (Standard Rate Format - up to 8 integer and 6 decimal) characters plus a decimal point or 1-15 type R (Up to 8 integer and 9 decimal) characters plus a decimal point when EXTENDED.PREC in SPF is set to Y. (Optional input where exchange calculation involved otherwise not allowed).
It is important to understand that this field represents the Treasury Rate and not the final Customer Rate. The latter will always be calculated by the System and will be stored in the Customer Rate field.
The Calculated Customer Rate must be positive, see CUSTOMER.SPREAD.
If the Amount of the transaction exceeds the Negotiable Amount, above which an exchange rate should be obtained from the dealer, the System requests that rate to be entered. Otherwise, if the Treasury Rate field is left blank for amounts in excess of the limit, as defined in the Currency table, an override will be requested and the Application will default to the appropriate Currency Market Buy or Sell rate. In this situation, no additional Treasury Spread is applied from the Currency Table.
If the todays fixing rates have not yet been entered in the Currency table, an override message will be displayed asking the User if the existing exchange rates are to be used. If the previous rate is not to be used, the transaction will be placed in a INORATE Funds Transfer status (Input but No Rate) awaiting subsequent authorisation and release. Such a transaction can be authorised, in which case the status will be changed to ANORATE.
If the exchange rate of the Currency is blocked (e.g. the dealers have suspended quoting a rate in a particular Currency), the transaction will be rejected up to the time that the currency code has been set to normal use again. */
		TREASURY_RATE : T24BusinessTypes:R
			@i18n:Label (en="Treasury Rate")
			@i18n:Tooltip (en="Rate at which the Treasury unit will buy or sell")
			@t24:i (align=R, inputBehaviour=F, maxLength=16, sysNumber=16.0, core=true, t24Name=TREASURY.RATE, isValidateOnChange=true)
		/* Identifies the Negotiated Dealer Reference Number of the foreign exchange internal deal which has been created specifically to cover the exchange rate for this F.T.
The Currency table defines the negotiable amount, i.e. the amount above which the exchange rate to be used should be agreed with the dealer. Funds Transfer transactions, where the amount exceeds this Negotiable Amount, require the specific rate to be input and the associated internal deal reference number may then be entered.
The Negotiable Dealer Reference, if input, must be a unique reference number which is assigned from F.X.. Entry of this reference will cause the FX deal to be identified, matched, and cancelled automatically when the Funds Transfer transaction is finally accepted by the Application. Thus avoiding a double update of the foreign Currency position. Any internal deal, which is yet to be matched by a corresponding F.T. transaction, can be viewed in the Exception display of the Foreign Exchange Application.
Internal deals are created within FX to allow dealers the option of immediate updates of the Currency positions, without dependence on other departments.
Validation ensures that the deal with this reference, already exists before this input will be accepted.
The User should input only the sequence number of the FX transaction to relate to a deal which has been input, or other unique known reference. The System will then automatically access the Negotiated Deal Reference file to retrieve the related transaction.
Note : It must be remembered that when the transaction amount is greater than the negotiable amount, only the customer spread (as defined on the CURRENCY table) will be added to the Treasury rate.
Validation Rules

5 numeric characters which form the daily F.X. transaction sequence number. (Optional input, no default.         Only allowed if Exchange Rate has been input).
The FX transaction must exist on the FX file as an Internal deal. */
		NEG_DEALER_REFNO : mml:Integer
			@i18n:Label (en="Neg Dealer Reference")
			@i18n:Tooltip (en="Negotiated Dealer Reference Number ")
			@t24:i (align=R, inputBehaviour=F, maxLength=5, sysNumber=17.0, core=true, t24Name=NEG.DEALER.REFNO)
		/* Specifies on which future working day this transaction is to be processed.
Any transaction with a future Processing Date will appear in the books of the bank as forwards, until a batch program is run to process it.  Such a transaction can be input or Authorised as normal and will be identified with specific Funds Transfer status codes of IFWD or AFWD.
By means of the Exception display of the Funds Transfer Application the User can monitor and control the status of such transactions until the batch program has been run.  Ideally, the Processing Date batch program should be run as an initial activity, each morning, to apply the transactions which are now to be processed on that day.
Validation Rules
Up to 9 Date characters (Date formate in range 1950-2049) - type D.  (Optional input.  Default value = Todays date.)
It must be a future, local working day.
It must be up to a maximum of 14 days forward.  Any date in excess of 14 days will require an override. */
		PROCESSING_DATE : T24BusinessTypes:D
			@i18n:Label (en="Processing Date")
			@i18n:Tooltip (en="Future working day for processing")
			@t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=18.0, core=true, t24Name=PROCESSING.DATE)
		ORDERING_CUST -> byValue FT_Contract:FUNDS_TRANSFER__ORDERING_CUST *
		IN_ORDERING_CUS -> byValue FT_Contract:FUNDS_TRANSFER__IN_ORDERING_CUS *
		ORDERING_BANK -> byValue FT_Contract:FUNDS_TRANSFER__ORDERING_BANK *
		IN_ORDERING_BK -> byValue FT_Contract:FUNDS_TRANSFER__IN_ORDERING_BK *
		ACCT_WITH_BANK -> byValue FT_Contract:FUNDS_TRANSFER__ACCT_WITH_BANK *
		ACCT_WITH_BK -> byValue FT_Contract:FUNDS_TRANSFER__ACCT_WITH_BK *
		/* Defines the Account Number of the ultimate beneficiary at their bank. According to the settings in field
BEN.ACCT.ONLY
Validation Rules

Up to 34 characters (uppercase alpha or numeric) - type S. (Mandatory input for Transaction Type BC. Optional input         for Transaction Types OB and OT, otherwise not allowed.)
It may contain whatever account details required, in order to uniquely identify the Beneficiary Account.
The maximum length for a BACS payment is eight characters. For local clearing validation rules see the section         'Local Clearing Rules' under the relevant clearing system.
This field is mandatory if the BK.OPERATION.CODE has value CREDIT and invalid if the value is CHQB. */
		BEN_ACCT_NO : T24BusinessTypes:S
			@i18n:Label (en="Beneficiary Account No (Tag 59)")
			@i18n:Tooltip (en="Account of the ultimate beneficiary at their bank")
			@t24:i (align=L, inputBehaviour=F, maxLength=34, sysNumber=25.0, core=true, t24Name=BEN.ACCT.NO)
		/* Contains the inward Beneficiary Account No in the same format as received from delivery or the clearing system.
Validation Rules
This is a NOINPUT field. */
		IN_BEN_ACCT_NO : T24BusinessTypes:A
			@i18n:Label (en="IN Benef Acct Number")
			@i18n:Tooltip (en="Inward Beneficiary Account Number ")
			@t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=26.0, core=true, t24Name=IN.BEN.ACCT.NO)
		BEN_CUSTOMER -> byValue FT_Contract:FUNDS_TRANSFER__BEN_CUSTOMER *
		IN_BEN_CUSTOMER -> byValue FT_Contract:FUNDS_TRANSFER__IN_BEN_CUSTOMER *
		BEN_BANK -> byValue FT_Contract:FUNDS_TRANSFER__BEN_BANK *
		IN_BEN_BANK -> byValue FT_Contract:FUNDS_TRANSFER__IN_BEN_BANK *
		/* Contains the number of a cheque, issued by one of the Banks Customers (on the Account of the Bank), which has resulted in an Outward Payment in respect of Cheque Collection by a third party.
This process refers to the issuing by the Bank of an Outward Payment Order resulting from a cheque collection by a third party. The purpose of the Cheque Number input is to allow automatic verification to the Stop Payment File thus providing a warning to the User if the cheque has been stopped.
If the Cheque Number matches the Stop Payment file, a message will be displayed, which may be overridden.
Any Cheque Number entered into this field will be printed on the Customer statement.
For local clearing validation rules see the section 'Local Clearing Rules' under the relevant clearing system.
Validation Rules

Up to 16 numeric characters. (Optional input for Transaction Types AC, OC, OD, OB and OT. Otherwise not allowed.)
This is mandatory if the transaction type has been set up to produce SWIFT statement MT110 Advice Of Cheque. This would be done via     FT.TXN.TYPE.CONDITION.

This field id mandatory if the BK.OPERATION.CODE has value CHQB */
		CHEQUE_NUMBER : T24BusinessTypes:A
			@i18n:Label (en="Cheque No")
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=31.0, core=true, t24Name=CHEQUE.NUMBER)
		PAYMENT_DETAILS -> byValue FT_Contract:FUNDS_TRANSFER__PAYMENT_DETAILS *
		IN_PAY_DETAILS -> byValue FT_Contract:FUNDS_TRANSFER__IN_PAY_DETAILS *
		/* Defines the local Bank Sort Code for local clearing systems.
Mandatory input for Transaction Type BC. Input also allowed for any outward Transaction Type when the Credit Currency is local; otherwise not allowed.
The code entered must exist on the BC.SORT.CODE file, and will be enriched by the BANK NAME.
For local clearing validation rules see the section 'Local Clearing Rules' under the relevant clearing system.
The BANK.SORT.CODE defaults the Value Date as specified on BC.SORT.CODE on first entry.
Validation Rules

6 numeric characters. */
		BC_BANK_SORT_CODE -> FT_LocalClearing:BC_SORT_CODE
			@i18n:Label (en="Sort Code")
			@i18n:Tooltip (en="Local Bank Sort Code for local clearing systems")
			@t24:i (align=L, inputBehaviour=F, maxLength=20, sysNumber=34.0, core=true, businessType=A, t24Name=BC.BANK.SORT.CODE)
		/* Defines the bank to whom the Payment Order is to be sent (OB, OT), or the bank on which the Draft is drawn (OD). The field will only be used to identify the recipient of a Bankers Payment, the recipient of a Cable Payment Order or the Bank where a Draft Payment is payable.
The Receiver Bank may only be entered, in respect of Bankers Payment, Cables and Drafts. When the field is left blank, the Application will use the Customer of the Credit Account as the recipient of the Payment Order.
With Cables and Drafts (Transaction Types OD an OT) the input of a Customer Number or Mnemonic will automatically generate the contents of Receiver Correspondent Bank (and optionally, the Intermediary Bank) when the credit currency autorouting instructions have been so defined in the Agency File for the Receiver Bank. If not defined fully within the Agency File, the Receiver Correspondent Bank details will require to be input by the User on each Transaction.
A Cover Cable may be sent to Our Correspondent Bank, in addition to the basic Cable Payment Order, depending on the values of Receiver Bank and Receiver Correspondent Bank (refer to the Receiver Correspondent Bank field for further details).
When MESSAGE.TYPE 400 is set on the FT.TXN.TYPE.CONDITION. then this field becomes mandatory if the CREDIT.ACCT.NO is a NOSTRO.
The Application will accept a value of Telex or Both in the Agency file. A value of Signature only will be rejected. For the Transaction Type OD, signature arrangements must have been defined in the Agency file for the Receiver Banks Agent record. The Application will accept a value of Signature or Both in the Agency file. A value of Telex arrangements only will be refused.
Validation Rules

Input for Transaction Type OB, OD and OT, otherwise not allowed.
The Receiver Bank cannot be the same as the Account With Bank.
For the Transaction Type OT, telex arrangements must have been defined in the Agency file for the Receiver Banks Agent record.
Input in this field is not allowed when the Credit Account Number is a Vostro unless it is the Customer of the Vostro.
The Receiver bank cannot be the same as the Customer of the credit account unless the credit account is a VOSTRO.
When the CREDIT.ACCT.NO is an internal account, input in this field is mandatory for Transaction types OD, OT and OB.
Input in this field is Mandatory when COVER.METHOD is THIRD-INST. */
		RECEIVER_BANK -> ST_Customer:CUSTOMER
			@i18n:Label (en="Receiver Bank")
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=35.0, core=true, businessType=CUST.BIC, t24Name=RECEIVER.BANK, typeModifiers="SW")
		REC_CORR_BANK -> byValue FT_Contract:FUNDS_TRANSFER__REC_CORR_BANK *
		INTERMED_BANK -> byValue FT_Contract:FUNDS_TRANSFER__INTERMED_BANK *
		IN_INTMED_BANK -> byValue FT_Contract:FUNDS_TRANSFER__IN_INTMED_BANK *
		/* Identifies instructions relating to the delivery of a Cheque or a Draft Payment which is issued as a result of the Transaction Types OC and OD.
Permitted input is:
B(BEN):  Defines that the cheque or draft which is issued as a result of the Transaction Types OC an OD must be sent                 directly to the beneficiary.        C(CUST): Defines that the cheque or draft is to be sent to the                 ordering Customer rather than the beneficiary.  In this                 instance the cheque or draft will be printed with the                 debit advice and the covering advice (for the                 beneficiary) will not be produced.
If the Debit Account Number is a Profit and Loss Category Code or an Internal Account, the Customer will be identified by the content of the Ordering Customer field.
Validation Rules
1 to 4 alpha characters:  BEN :  The Cheque or the Draft must be sent to the Beneficiary.  or  CUST :  The Cheque or the Draft must be sent to the Ordering         Customer.  (Optional input for Transaction Types OC and OD, otherwise not allowed.  Default value is BEN.) */
		MAILING : FT_Contract:FUNDS_TRANSFER__MAILING
			@i18n:Label (en=Mailing)
			@i18n:Tooltip (en="Instructions relating to the delivery of a Cheque")
			@t24:i (align=L, inputBehaviour=F, maxLength=4, sysNumber=39.0, core=true, t24Name=MAILING)
		/* Contains additional instructions for the bank to whom the Payment Cable is sent. The field defines the further method of payment to be used by the receiver.
Within certain SWIFT messages, this data forms part of the Bank-to-Bank information defined for SWIFT field 72.
Validation Rules
2 alpha characters as specified in the Validation Rules - Type SSS.  (Optional input for Transaction Type OT, otherwise not allowed.)
Valid codes are as follows: TA   Telex advice PT   Pay by telex PA   Phone advice PP   Pay by phone            AT   Application / Identification by telex            AI   Application / Identification - other            PB   Pay beneficiary only            CH   Pay by cheque  These are standard Swift Codes. */
		PAY_METHOD : FT_Contract:FUNDS_TRANSFER__PAY_METHOD
			@i18n:Label (en="Pay Method")
			@i18n:Tooltip (en="Contains additional instructions for the bank ")
			@t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=40.0, core=true, t24Name=PAY.METHOD)
		/* The value entered here is used to signify who will be responsible for charges. There are three permissible values; BEN, OUR and SHA.

Value#Description##
BEN#All transaction charges are to be borne by the beneficiary customer.##
OUR#All transaction charges are to be borne by the ordering customer.##
SHA#Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.##

When OUR has been input, the recipient bank will normally send a Claim Charges Advice for the amount of their charges to the sending bank which in turn will collect the amount from the Ordering Customer.
If sending an MT103 the BEN option is only valid if Sender charges are being applied.
This field corresponds to field 71A in SWIFT messages.
If the system has been set up to produce SWIFT message MT103 Single Customer Credit Transfer via FT.TXN.TYPE.CONDITION then the default for this field will be SHA.
Validation Rules

Mandatory where charges or commission is applied for outward payment types
Value allowed depends on commission.code and/or charge.code settings
If BEN and message MT103 being sent, charges or commissions for sender must be present. */
		BEN_OUR_CHARGES : FT_Contract:FUNDS_TRANSFER__BEN_OUR_CHARGES
			@i18n:Label (en="Charges Details")
			@i18n:Tooltip (en="Used to signify who will be responsible for charge")
			@t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=41.0, core=true, t24Name=BEN.OUR.CHARGES)
		/* Used to hold the details of charges when updated from external sources like delivery message or local clearing */
		IN_BEN_OUR_CHARGES : T24BusinessTypes:A
			@i18n:Label (en="Ben Our Charges (IN)")
			@i18n:Tooltip (en="Details of charges updated from external sources")
			@t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=42.0, core=true, t24Name=IN.BEN.OUR.CHARGES)
		CHARGES_ACCT_NO -> ACM_AccountOpening:ACCOUNT
			@i18n:Label (en="Charges Acct No.")
			@i18n:Tooltip (en="Account Number where charges are to be debited")
			@t24:i (align=L, inputBehaviour=F, maxLength=16, sysNumber=43.0, core=true, businessType=ANT, t24Name=CHARGES.ACCT.NO)
		/* Identifies whether the Commissions and Charges calculated by the Application are to be displayed to the User after the validation of the transaction.
The User will enter Y in this field when it is required to receive a display of the commissions and the charges which have been automatically defaulted and calculated by the Funds Transfer Application.
The Application will display the results prior to accepting the transaction and will await the value of the field being removed (i.e. blank) before the transaction is accepted.
Validation Rules
1 alpha character:  Y - Display charges and commissions after validation  N(o) - Do not display charges and commissions after validation.  (Optional input. Default value is NO, i.e. no display of charges on commissions.) */
		CHARGE_COM_DISPLAY : FT_Contract:FUNDS_TRANSFER__CHARGE_COM_DISPLAY
			@i18n:Label (en="Charge Comm Display")
			@i18n:Tooltip (en="Display of commission charges calculated")
			@t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=44.0, core=true, t24Name=CHARGE.COM.DISPLAY)
		/* Identifies how the Commission is to be applied, i.e. which party is to pay for the Commission.
D = Debit plus Commission The Debit plus Commission value will indicate that, for outgoing payments, the complete transfer amount will be remitted to the receiver bank and the commissions amount will be collected from our ordering Customer. For incoming payments, the complete transfer amount will be credited to our beneficiary Customer and the commission amount will be debited to the Account defaulted or specified in Charges Account Number.
C = Credit less Commission The Credit less Commission value will indicate that, for outgoing payments, the amount of commission will be deducted from the Transfer Amount which is remitted to the receiver bank. For Incoming payments, the amount of commission will be deducted from the received amount (Transfer amount) and credited to a Profit and Loss Category code. If the Customer has requested the bank to apply all commissions and charges to a separate account, the complete Transfer Amount will be credited to one account and the corresponding commissions and charges debited to the specific charge/ commission account of the Customer.
W = Waive Commission The Waive Commission value will indicate that no commission is to be applied on this transaction. Any input in the fields Commission Type and Commission Amount will consequently be refused.
Example of Credit Less Commissions. One of our Customers requests the bank to pay USD 10,000.00 less the commission and our commission amount is USD 10.00.
We will debit our Customer for USD 10,000.00, credit the appropriate Nostro account for 9,990.00 USD (which will be the Transfer amount) and credit our commission Profit and Loss category code for USD 10.00 (or equivalent in local Currency if different from USD).
Note : For Standing Order transfers and any transfers with Nostro for both Debit and Credit Accounts, the default value generated is W (Waive Commission).
Validation Rules

C, D or W - see Details. (Optional input. Default values are: D for outgoing payments or C for incoming payments, W for any transfer with Nostro accounts for both Debit and Credit). For Outward Payments where the Debit Account is either a Profit and Loss Category Code or an internal Account, both the Commission Code and Charge Code must equate to Waive, unless the Charges Acct No is specified. For Inward Payments, where the Credit Account is either a Profit and Loss Category Code or an internal account, both the Commission Code and Charge Code must equate to Waive. Entry of a Waive Commission Code will not be allowed if any Commission Types have been entered. If the Commission Code Credit is specified in this field, the value of the Charge Code can only be Credit or Waive. If the Commission Code Debit is specified in this field, the value of the Charge Code can only be Debit or Waive.
If BEN.OUR.CHARGES = BEN and the system has been set to produce swift MESSAGE MT103 Single Customer Credit Transfer via the transaction type and FT.TXN.TYPE.CONDITION then this field must be C- Commission less charges and a valid commission code must be entered. If BEN.OUR.CHARGES = OUR or SHA and the system has been set to produce swift MESSAGE MT103 Single Customer Credit Transfer via the transaction type and FT.TXN.TYPE.CONDITION then this field must be D- debit plus charges. */
		COMMISSION_CODE : FT_Contract:FUNDS_TRANSFER__COMMISSION_CODE
			@i18n:Label (en="Commission Code")
			@i18n:Tooltip (en="Indicates the commission code")
			@t24:i (align=L, inputBehaviour=F, maxLength=20, sysNumber=45.0, core=true, t24Name=COMMISSION.CODE)
		COMMISSION_TYPE -> byValue FT_Contract:FUNDS_TRANSFER__COMMISSION_TYPE *
		/* Identifies how the Charges are to be applied, i.e. which party is to pay for the charges.
C = Credit less Charges The Credit less Charges value will indicate that, for outgoing payments, the amount of charge will be deducted from the Transfer Amount which is remitted to the receiver bank. For Incoming payments, the amount of charge will be deducted from the received amount (Transfer amount) and credited to a Profit and Loss Category code. If the Customer has requested the bank to apply all commissions and charges to a separate account, the complete Transfer Amount will be credited to one account and the corresponding commissions and charges debited to the specific charge/commission account of the Customer.
D = Debit plus Charge The Debit plus Charge value will indicate, for outgoing payments, that the complete transfer amount will be remitted to the receiver bank and the charges amount will be collected from our ordering Customer. For incoming payments, the complete transfer amount will be credited to our beneficiary Customer and the charge amount will be debited to the Default Claim Charge Account or specified in the Charges Account Number.
W = Waive Charge The Waive Charge value will indicate that no charge is to be applied on this transaction. Any input in the fields Charge Type and Charge Amount will consequently be refused.
Example of Credit Less Charges: One of our Customers requests the bank to pay USD 10,000.00 less the charges and that our charge amount is USD 10.00.
We will debit our Customer for USD 10,000.00, credit the appropriate Nostro account for 9,990.00 USD (which will be the Transfer amount) and credit our charge Profit and Loss category code for USD 10,00 (or equivalent in local Currency if different from USD).
Note : For balance maintenance Standing Orders and any transfers with Nostros for both Debit and Credit accounts, the default value generated is W (Waive Charges).
Validation Rules

C, D, or W - see Details. (Optional input. Default values are: D for outgoing payments or C for incoming payments, W for any transfer with Nostro accounts for both both Debit and Credit). For Outward Payments where the Debit Account is either a Profit and Loss Category Code or an internal Account, both the Commission Code and Charge Code must equate to Waive, unless the Charges Acct No is specified. For Inward Payments, where the Credit Account is either a Profit and Loss Category Code or an internal Account, both the Commission Code and Charge Code must equate to Waive. If a Charge Code of Credit is specified in this field, the value of the Commission code can only be Credit or Waive. If a Charge Code of Debit is specified in this field, the value of the Commission Code can only be Debit or Waive.
If BEN.OUR.CHARGES = BEN and the system has been set to produce swift MESSAGE MT103 Single Customer Credit Transfer via the transaction type and FT.TXN.TYPE.CONDITION then this field must be C- Credit less charges and a valid commission code must be entered. If BEN.OUR.CHARGES = OUR or SHA and the system has been set to produce swift MESSAGE MT103 Single Customer Credit Transfer via the transaction type and FT.TXN.TYPE.CONDITION then this field must be D- debit plus charges */
		CHARGE_CODE : FT_Contract:FUNDS_TRANSFER__CHARGE_CODE
			@i18n:Label (en="Charge Code")
			@i18n:Tooltip (en="Indicates the Charge code")
			@t24:i (align=L, inputBehaviour=F, maxLength=20, sysNumber=49.0, core=true, t24Name=CHARGE.CODE)
		CHARGE_TYPE -> byValue FT_Contract:FUNDS_TRANSFER__CHARGE_TYPE *
		/* Identifies the Customer's Exchange Spread to be applied for this transaction.
The Customer Spread defined in this field will be applied to the Treasury (buy/sell) Rate to generate the final Rate of the transaction, i.e. the exchange rate which is applicable to the Transaction.
Input allowed only when the Customer Rate is not entered.
The User should consider the rules relating to the default values of Spread by the Funds Transfer Application. These rules can be summarized as:
1. The Currency Table allows the User to define different Treasury and Customer exchange Spreads according to the amount of the transaction. The Customer Spreads from this table will be used throughout the Funds Transfer Application when no other special spread conditions have been afforded to the Customer of the transaction.
2. The User can define different spread conditions for groups of Customers by use of the Group Condition table. This table will be enhanced by the User so as to apply special conditions to particular groups of Customers (as Banks, staff, Prime Customers, etc.).
3. Finally, default spread conditions can also be defined at the Customer level by means of an individual customer record on the GROUP.CONDITION table. The User will create entries on this table when a particular Customer receives special conditions.
4. The default spread as calculated above is recalculated with the difference between Treasury Rate and Customer Rate, when Customer Rate is entered . In such cases, Customer Spread can be Positive or Negative based on the difference between Customer Rate and Treasury Rate.
When spread is negative then Market exchange profit will show a Negative amount implying the Loss.
Any input by the User will supercede the applicable default conditions. Any direct input will be subjected to certain range checks.
Validation Rules

1-12 type R (Standard Rate Format - up to 8 integer and 6 decimal) characters plus a decimal point or 1-15 type R (Up to 8 integer and 9     decimal) characters plus a decimal point when EXTENDED.PREC in SPF is set to     Y. (Optional input. Default as defined in Details.)
Input is not allowed when the Debit Currency and the Credit Currency are the same.
Input is not allowed when the Customer Rate is entered.
Any spread input, should not exceed the appropriate Customer spread as defined on the Currency table.
When Customer Spread inputted manually it has to be Positive
Overrides are provided for any Customer spread beyond that defined in the Currency table. */
		CUSTOMER_SPREAD : T24BusinessTypes:R
			@i18n:Label (en="Customer Spread")
			@t24:i (align=R, inputBehaviour=F, maxLength=16, sysNumber=53.0, core=true, t24Name=CUSTOMER.SPREAD, typeModifiers=-, isValidateOnChange=true)
		/* Identifies the Currency that is used as the base when an exchange rate is being quoted on an FT transaction that involves two different currencies.
When the Base Currency is not entered during input and the transaction involves local currency, the system will default to the local currency provided the quotation code on the currency record of the other currency is NULL.  If the quotation code of the other currency is not equal to null, then that currency will become the Base Currency.
The proper identification of the base currency will allow the Exchange Rate routine to validate the Exchange Rate input by the user against the tolerance values contained in the Currency table.
When the base currency is not specified and the transaction involves two currencies where none is the currency, it will default to the currency which yields a cross-rate greater than unity (One).

Example 1:
Let us suppose that a UK User is processing a Funds Transfer transaction involving Pounds Sterling and American Dollars.  The base currency, which will be defaulted in this case, will be Pounds Sterling because the quotation code of the U.S. Dollar will be equal to null in the currency table. i.e. in United Kingdom it is the Pound Sterling (local currency) which is that currency, against which all foreign currencies are quoted.

Example 2:
Let us suppose that a UK User is processing a Funds Transfer transaction involving French Francs and Deutsche Marks.  The base currency which will be defaulted in this case will be the Deutsche Marks because it is the currency which yields a cross-rate greater than unity.  If a rate of 0.33 has been input, the user will be informed that the rate is out of range unless he indicates that French Francs is the Base Currency.

Example 3:
Let us suppose that a User in France is processing a Funds Transfer transaction involving US Dollars and French Francs.  The base currency will then be the US Dollar as the quotation code will be set, in the currency record, then US Dollars would be the Base Currency.
Validation Rules
3 character Currency code (uppercase alpha or numeric) - Type SSS.  (Optional input.  If entered, then used in rate validation. Otherwise default value will be automatically derived from currency tables.)
The base currency input in this field can only be either the Debit Currency or the Credit Currency.
When no input has been done in this field, then the default value will always be generated by the exchange rate routine as defined within the details above.
Irrespective of whether the Base Currency has been input or defaulted; proper verification of the exchange rate, for the transaction, will be performed by the exchange rate routine, using the Base Currency, and against the Exchange Rate values contained in the Currency table. */
		BASE_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=54.0, core=true, businessType=CCY, t24Name=BASE.CURRENCY)
		/* Specifies the Customer identification for all Profit and Loss entries which are generated by Funds Transfer in relation to the transaction being processed (Commission entries, Charge entries, etc).
The data contained in this field will be used within M.I.S. (Management Information System) analysis and reporting both at the Customer and product level.
Validation Rules

1-6 Numeric character Customer number or 3-10 character Customer Mnemonic (uppercase alpha, numeric or '.') - Type MNE. (Optional input. Default     values: Outward Payments - Debit A/C Customer. Inward Payments - Credit A/C     Customer.)
For Incoming payment orders, if the Credit Account is a Nostro Account, or a Profit and Loss Category Code or an Internal Account; then either this     field or the Profit Center Department field will become mandatory input if     the commission or charge code is not "WAIVE"
For Outgoing payment orders, if the Debit Account is a Nostro Account, or a Profit and Loss Category Code or an Internal Account then either this     field or the Profit Center Department field will become mandatory input if     the commission or charge code is not "WAIVE"
The fields, PROFIT.CENTRE.CUST and PROFIT.CENTRE.DEPT, are mutually exclusive. */
		PROFIT_CENTRE_CUST -> ST_Customer:CUSTOMER
			@i18n:Label (en="Profit Centre Cust")
			@i18n:Tooltip (en="Customer to whom the PL entries relate")
			@t24:i (align=R, inputBehaviour=F, maxLength=10, sysNumber=55.0, core=true, businessType=CUS, t24Name=PROFIT.CENTRE.CUST)
		/* Specifies the Account Officer or Department Code identification for all Profit and Loss entries which are generated by Funds Transfer in relation to the transaction being processed (Commission entries, Charge entries, etc).
The data contained in this field will be used within M.I.S. (Management Information System) analysis and reporting both at the Customer and product level.
Validation Rules

1-4 Numeric character Account Officer or Department Code as defined in the Account Officer/Department table. (Optional Input. Default value - Outward     Telex with Nostro Account for Debit Account - Account officer of Debit     Account customer. Other transfers - no default.
For Incoming payment orders, if the Credit Account is a Nostro Account, or a Profit and Loss Category Code or an Internal Account; then either this     field or the Profit Centre Customer field will become mandatory input if the     Commission or Charge code is not WAIVE
For Outgoing payment orders, if the Debit Account is a Nostro Account, or a Profit and Loss Category Code or an Internal Account then either this     field or the Profit Centre Customer field will become mandatory input if the     Commission or Charge code is not WAIVE
The fields, PROFIT.CENTRE.CUST and PROFIT.CENTRE.DEPT, are mutually exclusive.
For Outward Telexes, if the Debit Account is a Nostro Account, this field will be set by default to the Account officer from the customer record for     the Debit account.
Input in this field will be checked against the DEPT.ACCT.OFFICER table to ensure the validity of the code. Any code not existing on this table will be     rejected. */
		PROFIT_CENTRE_DEPT -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Profit Centre Dept")
			@i18n:Tooltip (en="Account officer or dept code for P& L entries")
			@t24:i (align=R, inputBehaviour=F, maxLength=4, sysNumber=56.0, core=true, businessType=DAO, t24Name=PROFIT.CENTRE.DEPT)
		/* Specifies whether all output produced by certain Funds Transfer transactions is to be returned to the Originating Department which initiated the transaction or whether it should be sent directly to the relevant Customer or Receiver of the message.
This field is intended for future use and input in this field will have no effect.
Validation Rules
Y or N(o). - See Details.  (Optional input.  Default value is N(o) i.e. do not return to the Department). */
		RETURN_TO_DEPT : FT_Contract:FUNDS_TRANSFER__RETURN_TO_DEPT
			@i18n:Label (en="Return to Dept")
			@i18n:Tooltip (en="Returning of output to the originating department")
			@t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=57.0, core=true, t24Name=RETURN.TO.DEPT)
		/* Specifies whether the Delivery Application is to give priority to this transaction.
If this priority flag is set to Priority, all messages to be produced for this transaction will jump the delivery queue ahead of the messages from other transactions where no delivery priority has been requested.
The setting of this flag will indicate the urgency of messages related to this transaction, to Delivery.
Input is this field does not have any effect on the priority of the delivery message, but is intended for future use.
Validation Rules
P - Priority is requested for Delivery of messages related to the transaction being processed. or  blank - Normal priority.  (Optional input.  Default value is blank.) */
		PRIORITY_TXN : FT_Contract:FUNDS_TRANSFER__PRIORITY_TXN
			@i18n:Label (en="Priority Txn")
			@i18n:Tooltip (en="Delivery Application is to give priority ")
			@t24:i (align=L, inputBehaviour=F, maxLength=1, sysNumber=58.0, core=true, t24Name=PRIORITY.TXN)
		BK_TO_BK_INFO -> byValue FT_Contract:FUNDS_TRANSFER__BK_TO_BK_INFO *
		IN_BK_TO_BK -> byValue FT_Contract:FUNDS_TRANSFER__IN_BK_TO_BK *
		/* Specifies the date, for an Inward Payment or an account transfer, when the funds applied to the Credit Account will be available to the Customer i.e. when the cleared Account Balance will be updated.
Validation Rules

Up to 9 Date characters (Standard Date Format in range 1950 - 2049) - Type D. (Optional input for Inward         Transaction Types; otherwise not allowed. Default value         is the Credit Value Date when the date is beyond the         processing date, else it is the Processing Date.)

Input only allowed for Inward transactions and  Account Transfer (AC) type transactions.

Input is not allowed when the Credit Account is an Internal Account or a Profit and Loss Category Code.

The date input cannot be less than the Processing Date.

The date input must not be greater than the maximum forward value date defined in the Dates file. */
		EXPOSURE_DATE : T24BusinessTypes:D
			@i18n:Label (en="Exposure Date")
			@i18n:Tooltip (en="Indicates exposure date")
			@t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=61.0, core=true, t24Name=EXPOSURE.DATE)
		/* Specifies whether the outgoing US. Dollar payment is to be made in Federal Funds.  This field is not used at present.
This field is not used at present.   The interpretation of the values is:
Y    U.S. Dollar payment is to be in "FED" i.e. Federal Funds.
Nil  U.S. Dollar payment is not to be in Federal Funds.
Validation Rules
The following values will be accepted: Y = Payment has to be done in Federal Funds   Nil =  Payment must not be done in Federal Funds.  Optional input for Transaction Type OT,  otherwise not allowed. Default value is 'Nil' in which case the System will display the literal 'NO'.
Input in this field will only be allowed when the credit Currency is USD. */
		FED_FUNDS : FT_Contract:FUNDS_TRANSFER__FED_FUNDS
			@i18n:Label (en="Fed Funds")
			@t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=62.0, core=true, t24Name=FED.FUNDS)
		/* Field reserved for future use. */
		POSITION_TYPE -> RE_Config:FX_POS_TYPE
			@i18n:Label (en="Position Type")
			@i18n:Tooltip (en="Position Type")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=63.0, core=true, businessType=SSS, t24Name=POSITION.TYPE)
		/* Field reserved for future use. */
		NO_OF_BATCH_ITEMS : mml:Integer
			@i18n:Label (en="No. of Batch Items")
			@t24:i (align=R, inputBehaviour=N, maxLength=2, sysNumber=64.0, core=true, t24Name=NO.OF.BATCH.ITEMS)
		FREE_TEXT_MSGTO -> byValue FT_Contract:FUNDS_TRANSFER__FREE_TEXT_MSGTO *
		MESSAGE -> byValue FT_Contract:FUNDS_TRANSFER__MESSAGE *
		TAX_TYPE -> byValue FT_Contract:FUNDS_TRANSFER__TAX_TYPE *
		/* Identifies the Currency and final amount debited to the Debit Account number on this transaction.
The Amount Debited will be determined as:
1. When the Credit Amount field has been input, the Amount Debited will be the Credit Amount converted, if necessary, into the            debit Currency.  If a charges account number was specified on            the Funds Transfer transaction the Amount Debited will exclude            any commission, charges and tax.  If the charges account            number is Null and the Commission or Charge codes specify Debit            plus charges, the total of all commission, charges and tax will            be added to the converted Credit Amount to determine the Amount            Debited.  In all other cases, the credit amount, converted if            necessary into the debit Currency, will be the Amount Debited.
2. When the field Debit Amount has been input, the Amount Debited will be the same amount in the debit Currency unless the            charges account number was null and the commission or charge            codes specify Debit plus charges.  In this case, the total of            all commission, charges and tax will be added to the Debit            Amount to determine the Amount debited.
Validation Rules
(Internal field). */
		AMOUNT_DEBITED : T24BusinessTypes:A
			@i18n:Label (en="Amount Debited")
			@t24:i (align=L, inputBehaviour=N, maxLength=22, sysNumber=70.0, core=true, t24Name=AMOUNT.DEBITED, typeModifiers="C")
		/* Identifies the Currency and final Amount Credited to the Credit Account number on this transaction.
The Amount Credited will be determined as:
1. When the Credit Amount field has been input, the Amount Credited will be the same amount in the credit Currency unless            the charges account number was Null and the Commission or            Charge codes specify Credit Less Charges.  In this case the            total of all commission, charges and taxes will be deducted            from the Credit Amount to determine the Amount credited.
2. When the Debit Amount field has been input, the Amount Credited will be the Debit Amount converted, if necessary, into            the credit Currency.  If the Charges Account number was Null            and the Commission or Charges codes specify Credit Less            Charges, the total of all the commission, charges and taxes            will be deducted from the converted Debit Amount to determine            the Amount Credited.
Validation Rules
(Internal field.) */
		AMOUNT_CREDITED : T24BusinessTypes:A
			@i18n:Label (en="Amount Credited")
			@t24:i (align=L, inputBehaviour=N, maxLength=22, sysNumber=71.0, core=true, t24Name=AMOUNT.CREDITED, typeModifiers="C")
		/* Identifies the total charges taken in the Currency of the Account bearing the charges. The Total Charge Amount will be the total of the following fields:
- Commission Amount - Charge Amount - Tax Amount
The amount displayed in this field will correspond to the total of the multivalue fields:
47.1 COMMISSION.AMT 50.1 CHARGE.AMT 69.1 TAX.AMT
Validation Rules

(Internal field) */
		TOTAL_CHARGE_AMT : T24BusinessTypes:A
			@i18n:Label (en="Total Charges")
			@i18n:Tooltip (en="Specifies the total charges")
			@t24:i (align=L, inputBehaviour=N, maxLength=22, sysNumber=72.0, core=true, t24Name=TOTAL.CHARGE.AMT, typeModifiers="C")
		/* Defines the total amount of tax due in the currency of the TOTAL.CHARGE.AMT. i.e. in the Currency of the CHARGE ACCOUNT.
Defines the total amount of tax due in the currency of the TOTAL.CHARGE.AMT i.e. the total of the tax amount(s) displayed in multivalue field TAX.AMT.
Positions are not affected by tax amounts, it is therefore necessary to be aware of the total amount of tax which is due on a contract in order to correctly update the position of the tax currency.
Validation Rules
(Internal field) */
		TOTAL_TAX_AMOUNT : T24BusinessTypes:A
			@i18n:Label (en="Total Tax Amount")
			@t24:i (align=L, inputBehaviour=N, maxLength=22, sysNumber=73.0, core=true, t24Name=TOTAL.TAX.AMOUNT, typeModifiers="C")
		/* Identifies the final exchange rate applied to this transaction. This Rate will be derived from the addition of the Treasury Rate and the Customer Spread.
In case the Treasury Rate and Customer Rate is null  then allows to input exchange rate in Customer Rate.
If Customer rate is entered, then Customer spread will be calculated and defaulted with the difference between Treasury rate and Customer Rate.
Validation Rules

1-12 type R (Standard Rate Format - up to 8 integer and 6 decimal) characters plus a decimal point or 1-15 type R (Up to 8 integer and 9     decimal) characters plus a decimal point when EXTENDED.PREC in SPF is set to     Y. (Optional input. Default as defined in Details.)
Input is not allowed when the Debit Currency and the Credit Currency are the same
Input is not allowed when Treasury rate or Customer spread is entered. */
		CUSTOMER_RATE : T24BusinessTypes:R
			@i18n:Label (en="Customer Rate")
			@t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=74.0, core=true, t24Name=CUSTOMER.RATE, isValidateOnChange=true)
		IN_REC_CORR_BK -> byValue FT_Contract:FUNDS_TRANSFER__IN_REC_CORR_BK *
		/* Identifies the incoming SWIFT payment received direct from Delivery, payments generated by standing orders, and local clearing payments.
For incoming SWIFT payments received direct from Delivery, this field will contain the type of SWIFT message received (e.g. MT100, MT200, MT202). For payments coming from standing orders, the system will display STO-T-A-N where  'T' represents the Standing Order Tupe, 'A' represents the Account on which the Standing Order was defined and 'N' represents the number of the standing order on the account.
For incoming local clearing payments this field will contain MTnnnn-LCL, where nnnn is the message identifier if the message is received through the delivery system, or XXXnnn-LCL where XXX is the tape identifier and nnn the transaction code of the message if generated by a tape.
Validation Rules
(Internal field). */
		INWARD_PAY_TYPE : T24BusinessTypes:A
			@i18n:Label (en="IN Payment Type")
			@i18n:Tooltip (en="Incoming SWIFT payment received ")
			@t24:i (align=L, inputBehaviour=I, maxLength=55, sysNumber=76.0, core=true, t24Name=INWARD.PAY.TYPE)
		IN_SEND_CORR_BK -> byValue FT_Contract:FUNDS_TRANSFER__IN_SEND_CORR_BK *
		/* Identifies the bank (customer) from whom an incoming SWIFT payment message (e.g. MT200) was received.
The bank is displayed in the heading (line 3) when processing inward SWIFT payments received direct from Delivery.
Validation Rules
(Internal field) */
		TELEX_FROM_CUST : T24BusinessTypes:A
			@i18n:Label (en="Sender Bank")
			@i18n:Tooltip (en="Bank from which incoming SWIFT message received")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=78.0, core=true, t24Name=TELEX.FROM.CUST)
		/* Identifies the reference number allocated by Delivery for incoming SWIFT payments received direct from Delivery.
This will enable enquiries to be made on the original SWIFT message received.
Validation Rules
(Internal field) */
		DELIVERY_INREF : T24BusinessTypes:A
			@i18n:Label (en="Inward Delivery Ref")
			@i18n:Tooltip (en="Reference number allocated by Delivery ")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=79.0, core=true, t24Name=DELIVERY.INREF)
		DELIVERY_OUTREF -> byValue FT_Contract:FUNDS_TRANSFER__DELIVERY_OUTREF *
		/* Identifies the Company Code of the Credit accounting entry.
This will contain the company code of the credit account number, or in the case of P8L credit entries, the company code of the Profit and Loss category being used.
Validation Rules
(Internal field) */
		CREDIT_COMP_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en="Credit Comp Code")
			@t24:i (align=L, inputBehaviour=N, maxLength=9, sysNumber=81.0, core=true, businessType=A, t24Name=CREDIT.COMP.CODE, mask="##-###-####")
		/* Identifies the Company Code of the Debit accounting entry.
This will be the same Company Code as the Company of the User who created the transaction in all instances EXCEPT when the Debit Account number field contains a Nostro or a Vostro Account which is maintained in a different company.  In this latter case, the System will automatically generate the inter-company accounting entries to keep the books of both companies in balance.  This facility has been produced to avoid the need to generate supplementary manual accounting entries in an environment where only the main branch in any specific country maintains the Nostro and Vostro account relationships.
Validation Rules
(Internal field). */
		DEBIT_COMP_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en="Debit Comp Code")
			@t24:i (align=L, inputBehaviour=N, maxLength=9, sysNumber=82.0, core=true, businessType=A, t24Name=DEBIT.COMP.CODE, mask="##-###-####")
		/* Identifies the internal Status of the transaction within Funds Transfer.
The following Status codes exist:
IFWD     Transaction is in an Unauthorised Status with a forward processing date.
AFWD     Transaction is in an Authorised Status with a forward processing date.
INORATE  Transaction is in an Unauthorised Status and still awaiting a rate (e.g. the exchange rates have not yet                   been fixed for the day or have been blocked by dealers).
ANORATE  Transaction is in an Authorised Status but still awaiting a rate (e.g. the exchange rates have not yet                   been fixed for the day or have been blocked by Dealers).
The Exception display Function will display the appropriate Funds Transfer Status on the Exception screen to allow an easy identification of the Exception related to the transaction.
To reset the status of transactions with a status of IFWD and AFWD, a batch program FT.DATES should be run each morning to automatically process all transactions with this status where the processing date is now before or equal to todays date.
To reset the status of transactions with a status of INORATE and ANORATE, a batch program FT.RATES should be run whenever the rates have been fixed or when suspended rates have now been established to automatically process all transactions with this status.
Validation Rules
(Internal field). */
		STATUS : T24BusinessTypes:A
			@i18n:Label (en=Status)
			@t24:i (align=L, inputBehaviour=N, maxLength=7, sysNumber=83.0, core=true, t24Name=STATUS)
		/* Indicates whether Delivery can be called to execute the telex payment even though a Rate was not available.
The content of this field can be:
D - Delivery of a telex payment has to be effected even though the         exchange rate is not available.
S - Delivery of a telex payment has been effected even though the         exchange rate was not available.
This is only applicable for outgoing transactions where charge/commission type is equal to 'D' or 'W' and where the Status field has been set to INORATE or ANORATE.
Validation Rules
(Internal field). */
		DELIVERY_MKR : T24BusinessTypes:A
			@i18n:Label (en="Delivery Marker")
			@i18n:Tooltip (en="Delivery called to execute the telex payment")
			@t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=84.0, core=true, t24Name=DELIVERY.MKR)
		ORD_CUST_CODE : T24BusinessTypes:SW
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=85.0, core=true, t24Name=ORD.CUST.CODE)
		/* //FW is moved automatically to this field for Federal Funds payments when an account with the bank has been input.  This is only applicable for USD telex payments to the United States when Federal Funds has been input as Y.
Validation Rules
(Internal field). */
		ACCT_WITH_BK_ACNO : T24BusinessTypes:A
			@i18n:Label (en="Account with Bank")
			@i18n:Tooltip (en="Applicable for USD telex payments ")
			@t24:i (align=L, inputBehaviour=N, maxLength=34, sysNumber=86.0, core=true, t24Name=ACCT.WITH.BK.ACNO)
		/* Defines the local Currency equivalent of the AMOUNT.DEBITED.
There are two methods to calculate the local Currency equivalent : STANDARD and MIDDLE. Which method is used depend on the field MKT.EXCH.METHOD in the FT.APPL.DEFAULT file.
1. MKT.EXCH.METHOD is STANDARD:
When the Funds Transfer transaction involves 2 foreign currencies (i.e. neither the debit currency nor the credit currency is equal to the local currency) and the currency of the AMOUNT. DEBITED is the BASE.CURRENCY then the Middle Rate is used for the conversion, otherwise the TREASURY.RATE is used. When, on the contrary, either the debit currency or the credit currency is equal to local currency and the currency of the AMOUNT.DEBITED is the local Currency then the LOC.AMT.DEBITED is the same amount.
The AMOUNT.DEBITED may include the TOTAL.CHARGE.AMT if debit plus charges is used. In this case only the transfer amount will be converted as above, and the LOCAL.CHARGE.AMT will be then be added to the result to give the LOC.AMT.DEBITED.
The following example (including 2 foreign currencies) will clarify the conversion of foreign currency amounts into their local currency equivalent:
Let us suppose an outgoing transfer by telex where the customer asks to transfer the equivalent of CHF2000 in French francs with the following exchange rates:
-    Cross Rate Treasury=4,0943            -    Cross Rate Customer=4,0533            -    Mid Rate GBP/CHF=2,44            -    Treasury Rate GBP/FRF=9,99
Field Name         Value
DEBIT.CURRENCY     CHF DEBIT.AMOUNT       2,000.00 CREDIT.CURRENCY    FRF CHARGES.ACCT.NO    3336  CUR/ACC CHF AMOUNT.DEBITED     CHF 2,000.00 AMOUNT.CREDITED    FRF 8,106.56 TOTAL.CHARGE.AMT   CHF    72.06 TOTAL.TAX.AMOUNT   CHF     7.66 LOC.AMT.DEBITED    (GBP) 819.67 LOC.AMT.CREDITED   (GBP) 811.47 LOC.TOT.TAX.AMT    (GBP)   3.14 LOCAL.CHARGE.AMT   (GBP)  29.54 LOC.POS.CHGS.AMT   (GBP)  29.54 MKTG.EXCH.PROFIT           8.20
It can be seen that:
1) The AMOUNT.DEBITED (BASE.CURRENCY) has been converted at the middle rate of 2,44.
2) The AMOUNT.CREDITED (non base currency) has been converted at the treasury rate of 9,99.
3) The TOTAL.CHARGE.AMT has been converted at the middle rate of 2,44.
4) The TOTAL.TAX.AMOUNT has been converted at the middle rate of 2,44.
5) The MKTG.EXCH.PROFIT, when charges and commissions are booked in a separate entry, is derived from the difference between the           LOC.AMT.DEBITED and the LOC.AMT.CREDITED.
2. MKT.EXCH.METHOD is MIDDLE:
Middle rate is always used for the conversion.
Validation Rules
(Internal field) */
		LOC_AMT_DEBITED : T24BusinessTypes:AMT
			@i18n:Label (en="Amt Debited Local")
			@i18n:Tooltip (en="Local Currency equivalent of the AMOUNT.DEBITED")
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=87.0, core=true, t24Name=LOC.AMT.DEBITED, typeModifiers="USD")
		/* Defines the local Currency equivalent of the AMOUNT.CREDITED.
There are two methods to calculate the local Currency equivalent : STANDARD and MIDDLE. Which method is used depend on the field MKT.EXCH.METHOD in the FT.APPL.DEFAULT file.

1. MKT.EXCH.METHOD is STANDARD:
When the Funds Transfer transaction involves 2 foreign currencies (i.e. neither the debit currency nor the credit currency is equal to the local currency) and the currency of the AMOUNT. CREDITED is the BASE.CURRENCY then the Middle Rate is used for the conversion, otherwise the TREASURY.RATE is used. When, on the contrary, either the debit currency or the credit currency is equal to local currency and the currency of the AMOUNT.CREDITED is the local Currency then the LOC.AMT.CREDITED is the same amount.
The AMOUNT.CREDITED may include the TOTAL.CHARGE.AMT if credit less charges is used.  In this case only the transfer amount will be converted as above, and the LOCAL.CHARGE.AMT will be then be subtracted from the result to give the LOC.AMT.CREDITED.
The following example (including 2 foreign currencies) will clarify the conversion of foreign currency amounts into their local currency equivalent:
Let us suppose an outgoing transfer by telex where the customer asks to transfer the equivalent of CHF2000 in French francs with the following exchange rates:
-    Cross Rate Treasury=4,0943            -    Cross Rate Customer=4,0533            -    Mid Rate GBP/CHF=2,44            -    Treasury Rate GBP/FRF=9,99
Field Name         Value
DEBIT.CURRENCY     CHF DEBIT.AMOUNT       2,000.00 CREDIT.CURRENCY    FRF CHARGES.ACCT.NO    3336  CUR/ACC CHF AMOUNT.DEBITED     CHF 2,000.00 AMOUNT.CREDITED    FRF 8,106.56 TOTAL.CHARGE.AMT   CHF    72.06 TOTAL.TAX.AMOUNT   CHF     7.66 LOC.AMT.DEBITED    (GBP) 819.67 LOC.AMT.CREDITED   (GBP) 811.47 LOC.TOT.TAX.AMT    (GBP)   3.14 LOCAL.CHARGE.AMT   (GBP)  29.54 LOC.POS.CHGS.AMT   (GBP)  29.54 MKTG.EXCH.PROFIT           8.20
It can be seen that:
1) The AMOUNT.DEBITED (BASE.CURRENCY) has been converted at the middle rate of 2,44.
2) The AMOUNT.CREDITED (non base currency) has been converted at the treasury rate of 9,99.
3) The TOTAL.CHARGE.AMT has been converted at the middle rate of 2,44.
4) The TOTAL.TAX.AMOUNT has been converted at the middle rate of 2,44.
5) The MKTG.EXCH.PROFIT, when charges and commissions are booked in a separate entry, is derived from the difference between the           LOC.AMT.DEBITED and the LOC.AMT.CREDITED.
2. MKT.EXCH.METHOD is MIDDLE :
Middle rate is always used for the conversion.
Validation Rules
(Internal field) */
		LOC_AMT_CREDITED : T24BusinessTypes:AMT
			@i18n:Label (en="Amt Credited Local")
			@i18n:Tooltip (en="Local Currency equivalent of the AMOUNT.CREDITED")
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=88.0, core=true, t24Name=LOC.AMT.CREDITED, typeModifiers="USD")
		/* Defines the local Currency equivalent of the TOTAL.TAX.AMOUNT.
If the TOTAL.TAX.AMOUNT is a foreign currency amount then it will be converted at the CURRENCY table Middle Rate to provide a local currency equivalent.
Positions are not affected by tax amounts, it is therefore necessary to be aware of the total amount of tax which is due on a contract in order to correctly update the position of the tax currency.
Validation Rules
(Internal field) */
		LOC_TOT_TAX_AMT : T24BusinessTypes:AMT
			@i18n:Label (en="Total Tax Amt Local")
			@i18n:Tooltip (en="Total tax amount in local currency equivalent")
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=89.0, core=true, t24Name=LOC.TOT.TAX.AMT, typeModifiers="USD")
		/* Defines the local Currency equivalent of the TOTAL.CHARGE.AMT.
The TOTAL.CHARGE.AMT (when charged in foreign currency) will always be converted at the CURRENCY table middle rate.
The following example (including 2 foreign currencies) will clarify the conversion of foreign currency amounts into their local currency equivalent:
Let us suppose an outgoing transfer by telex where the customer asks to transfer the equivalent of CHF2000 in French francs with the following exchange rates:
-    Cross Rate Treasury=4,0943            -    Cross Rate Customer=4,0533            -    Mid Rate GBP/CHF=2,44            -    Treasury Rate GBP/FRF=9,99
Field Name         Value
DEBIT.CURRENCY     CHF DEBIT.AMOUNT       2,000.00 CREDIT.CURRENCY    FRF CHARGES.ACCT.NO    3336  CUR/ACC CHF AMOUNT.DEBITED     CHF 2,000.00 AMOUNT.CREDITED    FRF 8,106.56 TOTAL.CHARGE.AMT   CHF    72.06 TOTAL.TAX.AMOUNT   CHF     7.66 LOC.AMT.DEBITED    (GBP) 819.67 LOC.AMT.CREDITED   (GBP) 811.47 LOC.TOT.TAX.AMT    (GBP)   3.14 LOCAL.CHARGE.AMT   (GBP)  29.54 LOC.POS.CHGS.AMT   (GBP)  29.54 MKTG.EXCH.PROFIT           8.20
It can be seen that:
1) The AMOUNT.DEBITED (BASE.CURRENCY) has been converted at the middle rate of 2,44.
2) The AMOUNT.CREDITED (non base currency) has been converted at the treasury rate of 9,99.
3) The TOTAL.CHARGE.AMT has been converted at the middle rate of 2,44.
4) The TOTAL.TAX.AMOUNT has been converted at the middle rate of 2,44.
5) The MKTG.EXCH.PROFIT, when charges and commissions are booked in a separate entry, is derived from the difference between the           LOC.AMT.DEBITED and the LOC.AMT.CREDITED.
Validation Rules
(Internal field) */
		LOCAL_CHARGE_AMT : T24BusinessTypes:AMT
			@i18n:Label (en="Charge Amt Local")
			@i18n:Tooltip (en="Charges amount in local currency equivalent")
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=90.0, core=true, t24Name=LOCAL.CHARGE.AMT, typeModifiers="USD")
		/* Defines the local Currency equivalent of the TOTAL.CHARGE.AMT in respect of updating positions.
Foreign currency charge amounts will always update the Asset and Liability Exchange position at the middle rate.  In these present conditions, the value of this field must always be equal to the value of the field 'LOCAL.CHARGE.AMT'.
The following example (including 2 foreign currencies) will clarify the conversion of foreign currency amounts into their local currency equivalent:
Let us suppose an outgoing transfer by telex where the customer asks to transfer the equivalent of CHF2000 in French francs with the following exchange rates:
-    Cross Rate Treasury=4,0943            -    Cross Rate Customer=4,0533            -    Mid Rate GBP/CHF=2,44            -    Treasury Rate GBP/FRF=9,99
Field Name         Value
DEBIT.CURRENCY     CHF DEBIT.AMOUNT       2,000.00 CREDIT.CURRENCY    FRF CHARGES.ACCT.NO    3336  CUR/ACC CHF AMOUNT.DEBITED     CHF 2,000.00 AMOUNT.CREDITED    FRF 8,106.56 TOTAL.CHARGE.AMT   CHF    72.06 TOTAL.TAX.AMOUNT   CHF     7.66 LOC.AMT.DEBITED    (GBP) 819.67 LOC.AMT.CREDITED   (GBP) 811.47 LOC.TOT.TAX.AMT    (GBP)   3.14 LOCAL.CHARGE.AMT   (GBP)  29.54 LOC.POS.CHGS.AMT   (GBP)  29.54 MKTG.EXCH.PROFIT           8.20
It can be seen that:
1) The AMOUNT.DEBITED (BASE.CURRENCY) has been converted at the middle rate of 2,44.
2) The AMOUNT.CREDITED (non base currency) has been converted at the treasury rate of 9,99.
3) The TOTAL.CHARGE.AMT has been converted at the middle rate of 2,44.
4) The TOTAL.TAX.AMOUNT has been converted at the middle rate of 2,44.
5) The MKTG.EXCH.PROFIT, when charges and commissions are booked in a separate entry, is derived from the difference between the           LOC.AMT.DEBITED and the LOC.AMT.CREDITED.
Validation Rules
(Internal field) */
		LOC_POS_CHGS_AMT : T24BusinessTypes:AMT
			@i18n:Label (en="Amt Debited Local")
			@i18n:Tooltip (en="Total charges amount in local currency equivalent")
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=91.0, core=true, t24Name=LOC.POS.CHGS.AMT, typeModifiers="USD")
		/* Identifies the local Currency exchange profit amount taken on the Funds Transfer transaction which has been allocated to the Marketing Unit.
The method of deriving this value is governed by the setting of MKT.EXCH.METHOD in FT.APPL.DEFAULT. This may be either STANDARD or MIDDLE.

METHOD = STANDARD The allocation of exchange earnings is made automatically between Treasury and Marketing units at the time of the transaction. Any profit relating to the Marketing area (i.e. Customer spread) is credited to the Profit and Loss (see later for calculation of category code) immediately and the transaction is effectively booked at Treasury Buy/Sell rates.  All exchange profit on revaluation will therefore accrue to the Treasury area. More information, if needed, can be found in the Currency table.
The Marketing exchange profit will only be applicable on the TRANSFER amount and when the Credit Currency differs to the Debit Currency. Foreign currency charge amounts will always be converted at the middle rate and therefore will not produce Marketing Exchange profit.
The Profit and Loss entry will be booked with the transaction code 200 if it is a credit or 201 if it is a debit.
Also note that when the charges and commissions are booked in a separate entry, the Marketing Exchange Profit, MKTG.EXCH.PROFIT, is derived directly from the difference between the LOC.AMT.DEBITED and the LOC.AMT.CREDITED

METHOD = MIDDLE The TRANSFER amount is calculated according to the DEAL.MARKET where the transfer is accross currencies. Local equivalents of the debit and credit amounts in the respective currencies are calculated using the rate applicable to the respective DR and CR currency markets. The difference in local equivalents (LOC.AMT.DEBITED and LOC.AMT.CREDITED) is booked to the marketing exchange profit P&L immediately.

ALLOCATION of P&L CATEGORY code The P&L code used for booking is derived as follows:       - Check ACCOUNT.CLASS records FTMKTEXCHxx where xx is DR or CR         according to whether a profit or loss is calculated. The defined         CATEGORY will be used if the record is present.       - Check ACCOUNT.CLASS records MKTEXCHxx where xx is DR or CR         according to whether a profit or loss is calculated. The defined         CATEGORY will be used if the record is present.       - Where no category has been derived 53006 will be used.
Validation Rules
Internal field. */
		MKTG_EXCH_PROFIT : T24BusinessTypes:AMT
			@i18n:Label (en="Mkt Exch Profit")
			@i18n:Tooltip (en="Local Currency exchange profit amount")
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=92.0, core=true, t24Name=MKTG.EXCH.PROFIT, typeModifiers="USD")
		/* Identifies directly if the rate was input by the User or defaulted by the System.
Either Treasury Rate or Customer Rate is given during Input, then this field is updated as "Yes" & incase of forward FT Contracts (with processing date as Future date), the rates given in the FT is retained irrespective of the Forward recalculation flag set at the FT.TXN.TYPES.
If Y is specified, it denotes that a rate was input by the User and, therefore, a negotiated reference number may be entered.
Validation Rules

(Internal field) */
		RATE_INPUT_MKR : T24BusinessTypes:A
			@i18n:Label (en="Rate Input Marker")
			@i18n:Tooltip (en="rate input by the User or defaulted by the System")
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=93.0, core=true, t24Name=RATE.INPUT.MKR)
		/* Identifies the Customer or Group Number for any special condition that have been applied in respect of Charges or Commisions within this Funds Transfer Transaction.
When the primary customer of the FT transaction is the subject of any special conditions (either individually or at the group level) then this condition is indicated by the associated condition key being entered in this field.

Example:
Customer Condition - shown as C-999999 where 999999 is the customer number.
Group Condition    - shown as 99 where 99 is the Group number defined in the FD.GROUP.CONDITION file.
Validation Rules
(Internal field)  Multivalue field. */
		CUST_GROUP_LEVEL : T24BusinessTypes:A
			@i18n:Label (en="Customer Group Level")
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=94.0, core=true, t24Name=CUST.GROUP.LEVEL)
		/* Populates the Debit account's customer Number here.
When the Debit account is of Internal or  PL or Nostro type of Account, then this field is updated as Null.
Validation Rules

Internal field -Update by system */
		DEBIT_CUSTOMER -> ST_Customer:CUSTOMER
			@i18n:Label (en="Debit Customer")
			@t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=95.0, core=true, businessType=CUS, t24Name=DEBIT.CUSTOMER)
		/* Populates the Credit account's customer Number here.
When the credit account is of Internal or PL or Nostro type of Account, then this field is updated as Null.
Validation Rules

Internal field -Update by system */
		CREDIT_CUSTOMER -> ST_Customer:CUSTOMER
			@i18n:Label (en="Credit Customer")
			@t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=96.0, core=true, businessType=CUS, t24Name=CREDIT.CUSTOMER)
		/* This field controls the generation of Payment message related to this FT Contract.
Applicable to all Txn.types other than "AC"/"DW". For "AC"/"DW" txn.types - No payment message can be generated hence defaulted to NULL.
For "BC" txn.type this field cannot be changed during input & generation of payment messages has to be controlled using the FT delivery routine attached in FT.BC.PARAMETER.
When FTTC-SEND.PAYMENT.Y.N is set to "YES" or Null, this field is defaulted to "YES" -otherwise updated as "NO" & no payment gets generated.
Validation Rules

A maximum of 2 characters may be entered- Valid values Y / NO.
Value defaulted from FT.TXN.TYPE.CONDITION-field SEND.PAYMENT.Y.N
No input & Default to Null for "AC" & "DW"   Txn.type.
Defaulted from FTTC & No change field for "BC" Txn.type */
		SEND_PAYMENT_Y_N : FT_Contract:FUNDS_TRANSFER__SEND_PAYMENT_Y_N
			@i18n:Label (en="Send Payment Y/N?")
			@i18n:Tooltip (en="controls the generation of Payment message ")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=97.0, core=true, t24Name=SEND.PAYMENT.Y.N)
		/* Validation Rules
A maximum of 2 characters may be entered.
The following values are permitted: Y NO */
		DR_ADVICE_REQD_Y_N : FT_Contract:FUNDS_TRANSFER__DR_ADVICE_REQD_Y_N
			@i18n:Label (en="Dr Advice Reqd Y/N?")
			@i18n:Tooltip (en="Whether debit advice required Y/N?")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=98.0, core=true, t24Name=DR.ADVICE.REQD.Y.N)
		/* Validation Rules
A maximum of 2 characters may be entered.
The following values are permitted: Y NO */
		CR_ADVICE_REQD_Y_N : FT_Contract:FUNDS_TRANSFER__CR_ADVICE_REQD_Y_N
			@i18n:Label (en="Cr Advice Reqd Y/N?")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=99.0, core=true, t24Name=CR.ADVICE.REQD.Y.N)
		/* Default deal market for determining the exchange rate.
Validation Rules
Must be empty if DEBIT and CREDIT currency are equal.
Defaulted from FT.TXN.TYPE.CONDITION record, field DEFAULT.DEAL.MKT.
Must exist on the file CURRENCY.MARKET. */
		DEAL_MARKET -> FIN_CurrencyConfig:CURRENCY_MARKET
			@i18n:Label (en="Deal Market")
			@i18n:Tooltip (en="Default deal market for exchange rate")
			@t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=100.0, core=true, t24Name=DEAL.MARKET)
		/* Identifies the customer, based on whose residence, destination country zone level charges as specified in FT.CHARGE.TYPE, are calculated .
Validation Rules
Optional input. Defaults to the credit customer, since these charges depend on the country of residence of the credit customer to whom funds are transferred for calculating Zone level charges.
If the defaulted customer in CHARGED.CUSTOMER is changed then the charges will be calculated based on the residence of the customer ID that was input and appropriate override will be raised for changing the default. */
		CHARGED_CUSTOMER -> ST_Customer:CUSTOMER
			@i18n:Label (en="Charged Customer")
			@i18n:Tooltip (en="Customer for calculation chgs based on residence")
			@t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=101.0, core=true, businessType=CUS, t24Name=CHARGED.CUSTOMER)
		IN_REASON_OVE -> byValue FT_Contract:FUNDS_TRANSFER__IN_REASON_OVE *
		/* Identifies the dealer desk position which needs to be updated by the deal being created.  The dealer desk code is held on the position record so that the exchange position can be displayed at dealer desk level.
Validation Rules
2 alphanumeric character dealer code in the range A-Z, a-z, plus 0-9.  Optional Input;  Default = '00'.
The code entered must appear on the DEALER.DESK table.
The field cannot be changed once the deal has been authorised. */
		DEALER_DESK -> ST_Config:DEALER_DESK
			@i18n:Label (en="Dealer Desk")
			@i18n:Tooltip (en="Specifies the Dealer Desk handling the transaction")
			@t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=103.0, core=true, businessType=A, t24Name=DEALER.DESK)
		/* For Funds Transfers where the processing date is set sometime in the future, it is possible to take the default TREASURY.RATE as at the PROCESSING.DATE rather than at deal input time. Where this field is set to YES, such processing will take place.
This field is a NOINPUT field and the contents of the field are taken from the FT.TXN.TYPE.CONDITION record for the transfer.
N.B. Where the user has entered a rate (i.e. the field RATE.INPUT.MKR has been set) the rate input by the user is retained.
Validation Rules
This is a NOINPUT field. */
		RECALC_FWD_RATE : mml:Integer
			@i18n:Label (en="Recalc Forward Rate")
			@i18n:Tooltip (en="Recalculation of forward treasury rate ")
			@t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=104.0, core=true, t24Name=RECALC.FWD.RATE)
		/* This field specifies whether or not a cheque is to be returned.
If this field is marked "Y" then the amount is debited to the return suspense account and the account against which it was originally drawn is noted but not debited.

Validation Rules


Only YES or NO values allowed
Only allows input if the transaction is an outward cheque transaction. */
		RETURN_CHEQUE : FT_Contract:FUNDS_TRANSFER__RETURN_CHEQUE
			@i18n:Label (en="Return Cheque")
			@i18n:Tooltip (en="Whether a cheque is to be returned or not")
			@t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=105.0, core=true, t24Name=RETURN.CHEQUE)
		/* If a cheque is returned, this field stores the number of the account the cheque was originally to be drawn from.
Validation Rules

Must be a key to a record on Account. */
		DRAWN_ACCOUNT -> ACM_AccountOpening:ACCOUNT
			@i18n:Label (en="Drawn Account")
			@i18n:Tooltip (en="Acct Number from which the cheque to be drawn from")
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=106.0, core=true, businessType=ACC, t24Name=DRAWN.ACCOUNT)
		/* Input the date that has to be used as ACCOUNTING.DATE in Statement entry.
Override message is given when the
Refer Post Closing section of User Guide for more details.
Validation Rules

Optional field
Input allowed only when the field ALLOW.POST.CLOSE is set as "Yes" for the given FT.Txn.Type. */
		ACCOUNTING_DATE : T24BusinessTypes:D
			@i18n:Label (en="Accounting Date")
			@i18n:Tooltip (en="ACCOUNTING.DATE in Statement entry")
			@t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=107.0, core=true, t24Name=ACCOUNTING.DATE)
		INSTRCTN_CODE -> byValue FT_Contract:FUNDS_TRANSFER__INSTRCTN_CODE *
		/* The customer to which an MT400 Advice of Payment will be sent

Validation Rules

Must be a valid Customer id

Must be a bank

Can only be entered when the system has been set up to process SWIFT message type MT400 Advice of Payment via the transaction type with application FT.TXN.TYPE.CONDITION. */
		COLL_REM_BK : T24BusinessTypes:CUST_BIC
			@i18n:Label (en="MT400 Sent To")
			@i18n:Tooltip (en="To which an MT400 Advice of Payment will be sent")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=109.0, core=true, t24Name=COLL.REM.BK, typeModifiers="SWBIC")
		/* Contains the expected record id which is created through this FT.
When "ER" or "EP" type of Funds transfer is created though this FT, the relevant expected record id is updated here for cross reference.
Validation Rules

No input field
Update by System. */
		EXPECTED_RECS_ID : T24BusinessTypes:A
			@i18n:Label (en="Expected Recs Id")
			@i18n:Tooltip (en="Expected record ID ")
			@t24:i (align=L, inputBehaviour=N, maxLength=16, sysNumber=110.0, core=true, t24Name=EXPECTED.RECS.ID)
		/* Identifies the total of any commission amounts that were entered in COMMISSION.AMT, and which are due to the receiving bank, in the currency of the beneficiary account. Wherever possible, the transaction customer rate will be used to calculate this amount otherwise the middle rate will always be applied.
Validation Rules



System field - no user input */
		TOT_REC_COMM : T24BusinessTypes:AMT
			@i18n:Label (en="Total Receiver Comm.")
			@i18n:Tooltip (en="Total commission due to receiving bank")
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=111.0, core=true, t24Name=TOT.REC.COMM)
		/* Defines the local Currency equivalent of the TOTAL.REC.COMM

The TOTAL.REC.COMM (when charged in foreign currency) will always be converted at the CURRENCY table middle rate.

Validation Rules */
		TOT_REC_COMM_LCL : T24BusinessTypes:AMT
			@i18n:Label (en="Total Receiver Comm. Local")
			@i18n:Tooltip (en="Total commission due to receiving bank ")
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=112.0, core=true, t24Name=TOT.REC.COMM.LCL, typeModifiers="USD")
		/* Identifies the total of any charge amounts that were entered in CHARGE.AMT, and which are due to the receiving bank, in the currency of the beneficiary account. Wherever possible, the transaction customer rate will be used to calculate this amount otherwise the middle rate will always be applied.
Validation Rules */
		TOT_REC_CHG : T24BusinessTypes:AMT
			@i18n:Label (en="Total Receiver Charge")
			@i18n:Tooltip (en="Total charges due to receiving bank")
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=113.0, core=true, t24Name=TOT.REC.CHG)
		/* Defines the local Currency equivalent of the TOTAL.REC.CHG

The TOTAL.REC.CHG (when charged in foreign currency) will always be converted at the CURRENCY table middle rate.
Validation Rules */
		TOT_REC_CHG_LCL : T24BusinessTypes:AMT
			@i18n:Label (en="Total Receiver Charge Local")
			@i18n:Tooltip (en="Total charges due to receiving bank ")
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=114.0, core=true, t24Name=TOT.REC.CHG.LCL, typeModifiers="USD")
		/* Specify the type of cheque used in the transaction.
Below mentioned Cheque type defaulting mechanism will be used  if the Cheque.Register in ACCOUNT.PARAMETER is set as "Yes". Otherwise it will default to NULL.
DEFAULTING MECHANISM
If the Cheque.Register is set as Yes,
If the transaction code used in DC/FT/TT, has cheque indicator as Yes in TRANSACTION file, then cheque.type will be defaulted as per the following:
1.If the Debit account has a record in CHEQUE.TYPE.ACCOUNT, that cheque.type will be defaulted.

2.If debit account has more than one record in CHEQUE.TYPE.ACCOUNT, then based on the range of cheque number issued for that account, appropriate cheque.type will be defaulted

3.If debit account has more than one record in CHEQUE.TYPE.ACCOUNT and both cheque type has same range of cheque number issued, then User has to enter the cheque.type

4.However user will not be able to enter a cheque.type, which is not available for the account in CHEQUE.TYPE.ACCOUNT.

5.If it does not satisfies above condition, then it will default to NULL.

If Cheque.Register set as NO or NULL then the cheque type will defaults to NULL.
Validation Rules

Optional field
Must be a valid record in CHEQUE.TYPE. */
		CHEQ_TYPE -> CHQ_Config:CHEQUE_TYPE
			@i18n:Label (en="Cheque Type")
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=115.0, core=true, businessType=SSS, t24Name=CHEQ.TYPE)
		RELATED_MSG -> byValue FT_Contract:FUNDS_TRANSFER__RELATED_MSG *
		IN_TIME_IND -> byValue FT_Contract:FUNDS_TRANSFER__IN_TIME_IND *
		SEND_TO_PARTY -> byValue FT_Contract:FUNDS_TRANSFER__SEND_TO_PARTY *
		/* When a FT which is moved to History after End of day is reversed then this field gets updated as "YES"
Once a FT record which is moved to History is reversed, Restore or Reversal of that FT is not allowed.
Validation Rules

No input field
Updated by system as "YES",when a History record is reversed */
		REVERSAL_MKR : T24BusinessTypes:A
			@i18n:Label (en="Reversal Marker")
			@i18n:Tooltip (en="Indicates the reversal of record moved to history")
			@t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=122.0, core=true, t24Name=REVERSAL.MKR)
		/* Related Reference No (Tag 21) in the Incoming swift messages gets populated here.
Validation Rules

No input field
Updated by system */
		RELATED_REF : T24BusinessTypes:A
			@i18n:Label (en="Related Reference")
			@i18n:Tooltip (en="Related Reference number (Tag 21) ")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=123.0, core=true, t24Name=RELATED.REF)
		IN_INSTR_CODE -> byValue FT_Contract:FUNDS_TRANSFER__IN_INSTR_CODE *
		IN_PROCESS_ERR -> byValue FT_Contract:FUNDS_TRANSFER__IN_PROCESS_ERR *
		IN_SWIFT_MSG -> byValue FT_Contract:FUNDS_TRANSFER__IN_SWIFT_MSG *
		/* Account Number of the Account with Bank can be specified here.
The Account Number inputted here along with the Account with Bank details as given in ACCT.WITH.BANK will be used in  tag 57 of Swift message.
Validation Rules

Optional input
Up to 34 characters (uppercase alpha or numeric) - type S.
Allowed only when ACCOUT.WITH.BANK is entered. */
		ACCT_WITH_BANK_ACC : T24BusinessTypes:A
			@i18n:Label (en="Account With Bank Acct (Tag 57)")
			@t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=127.0, core=true, t24Name=ACCT.WITH.BANK.ACC)
		/* Contains the Account Number of the Account with Bank as extracted from the delivery/local clearing message which generated the Funds Transfer.
When Inward swift message is received with Acct With Bank (Tag 57) alone with an Account no, then it is mapped to Credit.Acct.No when it is a valid T24 Account otherwise incoming detail is populated in Acct.With.Bk.Ac field.
Applicable for messages processed through OFS Globus Manager.
Incase incoming message has clearing code ( //xxxxx" ) in tag 57 then except clearing code other details will be populated.
Validation Rules

This is a NOINPUT field */
		IN_ACCT_BANK_ACC : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=128.0, core=true, t24Name=IN.ACCT.BANK.ACC)
		/* Account Number of the Receiver Correspondent Bank can be specified here.
The Account Number inputted here along with the Receiver Correspondent Bank details as given in REC.CORR.BANK field will be used in tag 54 of Swift message.
Validation Rules

Optional input
Up to 34 characters (uppercase alpha or numeric) - type S.
Allowed only when REC.CORR.BANK is entered. */
		REC_CORR_BANK_ACC : T24BusinessTypes:A
			@i18n:Label (en="Receiving Corr Bank Acct")
			@i18n:Tooltip (en="Specifies receiver correspondent bank account")
			@t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=129.0, core=true, t24Name=REC.CORR.BANK.ACC)
		/* Contains the Account Number of the Receiver Correspondent Bank as extracted from the delivery/local clearing message which generated the Funds Transfer.
Applicable for messages processed through OFS Globus Manager.
Incase incoming message has clearing code ( //xxxxx" ) in tag 54 then except clearing code other details will be populated.
Validation Rules

This is a NOINPUT field */
		IN_REC_CORR_ACC : T24BusinessTypes:A
			@i18n:Label (en="Receiver Corresp Account (IN)")
			@i18n:Tooltip (en="Account Number of the Receiver Correspondent Bank")
			@t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=130.0, core=true, t24Name=IN.REC.CORR.ACC)
		/* Account Number of the Intermediary Bank can be specified here.
The Account Number inputted here along with the Intermediary Bank details as given in INTERMED.BANK field will be used in  tag 56 of Swift message.
Validation Rules

Optional input
Up to 34 characters (uppercase alpha or numeric) - type S.
Allowed only when INTERMED.BANK is entered. */
		INTERMED_BANK_ACC : T24BusinessTypes:A
			@i18n:Label (en="Intermediary Bank Acct (Tag 56)")
			@t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=131.0, core=true, t24Name=INTERMED.BANK.ACC)
		/* Contains the Account Number of the Intermediary Bank as extracted from the delivery/local clearing message which generated the Funds Transfer.
Incoming message has Intermediary details (Tag 56) and it is a valid T24 Customer and the Customer of Credit.Acct.No is same as Intermediary Customer, then same is populated only in In.Intermed.Acc and In.Intermed.Bk. Otherwise Incoming Intermediary detail is populated in both Out & In Intermediary Bank fields. Applicable for messages processed through OFS Globus Manager.
Incase incoming message has clearing code ( //xxxxx" ) in tag 56 then except clearing code other details will be populated.
Validation Rules

This is a NOINPUT field */
		IN_INTERMED_ACC : T24BusinessTypes:A
			@i18n:Label (en="Intermed Bank Acc (IN)")
			@i18n:Tooltip (en="Account Number of the Intermediary Bank ")
			@t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=132.0, core=true, t24Name=IN.INTERMED.ACC)
		/* Instructed amount which is available in Tag 33B of incoming MT103 Swift message gets populated here.
Applicable for messages processed through OFS Globus Manager.
Validation Rules

Internal field */
		INSTRUCTED_AMT : T24BusinessTypes:A
			@i18n:Label (en="Instructed Amount")
			@i18n:Tooltip (en="Instructed amount which is available in Tag 33B ")
			@t24:i (align=L, inputBehaviour=I, maxLength=21, sysNumber=133.0, core=true, t24Name=INSTRUCTED.AMT)
		IN_INTERMED_BK -> byValue FT_Contract:FUNDS_TRANSFER__IN_INTERMED_BK *
		/* Exchange rate which is available in Tag 36 of incoming MT103 Swift message gets populated here.
Applicable for messages processed through OFS Globus Manager.
Validation Rules

Internal Field */
		IN_EXCH_RATE : T24BusinessTypes:A
			@i18n:Label (en="Exchange Rate (IN)")
			@i18n:Tooltip (en="Exchange rate which is available in Tag 36 ")
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=135.0, core=true, t24Name=IN.EXCH.RATE)
		/* To invoke Currency Fixing rates functionality this field can be used.
Value is defaulted from RATE.FIXING field in FT.APPL.DEFAULT. Defaulted values can be modified in FT from Yes to No but not Vice versa.
In CURRENCY application, when FIXING.DATE is less than the FT Processing date, then Funds transfer will be created based on the value in this field, which is explained below:-
Case 1: When Rate.Fixing is "No" and for override "RATE NOT FIXED, USE EXISTING RATE" response is given as "YES" then  system processes the Funds transfer contract using the existing exchange rate and all accounting entries and delivery messages get generated.. If "No" is given for the above override then FT record created with status as ANORATE and when FT.RATES run online,  for FT's which are in ANORATE status- accounting entries ,Position updates & Delivery messages are generated using exchange rate available at that time. (Existing Functionality)
Case 2: If Rate.Fixing field is set as "Yes" and the Fixing.date in Currency Application is less than FT processing date and  then funds transfer will be created with "ANORATE/INORATE" status (Based on FT record status) using the dealer desk as given in FT.APPL.DEFAULT. Once the Exchange rate is fixed for the day, then FT.RATES can be run online to create accounting entries and delivery messages which will use latest exchange rate and create entries with the dealer desk as given in FT. Also position entry which got created earlier using Dealer desk as given in FT.APPL.DEFAULT, gets reversed.
Case 3: If this flag is set as "Yes" and the Fixing.date in Currency application equal to processing date then funds transfer will be created with processing date as Next working date  with status as AFWD/IFWD (Based on FT record status)- No accounting entries, Position or delivery message gets generated. During next day EOD processing these AFWD contracts are processed as per Case 2.
Above processing is same for FT's which is created through STO application.
When this field is set as "YES" then FT's inputted via OFS will be processed as per CASE 2. Otherwise FT will be created using existing rates.
See FIXING.DATE in Currency application to know more about fixing rates functionality.
Validation Rules

Defaulted from RATE.FIXING field in FT.APPL.DEFAULT and if is Null then default is No
Defaulted Value can be changed from YES to NO- But not vice versa. */
		RATE_FIXING : FT_Contract:FUNDS_TRANSFER__RATE_FIXING
			@i18n:Label (en="Rate Fixing")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=136.0, core=true, t24Name=RATE.FIXING)
		/* Specify the cover method required for this Funds.Transfer contract.
Values in Cover method denotes following
COVER-DIRECT:
Detailed payment instruction is sent directly to another Institution via an MT103 and brief instructions sent to our correspondent via an MT202 for covering Payment Message.
COVER-NEAR: Payment Message (MT103) sent through several reimbursement institutions, using an account with institution and brief instructions to our Correspondent via an MT202.
SERIAL: Payment message (MT103) is sent to the next party in the transaction.
THIRD-INST: Payment Message (MT103) sent to party closest to the beneficiary, using a third reimbursement institution and instructions to our Correspondent via MT202.
Based on the cover method and Customer Number given in Ben.Customer or Ben.Bank, from AGENCY for the Currency and Application, values will be defaulted in bank fields as per following:-
COVER.METHOD is SERIAL then ACCT.WITH.BANK & INTERMED.BANK will be defaulted.
COVER.METHOD is COVER-DIRECT fields will be defaulted in RECEIVER.BANK,  REC.CORR.BANK, INTERMED.BANK.
COVER.METHOD is COVER-NEAR  fields will be defaulted in ACCT.WITH.BANK, RECEIVER.BANK,  REC.CORR.BANK,
For COVER.METHOD is THIRD-INST fields will be defaulted in RECEIVER.BANK, REC.CORR.BANK, INTERMED.BANK and error will be raised incase any one of the above Bank field is NULL.  Details given in REC.CORR.BANK will be mapped to tag 55 (Third Reimbursement Institution) and INTERMED.BANK to Tag 54 (Receiver Correspondent Bank) in Swift MT103 message.
If ACCT.WITH.BANK details given along with Cover.Method THRID.INST then it requires an override.
Validation Rules

Input allowed only for "OTxx" Txn.type with MESSAGE.TYPE as "103" in FT.TXN.TYPE.CONDITION.
Valid Values : COVER-DIRECT , COVER-NEAR, SERIAL, THIRD-INST. */
		COVER_METHOD : FT_Contract:FUNDS_TRANSFER__COVER_METHOD
			@i18n:Label (en="Cover Method")
			@t24:i (align=L, inputBehaviour=I, maxLength=15, sysNumber=137.0, core=true, t24Name=COVER.METHOD)
		IN_3RD_REIMB_BK -> byValue FT_Contract:FUNDS_TRANSFER__IN_3RD_REIMB_BK *
		/* Contains the Account Number of the 3rd Reimbursement Bank (Tag 55) as extracted from the delivery/local clearing message which generated the Funds Transfer.
If it is a valid T24 Account Number, same will be used for Debit account. Otherwise debit account will be populated from Nostro.Account for the Currency.
Applicable for messages processed through OFS Globus Manager.
Incase incoming message has clearing code ( //xxxxx" ) in tag 55 then except clearing code other details will be populated.
Validation Rules

Internal Field */
		IN_3RD_REIMB_ACC : T24BusinessTypes:A
			@i18n:Label (en="3rd Reimb Bank Acc (IN)")
			@i18n:Tooltip (en="Account number 3rd reimbursement bank")
			@t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=139.0, core=true, t24Name=IN.3RD.REIMB.ACC)
		/* Specify the MT103 type which needs to be generated and allowed values are "MT103+" or "MT103Extend" or Null
Input allowed only for "OTxx" Txn.types which has 103 as MESSAGE.TYPE in FT.TXN.TYPE.CONDITION
Incase MT103.Type is Null it will generate regular MT103.
To send Envelope Contents details, MT103.type can be  given as MT103Extend and Extend format & info can be given in next fields which will generate MT103 with Tag 77T.
MT103+ can be generated to make it straight through processable with bank field tags as "xxA".
If field MT103.CONTROL in  FT.APPL.DEFAULT is "System", then the bank fields ( for Tag  52, 54, 55, 56 and 57)  in FT must have either a valid BIC code ("SW-") or  Customer number who has valid record in DE.ADDRESS with carrier as "SWIFT.1" otherwise then system will raise an Error. Moreover Ben.Acct.No is also mandatory.
In case MT103.CONTROL is Null and above condition is not met, system automatically generates MT103 instead of MT103+ with an override.
For MT103+, field 119 of the User Header of the message MT103 will be having Validation flag as STP. For MT103Extend, field 119 Validation flag will be REMIT.
Validation Rules

Input allowed only for "OTxx" Txn type with Message.Type as 103 in FT.TXN.TYPE.CONDITION.
For MT103EXTEND ,next field Extend.Info is mandatory.
For MT103+,if the FT.APPL.DEFAULT has SYSTEM in MT103.CONTROL-then Ben.Acct.No is mandatory and all Bank tags must have "xxA". */
		MT103_TYPE : FT_Contract:FUNDS_TRANSFER__MT103_TYPE
			@i18n:Label (en="MT103 Type")
			@i18n:Tooltip (en="Specifies the MT103 type that has to be generated")
			@t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=140.0, core=true, t24Name=MT103.TYPE)
		/* Specify the format of extend remittance information.
Codes selected here is placed between slashes and prefixed with the Extend.Info details as given in next field for tag 77T in MT103
Input allowed only for MT103EXTEND type.
Validation Rules

Optional field & input allowed only when MT103EXTEND selected in previous field.
Valid values ANSI or NARR or SWIF or UEDI or Null */
		EXTEND_FORMAT : FT_Contract:FUNDS_TRANSFER__EXTEND_FORMAT
			@i18n:Label (en="Extended Format")
			@i18n:Tooltip (en="Format of extend remittance information")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=141.0, core=true, t24Name=EXTEND.FORMAT)
		EXTEND_INFO -> byValue FT_Contract:FUNDS_TRANSFER__EXTEND_INFO *
		/* In Currency Fixing rates functionality, when RATE.FIXING field is set to 'No', user should confirm either to use the existing rate or to wait for new rate. If set to 'NO' the field status will be updated as INORATE/ANORATE and no accounting enties will be raised. If set to 'yes' the exising rate will be used and entries will be raised accordingly. */
		RATE_FIXING_IND : FT_Contract:FUNDS_TRANSFER__RATE_FIXING_IND
			@i18n:Label (en="Rate Fixing Indicator")
			@i18n:Tooltip (en="Used in In Currency Fixing rates functionality")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=143.0, core=true, t24Name=RATE.FIXING.IND)
		/* Sender BIC code is stored here when the inward messages are processed through OFS.Globus.Manager.
For Correspondent Limit processing, limit is tracked against this ID.
It contains the Sender of Incoming Message BIC code along with the Logical Terminal Code (i.e. 12 Characters) as available in DE.I.HEADER for the inward delivery reference.
Validation Rules

No input field
Updated by System -with Incoming Message Sender's BIC code. */
		INW_SEND_BIC : T24BusinessTypes:A
			@i18n:Label (en="Sender BIC (IN)")
			@i18n:Tooltip (en="Account Number of the Intermediary Bank ")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=144.0, core=true, t24Name=INW.SEND.BIC)
		IN_SEND_CHG -> byValue FT_Contract:FUNDS_TRANSFER__IN_SEND_CHG *
		/* When Swift message is processed through OFS.GLOBUS.MANAGER, the Charges to be taken by the Receiver of this Message as given in Tag 71G of MT103 messages is captured here.
Validation Rules

No input field
Update by system with value as received in incoming message in tag 71G */
		IN_REC_CHG : T24BusinessTypes:A
			@i18n:Label (en="Receiver Chg (IN)")
			@i18n:Tooltip (en="Charges taken by the Receiver of this Message")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=146.0, core=true, t24Name=IN.REC.CHG, typeModifiers="C")
		/* Contains the ID of the AC.CHARGE.REQUEST application through which MT190/191 raised for the Correspondent Bank charges collected or to be Collected.
When an Incoming MT103 is received with Charge.Details (tag 71A) as "OUR"(i.e. All transaction charges are to be borne by the ordering customer) and charges Amount not specified in tag 71G (Receiver Charges)  then applicable charges as defined in CORR.BANK.CHARGES application is defaulted in FT.
Incase the Debit account is a Vostro then same account is debited for the Correspondent charges and MT190 (Advice of charges)  is raised or Incase Debit account is a Non-Vostro account, then Charge Claim account as defined in FT.APPL.DEFAULT is debited and MT191 (Request for Payment of Charges) is raised through AC.CHARGE.REQUEST application and the related ID is populated here.
Required details like Sender Reference/Currency/Amount/Receiver Correspondent Customer No etc. for MT190/191 is populated from this Funds transfer Contract to AC.CHARGE.REQUEST. Any changes to this Funds transfer contract updated with the AC.CHARGE.REQUEST record.
See CORR.BANK.CHARGES application for details.
Validation Rules

No input field-Updated by System
Valid record in AC.CHARGE.REQUEST which is related to this FT */
		AC_CHG_REQ_ID : T24BusinessTypes:A
			@i18n:Label (en="AC Chg Request ID")
			@i18n:Tooltip (en="ID of the AC.CHARGE.REQUEST application ")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=147.0, core=true, t24Name=AC.CHG.REQ.ID)
		/* Total charges for the Receiver is converted into Credit Currency of this FT for MT103 Outward message.
When Commission.For / Charge.For is given as RECEIVER then the applicable amount is converted into Credit Currency and same is mapped to tag 71G of MT103.
Validation Rules

No input field
Calculated and updated by SYSTEM */
		TOT_REC_CHG_CRCCY : T24BusinessTypes:AMT
			@i18n:Label (en="Total Receiver Chg Ccy")
			@i18n:Tooltip (en="Total charges for the Receiver in Credit CCY")
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=148.0, core=true, t24Name=TOT.REC.CHG.CRCCY, typeModifiers="13")
		/* Total charges for the Sender is converted into Credit Currency of this FT for MT103 Outward message.
When Commission.For / Charge.For is given as SENDER, then the applicable amount is converted into Credit Currency for Outward MT103 details.
Validation Rules

No input field
Calculated and updated by SYSTEM */
		TOT_SND_CHG_CRCCY : T24BusinessTypes:AMT
			@i18n:Label (en="Total Sender Charge Ccy")
			@i18n:Tooltip (en="Total charges for the Sender in Credit CCY")
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=149.0, core=true, t24Name=TOT.SND.CHG.CRCCY, typeModifiers="13")
		/* Contains the Message type (either 190/191) which is sent to the Correspondent Bank for the Charges debited / to be reimbursed and the details for this transaction is available in the AC.CHARGE.REQUEST application for the ID as given in AC.Chg.Req.ID.
Validation Rules

No Input field
Updated by System with Either 190/191 Message.Type */
		CHG_ADVICE_MSG : mml:Integer
			@i18n:Label (en="Chg Advice Message")
			@i18n:Tooltip (en="Msg type sent to the Corres Bk for Charges debited")
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=150.0, core=true, t24Name=CHG.ADVICE.MSG)
		/* Contains the AC.EXPECTED.COVER.ID, when an inward message MT103 processed using Correspondent Bank Limit.
When a FT is delinked from correspondent Limit checking, then this field is prefixed with MAFT to indicate MANUALLY AFFECTED.
Refer User guide / ER.COVER.LIMIT application for details.
Validation Rules

No Input field
Updated by System with AC.EXPECTED.COVER.ID which is crated by this Funds. Transfer Contract. */
		EXPECTED_COVER_ID : T24BusinessTypes:A
			@i18n:Label (en="Expected Cover Id")
			@i18n:Tooltip (en="Identifies the AC.EXPECTED.COVER.ID")
			@t24:i (align=L, inputBehaviour=N, maxLength=25, sysNumber=151.0, core=true, t24Name=EXPECTED.COVER.ID)
		/* Specify here whether the MT102 or MT203 or both to be generated from FUNDS.TRANSFER application.


In this case, MT103 messages that are to be generated from Funds.Transfer, will



If this flag is set to "NO", then MT202 or MT103 is generated from Funds.Transfer itself.

When this field is Null and applications DE.PARM & DE.MESSAGE (for record 103 and 202) have Netting.Allowed flag as "Yes, then a Value of 102 or "203" or 102*203 is defaulted here.

If 102 is defaulted, then MT103 will be suppressed. If 203 is defaulted MT202, will be suppressed. In case of 102*203, both messages will be suppressed.

In such case, the generation of MT202 and MT103 from FT are suppressed and details are passed on to NETTING.ENTRY application to generated MT203 and MT102 for the FT.

To generate a MT102 Swift Message, a record in NETTING.AGREEMENT has to be created for the receiver of the message and required contracts can be selected through CREATE.NETTING application for the following criteria - Customer / Currency/Value Date/System Id /Receiver Correspondent/ Sender Correspondent/Bank operation Code.

To generate a MT203 Swift Message, a record in NETTING.AGREEMENT has to be created for the receiver of the message and required contracts can be selected through CREATE.NETTING application for the following criteria - Customer / Currency/Value Date/System Id /Receiver Correspondent/ Sender Correspondent.

Please note NETTING application is used by FT only to generate MT102 / MT203 by grouping MT103 / MT202 details respectively No Accounting entries at Netting Level for FT

Validation Rules

Optional Input
Valid values allowed through manual Input- "NO" or Null
Manual Input other than "No" or "Null" -Error raised.
Defaulted to 102 or 203 or 102*203, depends upon types of messages generated from FT,  when Netting.Entry details are created from FT. */
		NETTING_STATUS : FT_Contract:FUNDS_TRANSFER__NETTING_STATUS
			@i18n:Label (en="Netting Status")
			@i18n:Tooltip (en="Specifies the generation of MT103 or MT203 or both")
			@t24:i (align=L, inputBehaviour=I, maxLength=7, sysNumber=152.0, core=true, t24Name=NETTING.STATUS)
		/* Noinput field. Used to store System date during authorisation of a FT */
		AUTH_DATE : T24BusinessTypes:D
			@i18n:Label (en="Authorisation Date")
			@i18n:Tooltip (en="System date during authorisation of FT")
			@t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=153.0, core=true, t24Name=AUTH.DATE)
		/* When the field is null, CREDIT will be defaulted.

Validation Rules

Optional Input

Valid values allowed through manual Input  CREDIT_CHQB */
		BK_OPERATION_CODE : FT_Contract:FUNDS_TRANSFER__BK_OPERATION_CODE
			@i18n:Label (en="Bank Operation Code")
			@i18n:Tooltip (en="Specify CHQB / CREDIT")
			@t24:i (align=L, inputBehaviour=I, maxLength=6, sysNumber=154.0, core=true, t24Name=BK.OPERATION.CODE)
		/* Field used by AM module to record exchange rate between account currency and portfolio reference currency.

Validation Rules

Field can also be updated manually
This field is activated only if AM is installed and if Inflow valuation is switched on. ( i.e */
		AM_INFLOW_RATE : T24BusinessTypes:R
			@i18n:Label (en="AM Inflow Rate")
			@i18n:Tooltip (en="Used by AM module to record exchange rates")
			@t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=155.0, core=true, t24Name=AM.INFLOW.RATE)
		/* Noinput Field. Used to hold the parent deal info that created an FT. */
		PARENT_TXN_ID : T24BusinessTypes:A
			@i18n:Label (en="Parent Txn Id")
			@i18n:Tooltip (en="Amount of nominal could be purchased ")
			@t24:i (align=L, inputBehaviour=E, maxLength=35, sysNumber=156.0, core=true, t24Name=PARENT.TXN.ID)
		/* In case of cross currency transactions, user can define the type rounding that should take place for the Debit or credit
amount to the nearest decimals defined in the currency table.If no value is input in this field then the value
defined in FT.APPL.DEFAULT will be applicable.  Rounding can either be UP, DOWN or NATURAL.
Validation rules - Allows values defined in EB.ROUNDING.RULE. */
		ROUND_TYPE -> ST_Config:EB_ROUNDING_RULE
			@i18n:Label (en="Round Type")
			@i18n:Tooltip (en="Defines the rounding type for debit credit amounts")
			@t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=157.0, core=true, businessType=A, t24Name=ROUND.TYPE)
		/* When the ID of the BENEFICIARY table is input, the details defined in the BENEFICIARY table get defaulted in the FT Transaction.Accepts ID of the BENEFICIARY table. */
		BENEFICIARY_ID -> FT_Config:BENEFICIARY
			@i18n:Label (en="Beneficiary ID")
			@i18n:Tooltip (en="Identifies the beneficiary ")
			@t24:i (align=L, inputBehaviour=I, maxLength=17, sysNumber=158.0, core=true, businessType=A, t24Name=BENEFICIARY.ID)
		MSG_TYPE -> byValue FT_Contract:FUNDS_TRANSFER__MSG_TYPE *
		SIGNATORY -> byValue FT_Contract:FUNDS_TRANSFER__SIGNATORY *
		CARD_NUMBER -> ST_Cards:CARD_ISSUE
			@i18n:Label (en="Card Number")
			@t24:i (align=L, inputBehaviour=I, maxLength=21, sysNumber=162.0, core=true, businessType=A, t24Name=CARD.NUMBER)
		CARD_TXN_DETAIL -> byValue FT_Contract:FUNDS_TRANSFER__CARD_TXN_DETAIL *
		IN_C_ORD_BK -> byValue FT_Contract:FUNDS_TRANSFER__IN_C_ORD_BK *
		IN_C_INTMED_BK -> byValue FT_Contract:FUNDS_TRANSFER__IN_C_INTMED_BK *
		IN_C_ACC_WIT_BK -> byValue FT_Contract:FUNDS_TRANSFER__IN_C_ACC_WIT_BK *
		IN_C_BK_T_BK_IN -> byValue FT_Contract:FUNDS_TRANSFER__IN_C_BK_T_BK_IN *
		TFS_REFERENCE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=168.0, core=true, t24Name=TFS.REFERENCE)
		CHEQUE_DRAWN : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=169.0, core=true, t24Name=CHEQUE.DRAWN)
		ISSUE_CHEQUE_TYPE -> CHQ_Config:CHEQUE_TYPE
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=170.0, core=true, businessType=SSS, t24Name=ISSUE.CHEQUE.TYPE)
		STOCK_NUMBER : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=20, sysNumber=171.0, core=true, t24Name=STOCK.NUMBER)
		PAYEE_NAME : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=65, sysNumber=172.0, core=true, t24Name=PAYEE.NAME)
		STOCK_REGISTER -> CHQ_StockControl:STOCK_REGISTER
			@t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=173.0, core=true, businessType=A, t24Name=STOCK.REGISTER)
		SERIES_ID : T24BusinessTypes:A
			@i18n:Label (en="Series ID")
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=174.0, core=true, t24Name=SERIES.ID)
		ORD_CUST_ACCT : T24BusinessTypes:SW
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=175.0, core=true, t24Name=ORD.CUST.ACCT)
		IN_ORD_CUST_ACCT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=176.0, core=true, t24Name=IN.ORD.CUST.ACCT)
		IBAN_DEBIT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=177.0, core=true, t24Name=IBAN.DEBIT)
		IBAN_CREDIT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=178.0, core=true, t24Name=IBAN.CREDIT)
		IBAN_BEN : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=179.0, core=true, t24Name=IBAN.BEN, isValidateOnChange=true)
		IBAN_ACCT_WITH_BANK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=180.0, core=true, t24Name=IBAN.ACCT.WITH.BANK)
		IBAN_REC_CORR_BANK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=181.0, core=true, t24Name=IBAN.REC.CORR.BANK)
		IBAN_INTERMED_BANK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=182.0, core=true, t24Name=IBAN.INTERMED.BANK)
		IBAN_ORD_CUST_ACC : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=183.0, core=true, t24Name=IBAN.ORD.CUST.ACC)
		IBAN_CHARGES_ACCT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=184.0, core=true, t24Name=IBAN.CHARGES.ACCT)
		BIC_IBAN_BEN : T24BusinessTypes:SW
			@i18n:Label (en="BIC of Beneficiary Bank")
			@i18n:Tooltip (en="Indicates the BIC code derived from IBAN of Ben")
			@t24:i (align=L, inputBehaviour=N, maxLength=12, sysNumber=185.0, core=true, t24Name=BIC.IBAN.BEN)
		BIC_IBAN_BEN_NAME -> byValue FT_Contract:FUNDS_TRANSFER__BIC_IBAN_BEN_NAME *
		BIC_IBAN_BEN_CITY : T24BusinessTypes:SW
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=187.0, core=true, t24Name=BIC.IBAN.BEN.CITY)
		RESERVED_7 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=188.0, core=true, t24Name=RESERVED.7)
		RESERVED_6 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=189.0, core=true, t24Name=RESERVED.6)
		RESERVED_5 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=190.0, core=true, t24Name=RESERVED.5)
		RESERVED_4 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=191.0, core=true, t24Name=RESERVED.4)
		RESERVED_3 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=192.0, core=true, t24Name=RESERVED.3)
		RESERVED_2 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=193.0, core=true, t24Name=RESERVED.2)
		RESERVED_1 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=194.0, core=true, t24Name=RESERVED.1)
		STMT_NOS -> byValue FT_Contract:FUNDS_TRANSFER__STMT_NOS *
		OVERRIDE -> byValue FT_Contract:FUNDS_TRANSFER__OVERRIDE *
		/* Validation Rules */
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=197.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=198.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FT_Contract:FUNDS_TRANSFER__INPUTTER *
		DATE_TIME -> byValue FT_Contract:FUNDS_TRANSFER__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=201.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=202.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=203.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=204.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=205.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
		IBLC_CODE_DR : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=67.1, core=false, t24Name=IBLC.CODE-DR)
		IBLC_CODE_CR : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=67.2, core=false, t24Name=IBLC.CODE-CR)
		IBLC_CODE_CH : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=67.3, core=false, t24Name=IBLC.CODE-CH)
		IBLC_COUNTRY_DR : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=67.4, core=false, t24Name=IBLC.COUNTRY-DR)
		IBLC_COUNTRY_CR : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=67.5, core=false, t24Name=IBLC.COUNTRY-CR)
		IBLC_COUNTRY_CH : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=67.6, core=false, t24Name=IBLC.COUNTRY-CH)
		IMMEDIATELY : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=15, sysNumber=67.7, core=false, t24Name=IMMEDIATELY)
		FUTURE_DATE : T24BusinessTypes:D
			@t24:i (align=R, inputBehaviour=I, maxLength=15, sysNumber=67.8, core=false, t24Name=FUTURE.DATE)
		PROCESS_ID : T24BusinessTypes:A
			@i18n:Label (en="Process Id")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=67.9, core=false, t24Name=PROCESS.ID)
		TASK_ID : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=67.1, core=false, t24Name=TASK.ID)
		/* An internal J-desc field */
		DEBIT_ACCT_NAME : mml:Integer
			@i18n:Label (en="Debit Account Name")
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBIT.ACCT.NAME, genOperation="DEBIT.ACCT.NO>ACCOUNT>ACCOUNT.TITLE.1")
		DEBIT_CUST_ADDRESS -> byValue FT_Contract:FUNDS_TRANSFER__DEBIT_CUST_ADDRESS *
		DEBIT_CUST_STREET -> byValue FT_Contract:FUNDS_TRANSFER__DEBIT_CUST_STREET *
		DEBT_CUS_TOWN_CON -> byValue FT_Contract:FUNDS_TRANSFER__DEBT_CUS_TOWN_CON *
		DEBIT_CUS_POST_CD -> byValue FT_Contract:FUNDS_TRANSFER__DEBIT_CUS_POST_CD *
		DEBT_CUS_COUNTRY -> byValue FT_Contract:FUNDS_TRANSFER__DEBT_CUS_COUNTRY *
		DEBIT_CUS_NAME_1 -> byValue FT_Contract:FUNDS_TRANSFER__DEBIT_CUS_NAME_1 *
		DEBIT_CUS_NAME_2 -> byValue FT_Contract:FUNDS_TRANSFER__DEBIT_CUS_NAME_2 *
		DEBIT_CUS_LEGAL_ID -> byValue FT_Contract:FUNDS_TRANSFER__DEBIT_CUS_LEGAL_ID *
		/* An internal J-desc field */
		CREDIT_ACCT_NAME : mml:Integer
			@i18n:Label (en="Credit Account Name")
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CREDIT.ACCT.NAME, genOperation="CREDIT.ACCT.NO>ACCOUNT>ACCOUNT.TITLE.1")
		CRED_CUS_ADDRESS -> byValue FT_Contract:FUNDS_TRANSFER__CRED_CUS_ADDRESS *
		CRED_CUS_STREET -> byValue FT_Contract:FUNDS_TRANSFER__CRED_CUS_STREET *
		CRED_CUS_TOWN_CON -> byValue FT_Contract:FUNDS_TRANSFER__CRED_CUS_TOWN_CON *
		CRED_CUS_POS_CODE -> byValue FT_Contract:FUNDS_TRANSFER__CRED_CUS_POS_CODE *
		CRED_CUS_COUNTRY -> byValue FT_Contract:FUNDS_TRANSFER__CRED_CUS_COUNTRY *
		CRED_CUS_NAME_1 -> byValue FT_Contract:FUNDS_TRANSFER__CRED_CUS_NAME_1 *
		CRED_CUS_NAME_2 -> byValue FT_Contract:FUNDS_TRANSFER__CRED_CUS_NAME_2 *
		CRED_CUS_LEGAL_ID -> byValue FT_Contract:FUNDS_TRANSFER__CRED_CUS_LEGAL_ID *
		ORD_CUST_NAME -> byValue FT_Contract:FUNDS_TRANSFER__ORD_CUST_NAME *
		ORDERING_BANK_NAME -> byValue FT_Contract:FUNDS_TRANSFER__ORDERING_BANK_NAME *
		ACT_WITH_BANK_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=ACT.WITH.BANK.NAME, genOperation="ACCT.WITH.BANK>CUSTOMER>NAME.1")
		BEN_ACCT_NAME -> byValue FT_Contract:FUNDS_TRANSFER__BEN_ACCT_NAME *
		BEN_CUST_NAME -> byValue FT_Contract:FUNDS_TRANSFER__BEN_CUST_NAME *
		BEN_BANK_NAME -> byValue FT_Contract:FUNDS_TRANSFER__BEN_BANK_NAME *
		RCVR_BANK_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=RCVR.BANK.NAME, genOperation="RECEIVER.BANK>CUSTOMER>NAME.1")
		REC_CORR_BANK_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=REC.CORR.BANK.NAME, genOperation="REC.CORR.BANK>CUSTOMER>NAME.1")
		INTERMED_BANK_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=INTERMED.BANK.NAME, genOperation="INTERMED.BANK>CUSTOMER>NAME.1")
		/* An internal J-desc field */
		PROFIT_CUST_NAME : mml:Integer
			@i18n:Label (en="Profit Customer Name")
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=PROFIT.CUST.NAME, genOperation="PROFIT.CENTRE.CUST>CUSTOMER>NAME.ADDRESS")
		/* An internal J-desc field */
		DEBIT_CUST_NAME : mml:Integer
			@i18n:Label (en="Debit Customer Name")
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBIT.CUST.NAME, genOperation="DEBIT.CUSTOMER>CUSTOMER>NAME.ADDRESS")
		/* An internal J-desc field */
		CREDIT_CUST_NAME : mml:Integer
			@i18n:Label (en="Credit Customer Name")
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CREDIT.CUST.NAME, genOperation="CREDIT.CUSTOMER>CUSTOMER>NAME.ADDRESS")
		CONT_COMP_MNE : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CONT.COMP.MNE, genOperation="CO.CODE>COMPANY>MNEMONIC")
		/* An internal J-desc field */
		CHARGED_CUST_NAME : mml:Integer
			@i18n:Label (en="Charged Customer Name")
			@i18n:Tooltip (en="Identifes the charged customer name")
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CHARGED.CUST.NAME, genOperation="CHARGED.CUSTOMER>CUSTOMER>NAME.ADDRESS")
		MSG_REFERENCE -> byValue FT_Contract:FUNDS_TRANSFER__MSG_REFERENCE *
		COLL_REM_BK_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=COLL.REM.BK.NAME, genOperation="COLL.REM.BK>CUSTOMER>NAME.1")
		AC_WITH_BANK_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=AC.WITH.BANK.NAME, genOperation="ACCT.WITH.BANK.ACC>CUSTOMER>NAME.1")
		REC_CORR_BK_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=REC.CORR.BK.NAME, genOperation="REC.CORR.BANK.ACC>CUSTOMER>NAME.1")
		INTERMD_BK_AC_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=INTERMD.BK.AC.NAME, genOperation="INTERMED.BANK.ACC>CUSTOMER>NAME.1")
		ORD_CUST_AC_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=ORD.CUST.AC.NAME, genOperation="ORD.CUST.ACCT>CUSTOMER>NAME.1")
	}
	FUNDS_TRANSFER__ORDERING_CUST
	{
		/* Identifies the Customer who is ordering the transaction. This Customer should not be a bank.  (If the ordering party is a bank, the Ordering Bank should be used.)
For Outward Payments, input should only occur when the original Customer of the transaction (i.e. the actual Customer ordering the transaction) is not the same as the Customer of the Debit Account Number.
For Inward Payments, this field would be used to enter details (name and address) of the Customer who actually originated the transaction.
Any input made in this field will be printed on the credit and debit advices (i.e. By Order Of) and will also be included in the outgoing message (Telex).
This field corresponds to Field 50 in SWIFT messages.
Validation Rules
3-10 characters Customer Mnemonic (uppercase alpha or '.') type MNE.  or  1-6 numeric character Customer code.  or  Up to 35 characters (uppercase alpha or numeric) - type S.  Multivalue field.  A maximum of 4 lines of 35 characters each will be allowed.  (Optional input;  Default = Customer of Debit Account for outward transactions).
For Outward Payments, input will be mandatory when the Debit Account Number is a Profit and Loss Category Code or an Internal Account or a Nostro Account.
For outward payments by telex, if Credit and Debit accounts are both Nostro, then this field should remain as null.
For inward payments, either the Ordering Customer or the ordering Bank is mandatory when the Debit account is a Nostro.
If the input in this field is less than 11 characters, the system will interpret the input as a Customer Mnemonic and try to find a Customer accordingly.  For this reason, any free text used to input manually the name and address of the Ordering customer must exceed 10 characters.
If Debit account No is an internal or P/L account then input is mandatory for either this field of Ordering Bank.  For Local clearing validation rules, see the details for the relevant clearing system under the section 'local clearing rules'. */
		ORDERING_CUST : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=19.0, core=true, t24Name=ORDERING.CUST, typeModifiers=SW)
	}
	FUNDS_TRANSFER__IN_ORDERING_CUS
	{
		/* Contains the ordering customer of the payment as stated on the incoming delivery or local clearing message.
Validation Rules
This is a NOINPUT field. */
		IN_ORDERING_CUS : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=20.0, core=true, t24Name=IN.ORDERING.CUS)
	}
	FUNDS_TRANSFER__ORDERING_BANK
	{
		/* Identifies the Bank or Branch of the Ordering Customer when it is different from the Sending Bank.
This field will allow you to advise the beneficiary (your customer) of the incoming payment the bank through which the Ordering customer has sent the payment.  If it is left blank, it is assumed that the sending bank is the ordering bank.
This field corresponds to Field 52 in SWIFT messages.
Validation Rules

3-10 character Customer Mnemonic (Uppercase alphanumeric or .) - type MNE.  or  1-6 Numeric character Customer Code  or  Up to 35 characters (Uppercase alpha or  numeric characters) - type S.  Multivalue field.  A maximum of four lines, of 35 characters each, will be allowed. (Optional input).
This field will be mandatory when the charge Account Number equates to the Claim Charges Account defined in the Funds Transfer Application Default table.
For inward payments, either the Ordering Customer or the Ordering bank is mandatory when the Debit account is a Nostro.
If the input in this field is less than 11 characters, the system will interpret the input as a Customer Mnemonic and try to find a Customer accordingly.  For this reason, any free text used to input manually the name and address of the Ordering bank must exceed 10 characters.
This field must be a valid bank.
If the Debit account No is an Internal or P/L account then input is mandatory for either this field or Ordering Cust.  For Local clearing validation rules, see the details for the relevant clearing system under the section 'local clearing rules'.

Multi line is not allowed if NETTING.STATUS has 102. If valid customer number is given in this field then Customers NAME1 will be taken from DE.ADDRESS for TAG52, since Swift message MT102 allows only one line in Tag 52C option as Party Identifier. */
		ORDERING_BANK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=21.0, core=true, t24Name=ORDERING.BANK, typeModifiers=SW)
	}
	FUNDS_TRANSFER__IN_ORDERING_BK
	{
		/* Contains the Ordering Bank from the delivery/local clearing message which generated the funds transfer.
Validation Rules
This is a NOINPUT field. */
		IN_ORDERING_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=22.0, core=true, t24Name=IN.ORDERING.BK)
	}
	FUNDS_TRANSFER__ACCT_WITH_BANK
	{
		/* Identifies the Bank (other than the Receiver Bank) at which the ultimate beneficiary maintains its Account.
Used when the ordering party requests that the beneficiary be paid at a bank other than the Receiver Bank.  The Customer specified, cannot be the same as the Customer of the Credit Account.
The Account With Bank may be a branch of the Receiver Bank, or an entirely separate bank.
If the Account with bank is null then it will default per beneficiary autorouting instructions on the agency file.
This field corresponds to Field 57 in SWIFT messages.
For Local clearing validation rules, see the details for the relevant clearing system under the section 'local clearing rules'.
Example:   Mr John Smith requests his bank (British Bank, London) to debit his account for $1,000.00 and transfer the money to American            Bank, New York in favour of Mr Peter Brown.  The following will            be input:
Field Desc.          |  Field Input.            Ordering Cust.       |  Mr. John Smith.                                 |  (automatic default)            Account with Bank.   |  American Bank. New                                 |  York.            Beneficiary Customer.|  Mr. Peter Brown.
The subsequent Telex Payment Order would be sent direct to our correspondent; British Bank, New York.
Validation Rules

3-10 character Agency Mnemonic (uppercase alphanumeric or '.') - type MNE.  or 1 to 6 numeric character Agency code  or     Up to 35 characters (uppercase alpha or numeric) - type S.  Multivalue field, A maximum of four lines, of 35 characters each, will be allowed. (Optional input for Transaction Types OB and OT; Otherwise not allowed).
For Outward Payments, the Account With Bank cannot be the same as:  -  Credit Account Customer,       or -  Receiver Bank,                 or -  Receivers Correspondent,       or -  Intermediary Bank.
For outward payments by Telex the RECEIVER.BANK equals BENEFICIARY BANK then the ACCT.WITH.BANK must be null.
For Transaction Types other than BC this field must be blank, if BC.BANK.SORT.CODE is used.
Multi line is not allowed if NETTING.STATUS has 102. If valid customer   number is given in this field then Customers NAME1 will be taken from   DE.ADDRESS for TAG57, since Swift message MT102 allows only one line in Tag   57C option as Party Identifier. */
		ACCT_WITH_BANK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=23.0, core=true, t24Name=ACCT.WITH.BANK, typeModifiers=SW)
	}
	FUNDS_TRANSFER__ACCT_WITH_BK
	{
		/* Contains the account with Bank in the same format as the delivery or local clearing message which generated the FT.
Inward Swift messages processed through OFS Globus Manager the Acct.With.Bk details populated as per following:
Incoming Swift message has Intermediary Bank (Tag 56) and Account with Bank(Tag 57)-details, then the Account with bank details as received from Inward message will be populated in Funds transfer both in Out & In Acct.With.Bk Fields.
If  Account with Bank details (Tag 57) alone is received and the customer is a valid T24 Customer or same as Credit.Acct.No- Customer then these details retained only in Acct.with.Bk and In.Acct.Bank.Acc fields. Otherwise incoming Acct.With.Bk details populated in both Out & In Acct.With.Bk fields.

Validation Rules
This is a NOINPUT field. */
		ACCT_WITH_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=24.0, core=true, t24Name=ACCT.WITH.BK)
	}
	FUNDS_TRANSFER__BEN_CUSTOMER
	{
		/* Identifies the Customer who is to be the ultimate receiver of the funds transferred by the sending bank when this Beneficiary is not a bank.
When the ultimate beneficiary is a bank, the BEN.BANK field should be used instead.
For Outward payment by cheque and draft (Transaction Types OC and OD, the first two lines will define to whom the cheque or draft is to be made payable, whilst the remaining four lines define the address)
This field corresponds to Field 59 in SWIFT messages. According to the settings in field
BEN.ACCT.ONLY
Based on the Agency Autorouting setup given for BEN.CUSTOMER and COVER.METHOD as given in FT,Bank fields BEN.ACCT.NO, ACCT.WITH.BANK, RECEIVER.BANK,  REC.CORR.BANK, INTERMED.BANK will be defaulted provided values are not defined in any of the above fields.
If the COVER.METHOD is SERIAL then ACCT.WITH.BANK & INTERMED.BANK will be defaulted.
If the COVER.METHOD is COVER.DIRECT fields will be defaulted in RECEIVER.BANK,  REC.CORR.BANK, INTERMED.BANK.
For COVER.METHOD is THIRD-INST fields will be defaulted in RECEIVER.BANK,  REC.CORR.BANK, INTERMED.BANK and error will be raised incase any one of the above Bank field is NULL.
If the COVER.METHOD is COVER.NEAR  fields will be defaulted in ACCT.WITH.BANK, RECEIVER.BANK,  REC.CORR.BANK.
Validation Rules

3-10 characters Customer Mnemonic Uppercase Alphanumeric or '.') Type MNE.     or 1 to 16 numeric characters Customer code. or Up to 35 characters     (Uppercase Alpha or Numeric) - Type S. Multivalue field. (Mandatory input     for Transaction Types OC, OD and OB. Optional input for Transaction Type OT     and BC, otherwise not allowed.)
A maximum of four lines of 35 characters each will be allowed for all Transaction Types except OC and OD, where the maximum is six lines of 35     characters.
Either Beneficiary Customer or Bank may be input, but not both.
For the Transaction Type OT (Outward by Telex), either a Beneficiary Customer or a Beneficiary Bank is mandatory unless the settings in field
BEN.ACCT.ONLY
If the input in this field is less than 11 characters, the system will interpret the input as a Customer Mnemonic and try to find a Customer record     accordingly. For this reason, any free text used to input manually the name     and address of the Beneficiary Customer must exceed 10 characters. For local     clearing validation rules see the section 'Local Clearing Rules' under the     relevant clearing system. */
		BEN_CUSTOMER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=27.0, core=true, t24Name=BEN.CUSTOMER, typeModifiers=SW)
	}
	FUNDS_TRANSFER__IN_BEN_CUSTOMER
	{
		/* Contains the beneficiary customer of the payment from the incoming delivery or local clearing message.
Validation Rules
This is a NOINPUT field. */
		IN_BEN_CUSTOMER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=28.0, core=true, t24Name=IN.BEN.CUSTOMER)
	}
	FUNDS_TRANSFER__BEN_BANK
	{
		/* Identifies the Bank which is the ultimate receiver of the funds transferred by the sending bank.
The account of the Beneficiary Bank will receive the funds from a Bank-to-Bank transfer.
This field corresponds to field 58 in SWIFT messages. It is used within message type MT 202.
Validation Rules

3-10 character Customer Mnemonic (Uppercase alphanumeric or '.') - Type MNE. or 1-6 numeric character Customer         code or Up to 35 characters (uppercase alpha or numeric)         - Type S. Multivalue field. A maximum of four lines, of         35 characters each, will be allowed. (Optional input for         Transaction Types OT and BC, otherwise not allowed.)
Either Beneficiary Customer or Bank may be input, but not both.
For the Transaction Type OT (Outward by Telex) either a Beneficiary Customer or a Beneficiary Bank is mandatory         unless the settings in field
BEN.ACCT.ONLY
The BEN.BANK cannot be the same as the ACCT.WITH.BANK.
If the input in this field is less than 11 characters, the system will interpret the input as a Customer         Mnemonic and try to find a Customer record accordingly.         For this reason, any free text used to input manually the         name and address of the Beneficiary Bank must exceed 10         characters. For local clearing validation rules see the         section 'Local Clearing Rules' under the relevant         clearing system. */
		BEN_BANK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=29.0, core=true, t24Name=BEN.BANK, typeModifiers=SW)
	}
	FUNDS_TRANSFER__IN_BEN_BANK
	{
		/* Contains the Beneficiary Bank from the incoming message from delivery or the clearing system.
Validation Rules
This is a NOINPUT field. */
		IN_BEN_BANK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=30.0, core=true, t24Name=IN.BEN.BANK)
	}
	FUNDS_TRANSFER__PAYMENT_DETAILS
	{
		/* Allows details of the transfer to be input for inclusion on the Payments and Advices.
This field should contain reference information for the Beneficiary as supplied by the Ordering Customer.  Typical examples are Reference and invoice numbers.
Payment Details should not contain payment instructions.
This field corresponds to field 70 in SWIFT messages.
For local clearing validation rules see the section 'Local Clearing Rules' under the relevant clearing system.
Validation Rules
Up to 35 characters (uppercase alpha or numeric) - Type  S.  Multivalue Field. A maximum of four lines, of 35 characters each, will be allowed.  (Optional input.) */
		PAYMENT_DETAILS : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=32.0, core=true, t24Name=PAYMENT.DETAILS)
	}
	FUNDS_TRANSFER__IN_PAY_DETAILS
	{
		/* Contains any message as received on the delivery or local clearing message which generated the Funds Transfer.
Validation Rules
This is a NOINPUT field. */
		IN_PAY_DETAILS : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=33.0, core=true, t24Name=IN.PAY.DETAILS)
	}
	FUNDS_TRANSFER__REC_CORR_BANK
	{
		/* Identifies the Correspondent Bank for the Receiver Bank (i.e. the bank servicing the Account held by the Receiver Bank in the Currency of the Credit Amount).
The Receiver Correspondent Bank is the location where the funds will be made available for the Receiver.
The presence of the Receiver Bank, together with this field, indicates that two payment messages should be generated:
- Payment Order or Draft Payment to the Receiver Bank
- Cover Cable to Our Correspondent Bank Nostro
If this field is not entered it will default automatically from the data stored in the Receiver Bank's Agency record.
This field corresponds to field 54 in SWIFT messages when Cover Method is COVER.DIRECT, COVER.NEAR.
When Cover Method is THIRD-INST then this field corresponds to tag 55(Third Reimbursement Institution) in MT103 message and in Tag 57 in MT202 (Cover-Payment).
Extreme care should be taken when the name and address of the Receiver Correspondent Bank is entered manually, by means of the four available lines, as any direct input will be accepted without further validation.
The Funds Transfer Application will only issue a cover payment for Outward payments:
- by Telex (Transaction Type OT) or - by Draft (Transaction type OD)
As a general rule, within the Funds Transfer Application, a Cover Payment will be issued when no account relationship (e.g. Nostro account, Vostro account) exists between the Sender and the Receiver of the payment instructions.


Let us suppose that British Bank, London send a direct Telex payment order to Belgium Bank in Brussels (with whom they have test arrangements) requesting them to pay Deutsche Marks 1,000,000.00 to one of their Customers.
Because British Bank London does not maintain its Nostro Account in Deutsche Marks with Belgium Bank, Brussels but with German Bank, Frankfurt and Belgium Bank, Brussels does not maintain their Nostro Account in Deutsche Marks with British Bank, London but with another German Bank in Frankfurt, the Funds Transfer Application will automatically create a Cover payment which will be sent to British Bank's correspondent in Germany.
Cable to: German Bank, Frankfurt requesting them to pay Deutsche Mark 1,000,000.00 to the other German Bank favour Belgium Bank Brussels with the message 'In cover of our direct Telex payment order to you.'
The cost of a Cover Cable, in respect of either a Draft or Telex, may be automatically recovered by use of the Secondary Telex Charge field within the Application Default File.
The field
AUTOROUTE.AGRD
Validation Rules

3-10 character Agency Mnemonic (Uppercase alphanumeric or '.') - Type MNE. or 1-16 numeric character Agency code. or Up to maximum 4 lines of 35     characters (Uppercase alpha or numeric characters) - Type S. (Optional input     for Transaction Types OD and OT, otherwise not allowed.
This field will not be allowed unless the Receiver Bank is input.
The Receiver Correspondent Bank cannot be the same as the: - Account With Bank. - Beneficiary Bank. - Intermediary Bank.
When this field is input and the Intermediary Bank is blank; the country of the Receiver Correspondent Bank must be the same as the Credit Currency     country.
If Vostro was defined on the Agency file for the Receiver Bank in the Credit Currency, input will be mandatory if the Credit Account number does     not equate to any of the Vostro accounts defined in the Agent record of the     Receiver Bank
Mandatory when Cover.Method = Third.Inst.
Multi line is not allowed if NETTING.STATUS has 102. To net MT103 messages, customer should have BIC value else 103 message will not be netted     and MT103 will be created in FT itself, since Tag 54 of Swift message MT102     has just one option A which accepts BIC alone. */
		REC_CORR_BANK -> ST_Customer:CUSTOMER
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=36.0, core=true, businessType=A, t24Name=REC.CORR.BANK, typeModifiers=SW)
	}
	FUNDS_TRANSFER__INTERMED_BANK
	{
		/* Identifies the Intermediary Bank through which the associated funds must pass prior to receipt by the Beneficiary Bank or Account With Bank.
This field permits the entering of any data with only a minimum of validation. Thus care should be taken by the User whenever Intermediary Bank details are entered, especially when the name and address of the Intermediary Bank are input by means of the four available lines of free text, when any input will be accepted without further validation. If this field is not entered, it will default automatically as per the autorouting instructions on the Agency file.
This field corresponds to field 56 in SWIFT messages when the COVER.METHOD is COVER-DIRECT or COVER-NEAR.
If COVER.METHOD in Funds.Transfer is THIRD-INST, then this field is mandatory and details entered will be mapped to Tag 54 (Receiver Correspondent) in MT103 message and to Tag 56 (Intermediary) in MT202 (Cover-Payment)
Validation Rules

3-10 character Agency Mnemonic (Uppercase alphanumeric or '.') - Type MNE.     or 1-6 Numeric character Agency code or Up to maximum 4 lines of 35     characters (uppercase alpha or Numeric characters) type S. (Optional input     for Transaction Types OD, OT otherwise not allowed.)
The Intermediary Bank cannot be the same as the: - Account With Bank -     Receiver Bank - Receiver Correspondent Bank - Beneficiary Bank
For outward payments by telex. If this field is input then ACCOUNT WITH     BANK must be input, unless both DEBIT and CREDIT accounts are NOSTRO     accounts.
The Intermediary bank must not be the same as the Credit account customer.     This validation is based on Customer ID being present, no account can be     made for free form text input by the user. This can be used to the advantage     in cases where validation prevents a one-off situation from being input.
If both ACCOUNT WITH BANK and RECEIVER CORRESPONDENT BANK are null and     intermediary bank has been entered, then either ACCOUNT WITH BANK or RECEVER     BANK must be input, unless both CREDIT and DEBIT accounts are NOSTRO     accounts.
MT102 does not support 56 tag and hence, the value given in this field     when Mt102 is generated, will not be used. */
		INTERMED_BANK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=37.0, core=true, t24Name=INTERMED.BANK, typeModifiers=SW)
	}
	FUNDS_TRANSFER__IN_INTMED_BANK
	{
		/* Used to capture intermediary bank details when updated from external sources like delivery message */
		IN_INTMED_BANK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=36, sysNumber=38.0, core=true, t24Name=IN.INTMED.BANK)
	}
	FUNDS_TRANSFER__COMMISSION_TYPE
	{
		/* Identifies the Commission Types which are applicable to the transaction being processed. If no input is made in these fields, the Application will default the Commission Types.
The rules relating to the handling of the default Commission Types by the Funds Transfer Application can be summarised as follows:
1. For each Transaction Type, default Commission Type conditions may be defined in the Transaction Type table. The User may define in this table all Commission Types applicable to each Transaction Type.
2. The User can also define different Commission Type conditions for groups of Customers in the Group Condition table. This table will be enhanced by the User when special conditions are to be applied to particular groups of Customers (e.g. Banks, staff, Prime Customers, etc.).
3. Finally, default Commission Type conditions can also be defined at the individual Customer level by means of the Customer Condition table. The User will create entries in this table when a particular Customer is to receive special conditions.
When no Commission Types are input, the Funds Transfer Application will verify if the Customer has special Commission Type conditions or whether the Customer is part of a group of Customers which have been afforded special conditions. Otherwise it will apply the Transaction Type default Commission Type conditions. Any direct input by the User will, however, override the applicable default conditions and will become the only Commission Type data to be applied to the transaction. In such a situation the Commission Type code will be used only as enrichment when a Commission Amount has been entered in the next field or, if left blank, the amount will be calculated from the values held in the Commission Type entry.
Validation Rules
2 character Commission Type code (alphanumeric) - Type A. Associated multivalue field. (Optional input. See Details for default) The code must exist in the Commission Type table. When this field is input, the input of an amount will be allowed. If the type is entered with no amount then the values from the Code in the Commission file are used in the associated Commission Amount field. If no data is entered the User can view all the standard default Commission Types and associated amounts generated by the Application by specifying Yes in the Charge.Commission.Display field.
If BEN.OUR.CHARGES = BEN and the system has been set to produce swift MESSAGE MT103 Single Customer Credit Transfer via the transaction type and FT.TXN.TYPE.CONDITION  then this field is mandatory. */
		COMMISSION_TYPE -> ST_ChargeConfig:FT_COMMISSION_TYPE
			@t24:i (align=L, inputBehaviour=F, maxLength=11, sysNumber=46.0, core=true, businessType=A, t24Name=COMMISSION.TYPE)
		/* Identifies the Currency and the Amount of Commission to be applied in respect of the Commission Type specified in the previous field. For currency conversion the middle rate will always be applied.
If no input is made in this field the Application will default the appropriate Currency and Commission Amount (as explained within Commission Type). Input in this field will only be allowed when the associated Commission Type has been input. Any input will override the applicable default value.
After the validation process, all the amounts will be displayed in the Currency of the Account bearing the charges, and any changes must specify the same Currency code as that already displayed. Any original input in a different Currency will no longer be displayed in that Currency.
The Application will also check when the Commission code has been defined with the value Credit less charge that the total Commission amount does not exceed the amount to be transferred (or to be credited in our books) otherwise, it will be refused.
In addition if the residual amount is less than the minimum transfer limit defined in the Application default file an override will be requested.
Validation Rules
3 character (uppercase alpha) - type SSS, or 1-3 numeric character currency code. '.' (Mandatory if a numeric currency code is entered, otherwise not input.) 1-14 characters plus a decimal point (standard amount format) - type AMT. The Application will only accept Currency codes which comply with: - The Currency of the Account bearing the commissions; or - The Currency of the Transfer Amount, i.e. credit Currency for outgoing payments and debit Currency for incoming payments; or - Local Currency. In all cases, the Currency must be the same for all Commission Types. The Numeric Currency Code must be an existing code on the NUMERIC.CURRENCY table.
If BEN.OUR.CHARGES = BEN and the system has been set to produce swift MESSAGE MT103 Single Customer Credit Transfer via the transaction type and FT.TXN.TYPE.CONDITION  then this field is mandatory. */
		COMMISSION_AMT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=F, maxLength=22, sysNumber=47.0, core=true, t24Name=COMMISSION.AMT, typeModifiers="C")
		/* This field is used to specify whether the corresponding commission amount entered is due to the sending bank or the receiving bank. If the transaction type is OT and the system has been set to produce SWIFT message MT103 - Single Customer Credit Transfer

Sender - the corresponding charge amount entered is due to the sending bank.
Receiver &#8211; the corresponding charge amount entered is due to the receiving bank.
Validation Rules


Permitted values are Sender or Receiver, for transaction type OT with a message type of MT103 the default      is Sender. */
		COMMISSION_FOR : FT_Contract:FUNDS_TRANSFER__COMMISSION_TYPE__COMMISSION_FOR
			@t24:i (align=L, inputBehaviour=F, maxLength=8, sysNumber=48.0, core=true, t24Name=COMMISSION.FOR)
	}
	FUNDS_TRANSFER__CHARGE_TYPE
	{
		/* Identifies the Charge Types which are applicable to the transaction being processed. If no input is made in these fields, the Application will default the Charge Types.


The rules relating to the handling of the default Charge Types by the Funds Transfer Application can be summarised as follows:

1. For each Transaction Type, default Charge Type conditions may be defined in the Transaction Type table. The User may define in this table all Charge Types applicable to each Transaction Type.

2. The User can also define different Charge Type conditions for groups of Customers in the Group Condition table. This table will be enhanced by the User when special conditions are to be applied to particular groups of Customers (e.g. Banks, staff, Prime Customers, etc.).

3. Finally, default Charge Type conditions can also be defined at the individual Customer level by means of the Customer Condition table. The User will create entries in this table when a particular Customer is to receive special conditions.

When no Charge Types are input via the screen, the Funds Transfer Application will verify if the Customer has special Charge Type conditions or whether the Customer is part of a group of Customers which have been afforded special conditions. Else it will apply the Transaction Type default Charge Type conditions.

Any direct input by the User will, however, override the applicable default conditions and will become the only Charge Type data to be applied to the transaction. In such a situation the Charge Type code will be used only as enrichment when a Charge amount has been entered in the next field or if left blank the amount will be calculated from the values held in the Charge Type entry.

Incase of Txn.Types involving Message.Type 103, then charges are defaulted from CORR.BANK.CHARGES application setup as defined for the Credit currency and as applicable for the Credit Customer or Receiver Bank Customer and Txn.type combination for outward Message provided the BEN.OUR.CHARGES is "OUR". Incase of inward Customer is checked against sender of MT103 message.

Validation Rules

2 character Charge Type (alphanumeric) - type A. Associated multivalue field. (Optional input. See Details for default) The Charge Type input in this field must exist in the Charge Type table. When this field is input the input of an amount will be allowed. If the type is entered with no amount then the values of the code in the charge file are used in the associated CHARGE.AMOUNT field. If no data is entered the User can view all the standard default Charge Types and associated amounts generated by the Application by specifying Yes in the CHARGE.COM.DISPLAY field.

If BEN.OUR.CHARGES = BEN and the system has been set to produce swift MESSAGE MT103 Single Customer Credit Transfer via the transaction type and FT.TXN.TYPE.CONDITION then this field is mandatory. */
		CHARGE_TYPE -> ST_ChargeConfig:FT_CHARGE_TYPE
			@t24:i (align=L, inputBehaviour=F, maxLength=11, sysNumber=50.0, core=true, businessType=A, t24Name=CHARGE.TYPE)
		/* Identifies the Currency and the Amount of Charge to be applied in respect of the Charge Type specified in the previous field. For currency conversion the middle rate will always be applied.
If no input is made in this field the Application will default to the appropriate Currency and Charge Amount (as explained within Charge Type). Input to this field will only be allowed when the associated Charge Type has been input and will override the applicable default value.
After the validation process, all the amounts will be displayed in the Currency of the Account bearing the charges, and any changes must specify the same Currency code as that already displayed. Any original input in a different Currency will no longer be displayed in that Currency.
The Application will also check when the Charge code has been defined with the value Credit less charge that the total Charge amount does not exceed the amount to be transferred (or to be credited in our books) otherwise, it will be refused.
In addition if the residual amount is less than the minimum transfer limit defined in the Application default file, an override will be requested.
Validation Rules
3 character (uppercase alpha) - type SSS, or 1-3 numeric character currency code. '.' (Mandatory if a numeric currency code is entered, otherwise not input.) 1-14 characters plus a decimal point (standard amount format) - type AMT. When an input is made in this field, the Application will only accept Currency codes which comply with: - The Currency of the Account bearing the Charges; or - The Currency of the Transfer Amount, i.e. credit Currency for outgoing payments and debit Currency for incoming payments; or - Local Currency. The Currency must be the same for all Charge and Commission Types. The Numeric Currency Code must be an existing code on the NUMERIC.CURRENCY table.
If BEN.OUR.CHARGES = BEN and the system has been set to produce swift MESSAGE MT103 Single Customer Credit Transfer via the transaction type and FT.TXN.TYPE.CONDITION  then this field is mandatory. */
		CHARGE_AMT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=F, maxLength=22, sysNumber=51.0, core=true, t24Name=CHARGE.AMT, typeModifiers="C")
		/* This field is used to specify whether the corresponding charge amount entered is due to the sending bank or the receiving bank. If the transaction type is OT and the system has been set to produce SWIFT message MT103 - Single Customer Credit Transfer

Sender - the corresponding charge amount entered is due to the sending bank.
Receiver &#8211; the corresponding charge amount entered is due to the receiving bank.
Validation Rules

Permitted values are Sender or Receiver, for transaction type OT with a message type of MT103 the default      is Sender. */
		CHARGE_FOR : FT_Contract:FUNDS_TRANSFER__CHARGE_TYPE__CHARGE_FOR
			@t24:i (align=L, inputBehaviour=F, maxLength=8, sysNumber=52.0, core=true, t24Name=CHARGE.FOR)
	}
	FUNDS_TRANSFER__BK_TO_BK_INFO
	{
		/* Provides instructions or additional information from the Sending Bank for the receiver, intermediary account with institution, or beneficiary institution.
For Outward Payments, any details input by the User will be relayed to the Receiver Bank.
For Inward payments which are processed directly from Delivery, all transactions where any bank to bank information has been found will be placed in hold status (IHLD) to force the user to review the bank to bank information from the sending bank.
Whenever this fiels is used in a message transmitted between countries with different languages, it is recommended that English is used.
This field corresponds to field 72 on SWIFT messages, and must never to used for information for which another field is intended, or for instructions not required in a message.
Validation Rules
Up to 35 characters (uppercase alpha or numeric) - Type SW.  Multivalue field.  A maximum of 6 lines of 35 characters each will be allowed.  (Optional input for Transaction Types OT, OB and IT, otherwise not allowed.)
If this field is used, the first multivalue must contain a code word followed by further information.
All code words must be present on the SWIFT.CODE.WORDS file, and must be enclosed between slashes '/', at the beginning of the line.
Further code words and information can be entered in subsequent multivalues, but additional information contained on a new line must be preceeded by double slashes '//'. */
		BK_TO_BK_INFO : T24BusinessTypes:SW
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=59.0, core=true, t24Name=BK.TO.BK.INFO)
	}
	FUNDS_TRANSFER__IN_BK_TO_BK
	{
		/* Contains the bank to bank message as shown on the delivery or local clearing message received.
Validation Rules
This is a NOINPUT field. */
		IN_BK_TO_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=60.0, core=true, t24Name=IN.BK.TO.BK)
	}
	FUNDS_TRANSFER__FREE_TEXT_MSGTO
	{
		/* Identifies the recipient of a non-tested Message as required by the Customer.
This field will be used only when the User requires a free format cable to be sent to a Customer, or other party, as specified in this field.
When data is present in this field, a further telex will be sent in addition to the messages normally produced when the transaction is being processed by the Delivery Application.
A typical use of this function, would be the sending of a direct telex advice to the Beneficiary when one of the Customers requests the Bank to make an Outward Payment under direct telex advice to  the Beneficiary.
When the receiver of the message does not exist on the Customer file, the User may directly input the Name and Address details of the intended receiver of the message.  In this case the User should also supply the telex number (where available) to enable the Repair Function in the Delivery System to work.
For any free format telex, the Funds Transfer Application will automatically apply the default Secondary Telex Charge Code, from the Application Default File.  It is important, if the Bank is to charge for such cables, that this code is present on the Application Default File.
This charge is to be taken in addition to those specifically entered, or defaulted, within Funds Transfer main processing.
The Charge code, from the Application default file, must be a valid code in the Charge Type table such that the applicable charge may be derived according to standard Charge Type processing.
Validation Rules
1-6 numeric character Customer Number or 3-10 character Customer Mnemonic (uppercase alpha, numeric or '.') - Type MNE                                   or Maximum 4 lines of 35 characters each (alphanumeric) - Type A.  Multivalue field.  (Optional input. No default.)
When the field is input, the associated field, Message, is mandatory.
When this field is left blank, input in the field Message, will not be allowed.
Input will only be allowed for Outward Payments and where the Ordering Customer is bearing the cost of the Charges.  For any transaction where the Charge Code is Credit Less Charge or Waive, input to this field is not allowed.
Input will only be allowed when the default Secondary Telex Charge Code is present in the Application Default File.
If the input in this field is less than 11 characters, the system will interpret the input as a Customer Mnemonic and try to find a Customer accordingly.  For this reason, any free text used to input manually the name and address of the receiver of the free message must exceed 10 characters. */
		FREE_TEXT_MSGTO : T24BusinessTypes:CUST_BIC
			@t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=65.0, core=true, t24Name=FREE.TEXT.MSGTO, typeModifiers="SCUS")
	}
	FUNDS_TRANSFER__MESSAGE
	{
		/* Specifies the non-tested message which is to be sent to the Customer identified in the previous field.
Refer to the text of the previous field, FREE.TEXT.MSGTO.
Validation Rules
Up to 50 lines of 54 characters each (alphanumeric).- Type A.  (Mandatory input if previous field entered. No default.)
When this field is input, the field FREE.TEXT.MSGTO is mandatory.
When this field is left blank, input in FREE.TEXT.MSGTO is not allowed. */
		MESSAGE : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=F, maxLength=54, sysNumber=66.0, core=true, t24Name=MESSAGE)
	}
	FUNDS_TRANSFER__TAX_TYPE
	{
		/* Identifies the description from the Tax table of the Tax that is applicable on a Commission or a Charge taken on this transaction.
Validation Rules
(Internal field)  Multivalue field. */
		TAX_TYPE -> ST_ChargeConfig:TAX
			@t24:i (align=L, inputBehaviour=N, maxLength=2, sysNumber=68.0, core=true, businessType=A, t24Name=TAX.TYPE)
		/* The total amount of taxes applicable on all commission or charges taken on this transaction.
Validation Rules
(Internal field)  Multivalue field. */
		TAX_AMT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=22, sysNumber=69.0, core=true, t24Name=TAX.AMT, typeModifiers="C")
	}
	FUNDS_TRANSFER__IN_REC_CORR_BK
	{
		/* Identifies the Inward Receiver Correspondent Bank specified on incoming SWIFT payment messages (e.g. MT200) received direct from Delivery.  (In other words, it will identify the bank where the sender of the SWIFT message has made the funds available for ourselves.)
Validation Rules
(Internal field) */
		IN_REC_CORR_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=75.0, core=true, t24Name=IN.REC.CORR.BK)
	}
	FUNDS_TRANSFER__IN_SEND_CORR_BK
	{
		/* Identifies the Inward sender correspondent bank specified on incoming SWIFT payment messages (e.g. MT200) received direct from delivery.
If no direct account relationship exists between the Sender and the Receiver (or branch of the Receiver specified in Receiver correspondent bank), then this Field will always be present on inward SWIFT messages. It specifies where the sender has sent the cover payment and this will be the bank which the sender has used to make the funds available to ourselves, i.e. to our correspondent.  If the sender correspondent bank is the same as the receiver correspondent bank, inward Receiver Correspondent Bank will be blank and this field will also indicate where the funds are made available for the receiver.
Validation Rules
(Internal field). */
		IN_SEND_CORR_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=77.0, core=true, t24Name=IN.SEND.CORR.BK)
	}
	FUNDS_TRANSFER__DELIVERY_OUTREF
	{
		/* Identifies the reference numbers allocated by Delivery for all payments, advices, messages sent by the Funds Transfer to the Delivery Application.
This will enable enquiries to be made to see the output despatched and, if possible, to cancel output prior to Delivery.
Validation Rules
(Internal field)  Multivalue Field */
		DELIVERY_OUTREF : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=46, sysNumber=80.0, core=true, t24Name=DELIVERY.OUTREF)
	}
	FUNDS_TRANSFER__IN_REASON_OVE
	{
		/* Contains the reason for creation of the Funds Transfer in HLD status where FT records are created automatically.
This is currently only updated by the Generic accounting interface when entries are suspsensed. The details of the suspense reason are contained in this field.
Validation Rules
This is a NOINPUT field. */
		IN_REASON_OVE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=60, sysNumber=102.0, core=true, t24Name=IN.REASON.OVE)
	}
	FUNDS_TRANSFER__INSTRCTN_CODE
	{
		/* Free format text to appear on the SWIFT message 23E INSTRUCTION.TYPE on message MT103  Single Customer Credit Transfer
Validation of these code words take place in SWIFT, therefore it is important they are used in their correct format.  You are advised to refer to the SWIFT user guide.
Validation Rules


Only allowed when the Funds Transfer transaction has been set to produce SWIFT message MT103 via FT.TXN.TYPE.CONDITION */
		INSTRCTN_CODE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=108.0, core=true, t24Name=INSTRCTN.CODE)
	}
	FUNDS_TRANSFER__RELATED_MSG
	{
		/* Specify the message (COVER or PAYMENT) for which the CET detail is given in the next field and the same will be used for tag 13C (Time. Indication) for the appropriate MT103, 202,205 SWIFT message.
It can be either COVER or PAYMENT
FOREXAMPLE:

When MT103 & MT202 is generated and for COVER message, TIME. INDICATION is given as


Then 13C tag of swift message MT103 will have /SNDTIME/XXXX and MT202 /CLSTIME/XXXX.
To generate simple MT103 or MT202 or MT205 with tag 13C, the RELATED.MSG should be PAYMENT.
Validation


Optional multivalue field.

Duplicate values not allowed

Allowed value  PAYMENT or COVER

If details entered in this field, then next field - TIME.IND is mandatory */
		RELATED_MSG : FT_Contract:FUNDS_TRANSFER__RELATED_MSG__RELATED_MSG
			@t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=116.0, core=true, t24Name=RELATED.MSG)
		TIME_IND -> byValue FT_Contract:FUNDS_TRANSFER__RELATED_MSG__TIME_IND *
	}
	FUNDS_TRANSFER__RELATED_MSG__TIME_IND
	{
		/* Specify the Time indication detail here, which will be mapped to tag 13C of MT103 ,202, 205 Swift messages.
Time indication has 3 components ie. SWIFT.CODE.WORD, TIME.INDICATION and TIME.OFFSET.
Swift.Code.word and time indication has to be specified here.
TIME.OFFSET will get defaulted from field CET.TIME.DIFF in DE.PARM. If no value is given in DE.PARM, then defaulted to +0000
FOREXAMPLE:

In DE.PARM application, field CET.TIME.DIFF is set as +1000 and in FT, for field TIME.IND is given as /CLSTIME/1220, then 13C tag of swift message will be /CLSTIME/1220+1000
Validation


Mandatory if value entered in previous field.
SWIFT.CODE.WORD entered should be a valid record in SWIFT.CODE.WORDS for the application and message type.
Time indication related code words-CLSTIME, SNDTIME, RNCTIME can be used.
Code words should be given between two slashes. I.e. /CLSTIME/
Time details given should be a valid HHMM format and HH should be between 00 to 23 and MM should be between 00 to 59
Duplicate SWIFT.CODE.WORDS not allowed for a same RELATED.MSG.

If entered Minimum and maximum number of characters is 13. */
		TIME_IND : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=14, sysNumber=117.0, core=true, t24Name=TIME.IND)
	}
	FUNDS_TRANSFER__IN_TIME_IND
	{
		/* Time.Indication details  received from the Inward messages is  populated here.
Validation Rules

No input -Internal field */
		IN_TIME_IND : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=118.0, core=true, t24Name=IN.TIME.IND)
	}
	FUNDS_TRANSFER__SEND_TO_PARTY
	{
		/* The party to whom the Bank to Bank Info. to be sent can be mentioned here .
When the FT is authorised, based on FT.TXN.TYPE.CONDITION and details given in the FT, appropriate Swift messages will be sent to Credit Customer, Debit Customer, Collection - Remitting Bank and Receiver Bank.
Mention the Party to whom the BktoBk info (Tag 72) to be sent here. This BktoBk info will be used in tag 72 of all swift messages which are sent to that Party.
The following send to party can be used
CRCUST-Credit Customer, DRCUST- Debit Customer,
COLL.REM.BK- Collection - Remitting Bank, RCVBK- Receiver Bank.
If values entered then next field (BktoBk Out)  is mandatory.
BktoBk information can be specified here or in field BktoBk info not in both.
Validation Rules

Duplicate vales of Send.To.Party Not allowed
Valid values DRCUST,CRCUST,RCVBK,COLL.REM.BK */
		SEND_TO_PARTY : FT_Contract:FUNDS_TRANSFER__SEND_TO_PARTY__SEND_TO_PARTY
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=119.0, core=true, t24Name=SEND.TO.PARTY)
		BK_TO_BK_OUT -> byValue FT_Contract:FUNDS_TRANSFER__SEND_TO_PARTY__BK_TO_BK_OUT *
		/* Defaults the Swift message type which are pertaining to the SEND.TO.PARTY as mentioned in the Above field.
Validation Rules

No input field.
Valid Swift Message type. */
		MESSAGE_TYPE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=121.0, core=true, t24Name=MESSAGE.TYPE)
	}
	FUNDS_TRANSFER__SEND_TO_PARTY__BK_TO_BK_OUT
	{
		/* Provides instructions or additional information from the sending bank to the receiver, intermediary account with institution or beneficiary institution or Collection-remitting Bank.
Whenever this field is used in a message transmitted between countries with different languages, it is recommended that English is used.
This field corresponds to field 72 on SWIFT messages, and must never be used for information for which another field is intended, or for instructions not required in a message.
Mention the appropriate BktoBk Information for the Send.To.Party and same will be used in all swift messages in Tag 72 which are sent to that Party.
Validation Rules

Allowed only when SEND.TO.PARTY is entered and BktoBk Info field is null.
Up to 35 characters (uppercase alpha or numeric) - Type S. Multivalue field. A maximum of 6 lines of 35 characters each will be allowed.
If this field is used, the first multivalue must contain a code word followed by further information.
All code words must be present on the SWIFT.CODE.WORDS file for the appropriate application and for the message type if any defined . Code word       must be used between slashes.
Further code words and information can be entered in subsequent multivalues, but additional information continued on a new line must be preceded by double slashes '//'.
Duplicate code words Not allowed */
		BK_TO_BK_OUT : T24BusinessTypes:SW
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=120.0, core=true, t24Name=BK.TO.BK.OUT)
	}
	FUNDS_TRANSFER__IN_INSTR_CODE
	{
		/* Instruction code (Tag 23E) available in the Incoming Swift messages gets populated here.
Validation Rules

No input field
Updated by system */
		IN_INSTR_CODE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=124.0, core=true, t24Name=IN.INSTR.CODE)
	}
	FUNDS_TRANSFER__IN_PROCESS_ERR
	{
		/* Identifies any process errors that may have occurred during the Swift Inward message processing using OFS.GLOBUS.MANAGER.
The process error may be due to Non mapping of Incoming message tag details in FT Application or Errors encountered in FT application during Inward Message processing.
When Inward processing encounter any error related to FT application, the Funds Transfer records will be built as normal, except they will have a Record Status of 'IHLD'. The actual Error details will be held in this field.
But when it encounter non mapping of Tags in FT, FT will not be put on Hold but stores tag details for information
Validation Rules

Internal multivalue field. */
		IN_PROCESS_ERR : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=65, sysNumber=125.0, core=true, t24Name=IN.PROCESS.ERR)
	}
	FUNDS_TRANSFER__IN_SWIFT_MSG
	{
		/* Incoming Swift message detail which created the FUNDS.TRANSFER Contract is held here.
It contains full information along with tag which is available in the Block 4 of Incoming Swift message.
The information stored here is as it is received.
Validation Rules

No Input - Internal field */
		IN_SWIFT_MSG : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=65, sysNumber=126.0, core=true, t24Name=IN.SWIFT.MSG)
	}
	FUNDS_TRANSFER__IN_INTERMED_BK
	{
		/* Contains the Intermediary Bank details (Tag 56) as extracted from the delivery/local clearing message which generated the Funds Transfer.
Incoming message has Intermediary details (Tag 56) and it is a valid T24 Customer and the Customer of Credit.Acct.No is same as Intermediary Customer, then same is populated only in In.Intermed.Acc and In.Intermed.Bk. Otherwise Incoming Intermediary detail is populated in both Out & In Intermediary Bank fields.
Applicable for messages processed through OFS Globus Manager.
Validation Rules

Internal Field */
		IN_INTERMED_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=134.0, core=true, t24Name=IN.INTERMED.BK)
	}
	FUNDS_TRANSFER__IN_3RD_REIMB_BK
	{
		/* Contains the 3rd Reimbursement Bank details (Tag 55) as extracted from the delivery/local clearing message(MT103) which generated the Funds Transfer.
Incoming message has 3rd Reimbursement bank details (Tag 55) and it is a valid T24 Customer with a Vostro Account that will be used as Debit account and that Customer Id is populated here. Incase the tag(55a) contains a BIC code for which the customer id is not available then it will be populated with "SW-". Incase of 55D is used in incoming message, the entire details populated here.
Applicable for messages processed through OFS Globus Manager.
Validation Rules

Internal Field */
		IN_3RD_REIMB_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=138.0, core=true, t24Name=IN.3RD.REIMB.BK)
	}
	FUNDS_TRANSFER__EXTEND_INFO
	{
		/* Specify the details in free text format for envelope contents which will be used for Tag 77T and MT103 Extend will be generated instead of MT103.
The user block header (Block 3) of MT103 message in field 119 validation flag will be having "REMIT" to indicate MT103 is having Envelope Content Details.
Note when the total number of characters in the swift message  (MT103)  including header & trailers and the extend details given in this field exceeds the maximum no of characters as allowed for MT103, then message will be moved to ERROR.
When Incoming message has 77T it will be available in the field IN.SWIFT.MSG for information purpose.
Validation Rules

Allowed only when MT103.TYPE is MT103EXTEND.
Free text format. */
		EXTEND_INFO : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=65, sysNumber=142.0, core=true, t24Name=EXTEND.INFO, isTextarea=true)
	}
	FUNDS_TRANSFER__IN_SEND_CHG
	{
		/* When Swift message is processed through OFS.GLOBUS.MANAGER, the Charges collected by the sender for this message as well as previous bank in the transaction as given in Tag 71F of MT103 messages is captured here.
These Charges details are used when an incoming message generates outward MT103.
The net amount after deduction of the Sender's charges will be quoted as the inter-bank settled amount in field 32A of MT103.
Validation Rules

No input field
Update by system with value as received in incoming message. */
		IN_SEND_CHG : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=145.0, core=true, t24Name=IN.SEND.CHG)
	}
	FUNDS_TRANSFER__MSG_TYPE
	{
		MSG_TYPE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=159.0, core=true, t24Name=MSG.TYPE)
		MSG_DATE : T24BusinessTypes:D
			@t24:i (align=R, inputBehaviour=N, maxLength=8, sysNumber=160.0, core=true, t24Name=MSG.DATE)
	}
	FUNDS_TRANSFER__SIGNATORY
	{
		/* Indicates the customers who are signing this particular transaction .In case of bank user this field is entered manually whereas for external users this field is automatically updated with external user key
Validation Rules:
1. Accepts only valid customers
2. Duplicate customer not allowed. */
		SIGNATORY -> ST_Customer:CUSTOMER
			@t24:i (align=R, inputBehaviour=I, maxLength=35, sysNumber=161.0, core=true, businessType=CUS, t24Name=SIGNATORY)
	}
	FUNDS_TRANSFER__CARD_TXN_DETAIL
	{
		CARD_TXN_DETAIL : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=163.0, core=true, t24Name=CARD.TXN.DETAIL)
	}
	FUNDS_TRANSFER__IN_C_ORD_BK
	{
		IN_C_ORD_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=164.0, core=true, t24Name=IN.C.ORD.BK)
	}
	FUNDS_TRANSFER__IN_C_INTMED_BK
	{
		IN_C_INTMED_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=165.0, core=true, t24Name=IN.C.INTMED.BK)
	}
	FUNDS_TRANSFER__IN_C_ACC_WIT_BK
	{
		IN_C_ACC_WIT_BK : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=166.0, core=true, t24Name=IN.C.ACC.WIT.BK)
	}
	FUNDS_TRANSFER__IN_C_BK_T_BK_IN
	{
		IN_C_BK_T_BK_IN : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=167.0, core=true, t24Name=IN.C.BK.T.BK.IN)
	}
	FUNDS_TRANSFER__BIC_IBAN_BEN_NAME
	{
		BIC_IBAN_BEN_NAME : T24BusinessTypes:SW
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=186.0, core=true, t24Name=BIC.IBAN.BEN.NAME, isTextarea=true)
	}
	FUNDS_TRANSFER__STMT_NOS
	{
		/* A number generated automatically by the system after authorisation which identifies either a statement entry or a category entry in respect of a Funds Transfer transaction. After validation but before authorisation, the value 'VAL' will be inserted in this field to indicate that the transaction has been validated successfully but is still pending authorisation.
After authorisation of a Funds Transfer transaction, the system will automatically insert a number into this field and this number may refer to a statement entry or a category entry depending on the value contained in the corresponding multi-value fields. The following examples will illustrate the use of this field.
Example 1:
On the execution date of a Funds Transfer transaction there will normally be an entry on a Customer account and the following type of number will be generated at this field:
103.1 STMT.NO ............ 673732684.48 103.2 STMT.NO ............ 1
The number automatically generated in Field 92.1 is unique to the transaction in question and is built in the following way:
1. The first four digits '6737' indicate the number of days since the 1st of January 1968. In our example, it corresponds to the 11th of June 1986.
2. The next five digits '32684' indicate the number of seconds since midnight. In our example, it corresponds to an entry generated on line at 09:04:44 AM.
3. The last two digits '48' indicate the number of hundreds of seconds.
The value assigned (again automatically) to field 103.2 identifies the number in 103.1 as a statement entry number. If the User wishes to call this statement entry record on to the screen the User will invoke the STMT.ENTRY Application and then type the following at 'Awaiting ID':
673732684.480001
where the suffix '0001' identifies it as the first statement entry (there will normally be more than one as the next example will illustrate).
Example 2:
A second example outlined here is similar to that in example A in that there is a statement entry on value date for both the our account and the customer account. The system handles this case as follows:
103.1 STMT.NO .......... 673732684.48 103.2 STMT.NO .......... 1-2
Once again field 103.1 contains the identification number automatically generated by the system while field 103.2 now contains two separate numbers signifying that there are in fact two separate statement entries, one in respect of the our account pay and one in respect of the our account receive. If the User wishes to see either of these he must first of all invoke STMT.ENTRY followed by the desired function and then at 'Awaiting ID' type EITHER:
673732684.480001
where the addition of the suffix '0001' identifies the statement entry in respect of the our account OR
673732684.480002
where the addition of the suffix '0002' identifies the statement entry in respect of the customer account.
Example 3:
A third example might be that of a category entry generated at initiation of a Funds Transfer transaction where commission or charges have been debited to the customer and credited to a profit and loss category code. In this case the following entries are generated on the transaction:
103.1 STMT.NO .......... 673732684.48 103.3 STMT.NO .......... 1
Once again the standard type number is generated and inserted at Field 103.1.
Now, however, Field 103.2 is replaced by Field 92.3 which now identifies the number in 103.1 as a category entry and not a statement entry.
To call this category entry record onto the screen the User must now type:
CATEG.ENTRY at 'Awaiting Application'
followed by:
673732684.480001 at 'Awaiting ID'.
Validation Rules

Internal multi-value field */
		STMT_NOS : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=195.0, core=true, t24Name=STMT.NOS)
	}
	FUNDS_TRANSFER__OVERRIDE
	{
		/* Contains all the Override messages which the User agreed to during Input.
During the validation stage of a Funds Transfer transaction the system may provide the User with a series of screen override messages, to indicate an anomaly, for instance, that the exchange rate varies by more than the variation tolerance defined in the currency table.
In the event that the User confirms the Override, the full text of the actual Override Message will be stored, for reference purposes only, in this multi-value field.
For example, if the User inserts an 'abnormal' exchange rate in the field corresponding to the exchange rate then when the deal is validated a warning bell will sound and a message will appear, at the foot of the screen, which reads:
'VARIANCE OF RATE EXCEEDS PERMITTED TOLERANCE'
This will draw the User's attention to the rate entered, which may be a mistake and can then be corrected, or, on the other hand, it may be correct input and so the User confirms that this rate is really intended.
A second example might be in respect of a Funds Transfer transaction done with a client who does not have a credit line established with the bank and where the amount of the outgoing transfer exceeds the balance of the account. In this case when the transaction is validated a warning bell will sound and a message will appear, at the foot of the screen, which reads:
'ACCOUNT NNN UNAUTHORISED OVERDRAFT'
Once again the User's attention is drawn to the situation and either corrected or confirmed via a positive response to the Override Message.
If, subsequently, the Funds Transfer record is either fully displayed or printed, then all override messages will be present.
Validation Rules

(Internal field) Multivalue field */
		OVERRIDE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=196.0, core=true, t24Name=OVERRIDE)
	}
	FUNDS_TRANSFER__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=199.0, core=true, t24Name=INPUTTER)
	}
	FUNDS_TRANSFER__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=200.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FUNDS_TRANSFER__DEBIT_CUST_ADDRESS
	{
		DEBIT_CUST_ADDRESS : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBIT.CUST.ADDRESS, genOperation="DEBIT.CUSTOMER>CUSTOMER>ADDRESS")
	}
	FUNDS_TRANSFER__DEBIT_CUST_STREET
	{
		DEBIT_CUST_STREET : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBIT.CUST.STREET, genOperation="DEBIT.CUSTOMER>CUSTOMER>STREET")
	}
	FUNDS_TRANSFER__DEBT_CUS_TOWN_CON
	{
		DEBT_CUS_TOWN_CON : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBT.CUS.TOWN.CON, genOperation="DEBIT.CUSTOMER>CUSTOMER>TOWN.COUNTRY")
	}
	FUNDS_TRANSFER__DEBIT_CUS_POST_CD
	{
		DEBIT_CUS_POST_CD : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBIT.CUS.POST.CD, genOperation="DEBIT.CUSTOMER>CUSTOMER>POST.CODE")
	}
	FUNDS_TRANSFER__DEBT_CUS_COUNTRY
	{
		DEBT_CUS_COUNTRY : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBT.CUS.COUNTRY, genOperation="DEBIT.CUSTOMER>CUSTOMER>COUNTRY")
	}
	FUNDS_TRANSFER__DEBIT_CUS_NAME_1
	{
		DEBIT_CUS_NAME_1 : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBIT.CUS.NAME.1, genOperation="DEBIT.CUSTOMER>CUSTOMER>NAME.1")
	}
	FUNDS_TRANSFER__DEBIT_CUS_NAME_2
	{
		DEBIT_CUS_NAME_2 : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBIT.CUS.NAME.2, genOperation="DEBIT.CUSTOMER>CUSTOMER>NAME.2")
	}
	FUNDS_TRANSFER__DEBIT_CUS_LEGAL_ID
	{
		DEBIT_CUS_LEGAL_ID : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=DEBIT.CUS.LEGAL.ID, genOperation="DEBIT.CUSTOMER>CUSTOMER>LEGAL.ID")
	}
	FUNDS_TRANSFER__CRED_CUS_ADDRESS
	{
		CRED_CUS_ADDRESS : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CRED.CUS.ADDRESS, genOperation="CREDIT.CUSTOMER>CUSTOMER>ADDRESS")
	}
	FUNDS_TRANSFER__CRED_CUS_STREET
	{
		CRED_CUS_STREET : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CRED.CUS.STREET, genOperation="CREDIT.CUSTOMER>CUSTOMER>STREET")
	}
	FUNDS_TRANSFER__CRED_CUS_TOWN_CON
	{
		CRED_CUS_TOWN_CON : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CRED.CUS.TOWN.CON, genOperation="CREDIT.CUSTOMER>CUSTOMER>TOWN.COUNTRY")
	}
	FUNDS_TRANSFER__CRED_CUS_POS_CODE
	{
		CRED_CUS_POS_CODE : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CRED.CUS.POS.CODE, genOperation="CREDIT.CUSTOMER>CUSTOMER>POST.CODE")
	}
	FUNDS_TRANSFER__CRED_CUS_COUNTRY
	{
		CRED_CUS_COUNTRY : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CRED.CUS.COUNTRY, genOperation="CREDIT.CUSTOMER>CUSTOMER>COUNTRY")
	}
	FUNDS_TRANSFER__CRED_CUS_NAME_1
	{
		CRED_CUS_NAME_1 : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CRED.CUS.NAME.1, genOperation="CREDIT.CUSTOMER>CUSTOMER>NAME.1")
	}
	FUNDS_TRANSFER__CRED_CUS_NAME_2
	{
		CRED_CUS_NAME_2 : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CRED.CUS.NAME.2, genOperation="CREDIT.CUSTOMER>CUSTOMER>NAME.2")
	}
	FUNDS_TRANSFER__CRED_CUS_LEGAL_ID
	{
		CRED_CUS_LEGAL_ID : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=CRED.CUS.LEGAL.ID, genOperation="CREDIT.CUSTOMER>CUSTOMER>LEGAL.ID")
	}
	FUNDS_TRANSFER__ORD_CUST_NAME
	{
		/* An internal J-desc field */
		ORD_CUST_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=ORD.CUST.NAME, genOperation="ORDERING.CUST>CUSTOMER>NAME.ADDRESS")
	}
	FUNDS_TRANSFER__ORDERING_BANK_NAME
	{
		/* An internal J-desc field */
		ORDERING_BANK_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=ORDERING.BANK.NAME, genOperation="ORDERING.BANK>CUSTOMER>NAME.ADDRESS")
	}
	FUNDS_TRANSFER__BEN_ACCT_NAME
	{
		/* An internal J-desc field */
		BEN_ACCT_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=BEN.ACCT.NAME, genOperation="BEN.ACCT.NO>ACCOUNT>ACCOUNT.TITLE.1")
	}
	FUNDS_TRANSFER__BEN_CUST_NAME
	{
		/* An internal J-desc field */
		BEN_CUST_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=BEN.CUST.NAME, genOperation="BEN.CUSTOMER>CUSTOMER>NAME.ADDRESS")
	}
	FUNDS_TRANSFER__BEN_BANK_NAME
	{
		/* An internal J-desc field */
		BEN_BANK_NAME : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=35, core=false, t24Name=BEN.BANK.NAME, genOperation="BEN.BANK>ACCOUNT>ACCOUNT.TITLE.1")
	}
	FUNDS_TRANSFER__MSG_REFERENCE
	{
		MSG_REFERENCE : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, core=false, t24Name=MSG.REFERENCE, genOperation="FIELDS(DELIVERY.OUTREF,\'-\',1,1)")
	}
	/* The file allows, for a given SWIFT message type, restrictions to be defined which will prevent the output of the message via the delivery system. These restrictions may be defined to be conditional on the currency and amount to which the message relates or on the customer who is to be its recipient.
IMPORTANT NOTE: THE CURRENT IMPLEMENTATION OF MESSAGE CONDITION CHECKING APPLIES ONLY TO NOTICE TO RECEIVE MESSAGES (210'S) GENERATED BY THE FOREIGN EXCHANGE APPLICATION. */
	MESSAGE_COND
		@t24:i (t24Name=MESSAGE.COND, level=C, type=H, allowedFunctions="A D E I L P Q S", localRefAllowed=false)
	{
		/* Enter a valid SWIFT message type.
The SWIFT identifier for the message type to which the table of conditions applies.
The only instance in which the table will be referred to by an Application calling delivery is when a Notice to Receive (210)  is generated by following  applications : Funds Transfer, Foreign Exchange, Forward Rate Agreements, Netting Payments, Securities, Money Market, and Letters of Credit (only for Hard delivery setup)
Validation Rules

1-4 numeric characters (Mandatory input)
The message type must exist on the DE.MESSAGE table. */
		MESSAGE_TYPE -> FT_Contract:MESSAGE_COND PK required
			@i18n:Label (en="Message Type")
			@i18n:Tooltip (en="Delivery message types generated for this record")
			@t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=0.0, core=true, t24Name=MESSAGE.TYPE)
		/* The default condition to determine whether the message should be sent.
In the absence of specific conditions, either by currency or by customer, the value in this field will determine whether the message is to be sent (YES) or not sent (NO). If the value 'YES' is entered, a minimum amount, below which the message will be withheld, may be entered in the field AMOUNT.
Validation Rules
YES or NO (Mandatory input) */
		SEND_MESSAGE : FT_Contract:MESSAGE_COND__SEND_MESSAGE required
			@i18n:Label (en="Send Message ?")
			@i18n:Tooltip (en="Indicates whether to send the message or not")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=1.0, core=true, t24Name=SEND.MESSAGE)
		/* A default minimum amount, below which the message will not be sent.
The value in this field is a currency amount which may be entered in conjunction with the value 'YES' in the field SEND MESSAGE. In the absence of specific conditions, either by currency or by customer, the value in this field will determine whether the message is to be sent depending on the amount involved in the transaction. A message relating to a currency transaction equal to or greater than this amount will be generated; below this amount the message will be withheld.
Validation Rules
Standard amount format. (Optional input; no input is allowed if the field SEND MESSAGE has the value 'NO')
No decimal places are allowed. */
		AMOUNT : T24BusinessTypes:AMT
			@i18n:Label (en=Amount)
			@i18n:Tooltip (en="Indicates the Amount")
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=2.0, core=true, t24Name=AMOUNT, typeModifiers="")
		CURRENCY -> byValue FT_Contract:MESSAGE_COND__CURRENCY *
		CUSTOMER -> byValue FT_Contract:MESSAGE_COND__CUSTOMER *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=8.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=9.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FT_Contract:MESSAGE_COND__INPUTTER *
		DATE_TIME -> byValue FT_Contract:MESSAGE_COND__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=12.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=13.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=14.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=15.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=16.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	MESSAGE_COND__CURRENCY
	{
		/* A currency code, for which specific conditions are to apply determining whether or not the message is required.
Identifies a currency for which conditions other than those in the default fields SEND MESSAGE and AMOUNT are to apply. These conditions by currency are specified in the associated fields SEND BY CCY and CCY AMOUNT.
Validation Rules
3 type SSS uppercase alpha characters SWIFT currency code, or 1-3 numeric character currency code. Multivalue field associated with SEND BY CCY (Field 4) and CCY AMOUNT (Field 5). (Optional input)
Must be a valid code on the CURRENCY table. */
		CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=3.0, core=true, businessType=CCY, t24Name=CURRENCY)
		/* Whether the message should be sent for the currency specified.
The value in this field will determine whether the message is to be sent (YES) or not sent (NO) for a transaction in the currency specified in the field CURRENCY. If the value 'YES' is entered, a minimum amount, below which the message will be withheld, may be entered in the field CCY AMOUNT.
Validation Rules
YES or NO Multivalue field associated with CURRENCY (Field 3) and CCY AMOUNT (Field 5). (Optional input) */
		SEND_BY_CCY : FT_Contract:MESSAGE_COND__CURRENCY__SEND_BY_CCY
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=4.0, core=true, t24Name=SEND.BY.CCY)
		/* A minimum amount, below which the message will not be sent for the currency specified.
The value in this field is a currency amount which may be entered in conjunction with the value 'YES' in the field SEND BY CCY. A message relating to a currency transaction equal to or greater than this amount will be generated; below this amount the message will be withheld.
Validation Rules
Standard amount format. Multivalue field associated with CURRENCY (Field 3) and SEND BY CCY (Field 4). (Optional input; no input is allowed if the field SEND BY CCY has the value 'NO')
No decimal places are allowed. */
		CCY_AMOUNT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=5.0, core=true, t24Name=CCY.AMOUNT, typeModifiers="")
	}
	MESSAGE_COND__CUSTOMER
	{
		/* A customer code, for which specific conditions are to apply determining whether or not the message is required.
Identifies a customer for which conditions other than those in the default fields SEND MESSAGE and AMOUNT are to apply. These conditions by customer are specified in the associated field SEND BY CUS and take precedence over any conditions relating to the currency of the transaction.
Validation Rules
Standard customer format. Multivalue field associated with SEND BY CUS (Field 7). (Optional input) */
		CUSTOMER -> ST_Customer:CUSTOMER
			@t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=6.0, core=true, businessType=CUS, t24Name=CUSTOMER)
		/* Whether the message should be sent for the customer specified.
The value in this field will determine whether the message is to be sent (YES) or not sent (NO) if the recipient is the customer specified in the field CUSTOMER.
Validation Rules
YES or NO Multivalue field associated with CURRENCY (Field 6). (Optional input) */
		SEND_BY_CUS : FT_Contract:MESSAGE_COND__CUSTOMER__SEND_BY_CUS
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=7.0, core=true, t24Name=SEND.BY.CUS)
	}
	MESSAGE_COND__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=10.0, core=true, t24Name=INPUTTER)
	}
	MESSAGE_COND__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=11.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
}
Enumerations {
	FUNDS_TRANSFER__MAILING : mml:string
		BEN=BEN
		CUST=CUST
		BANK=BANK
	FUNDS_TRANSFER__PAY_METHOD : mml:string
		TA=TA
		PT=PT
		PA=PA
		PP=PP
		AT=AT
		AI=AI
		PB=PB
		CH=CH
	FUNDS_TRANSFER__BEN_OUR_CHARGES : mml:string
		BEN=BEN
		OUR=OUR
		SHA=SHA
	FUNDS_TRANSFER__CHARGE_COM_DISPLAY : mml:string
		Y=Y
		NO=NO
	FUNDS_TRANSFER__COMMISSION_CODE : mml:string
		CREDIT_LESS_CHARGES="CREDIT LESS CHARGES"
		DEBIT_PLUS_CHARGES="DEBIT PLUS CHARGES"
		WAIVE=WAIVE
	FUNDS_TRANSFER__COMMISSION_TYPE__COMMISSION_FOR : mml:string
		SENDER=SENDER
		RECEIVER=RECEIVER
	FUNDS_TRANSFER__CHARGE_CODE : mml:string
		CREDIT_LESS_CHARGES="CREDIT LESS CHARGES"
		DEBIT_PLUS_CHARGES="DEBIT PLUS CHARGES"
		WAIVE=WAIVE
	FUNDS_TRANSFER__CHARGE_TYPE__CHARGE_FOR : mml:string
		SENDER=SENDER
		RECEIVER=RECEIVER
	FUNDS_TRANSFER__RETURN_TO_DEPT : mml:string
		Y=Y
		NO=NO
	FUNDS_TRANSFER__PRIORITY_TXN : mml:string
		P=P
		U=U
	FUNDS_TRANSFER__FED_FUNDS : mml:string
		Y=Y
		NO=NO
	FUNDS_TRANSFER__SEND_PAYMENT_Y_N : mml:string
		Y=Y
		NO=NO
	FUNDS_TRANSFER__DR_ADVICE_REQD_Y_N : mml:string
		Y=Y
		NO=NO
	FUNDS_TRANSFER__CR_ADVICE_REQD_Y_N : mml:string
		Y=Y
		NO=NO
	FUNDS_TRANSFER__RETURN_CHEQUE : mml:string
		YES=YES
		NO=NO
	FUNDS_TRANSFER__RELATED_MSG__RELATED_MSG : mml:string
		PAYMENT=PAYMENT
		COVER=COVER
	FUNDS_TRANSFER__SEND_TO_PARTY__SEND_TO_PARTY : mml:string
		DRCUST=DRCUST
		CRCUST=CRCUST
		RCVBK=RCVBK
		COLL_REM_BK=COLL.REM.BK
	FUNDS_TRANSFER__RATE_FIXING : mml:string
		YES=YES
		NO=NO
	FUNDS_TRANSFER__COVER_METHOD : mml:string
		SERIAL=SERIAL
		COVER__DIRECT=COVER-DIRECT
		COVER__NEAR=COVER-NEAR
		THIRD__INST=THIRD-INST
	FUNDS_TRANSFER__MT103_TYPE : mml:string
		MT103_="MT103+"
		MT103EXTEND=MT103EXTEND
	FUNDS_TRANSFER__EXTEND_FORMAT : mml:string
		ANSI=ANSI
		NARR=NARR
		SWIF=SWIF
		UEDI=UEDI
	FUNDS_TRANSFER__RATE_FIXING_IND : mml:string
		Y=Y
		NO=NO
	FUNDS_TRANSFER__NETTING_STATUS : mml:string
		n102=102
		n203=203
		n102STAR203="102*203"
		N=N
		NULL=NULL
	FUNDS_TRANSFER__BK_OPERATION_CODE : mml:string
		CREDIT=CREDIT
		CHQB=CHQB
		CRED=CRED
		CRTS=CRTS
		SPAY=SPAY
		SPRI=SPRI
		SSTD=SSTD
		NULL=NULL
	FUNDS_TRANSFER__IBLC_CODE_DR : mml:string
		n010=010
		n020=020
		n025=025
		n030=030
		n031=031
		n032=032
		n034=034
		n040=040
		n050=050
		n060=060
		n070=070
		n072=072
		n080=080
		n090=090
		n091=091
		n092=092
		n093=093
		n094=094
		n095=095
		n096=096
		n140=140
		n141=141
		n150=150
		n151=151
		n152=152
		n153=153
		n160=160
		n161=161
		n170=170
		n171=171
		n172=172
		n173=173
		n174=174
		n175=175
		n176=176
		n177=177
		n180=180
		n200=200
		n210=210
		n211=211
		n212=212
		n220=220
		n221=221
		n222=222
		n223=223
		n224=224
		n230=230
		n240=240
		n241=241
		n242=242
		n243=243
		n244=244
		n311=311
		n312=312
		n313=313
		n321=321
		n322=322
		n324=324
		n325=325
		n333=333
		n334=334
		n335=335
		n336=336
		n400=400
		n401=401
		n420=420
		n431=431
		n432=432
		n434=434
		n435=435
		n436=436
		n437=437
		n438=438
		n441=441
		n442=442
		n443=443
		n444=444
		n451=451
		n452=452
		n453=453
		n454=454
		n455=455
		n481=481
		n482=482
		n484=484
		n485=485
		n486=486
		n487=487
		n488=488
		n489=489
		n490=490
		n491=491
		n492=492
		n493=493
		n494=494
		n495=495
		n496=496
		n500=500
		n501=501
		n502=502
		n503=503
		n504=504
		n505=505
		n506=506
		n507=507
		n513=513
		n514=514
		n515=515
		n540=540
		n550=550
		n551=551
		n560=560
		n600=600
		n601=601
		n610=610
		n630=630
		n640=640
		n650=650
		n660=660
		n700=700
		n801=801
		n802=802
		n803=803
		n804=804
		n821=821
		n822=822
		n823=823
		n824=824
	FUNDS_TRANSFER__IBLC_CODE_CR : mml:string
		n010=010
		n020=020
		n025=025
		n030=030
		n031=031
		n032=032
		n034=034
		n040=040
		n050=050
		n060=060
		n070=070
		n072=072
		n080=080
		n090=090
		n091=091
		n092=092
		n093=093
		n094=094
		n095=095
		n096=096
		n140=140
		n141=141
		n150=150
		n151=151
		n152=152
		n153=153
		n160=160
		n161=161
		n170=170
		n171=171
		n172=172
		n173=173
		n174=174
		n175=175
		n176=176
		n177=177
		n180=180
		n200=200
		n210=210
		n211=211
		n212=212
		n220=220
		n221=221
		n222=222
		n223=223
		n224=224
		n230=230
		n240=240
		n241=241
		n242=242
		n243=243
		n244=244
		n311=311
		n312=312
		n313=313
		n321=321
		n322=322
		n324=324
		n325=325
		n333=333
		n334=334
		n335=335
		n336=336
		n400=400
		n401=401
		n420=420
		n431=431
		n432=432
		n434=434
		n435=435
		n436=436
		n437=437
		n438=438
		n441=441
		n442=442
		n443=443
		n444=444
		n451=451
		n452=452
		n453=453
		n454=454
		n455=455
		n481=481
		n482=482
		n484=484
		n485=485
		n486=486
		n487=487
		n488=488
		n489=489
		n490=490
		n491=491
		n492=492
		n493=493
		n494=494
		n495=495
		n496=496
		n500=500
		n501=501
		n502=502
		n503=503
		n504=504
		n505=505
		n506=506
		n507=507
		n513=513
		n514=514
		n515=515
		n540=540
		n550=550
		n551=551
		n560=560
		n600=600
		n601=601
		n610=610
		n630=630
		n640=640
		n650=650
		n660=660
		n700=700
		n801=801
		n802=802
		n803=803
		n804=804
		n821=821
		n822=822
		n823=823
		n824=824
	FUNDS_TRANSFER__IBLC_CODE_CH : mml:string
		n010=010
		n020=020
		n025=025
		n030=030
		n031=031
		n032=032
		n034=034
		n040=040
		n050=050
		n060=060
		n070=070
		n072=072
		n080=080
		n090=090
		n091=091
		n092=092
		n093=093
		n094=094
		n095=095
		n096=096
		n140=140
		n141=141
		n150=150
		n151=151
		n152=152
		n153=153
		n160=160
		n161=161
		n170=170
		n171=171
		n172=172
		n173=173
		n174=174
		n175=175
		n176=176
		n177=177
		n180=180
		n200=200
		n210=210
		n211=211
		n212=212
		n220=220
		n221=221
		n222=222
		n223=223
		n224=224
		n230=230
		n240=240
		n241=241
		n242=242
		n243=243
		n244=244
		n311=311
		n312=312
		n313=313
		n321=321
		n322=322
		n324=324
		n325=325
		n333=333
		n334=334
		n335=335
		n336=336
		n400=400
		n401=401
		n420=420
		n431=431
		n432=432
		n434=434
		n435=435
		n436=436
		n437=437
		n438=438
		n441=441
		n442=442
		n443=443
		n444=444
		n451=451
		n452=452
		n453=453
		n454=454
		n455=455
		n481=481
		n482=482
		n484=484
		n485=485
		n486=486
		n487=487
		n488=488
		n489=489
		n490=490
		n491=491
		n492=492
		n493=493
		n494=494
		n495=495
		n496=496
		n500=500
		n501=501
		n502=502
		n503=503
		n504=504
		n505=505
		n506=506
		n507=507
		n513=513
		n514=514
		n515=515
		n540=540
		n550=550
		n551=551
		n560=560
		n600=600
		n601=601
		n610=610
		n630=630
		n640=640
		n650=650
		n660=660
		n700=700
		n801=801
		n802=802
		n803=803
		n804=804
		n821=821
		n822=822
		n823=823
		n824=824
	FUNDS_TRANSFER__IBLC_COUNTRY_DR : mml:string
		n290=290
		n240=240
		n60=60
		n901=901
		n130=130
		n270=270
		n100=100
		n140=140
		n200=200
		n20=20
		n905=905
		n160=160
		n260=260
		n190=190
		n210=210
		n70=70
		n902=902
		n906=906
		n900=900
		n90=90
		n40=40
		n230=230
		n120=120
		n280=280
		n30=30
		n903=903
		n80=80
		n50=50
		n250=250
		n180=180
		n220=220
		n904=904
		n170=170
		n310=310
		n910=910
		n330=330
		n907=907
		n911=911
		n300=300
		n340=340
		n320=320
		n926=926
		n914=914
		n908=908
		n923=923
		n918=918
		n924=924
		n920=920
		n919=919
		n922=922
		n913=913
		n912=912
		n915=915
		n360=360
		n917=917
		n921=921
		n916=916
		n925=925
		n440=440
		n390=390
		n301=301
		n302=302
		n303=303
		n450=450
		n927=927
		n928=928
		n650=650
		n350=350
		n400=400
		n930=930
		n929=929
		n933=933
		n420=420
		n939=939
		n936=936
		n410=410
		n993=993
		n934=934
		n937=937
		n370=370
		n973=973
		n640=640
		n932=932
		n935=935
		n931=931
		n380=380
		n430=430
		n938=938
		n110=110
		n10=10
		n940=940
		n610=610
		n304=304
		n305=305
		n311=311
		n959=959
		n520=520
		n942=942
		n580=580
		n560=560
		n660=660
		n570=570
		n530=530
		n630=630
		n510=510
		n944=944
		n620=620
		n480=480
		n308=308
		n309=309
		n941=941
		n953=953
		n955=955
		n949=949
		n943=943
		n703=703
		n704=704
		n705=705
		n958=958
		n946=946
		n500=500
		n945=945
		n947=947
		n590=590
		n550=550
		n950=950
		n954=954
		n956=956
		n600=600
		n540=540
		n990=990
		n750=750
		n963=963
		n960=960
		n970=970
		n720=720
		n730=730
		n740=740
		n962=962
		n760=760
		n700=700
		n965=965
		n964=964
		n710=710
		n966=966
		n967=967
		n961=961
		n890=890
		n969=969
		n976=976
		n974=974
		n820=820
		n980=980
		n981=981
		n850=850
		n780=780
		n810=810
		n830=830
		n971=971
		n978=978
		n800=800
		n992=992
		n979=979
		n701=701
		n702=702
		n770=770
		n977=977
		n975=975
		n790=790
		n840=840
		n880=880
		n972=972
		n719=719
		n860=860
		n985=985
		n870=870
		n714=714
		n982=982
		n987=987
		n706=706
		n707=707
		n986=986
		n306=306
		n307=307
		n708=708
		n709=709
		n711=711
		n712=712
		n997=997
		n998=998
		n999=999
		n001=001
	FUNDS_TRANSFER__IBLC_COUNTRY_CR : mml:string
		n290=290
		n240=240
		n60=60
		n901=901
		n130=130
		n270=270
		n100=100
		n140=140
		n200=200
		n20=20
		n905=905
		n160=160
		n260=260
		n190=190
		n210=210
		n70=70
		n902=902
		n906=906
		n900=900
		n90=90
		n40=40
		n230=230
		n120=120
		n280=280
		n30=30
		n903=903
		n80=80
		n50=50
		n250=250
		n180=180
		n220=220
		n904=904
		n170=170
		n310=310
		n910=910
		n330=330
		n907=907
		n911=911
		n300=300
		n340=340
		n320=320
		n926=926
		n914=914
		n908=908
		n923=923
		n918=918
		n924=924
		n920=920
		n919=919
		n922=922
		n913=913
		n912=912
		n915=915
		n360=360
		n917=917
		n921=921
		n916=916
		n925=925
		n440=440
		n390=390
		n301=301
		n302=302
		n303=303
		n450=450
		n927=927
		n928=928
		n650=650
		n350=350
		n400=400
		n930=930
		n929=929
		n933=933
		n420=420
		n939=939
		n936=936
		n410=410
		n993=993
		n934=934
		n937=937
		n370=370
		n973=973
		n640=640
		n932=932
		n935=935
		n931=931
		n380=380
		n430=430
		n938=938
		n110=110
		n10=10
		n940=940
		n610=610
		n304=304
		n305=305
		n311=311
		n959=959
		n520=520
		n942=942
		n580=580
		n560=560
		n660=660
		n570=570
		n530=530
		n630=630
		n510=510
		n944=944
		n620=620
		n480=480
		n308=308
		n309=309
		n941=941
		n953=953
		n955=955
		n949=949
		n943=943
		n703=703
		n704=704
		n705=705
		n958=958
		n946=946
		n500=500
		n945=945
		n947=947
		n590=590
		n550=550
		n950=950
		n954=954
		n956=956
		n600=600
		n540=540
		n990=990
		n750=750
		n963=963
		n960=960
		n970=970
		n720=720
		n730=730
		n740=740
		n962=962
		n760=760
		n700=700
		n965=965
		n964=964
		n710=710
		n966=966
		n967=967
		n961=961
		n890=890
		n969=969
		n976=976
		n974=974
		n820=820
		n980=980
		n981=981
		n850=850
		n780=780
		n810=810
		n830=830
		n971=971
		n978=978
		n800=800
		n992=992
		n979=979
		n701=701
		n702=702
		n770=770
		n977=977
		n975=975
		n790=790
		n840=840
		n880=880
		n972=972
		n719=719
		n860=860
		n985=985
		n870=870
		n714=714
		n982=982
		n987=987
		n706=706
		n707=707
		n986=986
		n306=306
		n307=307
		n708=708
		n709=709
		n711=711
		n712=712
		n997=997
		n998=998
		n999=999
		n001=001
	FUNDS_TRANSFER__IBLC_COUNTRY_CH : mml:string
		n290=290
		n240=240
		n60=60
		n901=901
		n130=130
		n270=270
		n100=100
		n140=140
		n200=200
		n20=20
		n905=905
		n160=160
		n260=260
		n190=190
		n210=210
		n70=70
		n902=902
		n906=906
		n900=900
		n90=90
		n40=40
		n230=230
		n120=120
		n280=280
		n30=30
		n903=903
		n80=80
		n50=50
		n250=250
		n180=180
		n220=220
		n904=904
		n170=170
		n310=310
		n910=910
		n330=330
		n907=907
		n911=911
		n300=300
		n340=340
		n320=320
		n926=926
		n914=914
		n908=908
		n923=923
		n918=918
		n924=924
		n920=920
		n919=919
		n922=922
		n913=913
		n912=912
		n915=915
		n360=360
		n917=917
		n921=921
		n916=916
		n925=925
		n440=440
		n390=390
		n301=301
		n302=302
		n303=303
		n450=450
		n927=927
		n928=928
		n650=650
		n350=350
		n400=400
		n930=930
		n929=929
		n933=933
		n420=420
		n939=939
		n936=936
		n410=410
		n993=993
		n934=934
		n937=937
		n370=370
		n973=973
		n640=640
		n932=932
		n935=935
		n931=931
		n380=380
		n430=430
		n938=938
		n110=110
		n10=10
		n940=940
		n610=610
		n304=304
		n305=305
		n311=311
		n959=959
		n520=520
		n942=942
		n580=580
		n560=560
		n660=660
		n570=570
		n530=530
		n630=630
		n510=510
		n944=944
		n620=620
		n480=480
		n308=308
		n309=309
		n941=941
		n953=953
		n955=955
		n949=949
		n943=943
		n703=703
		n704=704
		n705=705
		n958=958
		n946=946
		n500=500
		n945=945
		n947=947
		n590=590
		n550=550
		n950=950
		n954=954
		n956=956
		n600=600
		n540=540
		n990=990
		n750=750
		n963=963
		n960=960
		n970=970
		n720=720
		n730=730
		n740=740
		n962=962
		n760=760
		n700=700
		n965=965
		n964=964
		n710=710
		n966=966
		n967=967
		n961=961
		n890=890
		n969=969
		n976=976
		n974=974
		n820=820
		n980=980
		n981=981
		n850=850
		n780=780
		n810=810
		n830=830
		n971=971
		n978=978
		n800=800
		n992=992
		n979=979
		n701=701
		n702=702
		n770=770
		n977=977
		n975=975
		n790=790
		n840=840
		n880=880
		n972=972
		n719=719
		n860=860
		n985=985
		n870=870
		n714=714
		n982=982
		n987=987
		n706=706
		n707=707
		n986=986
		n306=306
		n307=307
		n708=708
		n709=709
		n711=711
		n712=712
		n997=997
		n998=998
		n999=999
		n001=001
	FUNDS_TRANSFER__IMMEDIATELY : mml:string
		YES=YES
	MESSAGE_COND__SEND_MESSAGE : mml:string
		YES=YES
		NO=NO
	MESSAGE_COND__CURRENCY__SEND_BY_CCY : mml:string
		YES=YES
		NO=NO
	MESSAGE_COND__CUSTOMER__SEND_BY_CUS : mml:string
		YES=YES
		NO=NO
}