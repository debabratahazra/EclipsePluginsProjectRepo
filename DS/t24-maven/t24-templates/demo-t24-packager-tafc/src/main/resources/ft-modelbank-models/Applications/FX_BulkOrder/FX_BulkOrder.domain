# UTF-8
# UTF-8
/* Bulk Order Processing for Forex */
Domain FX_BulkOrder
	@t24:i (module=FX)
	@java:Package (value=com.temenos.t24.datamodel.fx.fx_bulkorder)
namespace "http://www.temenos.com/t24/FX_BulkOrder"
metamodelVersion 1.30.6
Classes {
	/* Bulk orders enable an account officer to request the purchase and sale of currency on behalf of several clients in a single order.
The account officer defines the type of transaction (Spot or Forward), the value date and the currency bought and sold by the bulk order. Then the account officer lists the clients who are using the bulk order, with the amount of currency to buy or sell for each client.
When the bulk order is authorised,
T24
FX.ORDER
FX.ORDER
T24
Note that the
EB.PHANTOM
FX.BULK.OFS
EB.PHANTOM
FX.BULK.OFS */
	FX_BULK_ORDER
		@t24:i (t24Name=FX.BULK.ORDER, level=C, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=true)
	{
		/* Identifies the bulk record.
The reference number has the following format FXTYYDDDNNNNN where:

FXT = Application indicator
YY = The last two digits of the year when the transaction is input
DDD = Julian day number within year when the transaction is input
NNNNN = Five digit sequential number
So: FXT0205300010 is the 10th FX Bulk Order of the 22nd of February 2002.
Validation Rules

10 numeric characters, prefixed by FXT: FXTyydddnnnnn (see details)
Mandatory input
If the Reference Number is entered manually during initial input, it will be validated     for uniqueness. When input, this field will only be allowed in the format specified above.     This field can never be changed. */
		BULK_ORDER_ID -> FX_BulkOrder:FX_BULK_ORDER PK required
			@i18n:Label (en="Bulk Order Id")
			@i18n:Tooltip (en="Bulk Order Id")
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=0.0, core=true, businessType=A, t24Name=BULK.ORDER.ID)
		/* The
COVER.BULK.ID
contains theFX.BULK.ORDER
ID
of the bulk order to be covered.To cover an
FX.BULK.ORDER
you should useFX.BULK.ORDER COVER
. You can only cover bulk orders that have been fully executed (FX transactions created). The fields on theFX.BULK.ORDER,COVER
record are automatically filled with the values from the bulk order that is being covered. The buy and sell currencies and amounts are swapped. The transaction type and value date default to Spot.Validation Rules


10 numeric characters, prefixed by FXT: FXTyydddnnnnn

NOINPUT */
		COVER_BULK_ID -> FX_BulkOrder:FX_BULK_ORDER
			@i18n:Label (en="Cover Bulk Id")
			@i18n:Tooltip (en="Cover Bulk Id")
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=1.0, core=true, businessType=A, t24Name=COVER.BULK.ID)
		/* Identifies the account officer responsible for the relationship with the customer. This information will be used by the Management Information System (MIS) for the determination of the Customer Profitability Analysis.
Validation Rules

1-4 digit numeric field
The Account Officer Code must appear on the
DEPT.ACCT.OFFICER
table. */
		ACCOUNT_OFFICER -> ST_Config:DEPT_ACCT_OFFICER required
			@i18n:Label (en="Account Officer")
			@i18n:Tooltip (en="Indicates Account Officer responsible")
			@t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=2.0, core=true, t24Name=ACCOUNT.OFFICER)
		/* Identifies the dealer desk position which needs to be updated by the deals being created. The dealer desk code is held on the position record so that the exchange position can be displayed at dealer desk level.
Validation Rules

2 alphanumeric character dealer code in the range A-Z, a-z, plus 0-9
Optional input; default = dealer desk defined on the user profile
The code entered must appear on the
DEALER.DESK
tableWhen entering an internal deal, the dealer must be different from the one entered in the     counterparty field. */
		DEALER_DESK -> ST_Config:DEALER_DESK required
			@i18n:Label (en="Dealer Desk")
			@i18n:Tooltip (en="Specifies the Dealer Desk handling the transaction")
			@t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=3.0, core=true, businessType=A, t24Name=DEALER.DESK)
		/* Identifies the type of the Foreign Exchange deals to be created. The application handles only two different types: SP = Spot, or FW = Forward.
Spot deals involve the immediate exchange of one currency for another. The validation process will verify that the value date of the contract does not exceed the number of working days defined in the field
SPOT.INTERNAL
on theFX.PARAMETERS
table.Forward contracts refer to the buying and selling of foreign currency at future exchange rates for delivery in the future, i.e. at a date greater than the locally defined spot date. The period varies but usually would be for one, two, three, six, and twelve months hence. When the value date of the contract exceeds the number of working days defined on the
FX.PARAMETERS
table in the fieldSPOT.INTERNAL
, the contract will be considered as forward.Validation Rules

1 or 2 alpha characters; SP or FW
The field cannot be changed after authorisation of the contract. */
		DEAL_TYPE : FX_BulkOrder:FX_BULK_ORDER__DEAL_TYPE required
			@i18n:Label (en="Deal Type")
			@i18n:Tooltip (en="Indicates the type of deal")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=4.0, core=true, t24Name=DEAL.TYPE)
		/* This field is mandatory and contains the currency code of the currency which is purchased. The code can be entered in one of two formats:
1) Alpha format - three alpha characters as defined in the currency table.
2) Numeric format &#150; currencies may therefore be given a numeric ranking between 1 and 999 on the Currency table.
Validation Rules

3 characters (uppercase alpha) - type SSS or 1-3 numeric characters
The currency code entered must appear on the
CURRENCY
tableMandatory input
Currency bought and Currency sold may not have the same country identification (first     two letters of currency code)
Dealing between LU'X' and BE'X' currency codes is prohibited. */
		CURRENCY_BOUGHT -> FIN_CurrencyConfig:CURRENCY required
			@i18n:Label (en="Buy Currency")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=5.0, core=true, businessType=CCY, t24Name=CURRENCY.BOUGHT)
		/* This field is mandatory and contains the currency code of the currency which is sold. The code can be entered in one of two formats:
1) Alpha format - three alpha characters as defined in the currency table.
2) Numeric format &#150; currencies may therefore be given a numeric ranking between 1 and 999 on the Currency table.
Validation Rules

3 characters (uppercase alpha) - type SSS or 1-3 numeric characters
The currency code entered must appear on the
CURRENCY
tableMandatory input
Currency bought and Currency sold may not have the same country identification (first     two letters of currency code)
Dealing between LU'X' and BE'X' currency codes is prohibited. */
		CURRENCY_SOLD -> FIN_CurrencyConfig:CURRENCY required
			@i18n:Label (en="Sell Currency")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=6.0, core=true, businessType=CCY, t24Name=CURRENCY.SOLD)
		/* Contains the date on which the deal was made.
As this will normally be the same as the system date, entering will automatically insert this date. The date entered may not be in the future but a date of one day back valued will be allowed. Any date greater than one day in the past will require an override.
The system compares the date in this field against the value date fields or the option date (when input) to check if the deal is a spot or forward contract. The system holds the user defined spot and forward classification conditions on the
FX.PARAMETERS
table. The number of (working) days defined in the field 'SPOT.INTERNAL
' on this table will decide the classification of the foreign exchange contract into Spot or Forward.Validation Rules

Any accepted
T24
date format(Optional input; Default =     System date)The deal date must not be later than today's date
The deal date must not be later than the value date
If the deal date is earlier than one day back-valued an override is required
For a spot deal, the days difference between the deal date and the value date (or option     date when entered) must be within that specified on the
FX.PARAMETERS
table in the fieldSPOT.INTERNAL
For forward deals, the days difference between deal and value dates (or option date when     entered) must be greater than that specified on the
FX.PARAMETERS
table in the fieldSPOT.INTERNAL */
		DEAL_DATE : T24BusinessTypes:FOREXD
			@i18n:Label (en="Deal Date")
			@i18n:Tooltip (en="Indicates the Deal date")
			@t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=7.0, core=true, t24Name=DEAL.DATE, mask="RDD DDD DDDD")
		/* Indicates the transaction value date. The liquidation of the Foreign Exchange contract will take place on the
VALUE.DATE
.This date will be compared with the deal date to identify if the deal is a spot or forward contract. The classification of the deal as 'Spot' or 'Forward' will depend on the number of days defined in the field
SPOT.INTERNAL
on theFX.PARAMETERS
table.To ease user input, the following abbreviations will also be allowed:

T = Today
TO = Tomorrow
S = Spot date as defined in the field Spot Market on the
FX.PARAMETERS
table.
NNA = Where NN is the number of days or months and A is either 'D'     for calendar days, 'W' for working days or 'M' for months.

Examples: 10D = 10 calendar days forward (from Spot) 10W = 10 working     days forward (from Spot) 6M = 6 months forward (from spot)
Validation Rules

The date may be entered in the standard date format or as one of the abbreviations     explained in the details
Input is mandatory for forward deals; otherwise input is optional
A date less than today is not allowed except for Spot deals. Where the date entered is     more than one day back value or more than one year forward value, an override is required
The date must be reasonable for the type of deal. In other words the validation process     will check the deal date with the contract value date and compare the number of days with     the value defined in the field
SPOT.INTERNAL
on     theFX.PARAMETERS
table. The deal type (FW or     SP) must then be in agreement with the value defined in the tableThe date must be a working day in the country (region '00') of the currency being traded
The value date cannot be earlier than the deal date
The value date must not be earlier than the permitted maximum back-value period. */
		VALUE_DATE : T24BusinessTypes:FOREXD
			@i18n:Label (en="Value Date")
			@i18n:Tooltip (en="Indicates the Value date of the Contract")
			@t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=8.0, core=true, t24Name=VALUE.DATE, mask="RDD DDD DDDD")
		RESERVED15 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=9.0, core=true, t24Name=RESERVED15)
		CUSTOMER_ID -> byValue FX_BulkOrder:FX_BULK_ORDER__CUSTOMER_ID *
		/* This is the total of all the
AMOUNT.BOUGHT
amounts on the order.Validation Rules

NOINPUT */
		TOTAL_BOUGHT_AMT : T24BusinessTypes:AMT
			@i18n:Label (en="Total Bought Amt")
			@i18n:Tooltip (en="Total Bought Amount")
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=18.0, core=true, t24Name=TOTAL.BOUGHT.AMT, typeModifiers="5")
		/* This is the total of all the
AMOUNT.SOLD
amounts on the order.Validation Rules

NOINPUT */
		TOTAL_SOLD_AMT : T24BusinessTypes:AMT
			@i18n:Label (en="Total Sold Amt")
			@i18n:Tooltip (en="Total Sold Amount")
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=19.0, core=true, t24Name=TOTAL.SOLD.AMT, typeModifiers="6")
		/* If this FX.BULK.ORDER has been pooled under any FX.ORDER, the ID of that FX.ORDER is shown here
Validation Rules

It     is a noinput field */
		FX_ORDER_REFERENCE : T24BusinessTypes:A
			@i18n:Label (en="FX Order Reference")
			@i18n:Tooltip (en="Forex Order Reference")
			@t24:i (align=L, inputBehaviour=N, maxLength=16, sysNumber=21.0, core=true, t24Name=FX.ORDER.REFERENCE)
		RESERVED11 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=22.0, core=true, t24Name=RESERVED11)
		RESERVED10 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=23.0, core=true, t24Name=RESERVED10)
		RESERVED9 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=24.0, core=true, t24Name=RESERVED9)
		RESERVED8 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=25.0, core=true, t24Name=RESERVED8)
		RESERVED7 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=26.0, core=true, t24Name=RESERVED7)
		RESERVED6 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=27.0, core=true, t24Name=RESERVED6)
		RESERVED5 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=28.0, core=true, t24Name=RESERVED5)
		RESERVED4 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=29.0, core=true, t24Name=RESERVED4)
		RESERVED3 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=30.0, core=true, t24Name=RESERVED3)
		RESERVED2 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=31.0, core=true, t24Name=RESERVED2)
		RESERVED1 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=32.0, core=true, t24Name=RESERVED1)
		OVERRIDE -> byValue FX_BulkOrder:FX_BULK_ORDER__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=34.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=35.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FX_BulkOrder:FX_BULK_ORDER__INPUTTER *
		DATE_TIME -> byValue FX_BulkOrder:FX_BULK_ORDER__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=38.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=39.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=40.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=41.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=42.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_BULK_ORDER__CUSTOMER_ID
	{
		/* This field contains a counterparty with whom a transaction will be made.
It is a multi-value field. There is usually more than one customer on a
FX.BULK.ORDER
.Any counterparty existing on the Customer file will be accepted. The customer can be entered as a number or mnemonic. The liability number assigned to this counterparty in the customer file will be used for the limit checking.
Validation Rules

1-6 numeric characters (customer number) or 3-10 uppercase alphanumeric characters     (customer mnemonic)
Input in this field is mandatory
Must be the key to a valid entry on the
CUSTOMER
fileMulti-value field. */
		CUSTOMER_ID -> ST_Customer:CUSTOMER required
			@t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=10.0, core=true, businessType=CUS, t24Name=CUSTOMER.ID)
		/* Identifies the key to the
SEC.ACC.MASTER
record (a customer's security account or portfolio). Made up of customer number + '-' + a unique number for each client portfolio. One Client may have several security accounts.Example: 123456-1, 123456-12 etc.
Usually the customer part would be the customer input in
CUSTOMER.ID
above.Validation Rules

1 - 10 numeric characters followed by '-' followed by 1-3 numeric characters
Must be the key to a valid entry on the
SEC.ACC.MASTER
fileThe
SEC.ACC.MASTER
valuation.currency must be     the same as either theFX.BULK.ORDER
CURRENCY.BOUGHT
orCURRENCY.SOLD
You can only input each
SEC.ACC.NO
once on a bulk order. */
		SEC_ACC_NO -> SCO_PortfolioMaintenance:SEC_ACC_MASTER
			@t24:i (align=L, inputBehaviour=I, maxLength=18, sysNumber=11.0, core=true, businessType=A, t24Name=SEC.ACC.NO)
		/* Contains the amount of the
CURRENCY.BOUGHT
being bought.Note that it is not related to the
AMOUNT.SOLD
.You must input either an
AMOUNT.SOLD
or anAMOUNT.BOUGHT.
You cannot input both in the same multi-value set.You can input T for Thousand and M for Million. For example, 10T for 10,000.
Validation Rules

Standard
T24
amount validation.The actual format will depend on the number of decimal places in the currency being     traded. The amount must be in an acceptable format for the currency (e.g. USD 1,000.123     would not be acceptable if
CURRENCY
USD
is defined with two decimal places. */
		AMOUNT_BOUGHT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=12, sysNumber=12.0, core=true, t24Name=AMOUNT.BOUGHT, typeModifiers="5")
		/* Contains the amount of the
CURRENCY.SOLD
being sold.Note that it is not related to the
AMOUNT.BOUGHT
.You must input either an
AMOUNT.SOLD
or anAMOUNT.BOUGHT.
You cannot input both in the same multi-value set.You can input T for Thousand and M for Million. For example, 10T for 10,000.
Validation Rules

Standard
T24
amount validation. The actual format will     depend on the number of decimal places in the currency being traded. The amount must be in     an acceptable format for the currency (e.g. USD 1,000.123 would not be acceptable ifCURRENCY
USD
is defined with two decimal places. */
		AMOUNT_SOLD : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=12, sysNumber=13.0, core=true, t24Name=AMOUNT.SOLD, typeModifiers="6")
		/* Defines whether the transaction defined by this multi-value set is a BUY or a SELL transaction.
Validation Rules

Buy or Sell
NOINPUT */
		BUY_OR_SELL : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=14.0, core=true, t24Name=BUY.OR.SELL)
		/* Identifies the account through which the currency sold by us is to be settled and forms part of a set of associated field range Customer.ID to Cpy Corr Add


After a deal has been struck, the two parties must decide where the currency bought is to be received and where the currency sold is to be paid. This field is used to identify which account in our books will be credited to remit the currency sold.


When no input has been entered in this field, the system will proceed as follows:


a) In the first stage, the FOREX application will check in the internal file CUSTOMER.CCY.ACCT. If the counterparty with whom the bank is making the deal has an account in that currency (i.e. currency sold). If yes, this customer account will then be credited. If the counterparty does not maintain an account in the sale currency with the bank,


b) The FOREX application will then, in the second stage, find in the table NOSTRO.ACCOUNT the relevant Nostro account for the currency being sold. If this account exists on the Nostro table, it will then be used to record the credit accounting entry. If at the Nostro table more than one Nostro exists per currency, the system will default to the first account listed. However, the user has the ability to select which Nostro account by entering 'A' to give the first, 'B' to give the second and so forth. If no account is defined on the Nostro table,


An input of a customer account which does not pertain to the counterparty will request an override except if the account is a Nostro account.

Validation Rules

Standard     numeric account number or 3-10 character Account Mnemonic (uppercase     alphanumeric or .) - type MNE or 6-12 character Internal Account Number     (uppercase alpha or numeric) - type SS or 1 alphabetic character selecting a     default Account from the NOSTRO.ACCOUNT table or 1 numeric character     identifying a text number on the FX.TEXT table. (Optional input; see default     in details)
If     entered as an account number or mnemonic, the account must be present on the     accounts file and must be in the appropriate currency.
An     override is required where the account is not an account of the counterparty     unless a nostro is specified */
		OUR_ACCOUNT_PAY -> ACM_AccountOpening:ACCOUNT
			@t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=15.0, core=true, t24Name=OUR.ACCOUNT.PAY)
		/* Identifies the bank to which the counterparty wishes the amount sold to be paid and forms part of a set of associated fields. This will either be the bank of the counterparty or the bank of their nominated beneficiary.


If the bank is known to us (i.e. a customer record exists), the customer number of the bank will be entered in this field. If not, the details should be entered in the CPY.CORR.ADD field.


If OUR.ACCOUNT.PAY is a Nostro Account, either CPARTY.CORR.NO or CPY.CORR.ADD has to be mandatorily inputted

Validation Rules

1-6     Numeric character Customer Number or 3-10 character customer mnemonic     (uppercase alphanumeric or '.') - Type MNE Input in this field is optional.
Input     must represent a valid customer on the Customer file.
Input     in this field is not allowed when details have been entered in the     correspondent address field.
Input     is only allowed when OUR.ACCOUNT.PAY represents a Nostro account.
Input     in this field or the next one (CPY.CORR.ADD) is mandatory when     OUR.ACCOUNT.PAY represents a Nostro account. */
		CPARTY_CORR_NO -> ST_Customer:CUSTOMER
			@t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=16.0, core=true, t24Name=CPARTY.CORR.NO)
		CPY_CORR_ADD -> byValue FX_BulkOrder:FX_BULK_ORDER__CUSTOMER_ID__CPY_CORR_ADD *
	}
	FX_BULK_ORDER__CUSTOMER_ID__CPY_CORR_ADD
	{
		/* Identifies the bank to which the counterparty wishes the amount sold to be paid and forms part of a set of associated fields.


If the bank is known to us (i.e. a customer record exists), details should be entered in the CPARTY.CORR.NO field. If not, the address should be entered in this multi-valued field.


If

OUR.ACCOUNT.PAY is a Nostro Account, either CPARTY.CORR.NO or CPY.CORR.ADD has to be mandatorily inputted
Validation Rules

Up     to 4 lines of 35 character narrative. Subvalue field associated with field     range CUTOMER.ID to CPY.CORR.ADD.
Input     is not allowed when a correspondent number has been entered.
Input     is allowed only when Our Account Pay is a Nostro account. */
		CPY_CORR_ADD : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=17.0, core=true, t24Name=CPY.CORR.ADD)
	}
	FX_BULK_ORDER__OVERRIDE
	{
		OVERRIDE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=33.0, core=true, t24Name=OVERRIDE)
	}
	FX_BULK_ORDER__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=36.0, core=true, t24Name=INPUTTER)
	}
	FX_BULK_ORDER__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=37.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	/* Each customer belongs to a commission group which specifies a fee schedule.
Forex spread is expressed as a percentage of the deal rate, depending on the range that the transaction
amount falls into. The percentages are stored in this table.
The Forex spread could be also expressed as a percentage of the FX commission of another group. */
	FX_COMM_GROUP
		@t24:i (t24Name=FX.COMM.GROUP, level=C, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=true)
	{
		/* Identifies the commission group.

Validation Rules

1-3 numbers
Mandatory input */
		COMM_GROUP_ID -> FX_BulkOrder:FX_COMM_GROUP PK required
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=0.0, core=true, t24Name=COMM.GROUP.ID)
		/* A description of the commission group.

Validation Rules

up to 25 alphanumeric characters
mandatory input */
		COMM_DESCRIPTION : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=1.0, core=true, t24Name=COMM.DESCRIPTION)
		/* The mnemonic specifies an alternative easy means of referencing the commission group. Like the ID, the mnemonic must be unique across T24.

Validation Rules

3-10 type MNE (uppercase alpha or numeric, first character alpha, or ".")  characters
mandatory input */
		GROUP_MNEMONIC : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=2.0, core=true, t24Name=GROUP.MNEMONIC)
		COMM_CCY -> byValue FX_BulkOrder:FX_COMM_GROUP__COMM_CCY *
		/* If there is no commission set for the deal currency, T24 uses the commission set for the DEFAULT.CCY.
If you do not specify a default.ccy, T24 sets it to the local currency.
Validation Rules

3 uppercase characters
must be a
CURRENCY */
		DEFAULT_CCY -> FIN_CurrencyConfig:CURRENCY
			@i18n:Label (en="Default Ccy")
			@i18n:Tooltip (en="Defines the default currency")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=9.0, core=true, businessType=CCY, t24Name=DEFAULT.CCY)
		RESERVED12 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=11.0, core=true, t24Name=RESERVED12)
		RESERVED11 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=12.0, core=true, t24Name=RESERVED11)
		RESERVED10 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=13.0, core=true, t24Name=RESERVED10)
		RESERVED9 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=14.0, core=true, t24Name=RESERVED9)
		RESERVED8 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=15.0, core=true, t24Name=RESERVED8)
		RESERVED7 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=16.0, core=true, t24Name=RESERVED7)
		RESERVED6 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=17.0, core=true, t24Name=RESERVED6)
		RESERVED5 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=18.0, core=true, t24Name=RESERVED5)
		RESERVED4 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=19.0, core=true, t24Name=RESERVED4)
		RESERVED3 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=20.0, core=true, t24Name=RESERVED3)
		RESERVED2 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=21.0, core=true, t24Name=RESERVED2)
		RESERVED1 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=22.0, core=true, t24Name=RESERVED1)
		OVERRIDE -> byValue FX_BulkOrder:FX_COMM_GROUP__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=24.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=25.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FX_BulkOrder:FX_COMM_GROUP__INPUTTER *
		DATE_TIME -> byValue FX_BulkOrder:FX_COMM_GROUP__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=28.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=29.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=30.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=31.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=32.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_COMM_GROUP__COMM_CCY
	{
		/* The currency that the commissions specified by this multi-value set apply to.
If the commissions are different for different currencies, then they must be specified for each currency.
To identify which commissions to use for a deal, T24 looks at:

For inward payments, debit currency (from the bank point of view);
For all other payments, credit currency (from the bank point of view)
If there is no commission set for this currency, T24 uses the set for the DEFAULT.CCY.
If the default currency is not defined, the local currency is used.
To find which commission range the deal amount falls into,
T24 converts the amount to the COMM.CCY using the CURRENCY BUY.RATE or SELL.RATE (depending on whether the customer is buying or selling).

Validation Rules

3 uppercase characters
must be a
CURRENCY */
		COMM_CCY -> FIN_CurrencyConfig:CURRENCY required
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=3.0, core=true, businessType=CCY, t24Name=COMM.CCY)
		START_AMOUNT -> byValue FX_BulkOrder:FX_COMM_GROUP__COMM_CCY__START_AMOUNT *
		RESERVED13 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=8.0, core=true, t24Name=RESERVED13)
	}
	FX_COMM_GROUP__COMM_CCY__START_AMOUNT
	{
		/* The lowest amount for this range. Transaction amounts greater than this, and less than or equal to the following END.AMOUNT charge the percentage from the following SPREAD.
The first START.AMOUNT should be Null or zero.
Each START.AMOUNT should be the same as the previous END.AMOUNT.

Validation Rules

Standard T24 amount validation. The actual format will depend on the number of decimal places in the currency. */
		START_AMOUNT : T24BusinessTypes:AMT required
			@t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=4.0, core=true, t24Name=START.AMOUNT, typeModifiers="3.X")
		/* The highest amount for this range. Transaction amounts less than or equal to this, and greater than the previous
START.AMOUNT charge the percentage from the following SPREAD.
The last END.AMOUNT field for the set should be null.
The last SPREAD applies to any amount greater than the last START.AMOUNT.

For example:

START.AMOUNT     0
END.AMOUNT       100,000
SPREAD           0.5
START.AMOUNT     100,000
END.AMOUNT
SPREAD           0.4

If deal amount  =  900,000 and deal rate =  1.2 for the above setup,
then  customer spread  = (0.4/100)*1.2 =0 .0048

Validation Rules

Standard T24 amount validation. The actual format will depend on the number of decimal places in the currency. */
		END_AMOUNT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=5.0, core=true, t24Name=END.AMOUNT, typeModifiers="3.X")
		/* The spread percentage to be applied to amounts falling between the previous  START.AMOUNT and   END.AMOUNT.
The customer spread rate is this percentage of the deal rate.

Validation Rules

Up to 16 characters (8 numbers, decimal point, 7 numbers) */
		SPREAD : T24BusinessTypes:R
			@t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=6.0, core=true, t24Name=SPREAD)
		/* This is the ID of another FX.COMM.GROUP.
If this field is completed, the percentage in SPREAD is a percentage of the commission of the linked group.

For example,

FX.COMM.GROUP 1 is set up like this:

COMM.CCY   USD
START.AMOUNT      0
END.AMOUNT        100,000
SPREAD            60
GROUP.LINK        2
START.AMOUNT      100,000
END.AMOUNT
SPREAD

GROUP.LINK        2

FX.COMM.GROUP 2 is set up like this:

COMM.CCY    USD
START.AMOUNT      0
END.AMOUNT        150,000
SPREAD            0.4
GROUP.LINK
START.AMOUNT      150,000
END.AMOUNT
SPREAD             0.1
GROUP.LINK

The amount is 120,000 USD, using commission from FX.COMM.GROUP 1,  the commission rate is 50% of 0.4%, that is, 0.2%.

Validation Rules

1-3 numbers
must be a key on the FX.COMM.GROUP table */
		GROUP_LINK -> FX_BulkOrder:FX_COMM_GROUP
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=7.0, core=true, t24Name=GROUP.LINK)
	}
	FX_COMM_GROUP__OVERRIDE
	{
		OVERRIDE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=23.0, core=true, t24Name=OVERRIDE)
	}
	FX_COMM_GROUP__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=26.0, core=true, t24Name=INPUTTER)
	}
	FX_COMM_GROUP__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=27.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	/* When an FX.BULK.ORDER is authorised, T24 creates a FX.ORDER.
This allows the treasury department and back office to complete the details required to create FX transactions for the bank and the clients.
The treasury department must input the rates and the covering counterparty.
The back office must input the pay and receive settlement instructions.
When the FX.ORDER is authorised, if CREATE.RECORDS is set to Y,
T24 creates FX transactions in OFS format. One deal is created for the bank side. When this deal is authorised, T24 creates a deal for each customer who has specified an amount on the FX.BULK.ORDER
Limits are checked.
Note that the EB.PHANTOM record FX.BULK.OFS must be running.
To start the phantom, use the application EB.PHANTOM with function "Verify" on the record named FX.BULK.OFS */
	FX_ORDER
		@t24:i (t24Name=FX.ORDER, level=C, type=H, allowedFunctions="A C D E I L P Q R S", localRefAllowed=true)
	{
		/* Identifies the
FX.ORDER
record.The reference number has the following format FXOYYDDDNNNNN where:

FXO = Application indicator
YY = The last two digits of the year when the transaction is input
DDD = Julian day number within year when the transaction is input
NNNNN = Five digit sequential number
So FXO0205300010 is the 10th FX Order of the 22nd of February 2002.
Validation Rules


10 numeric characters, prefixed by FXO: FXOyydddnnnnn (see details)

Mandatory input
If the Reference Number is entered manually during initial input, it will be validated     for uniqueness. When input, this field will only be allowed in the format specified above.     This field can never be changed. */
		ORDER_ID -> FX_BulkOrder:FX_ORDER PK required
			@i18n:Label (en="Order Id")
			@i18n:Tooltip (en="Specify Order Number")
			@t24:i (align=L, inputBehaviour=I, maxLength=15, sysNumber=0.0, core=true, businessType=A, t24Name=ORDER.ID)
		/* The account officer specified on the FX.BULK.ORDER record.
Validation Rules

NOINPUT */
		ACCOUNT_OFFICER -> ST_Config:DEPT_ACCT_OFFICER required
			@i18n:Label (en="Account Officer")
			@i18n:Tooltip (en="Indicates Account Officer responsible")
			@t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=1.0, core=true, t24Name=ACCOUNT.OFFICER)
		/* T24 looks at the CURRENCY.BOUGHT and the CURRENCY.SOLD from the FX.BULK.ORDER
and decides which currency should be the base currency, using the base currency rank configured in CURRENCY.PARAM and displayed in RANK.BASE.CURRENCY
Validation Rules

NOINPUT */
		BASE_CCY -> FIN_CurrencyConfig:CURRENCY required
			@i18n:Label (en="Base Ccy")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=2.0, core=true, businessType=CCY, t24Name=BASE.CCY)
		/* One of the
CURRENCY.BOUGHT
and theCURRENCY.SOLD
from theFX.BULK.ORDER
is theBASE.CCY
and the other is theCONTRA.CCY
. SeeBASE.CCY
for more information.Validation Rules

NOINPUT */
		CONTRA_CCY -> FIN_CurrencyConfig:CURRENCY required
			@i18n:Label (en="Contra Currency")
			@i18n:Tooltip (en="Contra Currency")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=3.0, core=true, businessType=CCY, t24Name=CONTRA.CCY)
		/* The deal date specified on the
FX.BULK.ORDER
record.Validation Rules

NOINPUT */
		DEAL_DATE : T24BusinessTypes:FOREXD
			@i18n:Label (en="Deal Date")
			@i18n:Tooltip (en="Indicates the Deal date")
			@t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=4.0, core=true, t24Name=DEAL.DATE, mask="RDD DDD DDDD")
		/* The transaction value datespecified on the
FX.BULK.ORDER
record.Validation Rules

NOINPUT */
		VALUE_DATE : T24BusinessTypes:FOREXD
			@i18n:Label (en="Value Date")
			@i18n:Tooltip (en="Indicates the Value date of the Contract")
			@t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=5.0, core=true, t24Name=VALUE.DATE, mask="RDD DDD DDDD")
		/* The total amount of the
BASE.CCY
. This is the sum of the amounts bought or sold in theBASE.CCY
, plus the sum of the amounts bought or sold in theCONTRA.CCY
converted to theBASE.CCY
at theBUY.RATE
orSELL.RATE
. For example:
Base currency EUR, Contra currency USD
buy 1,000 EUR
buy 2,000 EUR
sell 300 USD, customer rate 0.8823 = 340 EUR
sell 200 USD, customer rate 0.8889 = 225 EUR
so
TOTAL.BASE.AMT
= 3,565 EURThe
BUY.RATE
is used ifFX.BULK.ORDER
BOUGHT.CURRENCY
=FX.ORDER
BASE.CCY
, otherwise theSELL.RATE
is used.Validation Rules

Standard
T24
amount validation. */
		TOTAL_BASE_AMT : T24BusinessTypes:AMT
			@i18n:Label (en="Total Base Amount")
			@i18n:Tooltip (en="Total Base Amount of the Deal")
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=6.0, core=true, t24Name=TOTAL.BASE.AMT, typeModifiers="-2")
		/* The total amount of the
CONTRA.CCY
. This is theTOTAL.BASE.AMT
converted at theBUY.RATE
orSELL.RATE
. TheBUY.RATE
is used ifFX.BULK.ORDER
BOUGHT.CURRENCY
=FX.ORDER
BASE.CCY
, otherwise theSELL.RATE
is used.For example:

Base currency EUR, Contra currency USD

TOTAL.BASE.AMT
= 3,565 EUR
SELL.RATE
= 0.8864
so
TOTAL.CONTRA.AMT
= 3,160 USDValidation Rules

Standard
T24
amount validation. */
		TOTAL_CONTRA_AMT : T24BusinessTypes:AMT
			@i18n:Label (en="Total Contra Amount")
			@i18n:Tooltip (en="Specify Total Contra Amount")
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=7.0, core=true, t24Name=TOTAL.CONTRA.AMT, typeModifiers="-3")
		/* The covering counterparty.
If the client deals will be covered by another deal with a customer, input a counterparty here. The
DEAL.SUB.TYPE
defaults to blank.Validation Rules

1-6 numeric character
CUSTOMER
Number or 3-10     character customer mnemonic (uppercase alphanumeric or '.') */
		COUNTERPARTY -> ST_Customer:CUSTOMER
			@i18n:Label (en=Counterparty)
			@i18n:Tooltip (en="Counterparty with whom the deal is made")
			@t24:i (align=R, inputBehaviour=F, maxLength=10, sysNumber=8.0, core=true, businessType=CUS, t24Name=COUNTERPARTY)
		/* The covering desk.
If the client deals will be covered internally, input a desk here. The
DEAL.SUB.TYPE
defaults to IN.Validation Rules

1-2 numeric character
DEALER.DESK
Must be different to
FX.BULK.ORDER
DEALER.DESK */
		DEALER_DESK -> ST_Config:DEALER_DESK
			@i18n:Label (en="Dealer Desk")
			@i18n:Tooltip (en="Specifies the Dealer Desk handling the transaction")
			@t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=9.0, core=true, businessType=A, t24Name=DEALER.DESK)
		/* Defines if a deal is internal or non-standard. It automatically defaults to:

blank - if a
CUSTOMER
is input in theCOUNTERPARTY
fieldIN - if a
DEALER.DESK
is input in theDEALER.DESK
field. This is an internal     deal. The desk takes the position from the deals arising from the bulk order.Validation Rules


1 or 2 alpha characters

Null or IN */
		DEAL_SUB_TYPE : FX_BulkOrder:FX_ORDER__DEAL_SUB_TYPE
			@i18n:Label (en="Deal Sub Type")
			@i18n:Tooltip (en="Specify Deal is internal Deal or Broker Deal")
			@t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=10.0, core=true, t24Name=DEAL.SUB.TYPE)
		/* Indicates the Market Buy Rate. It is used to calculate the TOTAL.BASE.AMT
and TOTAL.CONTRA.AMT
Note that this is the Buy rate from the client's point of view and therefore  is higher than the Sell rate.
Validation Rules

1-14 characters (up to 8 integer, decimal point and up 7 decimal) */
		BUY_RATE : T24BusinessTypes:DEC
			@i18n:Label (en="Buy Rate")
			@i18n:Tooltip (en="Indicates the market buy rate")
			@t24:i (align=L, inputBehaviour=I, maxLength=13, sysNumber=11.0, core=true, t24Name=BUY.RATE, typeModifiers="60")
		/* Indicates the Market Sell Rate. It is used to calculate the
TOTAL.BASE.AMT
and
TOTAL.CONTRA.AMT
.
Note that this is the Sell rate from the client's point of view and therefore  is lower than the Buy rate.
Validation Rules

1-14 characters (up to 8 integer, decimal point and up 7 decimal). */
		SELL_RATE : T24BusinessTypes:DEC
			@i18n:Label (en="Sell Rate")
			@i18n:Tooltip (en="Indicates market sell rate")
			@t24:i (align=L, inputBehaviour=I, maxLength=13, sysNumber=12.0, core=true, t24Name=SELL.RATE, typeModifiers="60")
		/* Only available on forward deals. The points are added to the
TREASURY.RATE
to give theCUST.RATE
.Validation Rules


NOINPUT on Spot deals

Up to 13 numbers on Forward deals

Entered in the same units as the Treasury rate */
		FORWARD_POINTS : T24BusinessTypes:DEC
			@i18n:Label (en="Forward Points")
			@i18n:Tooltip (en="Specify Forward Premium/Discount")
			@t24:i (align=L, inputBehaviour=I, maxLength=13, sysNumber=13.0, core=true, t24Name=FORWARD.POINTS, typeModifiers="-60")
		BULK_ORDER_ID -> byValue FX_BulkOrder:FX_ORDER__BULK_ORDER_ID *
		OUR_ACCOUNT_PAY -> byValue FX_BulkOrder:FX_ORDER__OUR_ACCOUNT_PAY *
		/* When the
FX.ORDER
is authorised, ifCREATE.RECORDS
is set to Y,T24
creates FX transactions in OFS format. One deal is created for the bank side. When this deal is authorised,T24
creates a deal for each customer who has specified an amount on theFX.BULK.ORDER
. Limits are checked.If you leave this field set to N, you can store the
FX.ORDER
until all details are finalised.Validation Rules

Yes or No */
		CREATE_RECORDS : FX_BulkOrder:FX_ORDER__CREATE_RECORDS
			@i18n:Label (en="Create Records")
			@i18n:Tooltip (en="Specify whether FX Records has to be Created")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=33.0, core=true, t24Name=CREATE.RECORDS)
		/* Deal type under which the Bulk booking of FX has to be performed. either Spot or Forward
Validation Rules


Valid       inputs are SP and FW */
		DEAL_TYPE : FX_BulkOrder:FX_ORDER__DEAL_TYPE required
			@i18n:Label (en="Deal Type")
			@i18n:Tooltip (en="Indicates the type of deal")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=35.0, core=true, t24Name=DEAL.TYPE)
		RESERVED11 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=36.0, core=true, t24Name=RESERVED11)
		RESERVED10 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=37.0, core=true, t24Name=RESERVED10)
		RESERVED9 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=38.0, core=true, t24Name=RESERVED9)
		RESERVED8 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=39.0, core=true, t24Name=RESERVED8)
		RESERVED7 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=40.0, core=true, t24Name=RESERVED7)
		RESERVED6 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=41.0, core=true, t24Name=RESERVED6)
		RESERVED5 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=42.0, core=true, t24Name=RESERVED5)
		RESERVED4 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=43.0, core=true, t24Name=RESERVED4)
		RESERVED3 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=44.0, core=true, t24Name=RESERVED3)
		RESERVED2 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=45.0, core=true, t24Name=RESERVED2)
		RESERVED1 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=46.0, core=true, t24Name=RESERVED1)
		OVERRIDE -> byValue FX_BulkOrder:FX_ORDER__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=48.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=49.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FX_BulkOrder:FX_ORDER__INPUTTER *
		DATE_TIME -> byValue FX_BulkOrder:FX_ORDER__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=52.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=53.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=54.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=55.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=56.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_ORDER__BULK_ORDER_ID
	{
		/* Identifies the FX.BULK.ORDER record that this FX.ORDER was created for.
The reference number has the following format FXTYYDDDNNNNN where:

FXT = Application indicator
YY = The last two digits of the year when the transaction is input
DDD = Julian day number within year when the transaction is input
NNNNN = Five digit sequential number
So FXT0205300010 is the 10th FX Bulk Order of the 22nd of February 2002.
Validation Rules

10 numeric characters, prefixed by FXT: FXTyydddnnnnn (see details)
Multivalue Field */
		BULK_ORDER_ID -> FX_BulkOrder:FX_BULK_ORDER required
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=14.0, core=true, businessType=A, t24Name=BULK.ORDER.ID)
		/* The Treasury Rate is used to calculate the
CUST.RATE
. It defaults to theCURRENCY
MID.REVAL.RATE
for theBASE.CCY
.Validation Rules

1-14 characters (up to 8 integer, decimal point and up 7 decimal). */
		TREASURY_RATE : T24BusinessTypes:DEC
			@t24:i (align=L, inputBehaviour=N, maxLength=13, sysNumber=15.0, core=true, t24Name=TREASURY.RATE, typeModifiers="60")
		CUSTOMER_ID -> byValue FX_BulkOrder:FX_ORDER__BULK_ORDER_ID__CUSTOMER_ID *
		RESERVED15 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=23.0, core=true, t24Name=RESERVED15)
		RESERVED14 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=24.0, core=true, t24Name=RESERVED14)
		RESERVED13 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=25.0, core=true, t24Name=RESERVED13)
	}
	FX_ORDER__BULK_ORDER_ID__CUSTOMER_ID
	{
		/* Defaults to the customer specified on the
FX.BULK.ORDER
record.This field contains a counterparty with whom a transaction will be made. Any counterparty existing on the Customer file will be accepted. The customer can be entered as a number or mnemonic. The liability number assigned to this counterparty in the customer file will be used for the limit checking.
Validation Rules


1-6 numeric characters (customer number) or 3-10 uppercase     alphanumeric characters (customer mnemonic)

Input in this field is mandatory

Must be the key to a valid entry on the
CUSTOMER
file
Subvalue field. */
		CUSTOMER_ID -> ST_Customer:CUSTOMER
			@t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=16.0, core=true, businessType=CUS, t24Name=CUSTOMER.ID)
		/* Defaults to the portfolio specified on the
FX.BULK.ORDER
record.Identifies the key to the
SEC.ACC.MASTER
record (a customer's security account or portfolio). Made up of customer number + '-' + a unique number for each client portfolio. One Client may have several security accounts.Example: 123456-1, 123456-12 etc.
Usually the customer part would be the customer input in
CUSTOMER.ID
above. If you do not input aSEC.ACC.NO
there will be no defaultCUST.SPREAD
.Validation Rules

1 - 10 numeric characters followed by '-' followed by 1-3 numeric characters
Must be the key to a valid entry on the
SEC.ACC.MASTER
fileThere must be an
ACCOUNT.NOS
multi-value set in theSEC.ACC.MASTER
record     for the currency being bought or sold. */
		SEC_ACC_NO : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=18, sysNumber=17.0, core=true, t24Name=SEC.ACC.NO)
		/* Contains the amount of the BASE.CURRENCY being bought or sold. The AMOUNT.BASIS shows whether it is buy or sell.
If the BASE.CURRENCY is the FX.BULK.ORDER CURRENCY.BOUGHT, this defaults to the AMOUNT.BOUGHT from the bulk order.
If the base.currency is the CURRENCY.SOLD, this defaults to the AMOUNT.SOLD.
If the default is blank (because it defaulted to AMOUNT.BOUGHT on a Sell transaction or vice versa), the amount is the CONTRA.AMOUNT converted at the CUST.RATE
You can input T for Thousand and M for Million. For example, 10T for 10,000.
Validation Rules

Standard T24 amount validation.
The actual format will depend on the number of decimal places in the currency being traded.
The amount must be in an acceptable format for the currency (e.g. USD 1,000.123 would     not be acceptable if CURRENCY USD  is defined with two decimal places). */
		BASE_AMT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=18.0, core=true, t24Name=BASE.AMT, typeModifiers="-2")
		/* Contains the amount of the CONTRA.CURRENCY being bought or sold.
The AMOUNT.BASIS shows whether is buy or sell.
If the CONTRA.CURRENCY is the FX.BULK.ORDER CURRENCY.BOUGHT, this defaults to
the AMOUNT.BOUGHT from the bulk order. If the base.currency is the CURRENCY.SOLD, this defaults to the AMOUNT.SOLD.
If the default is blank (because it defaulted to AMOUNT.BOUGHT  on a Sell transaction or vice versa), the amount is the BASE.AMOUNT converted at the CUST.RATE
You can input T for Thousand and M for Million. For example, 10T for 10,000.
Validation Rules

Standard
T24
amount validation. The actual format will     depend on the number of decimal places in the currency being traded.The amount must be in an acceptable format for the currency (e.g. USD 1,000.123 would     not be acceptable if
CURRENCY
USD
is defined with two decimal places). */
		CONTRA_AMT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=19.0, core=true, t24Name=CONTRA.AMT, typeModifiers="-3")
		/* Shows whether this multi-value set is:

CONTRA-BUY: buying the contra currency (the CONTRA.CURRENCY is the
FX.BULK.ORDER CURRENCY.BOUGHT, and this multi-value set was a Buy transaction on the bulk order)
CONTRA-SELL: selling the contra currency (the CONTRA.CURRENCY is the CURRENCY.SOLD, and this was a Sell transaction on the bulk order)
BASE-BUY: buying the base currency (the BASE.CURRENCY is the CURRENCY.BOUGHT, and this was a Buy transaction on the bulk order)
BASE-SELL: selling the base currency (the BASE.CURRENCY is the CURRENCY.SOLD, and this was a Sell transaction on the bulk order).
Validation Rules

NOINPUT */
		AMOUNT_BASIS : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=20.0, core=true, t24Name=AMOUNT.BASIS)
		/* This is the customer spread amount, which is added to the treasury.rate and forward points to give the customer rate (
CUST.RATE
).The default value comes from
FX.COMM.GROUP
. TheSEC.ACC.NO
field identifies theSEC.ACC.MASTER
record (the customer's portfolio). TheCOMM.GROUP.ID
field on theSEC.ACC.MASTER
record identifies theFX.COMM.GROUP
for the portfolio. TheFX.COMM.GROUP
specifies the fee schedule. Forex spread is expressed as a percentage depending on the amount of the transaction.For example:

On an
FX.ORDER
, the amount is 300,000 USD,     theTREASURY.RATE
is 1.5 and theSEC.ACC.NO
is 50013-1.On
SEC.ACC.MASTER
50013-1
, theCOM.GROUP.ID
is 1 (Group A, managed)
FX.COMM.GROUP
1
specifies     that theSPREAD
for amounts     greater than 200,000 USD is 0.3.0.3% of 1.5 is 0.0045.
Therefore the
CUST.SPREAD
is 0.0045.Validation Rules

1-16 characters including a decimal point */
		CUST_SPREAD : T24BusinessTypes:DEC
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=21.0, core=true, t24Name=CUST.SPREAD, typeModifiers="-60")
		/* Identifies the transaction exchange rate between the
BASE.AMOUNT
and theCONTRA.AMOUNT
. The system will calculate the rate fromTREASURY.RATE
+FORWARD.POINTS
+CUST.SPREAD
.When the FX deals are created, the spot rate will be the
CUST.RATE
.Validation Rules

NOINPUT */
		CUST_RATE : T24BusinessTypes:DEC
			@t24:i (align=L, inputBehaviour=N, maxLength=13, sysNumber=22.0, core=true, t24Name=CUST.RATE, typeModifiers="60")
	}
	FX_ORDER__OUR_ACCOUNT_PAY
	{
		/* Identifies the account through which the currency sold is to be settled. Forms part of a set of associated fields.
After a deal has been struck, the two parties must decide where the currency sold is to be paid. This field is used to identify which account will be credited.
If this field is left blank, the system will default to the following in turn:
1) the specific instructions defined on the agency table for the counterparty and the sold currency, if there are any
2) the account defined on
CUSTOMER.CCY.ACCT
for the counterparty and the sold currency, if there is one3) the first
NOSTRO.ACCOUNT
listed for the sold currency, if there is oneIf the system cannot provide a default in this way, the user will need to enter an account number which can be:

an internal account from the
FX.TEXT
table,     in the format '1' for the first account, '2' for the second and so ona nostro account from the
NOSTRO.ACCOUNT
table, in the format 'A' for the first account, 'B' for the second and so ona customer account in the standard format or a mnemonic.
Validation Rules

Standard numeric account number or 3-10 character mnemonic
6-12 character internal account number
1 numeric character identifying a text number on the
FX.TEXT
table1 alphabetic character identifying a nostro account
Optional input */
		OUR_ACCOUNT_PAY : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=26.0, core=true, t24Name=OUR.ACCOUNT.PAY)
		/* Identifies the account through which the currency bought is to be settled. Forms part of a set of associated fields.
After a deal has been struck, the two parties must decide where the currency bought is to be received. This field is used to identify which account will be debited.
If this field is left blank, the system will default to the following in turn:
1) the vostro account defined on the agency table for the counterparty and the bought currency, if there is one
2) the account defined on
CUSTOMER.CCY.ACCT
for the counterparty and the bought currency, if there is one3) the first
NOSTRO.ACCOUNT
listed for the bought currency, if there is oneIf the system cannot provide a default in this way, the user will need to enter an account number which can be:

an internal account from the
FX.TEXT
table,     in the format '1' for the first account, '2' for the second and so ona nostro account from the
NOSTRO.ACCOUNT
table, in the format 'A' for the first account, 'B' for the second and so ona customer account in the standard format or a mnemonic.
Validation Rules

Standard numeric account number or 3-10 character mnemonic
6-12 character internal account number
1 numeric character identifying a text number on the
FX.TEXT
table1 alphabetic character identifying a nostro account
Optional input */
		OUR_ACCOUNT_REC : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=27.0, core=true, t24Name=OUR.ACCOUNT.REC)
		/* Identifies the bank to which the counterparty wishes the amount sold to be paid. This will either be the bank of the counterparty or the bank of their nominated beneficiary.
If the bank is known to us (i.e. a customer record exists), the customer number of the bank will be entered in this field. If not, the details should be entered in the
CPY.CORR.ADD
field.The counterparty may ask us to pay the amount sold in a number of ways:

To an account with us: we may pay the funds directly into an account provided it is in     the same currency as that being sold. To make payment directly to a counterparty's     internal account the relevant account number should be entered in the
OUR.ACCOUNT.PAY
field and no other     input will be necessary in this field.
To an account at another bank overseas: to pay money to another bank overseas we would     have to advise our agent, in the country concerned, to pay to the counterparty's bank. In     this case, the Nostro account number of our agent should be entered in the
OUR.ACCOUNT.PAY
field. If the     counterparty's bank is known to us (i.e. there is a customer record), then the bank's     number should be entered inCPARTY.CORR.NO
if these have not yet been defined on the Agency file. If the bank is not known to us,     (i.e. there is no customer record) the bank's name and address should be entered in the     multi-valued fieldCPY.CORR.ADD
.     When known, the counterparty's account number at his bank should be entered in the fieldCPARTY.BANK.ACC
.
To an account at another bank locally: where payment is to be effected locally,     settlement can be through a number of different methods. The most common are Banker's     Payments, CHIPS, or CHAPS. In all cases, the number of our internal clearing account, or     our clearing agent should be entered in
OUR.ACCOUNT.PAY
.     Details of the counterparty's bank account should be completed as detailed above.
To a beneficiary of the counterparty: the counterparty may nominate a third party     beneficiary of the funds. If the beneficiary is to be paid by crediting an account with     us, the account number should be entered in
OUR.ACCOUNT.PAY
. If the beneficiary does not have an account with     us, the internal clearing number or Nostro account of our agent should be entered inOUR.ACCOUNT.PAY
. Where we are paying to     another bank but the beneficiary is known to us (i.e. there is a customer record), the     customer number of the beneficiary will be entered in the fieldBENEFICIARY.NO
. Where no relationship exists, the payment     details will be entered in the multi-valued fieldBENFCY.ADD
.
Payment via an intermediary bank: occasionally the counterparty may ask for payment to     be made through an intermediary bank. This occurs where the counterparty or beneficiary's     correspondent is not in the country of the currency involved. As an example, let us say     that the Bank ABC in Hong Kong uses Bank 'XYZ' in Hong Kong as their dollar agent. When a     dollar payment is to be made we would pay American Bank in New York (the Intermediary) for     Bank 'XYZ' in (the counterparty correspondent), account Bank 'ABC' (the counterparty or     Beneficiary). The Intermediary can be entered as a number in the
INTERMED.BK.NO
field if a customer relationship exists     (i.e. there is a customer number) or as narrative in theINTERMED.ADD
field.Validation Rules

1-6 numeric character Customer Number or 3-10 character customer mnemonic (uppercase     alphanumeric or '.')
Input in this field is optional */
		CPARTY_CORR_NO -> ST_Customer:CUSTOMER
			@t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=28.0, core=true, businessType=CUS, t24Name=CPARTY.CORR.NO)
		CPY_CORR_ADD -> byValue FX_BulkOrder:FX_ORDER__OUR_ACCOUNT_PAY__CPY_CORR_ADD *
		PAYMENT_SENT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=16, sysNumber=30.0, core=true, t24Name=PAYMENT.SENT)
		ADVICE_SENT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=25, sysNumber=31.0, core=true, t24Name=ADVICE.SENT)
		CONFIRM_SENT -> byValue FX_BulkOrder:FX_ORDER__OUR_ACCOUNT_PAY__CONFIRM_SENT *
	}
	FX_ORDER__OUR_ACCOUNT_PAY__CPY_CORR_ADD
	{
		/* Identifies the bank to which the counterparty wishes the amount sold to be paid. This will either be the bank of the counterparty or the bank of their nominated beneficiary.
If the bank is known to us (i.e. a customer record exists), details should be entered in the
CPARTY.CORR.NO
field. If not, the should be entered in this multi-valued field.Validation Rules

Up to 36 characters */
		CPY_CORR_ADD : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=29.0, core=true, t24Name=CPY.CORR.ADD)
	}
	FX_ORDER__OUR_ACCOUNT_PAY__CONFIRM_SENT
	{
		CONFIRM_SENT : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=25, sysNumber=32.0, core=true, t24Name=CONFIRM.SENT)
	}
	FX_ORDER__OVERRIDE
	{
		OVERRIDE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=47.0, core=true, t24Name=OVERRIDE)
	}
	FX_ORDER__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=50.0, core=true, t24Name=INPUTTER)
	}
	FX_ORDER__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=51.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
}
Enumerations {
	FX_BULK_ORDER__DEAL_TYPE : mml:string
		SP=SP
		FW=FW
	FX_ORDER__DEAL_SUB_TYPE : mml:string
		BR=BR
		IN=IN
		NE=NE
	FX_ORDER__CREATE_RECORDS : mml:string
		YES=YES
		NO=NO
	FX_ORDER__DEAL_TYPE : mml:string
		SP=SP
		FW=FW
}