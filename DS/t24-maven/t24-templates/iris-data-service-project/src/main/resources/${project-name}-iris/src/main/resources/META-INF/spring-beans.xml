<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Metadata -->	
    <bean id="metadataManager" class="com.temenos.interaction.core.resource.ResourceMetadataManager">
        <constructor-arg ref="t24TermFactory" />
	</bean>
	
	<bean id="metadataEntity" class="com.temenos.interaction.core.entity.Metadata">
		<constructor-arg ref="metadataManager" />
	</bean>
	<bean id="metadata" factory-bean="metadataEntity" factory-method="getMetadata"/>
	
	<!-- Odata4j Metadata -->
	<bean id="metadataOData4j" class="com.temenos.interaction.odataext.entity.MetadataOData4j">
        <constructor-arg ref="metadata" />
        <constructor-arg ref="srvdoc_stateMachine" />
    </bean>
	<!-- ResourceStateMachine built out of ServiceDocument only for EdmMetadata -->
	<bean id="srvdoc_stateMachine" class="com.temenos.interaction.core.hypermedia.ResourceStateMachine">
		<constructor-arg ref="serviceDocument" />
    	<constructor-arg ref="exceptionState" />
    	<constructor-arg name="transformer"><null/></constructor-arg>
		<constructor-arg  ref= "resourceLocatorProvider" />
    	<constructor-arg ref="resourceStateProvider" />
	</bean>
	
	<!-- Import Resource manager context -->
	<import resource="classpath:/META-INF/resourcemanager-context.xml" />
	
	<!-- An extension of org.apache.wink.spring.Registrar with support for singletons -->
	<bean class="com.temenos.interaction.winkext.RegistrarWithSingletons">
		<property name="singletons">
			<list>
				<ref local="atomProvider" />
				<ref local="edmxProvider" />
				<ref local="serviceDocumentProvider" />
				<ref local="errorProvider" />
				<ref local="xhtmlProvider" />
				<ref local="halProvider" />
 			</list>
   		</property>
		<property name="serviceRootFactory" ref="serviceRootFactory" />
        <property name="serviceRoots">
            <list>
            	<ref local="Metadata" />
            </list>
        </property>
	</bean>
	<bean id="entityTransformer" class="com.temenos.interaction.core.hypermedia.StrategyBasedTransformer">
		<constructor-arg>
			<list>
				<bean class="com.temenos.interaction.core.hypermedia.EntityTransformer" />
				<bean class="com.temenos.interaction.commands.odata.OEntityTransformer" />
				<bean class="com.temenos.interaction.core.hypermedia.BeanTransformer" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="atomProvider" class="com.temenos.interaction.media.odata.xml.atom.AtomXMLProvider">
    	<constructor-arg name="metadataOData4j" ref="metadataOData4j" />
		<constructor-arg name="metadata" ref="metadata" />
		<constructor-arg name="resourceStateProvider" ref="resourceStateProvider" />
		<constructor-arg name="serviceDocument" ref="serviceDocument" />
		<constructor-arg ref="entityTransformer" />
	</bean>
    <bean id="edmxProvider" class="com.temenos.interaction.media.odata.xml.edmx.EdmxMetaDataProvider" />
	<bean id="serviceDocumentProvider" class="com.temenos.interaction.media.odata.xml.atomsvc.ServiceDocumentProvider">
        <constructor-arg name="hypermediaEngine" ref="stateMachine" />
	</bean>
    <bean id="errorProvider" class="com.temenos.interaction.media.odata.xml.error.ErrorProvider" />
 	<bean id="xhtmlProvider" class="com.temenos.interaction.media.xhtml.XHTMLProvider">
		<constructor-arg ref="metadata" />
	</bean>
	<bean id="halProvider" class="com.temenos.interaction.media.hal.HALProvider">
    	<constructor-arg ref="metadata" />
        <constructor-arg ref="resourceStateProvider" />
	</bean>

	<bean id="serviceDocument" factory-bean="resourceStateProvider" factory-method="getResourceState">
		<constructor-arg type="java.lang.String" value="${project-name}_${project-name}-ServiceDocument" />
	</bean>
	<bean id="initialState" factory-bean="resourceStateProvider" factory-method="getResourceState">
		<constructor-arg type="java.lang.String" value="${project-name}_${project-name}-ServiceDocument" />
	</bean>
	<bean id="exceptionState" factory-bean="resourceStateProvider" factory-method="getResourceState">
		<constructor-arg type="java.lang.String" value="${project-name}_${project-name}-InteractionException" />
	</bean>

	<!-- 
		Import the main SpringDSL entry point for IRIS
		
		Initialises the ResourceStateProvider and understands how to construct
		ResourceState instances using Spring
	-->
	<import resource="classpath*:IRIS-SpringDSL-main.xml" />
	<import resource="classpath*:META-INF/**/*-Dynamic-Load.xml" />		
	<import resource="classpath*:META-INF/**/T24Commands-Spring.xml" />
	 
	<bean id="serviceRootFactory" class="com.temenos.interaction.winkext.LazyServiceRootFactory">
		<property name="commandController" ref="commands" />
		<property name="metadata" ref="metadata" />
		<property name="transformer" ref="entityTransformer" />
		<property name="resourceLocatorProvider" ref="resourceLocatorProvider" />
		<property name="resourceStateProvider" ref="resourceStateProvider" />
		<property name="resourceParameterResolverProvider"  ref="resourceParameterResolverProvider" />
	</bean>

	<!-- Create a complete state machine for the OData ServiceDocument and Metadata -->
	<bean id="stateMachine" class="com.temenos.interaction.core.hypermedia.ResourceStateMachine">
		<constructor-arg name="initialState" ref="initialState" />
    	<constructor-arg name="exceptionState" ref="exceptionState" />
		<constructor-arg name="transformer" ref="entityTransformer" />
    	<constructor-arg name="resourceLocatorProvider" ref= "resourceLocatorProvider" />
		<constructor-arg name="resourceStateProvider" ref="resourceStateProvider" />
	</bean>
	
	
	<bean id="resourceParameterResolverProvider" class="com.temenos.interaction.core.hypermedia.MapResourceParameterResolverProvider">
		<constructor-arg>
			<util:map>
				<entry key="t24ResourceLocator" value-ref="t24ResourceParameterResolver" />
				<entry key="locatorNextState" value-ref="t24NextResourceParameterResolver" />			
			</util:map>
		</constructor-arg>
	</bean>

	<bean id="resourceLocatorProvider" class="com.temenos.interaction.core.hypermedia.MapResourceLocatorProvider">
		<constructor-arg>
			<util:map>
				<entry key="t24ResourceLocator" value-ref="t24ResourceLocator" />
				<entry key="locatorNextState" value-ref="t24NextStateResourceLocator" />
			</util:map>
		</constructor-arg>
	</bean>

	<bean id="m_interaction" factory-bean="resourceStateProvider" factory-method="getResourceState">
		<constructor-arg type="java.lang.String" value="${project-name}_Metadata-MetadataBase" />
	</bean>
	<bean id="m_stateMachine" class="com.temenos.interaction.core.hypermedia.ResourceStateMachine">
		<constructor-arg ref="m_interaction" />
		<constructor-arg><null/></constructor-arg>
		<constructor-arg ref="entityTransformer" />
		<constructor-arg  ref= "resourceLocatorProvider" />		
		<constructor-arg name="resourceStateProvider" ref="resourceStateProvider" />
	</bean>
	<bean id="Metadata" class="com.temenos.interaction.core.rim.HTTPHypermediaRIM">
		<constructor-arg ref="commands" />
		<constructor-arg ref="m_stateMachine" />
        <constructor-arg ref="metadata" />
	</bean>
	
	<!-- Properties for retry workflow strategy -->
	<bean id="configuration" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    	<property name="properties">
	        	<util:properties>
	            	<prop key="maxRetryCount">3</prop>
	            	<prop key="maxRetryInterval">2</prop>
	            	<prop key="retryWorkflowClass">com.temenos.interaction.core.workflow.RetryWorkflowStrategyCommand</prop>
	        	</util:properties>
	    	</property>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>
	
	<!-- T24 Configuration -->
	<bean id="modelName" factory-bean="metadata" factory-method="getModelName"/>
	
	<!-- Commands -->
	<bean id="GETServiceDocument" class="com.temenos.interaction.commands.odata.GETMetadataCommand">
		<constructor-arg value="ServiceDocument" />
		<constructor-arg ref="metadataOData4j" />
	</bean>
	
	<bean id="GETMetadata" class="com.temenos.interaction.commands.odata.GETMetadataCommand">
		<constructor-arg value="Metadata" />
		<constructor-arg ref="metadataOData4j" />
	</bean>
	
	<bean id="GETExceptionCommand" class="com.temenos.interaction.core.command.GETExceptionCommand" />
	
	<bean id="NoopGETCommand" class="com.temenos.interaction.core.command.NoopGETCommand" />
	
	<bean id="IRISGETEntities" class="com.temenos.interaction.commands.odata.GETEntitiesCommand">
		<constructor-arg ref="metadataOData4j" />
		<constructor-arg ref="producer" />
	</bean>
	
	<bean id="IRISGETEntity" class="com.temenos.interaction.commands.odata.GETEntityCommand">
		<constructor-arg ref="metadataOData4j" />
		<constructor-arg ref="producer" />
	</bean>
	
	<bean id="IRISGETNavProperty" class="com.temenos.interaction.commands.odata.GETNavPropertyCommand">	
		<constructor-arg ref="producer" />
	</bean>
		
	<bean id="GETMenu" class="com.temenos.interaction.core.command.NoopGETCommand" />
    <bean id="GETNoop" class="com.temenos.interaction.core.command.NoopGETCommand" />
	
    <!-- 
    <bean id="MuleViewCommand" class="com.temenos.interaction.commands.mule.ViewCommand">
        <constructor-arg ref="muleClient" />
    </bean>
     -->

    <!-- Root URL of the external Solr server -->
    <bean id="GETSearchResults" class="com.temenos.interaction.commands.solr.SolrSearchCommand">
        <!-- Solr server URL -->
        <constructor-arg value="http://localhost:8983/solr" />
    </bean>
	
	<!-- New configuration for retry -->
	<bean id="GETEntities" class="${retryWorkflowClass}" depends-on="configuration">
		<constructor-arg ref="IRISGETEntities" />
		<constructor-arg value="${maxRetryCount}" />
		<constructor-arg value="${maxRetryInterval}" />		
	</bean>
	
	<bean id="GETEntity" class="${retryWorkflowClass}" depends-on="configuration">
		<constructor-arg ref="IRISGETEntity" />
		<constructor-arg value="${maxRetryCount}" />
		<constructor-arg value="${maxRetryInterval}" />		
	</bean>
	
	<bean id="GETNavProperty" class="${retryWorkflowClass}" depends-on="configuration">
		<constructor-arg ref="IRISGETNavProperty" />
		<constructor-arg value="${maxRetryCount}" />
		<constructor-arg value="${maxRetryInterval}" />		
	</bean>

	<!-- TODO: We should be able to merge IRIS and T24Commands at deployment -->
	<bean id="commandsMap" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="targetMapClass">
			<value>java.util.Hashtable</value>
		</property>
		<property name="sourceMap">
			<util:map>
				<entry key="GETServiceDocument" value-ref="GETServiceDocument" />
				<entry key="GETMetadata" value-ref="GETMetadata" />
				<entry key="GETException" value-ref="GETExceptionCommand" />
				<entry key="NoopGET" value-ref="NoopGETCommand" />
				<entry key="GETEntities" value-ref="GETEntities" />
				<entry key="GETEntity" value-ref="GETEntity" />
				<entry key="GETNavProperty" value-ref="GETNavProperty" />
				<entry key="GETMenu" value-ref="GETMenu" />
				<!-- 
	            <entry key="MuleViewCommand" value-ref="MuleViewCommand" />
	             -->
	            <entry key="GETSearchResults" value-ref="GETSearchResults" />
	
	            <entry key="GETNoop" value-ref="GETNoop" />
				
				<!-- ========================================================== -->
				<!-- Folowing commands should come from T24Commands Spring file --> 
				<!-- ========================================================== -->
				<entry key="GetLiveEntities" value-ref="GetLiveEntities" />
				<entry key="GetLiveEntity" value-ref="GetLiveEntity" />
				<entry key="GetLiveAAEntity" value-ref="GetLiveAAEntity" />
				<entry key="GetIauthEntities" value-ref="GetIauthEntities" />
				<entry key="GetIauthEntity" value-ref="GetIauthEntity" />
				<entry key="GetIauthAAEntity" value-ref="GetIauthAAEntity" />
				<entry key="GetHauthEntities" value-ref="GetHauthEntities" />
				<entry key="GetHauthEntity" value-ref="GetHauthEntity" />
				<entry key="GetHauthAAEntity" value-ref="GetHauthAAEntity" />
				<entry key="GetRauthEntities" value-ref="GetRauthEntities" />
				<entry key="GetRauthEntity" value-ref="GetRauthEntity" />
				<entry key="GetReversedEntities" value-ref="GetReversedEntities" />
				<entry key="GetReversedEntity" value-ref="GetReversedEntity" />
				<entry key="GetHeldEntities" value-ref="GetHeldEntities" />
				<entry key="GetHeldEntity" value-ref="GetHeldEntity" />
				<entry key="InputEntity" value-ref="InputEntity" />
				<entry key="CreateEntity" value-ref="CreateEntity" />
				<entry key="AuthoriseEntity" value-ref="AuthoriseEntity" />
				<entry key="DeleteEntity" value-ref="DeleteEntity" />
				<entry key="HoldEntity" value-ref="HoldEntity" />
				<entry key="HoldAAEntity" value-ref="HoldAAEntity" />
				<entry key="ReverseEntity" value-ref="ReverseEntity" />
				<entry key="ReverseAAEntity" value-ref="ReverseAAEntity" />
				<entry key="RestoreEntity" value-ref="RestoreEntity" />
				<entry key="ReviewEntity" value-ref="ReviewEntity" />
				<entry key="ValidateEntity" value-ref="ValidateEntity" />
				<entry key="VerifyEntity" value-ref="VerifyEntity" />
				<entry key="T24EntityMetadata" value-ref="T24EntityMetadata" />
				<entry key="T24Enrichment" value-ref="T24Enrichment" />
		        <entry key="T24Enrichments" value-ref="T24Enrichments" />
		        <entry key="T24FieldMetadata" value-ref="T24FieldMetadata" />
		        <entry key="T24NextState" value-ref="T24NextState" />
		        <entry key="CreateAAEntity" value-ref="CreateAAEntity" />
		        <entry key="PopulateAAEntity" value-ref="PopulateAAEntity" />
		        <entry key="ValidateAAEntity" value-ref="ValidateAAEntity" />
		        <entry key="InputAAEntity" value-ref="InputAAEntity" />
		        <entry key="AAFieldMetadata" value-ref="AAFieldMetadata" />
		        <entry key="ImageUpload" value-ref="ImageUpload" />
				<entry key="ImageDownload" value-ref="ImageDownload" />
				<entry key="CheckAutoIdSupport" value-ref="CheckAutoIdSupport" />
				<entry key="CheckIfError" value-ref="CheckIfError" />
				<entry key="ErrorCommand" value-ref="T24ErrorCommand" />
				<!-- ========================================================== -->
			</util:map>
		</property>
	</bean>
	
	<!-- Command controller -->
	<bean id="commands" class="com.temenos.interaction.core.command.NewCommandController">
		<constructor-arg name="commands" ref="commandsMap" />
	</bean>
	
</beans>
