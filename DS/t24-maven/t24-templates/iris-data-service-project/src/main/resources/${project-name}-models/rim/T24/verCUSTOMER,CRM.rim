domain T24 {
	use common.CoreCommands.*
	use common.HTTPEvents.*
	use common.ODataCommands.*
	use common.T24Commands.*
	use common.T24Events.*
	use common.NextState.*
	use common.Errors.*
	use T24.ContextEnquiry.*
	rim verCustomer_Crm {
		command T24FieldMetadata
		command NoopGET
		command GETEntities
		command GetLiveEntity
		command GetIauthEntity
		command GetHauthEntity
		command GetIauthEntities
		command CreateEntity
		command InputEntity
		command HoldEntity
		command AuthoriseEntity
		command ReviewEntity
		command ReverseEntity
		command ValidateEntity
		command RestoreEntity
		command DeleteEntity
		command T24Enrichment
		command CheckAutoIdSupport
		command GetHauthEntities
		command T24NextState
		basepath: "/{companyid}"
	
		resource verCustomer_Crm_errorHandler {
			type: item
			entity: verCustomer_Crm
			commands [ GET : NoopGET ]
			relations [ "http://temenostech.temenos.com/rels/error" ]
			path: "/verCustomer_Crms('{id}')/error"
			GET +-> ProcessErrors {
				title: "errors"
			}
			POST +-> verCustomer_Crm_metadata {
				title: "metadata"
			}
		}
	
		resource verCustomer_Crms {
			type: collection
			entity: verCustomer_Crm
			commands [ GET : GETEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verCustomer_Crms()"
			GET *-> verCustomer_Crm {
				parameters [ id = "{CustomerCode}" ]
			}
			GET *-> verCustomer_Crm_see {
				parameters [ id = "{CustomerCode}" ]
				title: "see record"
			}
			POST -> verCustomer_Crm_new {
				title: "create new deal"
				condition: OK(verCustomer_Crm_autoId)
			}
			POST -> verCustomer_Crm_populate {
				title: "populate existing deal"
			}
			PUT *-> verCustomer_Crm_input {
				parameters [ id = "{CustomerCode}" ]
				title: "input deal"
			}
			POST *-> verCustomer_Crm_audit {
				parameters [ id = "{CustomerCode}" ]
				title: "audit deal"
			}
			POST *-> verCustomer_Crm_reverse {
				parameters [ id = "{CustomerCode}" ]
				title: "reverse deal"
			}
		}
	
		resource verCustomer_Crm {
			type: item
			entity: verCustomer_Crm
			commands [ GET : GetLiveEntity ]
			path: "/verCustomer_Crms('{id}')"
			POST +-> verCustomer_Crm_metadata {
				title: "metadata"
			}
			GET --> verCustomer_Crm_IAuth {
				parameters [ id = "{CustomerCode}" ]
				condition: OK(verCustomer_Crm_IAuth)
			}
			POST -> verCustomer_Crm_validate {
				parameters [ id = "{CustomerCode}" ]
				title: "validate deal"
			}
			PUT -> verCustomer_Crm_input {
				parameters [ id = "{CustomerCode}" ]
				title: "input deal"
			}
			POST -> verCustomer_Crm_audit {
				parameters [ id = "{CustomerCode}" ]
				title: "audit deal"
			}
			POST -> verCustomer_Crm_reverse {
				parameters [ id = "{CustomerCode}" ]
				title: "reverse deal"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCustomer_Crm" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCustomer_Crm_see {
			type: item
			entity: verCustomer_Crm
			commands [ GET : GetLiveEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCustomer_Crm","http://temenostech.temenos.com/rels/see" ]
			path: "/verCustomer_Crms('{id}')/see"
			POST +-> verCustomer_Crm_metadata {
				title: "metadata"
			}
		}
	
		resource verCustomer_Crm_IAuth_see {
			type: item
			entity: verCustomer_Crm
			commands [ GET : GetIauthEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCustomer_Crm_IAuth","http://temenostech.temenos.com/rels/see" ]
			path: "/verCustomer_Crms_IAuth('{id}')/see"
		}
	
		resource verCustomer_Crm_HAuth_see {
			type: item
			entity: verCustomer_Crm
			commands [ GET : GetHauthEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCustomer_Crm_HAuth","http://temenostech.temenos.com/rels/see" ]
			path: "/verCustomer_Crms_HAuth('{id}')/see"
		}
	
		resource verCustomer_Crm_metadata {
			type: collection
			entity: T24FieldMetadata
			commands [ POST : T24FieldMetadata ]
			relations [ "http://temenostech.temenos.com/rels/metadata" ]
			path: "/verCustomer_Crms()/metadata"
		}
	
		resource verCustomer_Crms_IAuth {
			type: collection
			entity: verCustomer_Crm
			commands [ GET : GetIauthEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verCustomer_Crms_IAuth()"
			GET *-> verCustomer_Crm_IAuth {
				parameters [ id = "{CustomerCode}" ]
			}
			POST -> verCustomer_Crm_new {
				title: "create new deal"
				condition: OK(verCustomer_Crm_autoId)
			}
			POST -> verCustomer_Crm_populate {
				title: "populate existing deal"
			}
			PUT *-> verCustomer_Crm_input {
				parameters [ id = "{CustomerCode}" ]
				title: "input deal"
			}
			DELETE *-> verCustomer_Crm_delete {
				parameters [ id = "{CustomerCode}" ]
				title: "delete"
			}
			PUT *-> verCustomer_Crm_authorise {
				parameters [ id = "{CustomerCode}" ]
				title: "authorise deal"
			}
		}
	
		resource verCustomer_Crm_new {
			type: item
			entity: verCustomer_Crm
			commands [ POST : CreateEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCustomer_Crm","http://temenostech.temenos.com/rels/new" ]
			path: "/verCustomer_Crms()/new"
			POST +-> verCustomer_Crm_metadata {
				title: "metadata"
			}
			POST -> verCustomer_Crm_validate {
				parameters [ id = "{CustomerCode}" ]
				title: "validate deal"
			}
			PUT -> verCustomer_Crm_input {
				parameters [ id = "{CustomerCode}" ]
				title: "input deal"
			}
			POST -> verCustomer_Crm_hold {
				parameters [ id = "{CustomerCode}" ]
				title: "hold deal"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCustomer_Crm" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCustomer_Crm_input {
			type: item
			entity: verCustomer_Crm
			commands [ PUT : InputEntity, POST : InputEntity ]
			relations [ "http://temenostech.temenos.com/rels/input" ]
			path: "/verCustomer_Crms('{id}')"
			GET --> nextState {
				condition: OK(nextState)
			}
			GET --> verCustomer_Crm_IAuth {
				parameters [ id = "{CustomerCode}" ]
				condition: OK(verCustomer_Crm_IAuth)
			}
			GET --> verCustomer_Crm {
				parameters [ id = "{CustomerCode}" ]
				condition: OK(verCustomer_Crm)
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCustomer_Crm" ]
				title: "Context Enquiries"
			}
			onerror --> T24.verCustomer_Crm.verCustomer_Crm_errorHandler
		}
	
		resource verCustomer_Crm_hold {
			type: item
			entity: verCustomer_Crm
			commands [ POST : HoldEntity ]
			relations [ "http://temenostech.temenos.com/rels/hold" ]
			path: "/verCustomer_Crms('{id}')/hold"
			PUT -> verCustomer_Crm_input {
				parameters [ id = "{CustomerCode}" ]
				title: "input deal"
			}
			DELETE -> verCustomer_Crm_delete {
				parameters [ id = "{CustomerCode}" ]
				title: "delete"
			}
			onerror --> common.Errors.Errors
		}
	
		resource verCustomer_Crm_authorise {
			type: item
			entity: verCustomer_Crm
			commands [ PUT : AuthoriseEntity ]
			relations [ "http://temenostech.temenos.com/rels/authorise" ]
			path: "/verCustomer_Crms('{id}')/authorise"
			GET --> verCustomer_Crm_IAuth {
				parameters [ id = "{CustomerCode}" ]
				condition: OK(verCustomer_Crm_IAuth)
			}
			GET --> verCustomer_Crm {
				parameters [ id = "{CustomerCode}" ]
				condition: OK(verCustomer_Crm)
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCustomer_Crm" ]
				title: "Context Enquiries"
			}
			onerror --> common.Errors.Errors
		}
	
		resource verCustomer_Crm_audit {
			type: item
			entity: verCustomer_Crm
			commands [ POST : ReviewEntity ]
			relations [ "http://temenostech.temenos.com/rels/review" ]
			path: "/verCustomer_Crms('{id}')/review"
			GET -> verCustomer_Crm {
				parameters [ id = "{CustomerCode}" ]
			}
			onerror --> common.Errors.Errors
		}
	
		resource verCustomer_Crm_reverse {
			type: item
			entity: verCustomer_Crm
			commands [ PUT : ReverseEntity ]
			relations [ "http://temenostech.temenos.com/rels/reverse" ]
			path: "/verCustomer_Crms('{id}')/reverse"
			GET --> verCustomer_Crm_IAuth {
				parameters [ id = "{CustomerCode}" ]
				condition: OK(verCustomer_Crm_IAuth)
			}
			GET --> verCustomer_Crm_HAuth {
				parameters [ id = "{CustomerCode}" ]
				condition: OK(verCustomer_Crm_HAuth)
			}
			onerror --> T24.verCustomer_Crm.verCustomer_Crm_errorHandler
		}
	
		resource verCustomer_Crm_validate {
			type: item
			entity: verCustomer_Crm
			commands [ POST : ValidateEntity ]
			relations [ "http://temenostech.temenos.com/rels/validate" ]
			path: "/verCustomer_Crms('{id}')/validate"
			GET +-> ProcessErrors {
				title: "errors"
				condition: OK(CheckIfError)
			}
			POST +-> verCustomer_Crm_metadata {
				title: "metadata"
			}
			PUT -> verCustomer_Crm_input {
				parameters [ id = "{CustomerCode}" ]
				title: "input deal"
			}
			POST -> verCustomer_Crm_hold {
				parameters [ id = "{CustomerCode}" ]
				title: "hold deal"
			}
		}
	
		resource verCustomer_Crm_IAuth {
			type: item
			entity: verCustomer_Crm
			commands [ GET : GetIauthEntity ]
			path: "/verCustomer_Crms_IAuth('{id}')"
			POST +-> verCustomer_Crm_metadata {
				title: "metadata"
			}
			POST -> verCustomer_Crm_validate {
				parameters [ id = "{CustomerCode}" ]
				title: "validate deal"
			}
			PUT -> verCustomer_Crm_input {
				parameters [ id = "{CustomerCode}" ]
				title: "input deal"
			}
			POST -> verCustomer_Crm_hold {
				parameters [ id = "{CustomerCode}" ]
				title: "hold deal"
			}
			POST -> verCustomer_Crm_authorise {
				parameters [ id = "{CustomerCode}" ]
				title: "authorise deal"
			}
			DELETE -> verCustomer_Crm_delete {
				parameters [ id = "{CustomerCode}" ]
				title: "delete"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCustomer_Crm" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCustomer_Crm_delete {
			type: item
			entity: verCustomer_Crm
			commands [ DELETE : DeleteEntity ]
			relations [ "http://temenostech.temenos.com/rels/delete" ]
			path: "/verCustomer_Crms('{id}')/delete"
		}
	
		resource verCustomer_CrmEntry {
			type: item
			entity: verCustomer_Crm
			commands [ GET : NoopGET ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCustomer_Crm","http://temenostech.temenos.com/rels/contract" ]
			path: "/verCustomer_CrmEntry"
			POST -> verCustomer_Crm_new {
				title: "create new deal"
				condition: OK(verCustomer_Crm_autoId)
			}
			POST -> verCustomer_Crm_populate {
				title: "populate existing deal"
			}
			GET +-> verCustomer_Crm_see {
				parameters [ id = "@" ]
				title: "See transaction"
			}
			GET +-> verCustomer_Crm_IAuth_see {
				parameters [ id = "@" ]
				title: "GetIauthEntity"
			}
			GET +-> verCustomer_Crm_HAuth_see {
				parameters [ id = "@" ]
				title: "GetHauthEntity"
			}
			GET +-> verCustomer_Crm_IAuth {
				parameters [ id = "@" ]
				title: "GetIauthEntity"
			}
			GET +-> verCustomer_Crm_HAuth {
				parameters [ id = "@" ]
				title: "GetHauthEntity"
			}
		}
	
		resource verCustomer_Crm_populate {
			type: item
			entity: verCustomer_Crm
			commands [ POST : CreateEntity ]
			relations [ "http://schemas.microsoft.com/ado/2007/08/dataservices/related/verCustomer_Crm","http://temenostech.temenos.com/rels/populate" ]
			path: "/verCustomer_Crms()/populate"
			POST -> verCustomer_Crm_validate {
				parameters [ id = "{CustomerCode}" ]
				title: "validate deal"
			}
			POST -> verCustomer_Crm_input {
				parameters [ id = "{CustomerCode}" ]
				title: "input deal"
			}
			DELETE -> verCustomer_Crm_delete {
				parameters [ id = "{CustomerCode}" ]
				title: "delete"
				condition: OK(verCustomer_Crm_IAuth)
			}
			POST -> verCustomer_Crm_metadata {
				title: "metadata"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCustomer_Crm" ]
				title: "Context Enquiries"
			}
		}
	
		resource verCustomer_Crms_enrichment {
			type: item
			entity: Enrichment
			commands [ GET : T24Enrichment {
				properties [ entity = "verCustomer_Crm" ]
				} ]
			relations [ "http://temenostech.temenos.com/rels/enrichment" ]
			path: "/verCustomer_Crms()/enrichment"
		}
	
		resource verCustomer_Crm_autoId {
			type: item
			entity: verCustomer_Crm
			commands [ GET : CheckAutoIdSupport ]
		}
	
		resource verCustomer_Crm_restore {
			type: item
			entity: verCustomer_Crm
			commands [ POST : RestoreEntity ]
			relations [ "http://temenostech.temenos.com/rels/restore" ]
			path: "/verCustomer_Crms('{id}')/restore"
			GET --> verCustomer_Crm_IAuth {
				parameters [ id = "{CustomerCode}" ]
				condition: OK(verCustomer_Crm_IAuth)
			}
			GET --> verCustomer_Crm {
				parameters [ id = "{CustomerCode}" ]
				condition: OK(verCustomer_Crm)
			}
			POST -> verCustomer_Crm_metadata {
				title: "metadata"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCustomer_Crm" ]
				title: "Context Enquiries"
			}
			onerror --> common.Errors.Errors
		}
	
		resource verCustomer_Crms_HAuth {
			type: collection
			entity: verCustomer_Crm
			commands [ GET : GetHauthEntities {
				properties [ filter = "{filter}" ]
				} ]
			path: "/verCustomer_Crms_HAuth()"
			GET *-> verCustomer_Crm_HAuth {
				parameters [ id = "{CustomerCode}" ]
			}
			POST -> verCustomer_Crm_new {
				title: "create new deal"
				condition: OK(verCustomer_Crm_autoId)
			}
			POST -> verCustomer_Crm_populate {
				title: "populate existing deal"
			}
			POST *-> verCustomer_Crm_restore {
				parameters [ id = "{CustomerCode}" ]
				title: "restore deal"
			}
		}
	
		resource verCustomer_Crm_HAuth {
			type: item
			entity: verCustomer_Crm
			commands [ GET : GetHauthEntity ]
			path: "/verCustomer_Crms_HAuth('{id}')"
			POST +-> verCustomer_Crm_metadata {
				title: "metadata"
			}
			POST -> verCustomer_Crm_validate {
				parameters [ id = "{CustomerCode}" ]
				title: "validate deal"
			}
			PUT -> verCustomer_Crm_input {
				parameters [ id = "{CustomerCode}" ]
				title: "input deal"
			}
			POST -> verCustomer_Crm_hold {
				parameters [ id = "{CustomerCode}" ]
				title: "hold deal"
			}
			POST -> verCustomer_Crm_authorise {
				parameters [ id = "{CustomerCode}" ]
				title: "authorise deal"
			}
			DELETE -> verCustomer_Crm_delete {
				parameters [ id = "{CustomerCode}" ]
				title: "delete"
			}
			GET -> "T24.ContextEnquiry.ContextEnquiryList" {
				parameters [ entity = "verCustomer_Crm" ]
				title: "Context Enquiries"
			}
		}
	
	}
	
}
