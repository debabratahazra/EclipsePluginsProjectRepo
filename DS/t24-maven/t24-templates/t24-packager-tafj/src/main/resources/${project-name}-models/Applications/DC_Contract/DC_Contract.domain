# UTF-8
# UTF-8
/* Data Capture processing */
Domain DC_Contract
	@t24:i (module=DC)
	@java:Package (value=com.temenos.t24.datamodel.dc.dc_contract)
namespace "http://www.temenos.com/t24/DC_Contract"
metamodelVersion 1.30.6
Classes {
	/* This Application allows banking areas to pass debit and credit transactions to all Customer Accounts, Internal (General) Accounts and Profit and Loss Accounts maintained within T24.  It is used to capture all entries which do not justify a transaction processing system (e.g. recording of business travel expenses) or for which an automated system is not yet available.
An entry may be assigned to a specific Batch Number by the Batch User, or, alternatively, a Batch Number can be assigned automatically.  A Batch can contain a variety of Profit and Loss, Internal Account and Customer Account entries and any mixture of local currency and foreign currency transactions.  Each Batch must balance on the local currency amounts and the End of Day processing of the Application will automatically generate a difference entry if this is not the case.
All entries must be input in the Currency of the related Account. For foreign currency entries, when a specific Exchange Rate is not input, a Middle Rate will be used to generate the local currency equivalent.
When Profit and Loss entries are input either the Customer number or an Account Officer code must be included. It is recommended that a Customer number is input as this provides improved MIS reporting.
As each entry is input, it will be validated on- line.  Error conditions must be corrected immediately and warning messages overridden, otherwise the entry must be abandoned or held.  After successful Validation of each entry, the Batch balance is updated and a new total displayed in the header section of the screen.  The header shows debit and credit totals for local and foreign currency, the foreign totals being shown in local currency equivalent.
The status of the Batch can be checked using the Exception and List displays.  A Batch will show the status INAU (input but not Authorised) until the Batch is balanced.  This is the case even when all items in the Batch have been Authorised.  The status may be requested at a detailed Batch level (by input of a Batch Number), at a Summary Department level (by input of a Department code), or as an overall Batch display (by input of ALL after the function).  Input of the List Function with no further parameters provides a summary display of all Batches for the Department of the User.  Each Batch will then be displayed on one line.  Input of 'L' against one Batch on this display leads to a display of all entries of the selected Batch in the form of one line per entry.  Input of 'S' against one or more items on the display leads to a detailed display of the selected entries.  These can be shown in sequence by pressing Function Key F5.
Entries can be deleted prior to Authorisation using the Delete function.
A Batch is Authorised either by individual Item Number (by input of a Batch Number and an Item Number), by individual Item within Batch (by input of a Batch Number), or as an entire Batch (by input of a Batch Number followed by ALL).  When Summary Authorisation is being carried out (ALL has been specified), details of individual entries will not be shown.  When a Batch is in balance and has been Authorised, it may not be amended and further entries cannot be added to the Batch.
The Reversal Function (R) is not available within the Data Capture Application.  Following Authorisation, an entry can only be reversed by the input of a new entry which has the Reversal Marker set.  The second entry may be part of the same Batch as the original (if the Batch is not yet in balance and fully Authorised) or input to a different Batch.  There is no link between the two entries.
During the End of Day Processing, all entries which have not been Authorised are replaced by Suspense entries.  The Internal Account number to be used for these entries is obtained by reference to records identified as SUSPENSE on the ACCOUNT.CLASS file (Ref: General Tables). Additionally, a balancing entry is generated if a Batch is found to be out of balance.  The Internal Account number for this is found by reference to a record identified as DIFFERENCE on the ACCOUNT.CLASS file.  Transaction codes used for balancing entries are 98 for CREDIT and 99 for DEBIT.
These transaction codes need to be loaded on the TRANSACTION table (Ref: General Tables).  A special entry number '999' has been reserved for this purpose and will be used when a difference entry is generated by the system.
Special care must be taken when entering items for Contingent Accounts. These should be input in separate Batches containing only contingent entries.
The Print Function (P) can be used to print details of individual entries.  P may be entered either as a  Function i.e. Data Capture P 0001 001 001 or against one or more of the entries shown when an individual batch is L(isted).
By means of the VERSION Application (Ref: Utilities), different screens may be defined for specific requirements.  For example, one screen could be designed to process clearing cheques, another to process transfers in local currency etc. */
	DATA_CAPTURE
		@t24:i (t24Name=DATA.CAPTURE, level=F, type=H, additionalInfo="NOT NOH BDA", allowedFunctions="A C D E H I L P Q R S", localRefAllowed=true)
	{
		/* This is the code by which an individual entry can be identified.
It is not necessary to enter the full ten character ID.  A shorter input will be interpreted as follows:
(1)     3 numeric characters = Batch Number (2)     4 numeric characters = Department Code (3)     6 numeric characters =           3 numeric character Batch Number and           3 numeric character Item Number (Only allowed when at least one             entry already exists in the selected batch) (4)     7 numeric characters =           4 numeric character Department Code and           3 numeric character Batch Number.
If input, the Department Code must exist on the DEPT.ACCT.OFFICER table (Ref: General Tables). If not input, the assumed default will be that associated with the User.
If a Batch Number is not entered, then the next available Batch Number within the Department of the User will be used.
If an Item Number is not entered, then the next available Item Number within the Batch will be used.  Up to a maximum number of 998 items per batch will be allowed.  The item number 999 is reserved in case a difference entry needs to be raised in the End of Day process.
Validation Rules
10 numeric characters:  4 numeric character Department Code, 3 numeric character Batch Number in range 001-999, 3 numeric character Item Number in range 001-998  (Mandatory input) */
		REF -> DC_Contract:DATA_CAPTURE PK required
			@i18n:Label (en=Txn.Ref)
			@t24:i (align=L, inputBehaviour=I, maxLength=21, sysNumber=0.0, core=true, businessType=A, t24Name=REF, mask="R##-#####-####-###-###")
		/* Identifies the Account for which the entry is being passed.
If a Posting Restriction or Referral (with Referral action = Override), which relates to this entry, has been applied to the Account, the entry will have to be overridden.
For debit entries to Customer Accounts, the System will also check if funds are available (by reference to the Working Balance of the Account record).  If funds are not available in the Working Balance, the System will check if an Overdraft Limit exists.  If there is no Limit or if the Limit would be exceeded by application of the entry, an override is necessary.  For further information, refer to the Help Text on LIMITs.
Validation Rules
Standard numeric Account number                       or 12 alphanumeric character Internal Account number     or 3-10 type MNE (uppercase alpha or numeric or '.') character Account Mnemonic.  (Mandatory input when passing entries to Customer or Internal Accounts.  Input not allowed when passing Profit and Loss entries.) */
		ACCOUNT_NUMBER -> ACM_AccountOpening:ACCOUNT
			@i18n:Label (en="Account Number")
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=1.0, core=true, businessType=ANT, t24Name=ACCOUNT.NUMBER)
		/* Indicates whether the entry is a debit or a credit.
The Sign of the entry, must agree with the sign on the TRANSACTION record (Ref: General Tables) for TRANSACTION.CODE, unless the entry is a Reversal. For Reversal entries, REVERSAL.MARKER - equal to 'R', the sign must be opposite to that on the TRANSACTION Record.
Example:
Transaction        Sign            Code
Normal:    21 (Misc. Credit)   C
Reversal:  21 (Misc. Credit)   D
Validation Rules
D - Debit         or C - Credit (Mandatory input) */
		SIGN : DC_Contract:DATA_CAPTURE__SIGN required
			@i18n:Label (en=Debit/Credit)
			@i18n:Tooltip (en=Debit/Credit)
			@t24:i (align=L, inputBehaviour=I, maxLength=1, sysNumber=2.0, core=true, t24Name=SIGN)
		/* Specifies the amount of the entry in local currency.
The Local Currency Amount of the Entry is used to balance Batches and to update the Balance fields of Local Currency Accounts.
Tolerance Checking
For foreign currency entries, if the Local Currency Amount is input, the System will check that it equals the foreign currency Amount converted at the Exchange Rate input. See AMOUNT.FCY and EXCHANGE.RATE for further information.
Up to 14 type AMT (Standard Amount Format) characters plus a decimal point.
Validation Rules

Mandatory input when the currency of the ACCOUNT.NUMBER         is local currency and for Profit and Loss entries.
Optional input for entries to foreign currency Accounts.         If not input for foreign currency entries a default value         will be calculated using AMOUNT.FCY and EXCHANGE.RATE or         the Middle Rate from the CURRENCY table if no Exchange         Rate has been entered in EXCHANGE.RATE field. */
		AMOUNT_LCY : T24BusinessTypes:AMT
			@i18n:Label (en="Amount Lcy")
			@t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=3.0, core=true, t24Name=AMOUNT.LCY, typeModifiers="USD")
		/* Identifies the type of Transaction.
The Transaction Code on an entry determines the references and narratives printed on statements and also default values which are added to the entry if not entered by the User, e.g. Value Date, Exposure Date, etc.
Validation Rules
3 numeric character Transaction Code. (Mandatory input)
DATA.CAPTURE. on the TRANSACTION record table (Ref: General Tables) must be 'Y'.
It must be a valid code on the TRANSACTION table.
SIGN must agree with the Debit Control Indicator on the TRANSACTION record unless the entry is a Reversal in which case they must be opposite. */
		TRANSACTION_CODE -> ST_Config:TRANSACTION required
			@i18n:Label (en="Transaction Code")
			@i18n:Tooltip (en="Indicates the Transaction Type")
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=4.0, core=true, t24Name=TRANSACTION.CODE)
		/* Specifies the reference given to the entry by the Customer involved.
Any reference provided by the Customer that is in connection with this entry should be input.
If the Transaction Code indicates that this is a Cheque Transaction then this field must contain a valid cheque number.
Cheque numbers are matched to the PAYMENT.STOP File. If the exact cheque number is found, an override is displayed. If the PAYMENT.STOP file only specifies an amount to be stopped, an override will be requested for each entry of the relevant Account satisfying the Amount condition.
Validation Rules
Up to 16 type S (uppercase alpha or numeric) characters. [Mandatory input when the Transaction record derived from TRANSACTION.CODE specifies a Mandatory Reference No. Otherwise optional input. No default value.] */
		THEIR_REFERENCE : T24BusinessTypes:S
			@i18n:Label (en="Their Ref")
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=5.0, core=true, t24Name=THEIR.REFERENCE)
		NARRATIVE -> byValue DC_Contract:DATA_CAPTURE__NARRATIVE *
		/* Identifies the Category code for Profit and Loss entries.
Validation Rules
5 numeric character Category code.  [Mandatory input when ACCOUNT.NUMBER is not input.  Otherwise not allowed.]
The code entered must be a valid Profit and Loss Category. */
		PL_CATEGORY -> ST_Config:CATEGORY
			@i18n:Label (en="PL Category")
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=7.0, core=true, businessType=CAT, t24Name=PL.CATEGORY, mask="R##-###")
		/* Identifies the Customer for whom the Profit and Loss transaction was generated.
This should be entered if a Customer of the bank was involved.  It is recommended that for Profit and Loss entries, this field is entered rather than ACCOUNT.OFFICER, as the quality of MIS reporting is then improved.
Validation Rules
Up to 6 numeric character Customer code      or 3-10 type MNE (uppercase alpha or numeric or '.') character Customer Mnemonic.  [Optional input for Profit and Loss entries, i.e. when PL.CATEGORY is input.  Otherwise not allowed.  No Default Value.]
It must be an existing code on the CUSTOMER file.
If this field is input, then ACCOUNT.OFFICER is not allowed. */
		CUSTOMER_ID -> ST_Customer:CUSTOMER
			@i18n:Label (en="Customer Id")
			@i18n:Tooltip (en="Identifies the Customer for the transaction.")
			@t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=8.0, core=true, businessType=CUS, t24Name=CUSTOMER.ID)
		/* Identifies the Department or Account Officer code for a Profit and Loss entry.
For an Account entry, or for a Profit and Loss entry where the CUSTOMER.ID has been identified, this field will default to the Account Officer code on the CUSTOMER or ACCOUNT File.
It is recommended that, for Profit and Loss entries, the CUSTOMER.ID is entered rather than this field, as the quality of MIS reporting is then improved.
Validation Rules
Up to 4 numeric character Department Account Officer code.  [Mandatory input for Profit and Loss entries, when PL.CATEGORY is input and CUSTOMER.ID is not entered.  Input is not allowed when CUSTOMER.ID is entered or when PL CATEGORY is not entered]. */
		ACCOUNT_OFFICER -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Account Officer")
			@i18n:Tooltip (en="Indicates Account Officer responsible")
			@t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=9.0, core=true, businessType=DAO, t24Name=ACCOUNT.OFFICER)
		/* Identifies the Category code of the Product which generated the Profit and Loss entry.
Product Categories are used for product profitability analysis and breakdown reporting in MIS  If not input for an Account Transaction, then the Category code for the Account record on the Account file is used as default.
Validation Rules
4-5 numeric character Category code.  [Mandatory input when the PL.CATEGORY is in the range 50000 - 59999.  Input is not allowed when the Profit and Loss Category is in the range 60000 - 69999.  No default value.]
Must be an existing code of the CATEGORY table (Ref: General Tables).
System Indicator on CATEGORY table must not be 'PL'. */
		PRODUCT_CATEGORY -> ST_Config:CATEGORY
			@i18n:Label (en="Product Category")
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=10.0, core=true, businessType=CAT, t24Name=PRODUCT.CATEGORY, mask="R##-###")
		/* Identifies the Date when the entry is to be given value for interest purposes.
This Field determines when the funds will be considered for interest calculations and is only allowed on entries to be booked on Customer Accounts.


Validation Rules



Up to 11 type D date characters (Date format in range 1950 - 2049). [Optional input for Customer Account entries. Default value is derived from Default Value Date on the Transaction Code record indicated by TRANSACTION.CODE. Mandatory input when the Default value date on the TRANSACTION record has not been entered.




If the date is not a working day according to the HOLIDAY table (Ref: General Tables), an override is required before processing can continue.




The date is compared with the Dates file as follows: (a) If the date input is before the Back Value Maximum, it is rejected. (b) If the date input is after the Forward Value Maximum it is rejected. (c) If the date input is before the Back Value Minimum an override is required. (d) If the date input is after the Forward Value Minimum an override is required. */
		VALUE_DATE : T24BusinessTypes:D
			@i18n:Label (en="Value Date")
			@i18n:Tooltip (en="Indicates the Value date of the Contract")
			@t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=11.0, core=true, t24Name=VALUE.DATE)
		/* Identifies the Currency when a foreign currency entry is being processed.
Validation Rules
3 type SSS (uppercase alpha) SWIFT characters         or 1-3 numeric character Currency code.  Mandatory input when the Account associated with ACCOUNT.NUMBER is in a foreign currency.  Otherwise not allowed except for Profit and Loss entries for which any input could be used for MIS information.
The foreign Currency code input must be the same as the Currency held on the ACCOUNT File for the ACCOUNT.NUMBER.
Input not allowed when the Currency of ACCOUNT is in local currency. */
		CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@i18n:Label (en=Ccy)
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=12.0, core=true, businessType=CCY, t24Name=CURRENCY)
		/* Specifies the foreign currency Amount of the entry.
Tolerance Checking
If the foreign currency Amount does not agree with the local currency amount when divided (or multiplied) by the Exchange Rate, the System then refers to FCY.CONV.TOLER.MIN and FCY.CONV.TOLER.MAX on the COMPANY record to determine if the Amounts input are within an acceptable tolerance. If the equivalent of the foreign currency differs from the local currency by less than the FCY.CONV.TOLER.MIN, the entry is accepted. If the difference is greater than the FCY.CONV.TOLER.MAX, an error message "NN.NN CONVERSION DIFF" is displayed and either the local or the foreign currency Amount (or both) must be adjusted before the entry will be accepted. If the difference is between FCY.CONV.TOLER.MIN and FCY.CONV.TOLER.MAX, then an override is required.
See also EXCHANGE.RATE for rate tolernace checking information.
Up to 14 type AMT (Standard Amount Format) characters plus a decimal point.
Validation Rules

Mandatory input if CURRENCY has been input and CURRENCY         is not the local currency for Profit and Loss entries.         Otherwise, not allowed. */
		AMOUNT_FCY : T24BusinessTypes:AMT
			@i18n:Label (en="Amount Fcy")
			@t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=13.0, core=true, t24Name=AMOUNT.FCY, typeModifiers="12")
		/* Specifies the Exchange Rate to local currency.
If not input for a foreign currency entry, the System uses a Currency Market Indicator to derive an Exchange Rate from the CURRENCY file. The System first checks for the presence of CURRENCY.MARKET on the entry itself. If not present, the System uses the Currency Market indicator specified on the Account record of the Account input in ACCOUNT.NUMBER.
The Exchange Rate is used to calculate the Local Currency Equivalent or, if this has been input, to verify the value of the Local Currency Equivalent.
When the AMOUNT.LCY equivalent has been entered the input of the exchange rate is mandatory, unless the CURRENCY entered is the local currency and the transaction is a Profit or Loss transaction, when no input is allowed in this field.
As most DATA.CAPTURE. transactions do not involve exchange profit, the Currency Middle Rate will be used as a default for foreign currency entries when no other exchange rate has been input.
1-12 type R (Standard Rate Format - up to 8 integer and 6 decimal) characters plus a decimal point or 1-15 type R (Up to 8 integer and 9 decimal) characters plus a decimal point when EXTENDED.PREC in SPF is set to &#145;Y&#146;.
If not input, a default value will be derived. If the Exchange Rate is input, the System will use the Middle Exchange Rate for the appropriate CURRENCY.MARKET for comparison. If the input is not equal to the Middle Rate, the System will then check that the Rate is within a specified percentage tolerance. The percentage figure for this check is to be found in DEFAULT.RATE.ALLOWANCE on the COMPANY record.
Validation Rules

Optional input for foreign currency entries. */
		EXCHANGE_RATE : T24BusinessTypes:R
			@i18n:Label (en="Exchange Rate")
			@t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=14.0, core=true, t24Name=EXCHANGE.RATE)
		/* Specifies the reference number assigned for any foreign exchange deal that has been performed for this entry.
This field will be entered when a foreign exchange deal has been booked for this entry.  The unique reference number assigned will allow the deal to be identified and replaced by this entry.
Validation Rules
Up to 5 numeric characters.  (Optional input, no default.  Input is only allowed if Exchange Rate has been input not allowed for Profit and Loss entries.) */
		NEG_REF_NO : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=15.0, core=true, t24Name=NEG.REF.NO)
		/* Identifies the type of foreign exchange position for this entry.
Validation Rules
Up to 2 alpha (type AAA) characters.  (Optional input, no default. Input is only allowed for foreign currency entries.  Not allowed for Profit and Loss entries.)  Input to this field will be checked against the Position Type table (FX.POS.TYPE in General Tables). */
		POSITION_TYPE -> RE_Config:FX_POS_TYPE
			@i18n:Label (en="Position Type")
			@i18n:Tooltip (en="Position Type")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=16.0, core=true, businessType=SSS, t24Name=POSITION.TYPE)
		/* Specifies the bank's reference for this entry.
If the TRANSACTION.CODE indicates that this is a Cheque Transaction (on TRANSACTION table), then input to this field is not allowed.
Validation Rules
Up to 16 type S (uppercase alpha or numeric) characters.  (Optional input, no default.  Input is not allowed for entries which are identified as Cheque Transactions.) */
		OUR_REFERENCE : T24BusinessTypes:S
			@i18n:Label (en="Transaction Ref")
			@i18n:Tooltip (en="Our Reference")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=17.0, core=true, t24Name=OUR.REFERENCE)
		/* Identifies whether or not this is a reversal entry.
Indicates if this entry is a reversal of a previous input with the same TRANSACTION.CODE.
When entering a Reversal entry the Transaction Code must be the same as that of the original entry but the Sign (C or D) must be opposite. This then enables the Transaction Count to be reduced, keeping MIS figures correct.
Validation Rules
R      -  Reversal Entry            or blank  -  Normal Entry.  (Optional input. Default value is blank, i.e. Normal Entry.) */
		REVERSAL_MARKER : DC_Contract:DATA_CAPTURE__REVERSAL_MARKER
			@i18n:Label (en="Reversal Marker")
			@i18n:Tooltip (en="Reversal Marker")
			@t24:i (align=L, inputBehaviour=I, maxLength=1, sysNumber=18.0, core=true, t24Name=REVERSAL.MARKER)
		/* Indicates the Date on which the available credited balance will be updated.
This is the date when the cleared and working balances on the Account file will be updated.
Validation Rules
Up to 11 type D date characters (Date Format in range 1950-2049).  [Optional input for Account entries, default value is determined by EXPOSURE.DATE on TRANSACTION table (Ref: General Tables).  Default (for Credit entries only) according to field Exposure Date on the associated Transaction record.]
If the date input is a non-working day, according to the HOLIDAY table an override will be required.
For Debit entries, input is not allowed.
For Debit Reversal entries (i.e. the reversal of a Credit), input of a date less than the Run Date is not acceptable.
For a Credit entry, input of an Exposure Date is mandatory if the Exposure Date Field on the associated TRANSACTION record is equal to NO.  Input must then be greater than or equal to Run Date.
For a Credit Reversal entry (i.e. reversal of a Debit), input is not allowed.
Input of a date prior to the Run Date is not allowed.
Input of a date greater than Forward Value Maximum (from the Dates record) is not allowed.
Input of a date greater than Forward Value Minimum can be accepted with an override.
Input of a date other than the default exposure date will not be allowed when the transaction code of the entry has a value of 'Y' in its field FORCE.DEF.EXP.DATE. */
		EXPOSURE_DATE : T24BusinessTypes:D
			@i18n:Label (en="Exposure Date")
			@i18n:Tooltip (en="Indicates exposure date")
			@t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=19.0, core=true, t24Name=EXPOSURE.DATE)
		/* Specifies the Currency Market applicable to the transaction.  This field is not used at present.
Validation Rules
2 numeric character Currency Market code. (Optional input)  The currency market input in this field must exist on the CURRENCY.MARKET table (Ref: General Tables). */
		CURRENCY_MARKET -> FIN_CurrencyConfig:CURRENCY_MARKET
			@i18n:Label (en=Market)
			@t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=20.0, core=true, t24Name=CURRENCY.MARKET)
		/* Identifies the Department Code for which the entry was originally input. Any subsequent amendments will not alter the Department Code.
The Department Code is automatically generated according to the value held in Department (Field 6 in Utilities application) on the USER table for the User ID.
Validation Rules
Internal field. */
		DEPARTMENT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Department Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=22.0, core=true, t24Name=DEPARTMENT.CODE)
		/* Identifies the dealer desk position which needs to be updated by the deal being created.  The dealer desk code is held on the position record so that the exchange position can be displayed at dealer desk level.
Validation Rules
2 alphanumeric character dealer code in the range A-Z, a-z, plus 0-9.  Optional Input;  Default = '00'
The code entered must appear on the DEALER.DESK table.
The field cannot be changed once the deal has been authorised. */
		DEALER_DESK -> ST_Config:DEALER_DESK
			@i18n:Label (en="Dealer Desk")
			@i18n:Tooltip (en="Specifies the Dealer Desk handling the transaction")
			@t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=23.0, core=true, businessType=A, t24Name=DEALER.DESK)
		/* This field will hold the sort code associated with the cheque number entered.
Validation Rules

Optional Input
If entered and existing on BC.SORT.CODE it is possible to         default the value date from the VALUE.DATE.PRD field */
		BANK_SORT_CDE -> FT_LocalClearing:BC_SORT_CODE
			@t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=24.0, core=true, businessType=A, t24Name=BANK.SORT.CDE)
		/* This field could be used to enter a cheque number assciated with this data capture operation.
Validation Rules

Optional Input */
		CHEQUE_NUMBER : T24BusinessTypes:A
			@i18n:Label (en="Cheque No")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=25.0, core=true, t24Name=CHEQUE.NUMBER)
		/* This field will hold the date on which the accounting will take place. */
		ACCOUNTING_DATE : T24BusinessTypes:D
			@i18n:Label (en="Accounting Date")
			@i18n:Tooltip (en="Accounting date")
			@t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=26.0, core=true, t24Name=ACCOUNTING.DATE)
		/* This field indicates whether the account entered is a contingent or non contingent account. System sets the value Y or N in this field based on the type of account entered. */
		CONTINGENT_ACCT : DC_Contract:DATA_CAPTURE__CONTINGENT_ACCT
			@t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=27.0, core=true, t24Name=CONTINGENT.ACCT)
		/* Specify the type of cheque used in the transaction.
Below mentioned Cheque Type defaulting mechanism will be used if the Cheque.Register in ACCOUNT.PARAMETER is set as "Yes". Otherwise it will default to NULL.
Defaulting Mechanism
If the Cheque.Register is set as Yes,
If the transaction code used in DC/FT/TT, has cheque indicator as Yes in TRANSACTION file, then cheque.type will be defaulted as per the following:
1.

If the Debit account has a record in CHEQUE.TYPE.ACCOUNT, that cheque.type will be defaulted.2.

If debit account has more than one record in CHEQUE.TYPE.ACCOUNT, then based on the range of cheque number issued for that account, appropriate cheque.type will be defaulted3.

If debit account has more than one record in CHEQUE.TYPE.ACCOUNT and both cheque type has same range of cheque number issued, then User has to enter the cheque.type4.

However user will not be able to enter a cheque.type, which is not available for the account in CHEQUE.TYPE.ACCOUNT.5.

If it does not satisfies above condition, then it will default to NULL.If Cheque.Register set as NO or NULL then the cheque type will defaults to NULL.
Validation Rules

Optional field
Must be a valid record in CHEQUE.TYPE. */
		CHEQ_TYPE -> CHQ_Config:CHEQUE_TYPE
			@i18n:Label (en="Cheque Type")
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=28.0, core=true, businessType=SSS, t24Name=CHEQ.TYPE)
		TFS_REFERENCE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=29.0, core=true, t24Name=TFS.REFERENCE)
		ACCOUNTING_COMPANY -> ST_CompanyCreation:COMPANY
			@t24:i (align=L, inputBehaviour=I, maxLength=9, sysNumber=30.0, core=true, businessType=COM, t24Name=ACCOUNTING.COMPANY)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RESERVED_4 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=31.0, core=true, t24Name=RESERVED.4)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RESERVED_3 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=32.0, core=true, t24Name=RESERVED.3)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RESERVED_2 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=33.0, core=true, t24Name=RESERVED.2)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RESERVED_1 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=34.0, core=true, t24Name=RESERVED.1)
		STMT_NO -> byValue DC_Contract:DATA_CAPTURE__STMT_NO *
		OVERRIDE -> byValue DC_Contract:DATA_CAPTURE__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=37.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=38.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue DC_Contract:DATA_CAPTURE__INPUTTER *
		DATE_TIME -> byValue DC_Contract:DATA_CAPTURE__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=41.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=42.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=43.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=44.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=45.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
		DEPT_BATCH : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=7, core=false, t24Name=DEPT.BATCH, genOperation="@ID[8,7]")
		BOOK_DATE : mml:Integer
			@i18n:Label (en="Booking Date")
			@t24:i (align=L, inputBehaviour=N, maxLength=8, core=false, t24Name=BOOK.DATE, genOperation="IF LEN(@ID) GT 10 THEN @ID[3,5] ELSE \"\"")
	}
	DATA_CAPTURE__NARRATIVE
	{
		/* Narrative in addition to, or instead of, any references.
Contains narrative which may be printed on the next account statement in addition to, or instead of, the fields, THEIR.REFERENCE and OUR.REFERENCE.
Note : More details concerning the possible inclusion of the narrative on        the account statement may be found in TRANSACTION table        (Statement Narrative Ref in General Tables application) and in        ACCOUNT.STATEMENT table (Descriptive Statement in ACCOUNT        application).
Validation Rules
1-3 lines of up to 34 type S (uppercase alpha or numeric) characters.  Multivalue field.  (Optional input.  No default value.) */
		NARRATIVE : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=6.0, core=true, t24Name=NARRATIVE)
	}
	DATA_CAPTURE__STMT_NO
	{
		/* This is a multi valued field. Standard T24 alphanumeric field.
Validation Rules
A maximum of 6 characters may be entered.
This is a NOINPUT field. */
		STMT_NO : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=35.0, core=true, t24Name=STMT.NO)
	}
	DATA_CAPTURE__OVERRIDE
	{
		OVERRIDE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=36.0, core=true, t24Name=OVERRIDE)
	}
	DATA_CAPTURE__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=39.0, core=true, t24Name=INPUTTER)
	}
	DATA_CAPTURE__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=40.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	/* This file has only one record 'DC.ADVICES' and is used to control the printing of advices from within the DATA.CAPTURE module.
The production of advices is requested via input in a LOCAL.REF field at the transaction level during DATA.CAPTURE input. This item specifies which of the DATA.CAPTURE LOCAL.REF fields is to be used to request the production of an advice and that which will subsequently record the delivery reference for the advice produced.
This record will need to be set up before delivery messages from data.capture can be produced. The prerequisite for entering this record is that the DATA.CAPTURE record on the LOCAL.REF.TABLE file is present. */
	DC_ADVICES
		@t24:i (t24Name=DC.ADVICES, level=C, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=false)
	{
		/* Input must be "DC.ADVICES".
Validation Rules
10 alpha characters. */
		DC_ADVICE_ID -> DC_Contract:DC_ADVICES PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=0.0, core=true, t24Name=DC.ADVICE.ID)
		/* Identifies any additional element which has been defined locally for the advice facility in Data Capture.
This field gives the multivalue position within the LOCAL.REF field that will be used to request an advice from within a DATA.CAPTURE transaction. An input of 'Y' in this LOCAL.REF field when entering a DATA.CAPTURE item will trigger the delivery processing.
Example:   LOCAL.REF.USED = 1
Validation Rules
Up to 35 alpha characters.  Single value field.  No change allowed to this field after validation.
Field number entered must be defined on LOCAL.REF.TABLE. */
		LOCAL_REF_USED : mml:Integer
			@t24:i (align=R, inputBehaviour=F, maxLength=35, sysNumber=1.0, core=true, t24Name=LOCAL.REF.USED)
		/* Identifies the additional element which has been defined locally for the advice generation in Data Capture.
This field gives the multivalue position within the LOCAL.REF field within DATA.CAPTURE that will contain the delivery reference if an advice was requested (see 'LOCAL.REF.USED').
Validation Rules
Up to 35 alpha characters.  Single value field.  No change allowed to this field after validation.
Field number entered must be defined on LOCAL.REF.TABLE. */
		DELIVERY_REF : mml:Integer
			@i18n:Label (en="Delivery Ref")
			@i18n:Tooltip (en="System generated Delivery ref key")
			@t24:i (align=R, inputBehaviour=F, maxLength=35, sysNumber=2.0, core=true, t24Name=DELIVERY.REF)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RES1 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=3.0, core=true, t24Name=RES1)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RES2 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=4.0, core=true, t24Name=RES2)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RES3 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=5.0, core=true, t24Name=RES3)
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=6.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=7.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue DC_Contract:DC_ADVICES__INPUTTER *
		DATE_TIME -> byValue DC_Contract:DC_ADVICES__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=10.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=11.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=12.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=13.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=14.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	DC_ADVICES__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=8.0, core=true, t24Name=INPUTTER)
	}
	DC_ADVICES__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=9.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	/* This file is an internal file automatically updated within the Data Capture Application.  It controls for each open batch the items pending authorisation, the items (i.e. entry number) which have been used as well as the current total debit and credit both in local currency and foreign currency.  For each batch which has been 'adjusted' by means of the automatic balancing facility, a corresponding update will also be done in this file.  The information contained in the file is as follows for each 'open' batch:
-    List of items not yet authorised.       -    List of items used.       -    Local currency amount Debit.       -    Local currency amount Credit.       -    Foreign currency amount Debit       -    Foreign currency amount Credit       -    Record status:
- IAUT              which means that all the items (entries) of the batch have              been authorised but the batch is not yet in balance.
- INAU              which means that all the items (entries) of the batch are              still in an unauthorised status.
- IPAU              which means that some of the items (entries) of the batch              have been authorised while other are still in an unauthorised              status.  The batch is 'partially' authorised.
-    Company identification       -    Adjustment flag (ADJUST, TRY ADJ or Nothing).       -    Adjustment amount       -    Adjustment Item number. */
	DC_BATCH_CONTROL
		@t24:i (t24Name=DC.BATCH.CONTROL, level=F, type=L, allowedFunctions="L P S", localRefAllowed=false)
	{
		/* This field is the ID field for this application. It holds the ID details of particular Department and its Batch entered in DATA.CAPTURE. It's sturcuture will be like 'DCYYJJJDDDDBBB'. EX: DC012340001001. */
		DEPT_BATCH_CODE -> DC_Contract:DC_BATCH_CONTROL PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=17, sysNumber=0.0, core=true, businessType=A, t24Name=DEPT.BATCH.CODE, mask="R##-#####-####-###")
		ITEMS_NOT_AUTH -> byValue DC_Contract:DC_BATCH_CONTROL__ITEMS_NOT_AUTH *
		ITEMS_USED -> byValue DC_Contract:DC_BATCH_CONTROL__ITEMS_USED *
		/* The total of all debit amount transactions with in a batch in local currency */
		LCY_AMOUNT_DEBIT : T24BusinessTypes:AMT
			@i18n:Label (en="Lcy Amount Debit")
			@t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=3.0, core=true, t24Name=LCY.AMOUNT.DEBIT, typeModifiers="USD")
		/* The total of all credit amount transactions with in a batch in local currency
Validation Rules

Rule 1 : NO INPUT
Rule 2 : Amount from DATA.CAPTURE record */
		LCY_AMOUNT_CREDIT : T24BusinessTypes:AMT
			@i18n:Label (en="Lcy Amount Credit")
			@t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=4.0, core=true, t24Name=LCY.AMOUNT.CREDIT, typeModifiers="USD")
		/* The total of all debit amount transactions with in a batch in foreign currency */
		FCY_AMOUNT_DEBIT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=5.0, core=true, t24Name=FCY.AMOUNT.DEBIT)
		/* The total of all credit amount transactions with in a batch in foreign currency */
		FCY_AMOUNT_CREDIT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=6.0, core=true, t24Name=FCY.AMOUNT.CREDIT)
		RECORD_STATUS : T24BusinessTypes:A
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=7.0, core=true, t24Name=RECORD.STATUS)
		/* This field specifies the company to which the DATA.CAPTURE belongs to.
Validation Rules

Rule 1 : NO INPUT
Rule 2 : ID.COMPANY OF THE DATA.CAPTURE RECORD */
		COMPANY : T24BusinessTypes:A
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=I, maxLength=11, sysNumber=8.0, core=true, t24Name=COMPANY, mask="R##-###-####")
		/* SYSTEM updated field. Will hold either "ADJUST" OR "TRY.ADJ */
		FLAG : DC_Contract:DC_BATCH_CONTROL__FLAG
			@t24:i (align=L, inputBehaviour=I, maxLength=7, sysNumber=9.0, core=true, t24Name=FLAG)
		/* SYSTEM updated field. Will hold the adjustment amount. */
		ADJUST_AMOUNT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=6, sysNumber=10.0, core=true, t24Name=ADJUST.AMOUNT, typeModifiers="USD")
		/* SYSTEM updated field. Will hold the adjustment item. */
		ADJUST_ITEM : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=11.0, core=true, t24Name=ADJUST.ITEM)
		/* This field will be populated by the system from DATA.CAPTURE application. This field specifies on which date accounting should take place. */
		ACCOUNTING_DATE : T24BusinessTypes:D
			@i18n:Label (en="Accounting Date")
			@i18n:Tooltip (en="ACCOUNTING.DATE in Statement entry")
			@t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=12.0, core=true, t24Name=ACCOUNTING.DATE)
		UNBALANCED -> byValue DC_Contract:DC_BATCH_CONTROL__UNBALANCED *
		NET_LCY -> byValue DC_Contract:DC_BATCH_CONTROL__NET_LCY *
		ITEMS_ON_HOLD -> byValue DC_Contract:DC_BATCH_CONTROL__ITEMS_ON_HOLD *
		/* This field will be populated from DATA.CAPTURE record. Sets the value in this field based on CONTINGENT.ACCT in DATA.CAPTURE to identify the type of batch (contingent/non contingent).
Validation Rules

Rule 1 : NO INPUT
Rule 2 : Y or N */
		CONTINGENT_ACCT : DC_Contract:DC_BATCH_CONTROL__CONTINGENT_ACCT
			@t24:i (align=L, inputBehaviour=I, maxLength=1, sysNumber=17.0, core=true, t24Name=CONTINGENT.ACCT)
		OVERRIDE_CLASS -> byValue DC_Contract:DC_BATCH_CONTROL__OVERRIDE_CLASS *
		INPUTTERS -> byValue DC_Contract:DC_BATCH_CONTROL__INPUTTERS *
		POSITION_TYPE : mml:Integer
			@i18n:Label (en="Position Type")
			@i18n:Tooltip (en="Position Type")
			@t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=20.0, core=true, t24Name=POSITION.TYPE)
		COMP_ID -> byValue DC_Contract:DC_BATCH_CONTROL__COMP_ID *
		RESERVED06 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=26.0, core=true, t24Name=RESERVED06)
		RESERVED05 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=27.0, core=true, t24Name=RESERVED05)
		RESERVED04 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=28.0, core=true, t24Name=RESERVED04)
		RESERVED03 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=29.0, core=true, t24Name=RESERVED03)
		RESERVED02 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=30.0, core=true, t24Name=RESERVED02)
		RESERVED01 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=31.0, core=true, t24Name=RESERVED01)
		BATCH : mml:Integer
			@i18n:Label (en=Batch)
			@t24:i (align=R, inputBehaviour=N, maxLength=3, core=false, t24Name=BATCH, genOperation="@ID[3]")
		NUMBER_OF_ITEMS : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=3, core=false, t24Name=NUMBER.OF.ITEMS, genOperation="DCOUNT(ITEMS.USED,@VM)")
	}
	DC_BATCH_CONTROL__ITEMS_NOT_AUTH
	{
		/* This field stores the sequence number of items in a batch that are still not authorized.
Validation Rules

Rule 1 : NO INPUT
Rule 2 : Sequence number of the batch */
		ITEMS_NOT_AUTH : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=1.0, core=true, t24Name=ITEMS.NOT.AUTH)
	}
	DC_BATCH_CONTROL__ITEMS_USED
	{
		/* This field stores the sequence number of items that has been used in a batch. */
		ITEMS_USED : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=2.0, core=true, t24Name=ITEMS.USED)
	}
	DC_BATCH_CONTROL__UNBALANCED
	{
		/* This field holds the user information of the DATA.CAPTURE entered. This field will be updated when DC.BALANCED flag is set to "YES" in ACCOUNT.PARAMETER and When DC is not balanced. */
		UNBALANCED : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=13.0, core=true, t24Name=UNBALANCED)
	}
	DC_BATCH_CONTROL__NET_LCY
	{
		/* The NET of all credit and debit amount transactions with in a batch in local currency. This field will be updated when DC.BALANCED flag is set to "YES" in ACCOUNT.PARAMETER */
		NET_LCY : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=14.0, core=true, t24Name=NET.LCY)
		/* The NET of all credit and debit amount transactions with in a batch in foreign currency. This field will be updated when DC.BALANCED flag is set to "YES" in ACCOUNT.PARAMETER */
		NET_FCY : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=15.0, core=true, t24Name=NET.FCY)
	}
	DC_BATCH_CONTROL__ITEMS_ON_HOLD
	{
		/* This field stores the sequence number of items that has been kept in hold status in a batch. This field will be updated when DC.BALANCED flag is set in ACCOUNT.PARAMETER. */
		ITEMS_ON_HOLD : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=16.0, core=true, t24Name=ITEMS.ON.HOLD)
	}
	DC_BATCH_CONTROL__OVERRIDE_CLASS
	{
		OVERRIDE_CLASS : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=18.0, core=true, t24Name=OVERRIDE.CLASS)
	}
	DC_BATCH_CONTROL__INPUTTERS
	{
		/* The field stores the list of all users who has entered the DATA.CAPTURE record. This field will be updated if DC.BALANCED FLAG in ACCOUNT.PARAMETER is set. This field ensures there will be no INPUTTER/AUTHORIZER conflict.
Validation Rules

Rule 1 : NO INPUT
Rule 2 : INPUTTERS from DATA.CAPTURE record */
		INPUTTERS : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=19.0, core=true, t24Name=INPUTTERS)
	}
	DC_BATCH_CONTROL__COMP_ID
	{
		COMP_ID : T24BusinessTypes:COM
			@t24:i (align=L, inputBehaviour=N, maxLength=9, sysNumber=21.0, core=true, t24Name=COMP.ID)
		LCY_AMT_DR : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=22.0, core=true, t24Name=LCY.AMT.DR)
		LCY_AMT_CR : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=23.0, core=true, t24Name=LCY.AMT.CR)
		FCY_AMT_DR : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=24.0, core=true, t24Name=FCY.AMT.DR)
		FCY_AMT_CR : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=25.0, core=true, t24Name=FCY.AMT.CR)
	}
	DC_DEPT_BATCH_CONTROL
		@t24:i (t24Name=DC.DEPT.BATCH.CONTROL, level=F, type=T, allowedFunctions="L P S", localRefAllowed=false)
	{
		/* Standard T24 numeric field.
Validation Rules
Mandatory input.
A maximum of 4 characters may be entered.
Must be the key to a valid entry on the DEPT.ACCT.OFFICER file. */
		DEPARTMENT -> DC_Contract:DC_DEPT_BATCH_CONTROL PK required
			@i18n:Label (en=Department)
			@t24:i (align=L, inputBehaviour=I, maxLength=13, sysNumber=0.0, core=true, businessType=A, t24Name=DEPARTMENT, mask="R##-#####-####")
		/* Standard T24 numeric field.
Validation Rules
A maximum of 3 characters may be entered. */
		BATCH : mml:Integer
			@i18n:Label (en=Batch)
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=1.0, core=true, t24Name=BATCH)
	}
	/* DATA.CAPTURE creates via the T24 accounting routines, entries on the new file DC.ENTRY.  Each entry is uniquely identified by date and DATA.CAPTURE batch number, and consists of pointers to STMT.ENTRY and CATEG.ENTRY records that have been created by DATA.CAPTURE.
The pointers contained in DC.ENTRY consist of standard STMT.ENTRY and CATEG.ENTRY identifiers prefixed by 'S' or 'C' to distinguish which of the two files the entries are on.  DC.ENTRY records can be viewed, listed and printed.
The DC.ENTRY file is supported by two enquiries, DATA.CAPTURE.JOURNAL and TXN.ENTRY.
DATA.CAPTURE.JOURNAL displays details of STMT.ENTRY and CATEG.ENTRY records with batch and entry totals.  TXN.ENTRY displays details of transactions given the DATA.CAPTURE batch number and date.
The contents of DC.ENTRY for a particular day are reported, via the inclusion of EB.PRINT in EOD.DATA.CAPTURE, using DATA.CAPTURE.JOURNAL to produce the report.
Items on the DC.ENTRY file are retained for three months.  DC.PURGE clears old items when run in EOD.DATA.CAPTURE. */
	DC_ENTRY
		@t24:i (t24Name=DC.ENTRY, level=F, type=T, allowedFunctions="L P S", localRefAllowed=false)
	{
		/* Standard T24 alphanumeric field.
Validation Rules
A maximum of 35 characters may be entered. */
		ENTRY_ID -> DC_Contract:DC_ENTRY PK required
			@i18n:Label (en="Entry Id")
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, core=true, businessType=A, t24Name=ENTRY.ID)
		/* Identifiers pointing to STMT.ENTRY or CATEG.ENTRY entries created by DATA.CAPTURE batch.
Validation Rules
Standard STMT.ENTRY or CATEG.ENTRY identifier prefixed by 'S' for STMT.ENTRY or 'C' for CATEG.ENTRY to distinguish which file the entries have been records on. */
		STMT_CATEG_ENTRY : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=1.0, core=true, t24Name=STMT.CATEG.ENTRY)
		DATE : mml:Integer
			@i18n:Label (en=Date)
			@t24:i (align=L, inputBehaviour=N, maxLength=8, core=false, t24Name=DATE, genOperation="FIELD(ENTRY.ID,\'-\',1)")
		BATCH : mml:Integer
			@i18n:Label (en=Batch)
			@t24:i (align=L, inputBehaviour=N, maxLength=7, core=false, t24Name=BATCH, genOperation="FIELD(ENTRY.ID,\"-\",2) ; FIELD(ENTRY.ID,\"-\",2)[8,7] ; IF NUM(@1) THEN @1 ELSE @2")
		CO_CODE : T24BusinessTypes:COM
			@i18n:Label (en=Company)
			@t24:i (align=R, inputBehaviour=N, maxLength=9, core=false, t24Name=CO.CODE, genOperation="IF STMT.CATEG.ENTRY[1,1] = \"S\" THEN \"STMT.ENTRY\" ELSE \"CATEG.ENTRY\"; SUBR(\"ENQ.TRANS\",@1,STMT.CATEG.ENTRY[2,99], \"COMPANY.CODE\"); IF NOT(@2) AND STMT.CATEG.ENTRY[1,1] = \"S\" THEN  SUBR(\"ENQ.TRANS\",\"STMT.ENTRY.DETAIL\", STMT.CATEG.ENTRY[2,99],\"COMPANY.CODE\") ELSE @2; IF NOT(@3) AND STMT.CATEG.ENTRY[1,1] = \"C\" THEN SUBR(\"ENQ.TRANS\",\"CATEG.ENTRY.DETAIL\", STMT.CATEG.ENTRY[2,99],\"COMPANY.CODE\") ELSE @3")
	}
	NOFILE_DC_BATCH_CONTROL
		@t24:i (t24Name=NOFILE.DC.BATCH.CONTROL, level=I, type=T, allowedFunctions="L P S", localRefAllowed=false)
	{
		DEPARTMENT : mml:Integer required
			@i18n:Label (en=Department)
			@t24:i (align=R, inputBehaviour=N, maxLength=5, core=false, t24Name=DEPARTMENT)
		BATCH : mml:Integer
			@i18n:Label (en=Batch)
			@t24:i (align=R, inputBehaviour=N, maxLength=3, core=false, t24Name=BATCH)
		R_OUT_LIST : mml:Integer
			@t24:i (align=L, inputBehaviour=N, maxLength=18, core=false, t24Name=R.OUT.LIST, genOperation=E.DC.BATCH.CONTROL.DATA)
	}
}
Enumerations {
	DATA_CAPTURE__SIGN : mml:string
		D=D
		C=C
	DATA_CAPTURE__REVERSAL_MARKER : mml:string
		R=R
		NULL=NULL
	DATA_CAPTURE__CONTINGENT_ACCT : mml:string
		Y=Y
		N=N
	DC_BATCH_CONTROL__RECORD_STATUS : mml:string
		IAUT=IAUT
		INAU=INAU
		IPAU=IPAU
	DC_BATCH_CONTROL__FLAG : mml:string
		ADJUST=ADJUST
		TRY_ADJ=TRY.ADJ
	DC_BATCH_CONTROL__CONTINGENT_ACCT : mml:string
		Y=Y
		N=N
}