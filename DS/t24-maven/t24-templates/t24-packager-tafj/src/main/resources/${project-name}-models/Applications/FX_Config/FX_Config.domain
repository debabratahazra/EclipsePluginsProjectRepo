# UTF-8
# UTF-8
/* Parameter Definitions for Forex */
Domain FX_Config
	@t24:i (module=FX)
	@java:Package (value=com.temenos.t24.datamodel.fx.fx_config)
namespace "http://www.temenos.com/t24/FX_Config"
metamodelVersion 1.30.6
Classes {
	/* This table is used to store the different types of agreement used in FX contracts. Eg. ISDA, OTHR. */
	FX_AGREEMENT_TYPE
		@t24:i (t24Name=FX.AGREEMENT.TYPE, level=I, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=true)
	{
		/* The field AGREEMENT.TYPE on the FOREX contract is validated against the agreement type definitions on this file and enriched with the associated description
ID of this application has following validation:
i) 1-21 Alpha-numeric characters */
		FX_AGREEMENT_TYPE -> FX_Config:FX_AGREEMENT_TYPE PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=21, sysNumber=0.0, core=true, businessType=A, t24Name=FX.AGREEMENT.TYPE)
		DESCRIPTION -> byValue FX_Config:FX_AGREEMENT_TYPE__DESCRIPTION *
		RESERVED_5 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=3.0, core=true, t24Name=RESERVED.5)
		RESERVED_4 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=4.0, core=true, t24Name=RESERVED.4)
		RESERVED_3 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=5.0, core=true, t24Name=RESERVED.3)
		RESERVED_2 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=6.0, core=true, t24Name=RESERVED.2)
		RESERVED_1 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=7.0, core=true, t24Name=RESERVED.1)
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=8.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=9.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FX_Config:FX_AGREEMENT_TYPE__INPUTTER *
		DATE_TIME -> byValue FX_Config:FX_AGREEMENT_TYPE__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=12.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=13.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=14.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=15.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=16.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_AGREEMENT_TYPE__DESCRIPTION
	{
		/* Multi-valued field used to define the FX agreement type.
Validation Rules:
i) 1-35 Alpha-numeric characters. Mandatory field. */
		DESCRIPTION : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, core=true, t24Name=DESCRIPTION)
	}
	FX_AGREEMENT_TYPE__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=10.0, core=true, t24Name=INPUTTER)
	}
	FX_AGREEMENT_TYPE__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=11.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_GEN_CONDITION
		@t24:i (t24Name=FX.GEN.CONDITION, level=I, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=false)
	{
		FX_GROUP_NO -> FX_Config:FX_GEN_CONDITION PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=23, sysNumber=0.0, core=true, businessType=A, t24Name=FX.GROUP.NO)
		DESCRIPTION -> byValue FX_Config:FX_GEN_CONDITION__DESCRIPTION *
		ITEM -> byValue FX_Config:FX_GEN_CONDITION__ITEM *
		MULTIVALUE : T24BusinessTypes:A
			@i18n:Label (en="Multi Value")
			@i18n:Tooltip (en="Add Multi value - Y ?")
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=5.0, core=true, t24Name=MULTIVALUE, isValidateOnChange=true)
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=6.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=7.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FX_Config:FX_GEN_CONDITION__INPUTTER *
		DATE_TIME -> byValue FX_Config:FX_GEN_CONDITION__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=10.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=11.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=12.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=13.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=14.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_GEN_CONDITION__DESCRIPTION
	{
		DESCRIPTION : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, core=true, t24Name=DESCRIPTION)
	}
	FX_GEN_CONDITION__ITEM
	{
		ITEM -> byValue FX_Config:FX_GEN_CONDITION__ITEM__ITEM *
	}
	FX_GEN_CONDITION__ITEM__ITEM
	{
		ITEM : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=2.0, core=true, t24Name=ITEM)
		PRIORITY : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=5, sysNumber=3.0, core=true, t24Name=PRIORITY)
		VALUE : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, core=true, t24Name=VALUE)
	}
	FX_GEN_CONDITION__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=8.0, core=true, t24Name=INPUTTER)
	}
	FX_GEN_CONDITION__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=9.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_GROUP_CONDITION
		@t24:i (t24Name=FX.GROUP.CONDITION, level=I, type=H, allowedFunctions="A C D E I L P Q R S", localRefAllowed=true)
	{
		FX_GROUP_NO -> FX_Config:FX_GROUP_CONDITION PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, core=true, businessType=A, t24Name=FX.GROUP.NO)
		PORTFOLIO -> byValue FX_Config:FX_GROUP_CONDITION__PORTFOLIO *
		RESERVED_5 -> byValue FX_Config:FX_GROUP_CONDITION__RESERVED_5 *
		RESERVED_4 -> byValue FX_Config:FX_GROUP_CONDITION__RESERVED_4 *
		RESERVED_3 -> byValue FX_Config:FX_GROUP_CONDITION__RESERVED_3 *
		RESERVED_2 -> byValue FX_Config:FX_GROUP_CONDITION__RESERVED_2 *
		RESERVED_1 -> byValue FX_Config:FX_GROUP_CONDITION__RESERVED_1 *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=21.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=22.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FX_Config:FX_GROUP_CONDITION__INPUTTER *
		DATE_TIME -> byValue FX_Config:FX_GROUP_CONDITION__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=25.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=26.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=27.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=28.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=29.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_GROUP_CONDITION__PORTFOLIO
	{
		PORTFOLIO : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=1.0, core=true, t24Name=PORTFOLIO)
		DEAL_TYPE -> byValue FX_Config:FX_GROUP_CONDITION__PORTFOLIO__DEAL_TYPE *
		RESERVED_10 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=10.0, core=true, t24Name=RESERVED.10)
		RESERVED_9 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=11.0, core=true, t24Name=RESERVED.9)
		RESERVED_8 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=12.0, core=true, t24Name=RESERVED.8)
		RESERVED_7 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=13.0, core=true, t24Name=RESERVED.7)
		RESERVED_6 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=14.0, core=true, t24Name=RESERVED.6)
	}
	FX_GROUP_CONDITION__PORTFOLIO__DEAL_TYPE
	{
		DEAL_TYPE : FX_Config:FX_GROUP_CONDITION__PORTFOLIO__DEAL_TYPE__DEAL_TYPE
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=2.0, core=true, t24Name=DEAL.TYPE)
		MARGIN : T24BusinessTypes:R
			@t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=3.0, core=true, t24Name=MARGIN)
		FX_COMM_GRP -> FX_BulkOrder:FX_COMM_GROUP
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, core=true, businessType=A, t24Name=FX.COMM.GRP)
		RESERVED_15 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=5.0, core=true, t24Name=RESERVED.15)
		RESERVED_14 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=6.0, core=true, t24Name=RESERVED.14)
		RESERVED_13 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=7.0, core=true, t24Name=RESERVED.13)
		RESERVED_12 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=8.0, core=true, t24Name=RESERVED.12)
		RESERVED_11 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=9.0, core=true, t24Name=RESERVED.11)
	}
	FX_GROUP_CONDITION__RESERVED_5
	{
		RESERVED_5 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=15.0, core=true, t24Name=RESERVED.5)
	}
	FX_GROUP_CONDITION__RESERVED_4
	{
		RESERVED_4 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=16.0, core=true, t24Name=RESERVED.4)
	}
	FX_GROUP_CONDITION__RESERVED_3
	{
		RESERVED_3 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=17.0, core=true, t24Name=RESERVED.3)
	}
	FX_GROUP_CONDITION__RESERVED_2
	{
		RESERVED_2 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=18.0, core=true, t24Name=RESERVED.2)
	}
	FX_GROUP_CONDITION__RESERVED_1
	{
		RESERVED_1 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=19.0, core=true, t24Name=RESERVED.1)
	}
	FX_GROUP_CONDITION__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=23.0, core=true, t24Name=INPUTTER)
	}
	FX_GROUP_CONDITION__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=24.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	/* Within this file are defined parameters which determine some of the rules by which the system operates.  These are as follows:
1. Classification of the contracts between SPOT and FORWARD according to local Central Bank and internal reporting rules.
2. Definition of the 'Spot' default value date.
3. Specification of the interpolation and revaluation marker.
4. Definition of the default revaluation method for FORWARD and SWAP foreign exchange transactions.
5. Definition of the default category code for SPOT, FORWARD and SWAP Foreign Exchange transactions.
6. An indicator stating the number of days after maturity that a contract is removed for the 'Live' file and written to History.
7. Parameters determining the frequency and content of certain reports produced at End of Day.
8. Conditions under which deals may be entered with split value dates.
9. Indicators showing whether P/L and EXCHADS entries are to be booked when revaluation of FORWARD and SPOT contracts takes           place. */
	FX_PARAMETERS
		@t24:i (t24Name=FX.PARAMETERS, level=I, type=H, allowedFunctions="A C D E I L P Q R S", localRefAllowed=true)
	{
		/* FX.PARAMETERS
This is the main file which controls the activities of FOREX APPLICATION.
ID is FX.PARAMETERS */
		FX_PARAMETERS -> FX_Config:FX_PARAMETERS PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=13, sysNumber=0.0, core=true, t24Name=FX.PARAMETERS)
		/* Specifies, by means of a number of days, the local Central Bank rule for the reporting of Foreign Exchange contracts between SPOT and FORWARD.  For example, the market may treat contracts maturing in up to two days as a Spot but the Central Bank may wish the bank to report contracts maturing in up to seven days as Spot.
Validation Rules
1-2 numeric characters in the range 0 to 14.  (Mandatory input)  The number of days must be in the range 0-14. */
		SPOT_CENTRAL_BANK : T24BusinessTypes:S required
			@i18n:Label (en="Spot Central Bank")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=1.0, core=true, t24Name=SPOT.CENTRAL.BANK)
		/* Identifies the market practice concerning the value date of a SPOT contract. The standard 'Spot' value date is two business days following the day the deal was struck. The condition defined in this field will be used to default the value date on Spot Foreign Exchange contracts.
Validation Rules
1-2 numeric characters in the range 0-14 (number of working days).
Mandatory input.
The number of days must be in the range 0-14. */
		SPOT_MARKET : T24BusinessTypes:S required
			@i18n:Label (en="Spot Market")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=2.0, core=true, t24Name=SPOT.MARKET)
		/* Contains the banks' internal rule for the classification of Foreign Exchange transactions between Spot and Forward.  For example, the market might define spot as being two working days after the deal date, while the bank may want contracts maturing within seven days to be reported as 'Spot'.
The Foreign Exchange application will make reference to the number of days specified in this field to cross-validate the deal type of a Forex transaction (SPOT or FORWARD) with its value date.
Validation Rules
1-2 numeric characters in the range 0-14 (number of working days).  (Mandatory input)  The number of days must be in the range 0-14. */
		SPOT_INTERNAL : T24BusinessTypes:S required
			@i18n:Label (en="Spot Internal")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=3.0, core=true, t24Name=SPOT.INTERNAL)
		FX_LCL_REGION -> byValue FX_Config:FX_PARAMETERS__FX_LCL_REGION *
		SPOT_BASE_CCY -> byValue FX_Config:FX_PARAMETERS__SPOT_BASE_CCY *
		/* The OFS.SOURCE id present in this field is used to perform FX.BULK.ORDER.

Validation Rules


Must exist on OFS.SOURCE table. */
		BULK_OFS_SRC -> EB_Interface:OFS_SOURCE
			@i18n:Label (en="Bulk Service")
			@t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=6.0, core=true, businessType=A, t24Name=BULK.OFS.SRC)
		/* The VERSION id present this field is used as VERSION to populate/create FX BULK DEAL master records.

Validation Rules


Must exist on VERSION table. */
		BULK_MASTER_VER -> EB_Versions:VERSION
			@i18n:Label (en="Bulk Master Version")
			@t24:i (align=L, inputBehaviour=I, maxLength=54, sysNumber=7.0, core=true, businessType=A, t24Name=BULK.MASTER.VER)
		/* The VERSION id present this field is used as OPERATION for OFS.SOURCE to populate/create FX BULK.ORDER child records
Validation Rules


Must exist on VERSION table */
		BULK_CHILD_VER -> EB_Versions:VERSION
			@i18n:Label (en="Bulk Child Version")
			@t24:i (align=L, inputBehaviour=I, maxLength=54, sysNumber=8.0, core=true, businessType=A, t24Name=BULK.CHILD.VER)
		/* Holds the category code applicable for Accrual entries on account of a Forex Forward Deal
				   with revaluation type other than RB method. As this is a NOINPUT field, 
				   updation for the first time is done online by giving a value in the field NEW.RESFWDCR.CAT and 
				   on authorization of FX.PARAMETERS. Subsequent changes, if required, will be updated during the COB.
				   The code reflected  in this field should be a valid ID in CATEGORY application and
				   should be in the range of 10000 to 19999. */
		RESFWDCR_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=N, maxLength=5, sysNumber=9.0, core=true, t24Name=RESFWDCR.CAT)
		/* The category code entered in this field will be updated to RESFWDCR.CAT online for the first time and
				  subsequent changes in the following cob, if RESFWDCR.CAT already holds a category code.
				  The code entered here should be a valid id in CATEGORY application and should be in the range 10000 to 19999.
				  This field becomes null after the value given herein is updated to the field RESFWDCR.CAT */
		NEW_RESFWDCR_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=10.0, core=true, t24Name=NEW.RESFWDCR.CAT)
		/* Defines the number of days after maturity that a contract will be written to history. (Closed).
This field states the number of days after maturity that a contract is removed from the live Foreign Exchange file and written to history. A typical input would be '30' so that monthly reports could include contracts that matured during the month without having to interrogate history files.
Validation Rules

1-3 numeric characters, within the range 1 to 999. (Mandatory input; minimum value is '1' meaning that the contract will be written to history one day after maturity). */
		DAYS_POST_MATURITY : mml:Integer required
			@i18n:Label (en="Days Post Maturity")
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=11.0, core=true, t24Name=DAYS.POST.MATURITY)
		/* Identifies how many days before the maturity (i.e. value date) the user wants to see the Foreign Exchange contracts to appear in the Forex Maturity report.
The Foreign Exchange contracts will then appear every day in the report from the first day of appearance to their value date.
Note : If 0 days is input in this field, no maturity report will be        produced in the Forex End of Day process.
Validation Rules
2 numeric characters.  Mandatory input. */
		MATURITY_LIST_DAYS : mml:Integer required
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=12.0, core=true, t24Name=MATURITY.LIST.DAYS)
		/* Identifies how many days before the Maturity (i.e. value date) the user wants to see the Foreign Exchange contracts with incomplete delivery instructions to appear in the Forex 'Incomplete delivery instructions' report.
The contracts to appear in this report will be identified by the fact that the 'OUR ACCOUNT PAY' still contains the suspense account from the FX.TEXT file.  They will disappear from the report whenever they reach their value date or when proper liquidation instructions have been entered (i.e. OUR ACCOUNT PAY = Customer or NOSTRO account).
Note : If 0 days is input in this field, no incomplete delivery instructions report will be produced in the Forex End of Day process.
Validation Rules
2 numeric characters. Mandatory Input. */
		DELIVERY_LIST_DAYS : mml:Integer required
			@t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=13.0, core=true, t24Name=DELIVERY.LIST.DAYS)
		/* Holds the category code applicable for Accrual entries on account of a Forex Forward Deal 
				  with revaluation type other than RB method. As this is a NOINPUT field, 
				  updation for the first time is done online by giving a value in the field NEW.RESFWDDR.CAT and
				  on authorization of FX.PARAMETERS. Subsequent changes, if required, will be updated  during the COB.
				  The code reflected  in this field should be a valid ID in CATEGORY application and
				 should be in the range of 10000 to 19999. */
		RESFWDDR_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=N, maxLength=5, sysNumber=14.0, core=true, t24Name=RESFWDDR.CAT)
		/* The category code entered in this field will be updated to RESFWDDR.CAT online for the first time and
				   subsequent changes in the following cob, if RESFWDDR.CAT already holds a category code. 
				   The code entered here should be a valid id in CATEGORY application and should be in the range 10000 to 19999.
				   This field becomes null after the value given herein is updated to the field RESFWDDR.CAT */
		NEW_RESFWDDR_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=15.0, core=true, t24Name=NEW.RESFWDDR.CAT)
		MKT_EXCH_ACCT_METHOD : FX_Config:FX_PARAMETERS__MKT_EXCH_ACCT_METHOD
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=16.0, core=true, t24Name=MKT.EXCH.ACCT.METHOD)
		PRECIOUS_METALS -> byValue FX_Config:FX_PARAMETERS__PRECIOUS_METALS *
		RESERVED_6 : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=18.0, core=true, t24Name=RESERVED.6)
		/* Reserved for future use. */
		LOCAL_REF_VAL_NO : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=19.0, core=true, t24Name=LOCAL.REF.VAL.NO)
		SPLIT_VALUE_CCY -> byValue FX_Config:FX_PARAMETERS__SPLIT_VALUE_CCY *
		/* Holds the category code applicable for Accrual entries on account of a Forex Swap Deal 
				   with revaluation type other than RB method. As this is a NOINPUT field, 
				   updation for the first time is done online by giving a value in the field NEW.RESSWAPCR.CAT and 
				   on authorization of FX.PARAMETERS. Subsequent changes, if required, will be updated  during the COB.
				   The code reflected  in this field should be a valid ID in CATEGORY application and
				   should be in the range of 10000 to 19999. */
		RESSWAPCR_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=N, maxLength=5, sysNumber=21.0, core=true, t24Name=RESSWAPCR.CAT)
		/* The category code entered in this field will be updated to RESSWAPCR.CAT online for the first time
				   and  subsequent changes in the following cob, if RESSWAPCR.CAT already holds a category code. 
				   The code entered here should be a valid id in CATEGORY application and should be in the range 10000 to 19999.
				   This field becomes null after the value given herein is updated to the field RESSWAPCR.CAT */
		NEW_RESSWAPCR_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=22.0, core=true, t24Name=NEW.RESSWAPCR.CAT)
		DEAL_TYPE -> byValue FX_Config:FX_PARAMETERS__DEAL_TYPE *
		/* Reserved for future use.
Validation Rules
Noinput field. (Multivalue field associated with the fields DEAL TYPE to this field) */
		DISPLAY_OUTST : FX_Config:FX_PARAMETERS__DISPLAY_OUTST
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=26.0, core=true, t24Name=DISPLAY.OUTST)
		/* Holds the category code applicable for Accrual entries on account of a Forex Swap Deal
			 	    with revaluation type other than RB method. As this is a NOINPUT field, 
				    updation for the first time is done online by giving a value in the field NEW.RESSWAPDR.CAT and
				    on authorization of FX.PARAMETERS. Subsequent changes, if required, will be updated  during the COB. 
				    The code reflected  in this field should be a valid ID in CATEGORY application and 
				    should be in the range of 10000 to 19999. */
		RESSWAPDR_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=N, maxLength=5, sysNumber=27.0, core=true, t24Name=RESSWAPDR.CAT)
		/* The category code entered in this field will be updated to RESSWAPDR.CAT online for the first time 
					and  subsequent changes in the following cob, if RESSWAPDR.CAT already holds a category code.
					The code entered here should be a valid id in CATEGORY application and should be in the range 10000 to 19999.
					This field becomes null after the value given herein is updated to the field RESSWAPDR.CAT. */
		NEW_RESSWAPDR_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=28.0, core=true, t24Name=NEW.RESSWAPDR.CAT)
		/* This field specifies the OFS.SOURCE used to input the FX order, from FX.LIM.ORDER
Validation Rules

Should contain a valid OFS.SOURCE record ID */
		TRADE_ORD_OFS_SRC -> EB_Interface:OFS_SOURCE
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=29.0, core=true, businessType=A, t24Name=TRADE.ORD.OFS.SRC)
		/* Product category code for forward interest cover.
For position amortisation to take place this field must be set. The ACCOUNT.CLASS record FXCCYPOS must also be set up with a category code to be used in reserve account numbers.
The SYSTEM record on PM.PARAMETER must also contain a position class for forward interest cover in the field FX.FWD.INT.COVER.
Validation Rules
Must be in range 20000 - 20999.
Must exist in CATEGORY table with FX application specified.
Defaults to null.
No change field. */
		CAT_CODE_FWD_INT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=31.0, core=true, t24Name=CAT.CODE.FWD.INT)
		/* P & L category code for forward interest cover profit.
For Amortise FX Position this should be set equal to the Interest Receivable Category and the FWD.INT.LOSS.CAT should be set equal to the Interest Payable Category.

Validation Rules

Must be in range 50000 - 59999.
Mandatory field if CAT.CODE.FWD.INT field has a value.
Defaults to null. */
		FWD_INT_PROFIT_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=32.0, core=true, t24Name=FWD.INT.PROFIT.CAT)
		/* P & L category code for forward interest cover loss.
For Amortise FX Position this should be set equal to the Interest Payable Category
and the FWD.INT.PROFIT.CAT should be set equal to the Interest Payable  Category.
Validation Rules

Must be in range 50000 - 59999.
Mandatory field if CAT.CODE.FWD.INT field has a value.
Defaults to null. */
		FWD_INT_LOSS_CAT -> ST_Config:CATEGORY
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=33.0, core=true, t24Name=FWD.INT.LOSS.CAT)
		/* This field will hold the parameter level rounding rule for calculating AMOUNT.BOUGHT or AMOUNT.SOLD
in Forex Contracts for a given rate and given AMOUNT.SOLD or AMOUNT.BOUGHT

Validation Rules
Should be a valid EB.ROUNDING.RULE id.
For detailed options on different rounding types help text on EB.ROUNDING.RULE file can be referred. */
		ROUNDING_RULE -> ST_Config:EB_ROUNDING_RULE
			@i18n:Label (en="Rounding Rule")
			@i18n:Tooltip (en="Indicates the rounding rule")
			@t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=34.0, core=true, businessType=A, t24Name=ROUNDING.RULE)
		/* Help Text for this field is unavailable.  Please refer to the T24 User Guides for further 	information. */
		OPT_OS_RP_DAYS : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=35.0, core=true, t24Name=OPT.OS.RP.DAYS)
		CUS_MARGIN_DEFAULT : FX_Config:FX_PARAMETERS__CUS_MARGIN_DEFAULT
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=36.0, core=true, t24Name=CUS.MARGIN.DEFAULT)
		RESERVED_3 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=37.0, core=true, t24Name=RESERVED.3)
		RESERVED_2 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=38.0, core=true, t24Name=RESERVED.2)
		RESERVED_1 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=39.0, core=true, t24Name=RESERVED.1)
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=40.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=41.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FX_Config:FX_PARAMETERS__INPUTTER *
		DATE_TIME -> byValue FX_Config:FX_PARAMETERS__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=44.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=45.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=46.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=47.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=48.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_PARAMETERS__FX_LCL_REGION
	{
		/* Optional field to define the alternative local holiday region for FOREX spot date determination. The holiday table(s) for the country and region specified here are used in place of the holiday table for the local country and region in the COMPANY record to calculate the FOREX spot date.
More than one country or region may be specified to accommodate additional holidays.
To refer to region "00" enter only the country code.
Standard spot date calculation and alternative FX currency holidays are explained below.
Validation Rules

Must be valid Country or Region.
Duplicates not allowed.

Standard Spot Date Calculation
The default operation of the system spot date calculation is described below. The default calculation will take place if the fields FX.LCL.REGION and SPOT.BASE.CCY are not specified in the FX.PARAMETERS record.
When no SPOT.DATE or in the case of a Spot deal (or the first leg of a Swap), the VALUE.DATE.BUY/SELL is not entered, the system will attempt to default the dates. The dates are calculated by addition of the SPOT.MARKET number of days defined in FX.PARAMETERS to the DEAL.DATE to give a common working day for the country of the two currencies involved in the deal.
Example 1
Local Currency - GBP
Local Country - GB(defined in COMPANY)
Spot Market - 2
System Date - 2nd July
Spot Deal - USD/GBP
Holidays

#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB00#W#W#W#W#W#H#H#W##
US00#W#W#H#W#W#H#H#W##
Comm#W#W#H#W#W#H#H#W##

Using the common holidays (Comm) 2 working days gives a spot date of 5th July
The SPOT.DATE, VALUE.DATE.BUY and VALUE.DATE.SELL would therefore be 5 th July, this is a common working day in both countries and respects the Spot Market period for both.

Example 2
If the holidays were as follows for the same deal:
#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB00#W#W#W#H#W#H#H#W##
US00#W#W#H#W#W#H#H#W##
Comm#W#W#H#H#W#H#H#W##
Using the common holidays in this case gives a spot date of 6th July
The default date would therefore be 6th July.

Alternative Local Currency FX Holidays
There may be cases where an alternative holiday table is required for FX trading in the local currency. A possible scenario is described as follows:
A system with LOCAL.CURRENCY GBP is running in London, the local country is GB giving a local holiday table of GB00. The system is also used to enter trades by the New York office. As a result the system must be available to the New York users on UK holidays. This means that the local holiday table is in fact a common table of working days between the two countries. Using the previous example :
#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB00#W#W#W#H#W#H#H#W##
US00#W#W#H#W#W#H#H#W##
Comm#W#W#H#H#W#H#H#W##
Both 4th July (holiday in US) and 5th July (holiday in UK) are working days in the system so that the New York users can work on 5th> July.
If a FX deal was done involving GBP and USD on 2nd July as in the previous example a spot date of 5th July would result. This date should not be defaulted in practice as 5th July is not a true working day in the UK, the correct date would be 6th July.
To avoid this problem an alternative holiday table for the local currency can be defined, and if specified in the FX.LCL.REGION field of the FX.PARAMETERS record this will be used instead of the default holiday table for the currency (in this case GB00). It is recommended that a REGION be created for the local currency for FX trading, a specific holiday table containing the true local holidays can then be created for this region. The region code should then be defined in FX.PARAMETERS as shown.
Region GB99
#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB99#W#W#W#H#W#H#H#W##


Figure  FX.PARAMETERS - definition of alternative local holidays
Any deal involving the local currency will now use the FX.LCL.REGION defined GB99 rather than the standard GB00. Using this definition the previous deal will give the following results:
Example 3
Local Currency - GBP
Local Country - GB(defined in COMPANY)
Spot Market - 2
System Date - 2nd July
Spot Deal - USD/GBP
Holidays
#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB99#W#W#W#H#W#H#H#W##
US00#W#W#H#W#W#H#H#W##
Comm#W#W#H#H#W#H#H#W##
GB00#W#W#W#W#W#H#H#W##

(Note that GB00 is shown for information only).
The common holiday table between GB99 and US00 now give the correct spot date of 6th July. */
		FX_LCL_REGION : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=4.0, core=true, t24Name=FX.LCL.REGION)
	}
	FX_PARAMETERS__SPOT_BASE_CCY
	{
		/* Optional field to specify additional currencies that should be used in the calculation of forex spot dates.
The date determined by the normal calculation of spot date for a contract will be advanced to a day which is a working day for the currencies of the contract and the currencies specified in this field. The holiday region for a currency is the country code for the currency followed by "00".
Validation Rules


Must be a valid currency
There must be a valid holiday table for the currency
Duplicates not allowed

Standard Spot Date Calculation
The default operation of the system spot date calculation is described below. The default calculation will take place if the fields FX.LCL.REGION and SPOT.BASE.CCY are not specified in the FX.PARAMETERS record.
When no SPOT.DATE or in the case of a Spot deal (or the first leg of a Swap), the VALUE.DATE.BUY/SELL is not entered, the system will attempt to default the dates. The dates are calculated by addition of the SPOT.MARKET number of days defined in FX.PARAMETERS to the DEAL.DATE to give a common working day for the country of the two currencies involved in the deal.

Example 1
Local Currency - GBP
Local Country - GB(defined in COMPANY)
Spot Market - 2
System Date - 2nd July
Spot Deal - USD/GBP
Holidays
#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB00#W#W#W#W#W#H#H#W##
US00#W#W#H#W#W#H#H#W##
Comm#W#W#H#W#W#H#H#W##
Using the common holidays (Comm) 2 working days gives a spot date of 5th July
The SPOT.DATE, VALUE.DATE.BUY and VALUE.DATE.SELL would therefore be 5th July, this is a common working day in both countries and respects the Spot Market period for both.
Example 2
If the holidays were as follows for the same deal:
#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB00#W#W#W#H#W#H#H#W##
US00#W#W#H#W#W#H#H#W##
Comm#W#W#H#H#W#H#H#W##
Using the common holidays in this case gives a spot date of 6th July
The default date would therefore be 6th July.

Spot Base Currency
Some Banks and markets operate on the principal that Spot Dates should always fall on a working day in a certain currency, e.g. USD, even if the deal does not involve that currency. This method of spot date calculation, referred to as the SPOT.BASE.CCY , is controlled by the field of the same name in FX.PARAMETERS.
Figure  FX.PARAMETERS - Defining the SPOT.BASE.CCY


If this mode of date calculation is used the following rules are followed:

Deal Involves SPOT.BASE.CCY

The spot date for the NON spot base currency is calculated. If a FX.LCL.REGION is defined this will be used as per the rules in the previous section. This date is then compared to the Spot Base Ccy holidays, if the date is a holiday it is adjusted to the next common working day in both currencies after this date

Deal Does not involve SPOT.BASE.CCY

A common spot date is obtained for the two currencies involved in the same way as the standard processing. If a FX.LCL.REGION is defined this will be used as per the rules in the previous section.
The common date calculated will then be compared to the SPOT.BASE.CCY holidays. If the date is a holiday it is adjusted to the next common working day for both currencies and the SPOT.BASE.CCY

Both sides of the deal are SPOT.BASE.CCY

A common working day is obtained for both currencies.
The common date calculated is compared to all the SPOT.BASE.CCY holidays. If the date is a holiday it is adjusted to the next common date for both deal currencies and all currencies defined in SPOT.BASE.CCY.

This method can result in a different date calculation to the standard calculation.

Example 3

Local Currency - GBP
Local Country - GB
Spot Market - 2
Spot Base CCY - USD
System Date  - 2nd July
Holidays
#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB00#W#W#W#H#W#H#H#W##
US00#W#W#H#W#W#H#H#W##
CH00#W#W#W#W#H#H#H#W##

Deal USD/GBP
GB spot date is 4th July.
This is a holiday in Spot Base Ccy so the date is adjusted to the next common working day in GB and US,  i.e. 6th July.

If this deal were done on 3rd July the spot date would also be 6th July. The spot date calculated for GB would be 6th July which is a working day in US. In the standard calculation the spot date would be calculated as 9th July as 2 common working days would be taken between US and GB.

Example 4
Deal GBP/CHF on 2nd July
Neither currency is a SPOT.BASE.CCY so a common spot date is obtained for GB/CH:
#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB00#W#W#W#H#W#H#H#W##
CH00#W#W#W#W#H#H#H#W##
Comm#W#W#W#H#H#H#H#W##

This gives a SPOT.DATE of 4th July.
This is a holiday in SPOT.BASE.CCY so the date (4th July) is adjusted to the next common working day for all three countries:
#Mon#Tues#Wed#Thur#Fri#Sat#Sun#Mon##
#2#3#4#5#6#7#8#9##
GB00#W#W#W#H#W#H#H#W##
US00#W#W#H#W#W#H#H#W##
CH00#W#W#W#W#H#H#H#W##
Comm#W#W#H#H#H#H#H#W##

The next common day after 4th July for all three countries is 9th July.
Using the standard rules a spot date of 4th July would be generated as the US holidays would not be taken into consideration.
If the same deal were entered on 3rd July the spot date would also be 9th July using the SPOT.BASE.CCY:

Common Spot GB/CH is 9th July
In US 9th July is a working day.

If the same deal were entered on 3rd July using the standard calculation would also result in a spot date of 9th July. */
		SPOT_BASE_CCY -> FIN_CurrencyConfig:CURRENCY
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=5.0, core=true, businessType=CCY, t24Name=SPOT.BASE.CCY)
	}
	FX_PARAMETERS__PRECIOUS_METALS
	{
		/* Defines the Currency Codes to be used for precious metals.
Any number of currency codes may be entered in this field. The currency code which is entered must be defined in the Currency File. A numeric code may be entered to obtain the currency code, using the routine IN2CCY.
Validation Rules
Standard Currency Code (3 uppercase alpha characters or 1-3 numeric characters.)  (Multivalue field.)
Must be a valid currency code.
A currency code should not appear more than once in this field.
Input of a local currency should not be allowed. */
		PRECIOUS_METALS -> FIN_CurrencyConfig:CURRENCY
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=17.0, core=true, businessType=CCY, t24Name=PRECIOUS.METALS)
	}
	FX_PARAMETERS__SPLIT_VALUE_CCY
	{
		/* Defines whether input of split value dated contracts will be allowed by the system and, if so, for which currencies.
No value in this field signifies that the system will not accept Forex contracts which have different Buy and Sell value dates. The main input program will automatically assign any date input to one of these fields to both of them.
Any number of currency codes may be entered in this field to signify that split value dates should be allowed on deals involving the sale or purchase of one of these currencies,  In this case, the main input program will accept input to the fields VAL.DATE.BUY and VAL.DATE.SELL independently of each other.  An override message is provided if they are not the same.
The value 'ALL' may be entered to signify that the above rule is to apply to all currencies.  Split value dates will be accepted by the main Forex input program irrespective of the two currencies of the deal.
Validation Rules
3 alphabetic characters.
Must be a valid currency code or the literal 'ALL'.
The value 'ALL' will not be accepted in conjunction with a list of currency codes - it must be a single input. */
		SPLIT_VALUE_CCY : T24BusinessTypes:AAA
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=20.0, core=true, t24Name=SPLIT.VALUE.CCY)
	}
	FX_PARAMETERS__DEAL_TYPE
	{
		/* Extra processing of the Forex contract for certain Special Deal types can be done by entering the Deal type in this field.
For BULK Forex deals extra processing can be done during the Input of the Bulk deal. This will default fields from the main (Nostro) contract into the client deal.
In a Bulk deal one Forex contract will be done with a Nostro Counterparty followed by many Forex deals with clients. For example, a 'Bulk' Forex contract for USD 15 million- GBP 10 million could be split up into 15 'Client' deals of USD 1.5 Million - GBP 1 Million.  In this case the system will store the Bulk FX reference in each of the 'Client' deals and to facilitate easier input fields can be defaulted from the 'Bulk' deal to the 'Client' deal. These fields have to be defined in the next two fields in this file.
Validation Rules
The only value currently allowed is 'BULK'.  (Multivalue field)  Start of an associated multivalue field range DEAL.TYPE to DFLT.FLD.TO.
Can be Null or the literal 'BULK'. */
		DEAL_TYPE : FX_Config:FX_PARAMETERS__DEAL_TYPE__DEAL_TYPE
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=23.0, core=true, t24Name=DEAL.TYPE)
		DFLT_FLD_FRM -> byValue FX_Config:FX_PARAMETERS__DEAL_TYPE__DFLT_FLD_FRM *
	}
	FX_PARAMETERS__DEAL_TYPE__DFLT_FLD_FRM
	{
		/* The field on the 'Nostro' deal from where the details have to be defaulted.
The field on the Nostro deal from where the information has to be defaulted is to be defined here. The field number entered here can be any field in the FOREX application. The field number entered here will be enriched with the field description from the FOREX file.
It is to be noted that this field has to be setup properly since improper setup could default the incorrect data in the client Forex contract. For example, if the BUY.CCY of the Nostro deal should be defaulted into the SELL.CCY of the Client deal, this field should be set to '6' (CURRENCY.BOUGHT on the FOREX file) and the next field must be set to '9' (CURRENCY.SOLD on the FOREX file).
Validation Rules
Numeric characters.  Has to be a valid field Number in the FOREX application.  (Multi-valued and Sub-valued field associated with the fields DEAL.TYPE to RESERVE1 so that more than one field can be defaulted from the 'Nostro' deal to the 'Client' deal)
Can be any valid field on the FOREX file. */
		DFLT_FLD_FRM : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=6, sysNumber=24.0, core=true, t24Name=DFLT.FLD.FRM)
		/* The field on the 'Client' Forex deal into which the information has to be defaulted.
The field on the Client Forex contract into which the information present in the Nostro deal field (defined in the previous field DFLT.FLD.FRM) is to be defaulted has to be entered here. The field number enterd in this field will be enriched with the field description from the Forex file.
Validation Rules
Numeric characters.  (Multi-valued and Sub-valued field associated with the earlier field DFLT.FLD.FRM so that more than one field can be setup to be defaulted)
Has to be a valid field on the Forex file. */
		DFLT_FLD_TO : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=6, sysNumber=25.0, core=true, t24Name=DFLT.FLD.TO)
	}
	FX_PARAMETERS__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=42.0, core=true, t24Name=INPUTTER)
	}
	FX_PARAMETERS__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=43.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	/* FX.TEXT is a table of advice texts which will be printed on advices/ confirmations when settlement information in respect of a contract counterparty is not known.
Nine fields are available within this table and each one will have a unique text which will be printed on the advice confirmation. The User will choose which text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
It may be the case, for example, that the branch has no information about the counterparty's payment instructions and is therefore unable to pay funds away because the destination of those funds is not known. In such a situation, the User would choose an appropriate text from the FX.TEXT table (e.g. Payment Instructions Missing) by keying a number between 1 and 9 at the appropriate account field when loading a contract. This message would then be printed automatically on the advice confirmation corresponding to the contract.
Only two records can be created:
1) one for text related to payments and therefore having the key             equal to the FX Suspense Credit Category Code (see Account             Class).
2) one for text related to receipts and therefore having the key             equal to the FX Suspense Debit Category Code (see Account             Class). */
	FX_TEXT
		@t24:i (t24Name=FX.TEXT, level=I, type=H, allowedFunctions="A C D E I L P Q R S", localRefAllowed=false)
	{
		/* Key to a text that is related to items that have been suspended.
Only one of two possible category codes may be input at this field.
The two category codes are to be found on the Account.Class table under the following titles:-
i) SUSPFXCR     For text related to payments and                  therefore having the key equal to                  the FX Suspense Credit Category Code                  (see ACCOUNT.CLASS).
ii) SUSPFXDR     For text related to receipts and                  therefore having the key equal to                  the FX Suspense Debit Category Code                  (see ACCOUNT.CLASS).
Validation Rules
5 numeric characters. (Mandatory input) */
		CATEGORY_CODE -> FX_Config:FX_TEXT PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=6, sysNumber=0.0, core=true, businessType=A, t24Name="CATEGORY CODE", mask="R##-###")
		TEXT_1 -> byValue FX_Config:FX_TEXT__TEXT_1 *
		TEXT_2 -> byValue FX_Config:FX_TEXT__TEXT_2 *
		TEXT_3 -> byValue FX_Config:FX_TEXT__TEXT_3 *
		TEXT_4 -> byValue FX_Config:FX_TEXT__TEXT_4 *
		TEXT_5 -> byValue FX_Config:FX_TEXT__TEXT_5 *
		TEXT_6 -> byValue FX_Config:FX_TEXT__TEXT_6 *
		TEXT_7 -> byValue FX_Config:FX_TEXT__TEXT_7 *
		TEXT_8 -> byValue FX_Config:FX_TEXT__TEXT_8 *
		TEXT_9 -> byValue FX_Config:FX_TEXT__TEXT_9 *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=10.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=11.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FX_Config:FX_TEXT__INPUTTER *
		DATE_TIME -> byValue FX_Config:FX_TEXT__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=14.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=15.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=16.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=17.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=18.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_TEXT__TEXT_1
	{
		/* A brief text which will be printed on the advice/confirmation.
The text defined at this field will be printed automatically on the advice confirmation corresponding to a contract where the User has chosen to key in 1 at the appropriate field when loading the deal.
A total of nine fields are available and each one will have a unique text which will be printed on the advice confirmation.  The User will choose text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
Validation Rules
1-35 type A (alphanumeric) characters.  Multilingual field.  (Mandatory input) */
		TEXT_1 : T24BusinessTypes:S required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, core=true, t24Name="TEXT 1")
	}
	FX_TEXT__TEXT_2
	{
		/* A brief text which will be printed on the advice/confirmation.
The text defined at this field will be printed automatically on the advice confirmation corresponding to a contract where the User has chosen to key in 2 at the appropriate field when loading the deal.
A total of nine fields are available and each one will have a unique text which will be printed on the advice confirmation.  The User will choose text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
Validation Rules
1-35 type A (alphanumeric) characters.  Multilingual field.  (Mandatory input) */
		TEXT_2 : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=2.0, core=true, t24Name="TEXT 2")
	}
	FX_TEXT__TEXT_3
	{
		/* A brief text which will be printed on the advice/confirmation.
The text defined at this field will be printed automatically on the advice confirmation corresponding to a contract where the User has chosen to key in 3 at the appropriate field when loading the deal.
A total of nine fields are available and each one will have a unique text which will be printed on the advice confirmation.  The User will choose text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
Validation Rules
1-35 type A (alphanumeric) characters.  Multilingual field.  (Mandatory input) */
		TEXT_3 : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=3.0, core=true, t24Name="TEXT 3")
	}
	FX_TEXT__TEXT_4
	{
		/* A brief text which will be printed on the advice/confirmation.
The text defined at this field will be printed automatically on the advice confirmation corresponding to a contract where the User has chosen to key in 4 at the appropriate field when loading the deal.
A total of nine fields are available and each one will have a unique text which will be printed on the advice confirmation.  The User will choose text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
Validation Rules
1-35 type A (alphanumeric) characters.  Multilingual field.  (Mandatory input) */
		TEXT_4 : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=4.0, core=true, t24Name="TEXT 4")
	}
	FX_TEXT__TEXT_5
	{
		/* A brief text which will be printed on the advice/confirmation.
The text defined at this field will be printed automatically on the advice confirmation corresponding to a contract where the User has chosen to key in 5 at the appropriate field when loading the deal.
A total of nine fields are available and each one will have a unique text which will be printed on the advice confirmation.  The User will choose text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
Validation Rules
1-35 type A (alphanumeric) characters.  Multilingual field.  (Mandatory input) */
		TEXT_5 : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=5.0, core=true, t24Name="TEXT 5")
	}
	FX_TEXT__TEXT_6
	{
		/* A brief text which will be printed on the advice/confirmation.
The text defined at this field will be printed automatically on the advice confirmation corresponding to a contract where the User has chosen to key in 6 at the appropriate field when loading the deal.
A total of nine fields are available and each one will have a unique text which will be printed on the advice confirmation.  The User will choose text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
Validation Rules
1-35 type A (alphanumeric) characters.  Multilingual field.  (Mandatory input) */
		TEXT_6 : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=6.0, core=true, t24Name="TEXT 6")
	}
	FX_TEXT__TEXT_7
	{
		/* A brief text which will be printed on the advice/confirmation.
The text defined at this field will be printed automatically on the advice confirmation corresponding to a contract where the User has chosen to key in 7 at the appropriate field when loading the deal.
A total of nine fields are available and each one will have a unique text which will be printed on the advice confirmation.  The User will choose text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
Validation Rules
1-35 type A (alphanumeric) characters.  Multilingual field.  (Mandatory input) */
		TEXT_7 : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=7.0, core=true, t24Name="TEXT 7")
	}
	FX_TEXT__TEXT_8
	{
		/* A brief text which will be printed on the advice/confirmation.
The text defined at this field will be printed automatically on the advice confirmation corresponding to a contract where the User has chosen to key in 8 at the appropriate field when loading the deal.
A total of nine fields are available and each one will have a unique text which will be printed on the advice confirmation.  The User will choose text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
Validation Rules
1-35 type A (alphanumeric) characters.  Multilingual field.  (Mandatory input) */
		TEXT_8 : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=8.0, core=true, t24Name="TEXT 8")
	}
	FX_TEXT__TEXT_9
	{
		/* A brief text which will be printed on the advice/confirmation.
The text defined at this field will be printed automatically on the advice confirmation corresponding to a contract where the User has chosen to key in 9 at the appropriate field when loading the deal.
A total of nine fields are available and each one will have a unique text which will be printed on the advice confirmation.  The User will choose text to print by keying a number between 1 and 9 at the appropriate account field when loading a contract.
Validation Rules
1-35 type A (alphanumeric) characters.  Multilingual field.  (Mandatory input) */
		TEXT_9 : T24BusinessTypes:S
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=9.0, core=true, t24Name="TEXT 9")
	}
	FX_TEXT__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=12.0, core=true, t24Name=INPUTTER)
	}
	FX_TEXT__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=13.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	/* The FX option processing has been enhanced to provide the following additional functionality:

Entry of Multi Option Deal
The multi-option will be entered as a forward (DEAL.TYPE = FW) contract with a new multi-option indicator set to specify that the contract is a multi-option contract.
This new application will allow for further classification of deal types. A record in it will control the default value for category codes, revaluation types, required delivery and type of option processing allowed. The Forex deal will be linked this table using a new field.
Multi-option deals can be defined as a new transaction type (e.g. FXMO), to differentiate deals from standard forward deals and option processing. */
	FX_TRANSACTION_TYPE
		@t24:i (t24Name=FX.TRANSACTION.TYPE, level=I, type=H, allowedFunctions="A C D E I L P Q R S", localRefAllowed=true)
	{
		/* The sub deal type defines id for this file.
Validation Rules
2 to 4 characters allowed
The sub deal type must begin with a valid deal type i.e.  SP - Spot Deal  FW - Forward Deal  SW - Swap Deal  and contain up to 2 additional characters. */
		DEAL_SUB_TYPE -> FX_Config:FX_TRANSACTION_TYPE PK required
			@i18n:Label (en="Deal Sub Type")
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=0.0, core=true, businessType=A, t24Name=DEAL.SUB.TYPE)
		DESCRIPTION -> byValue FX_Config:FX_TRANSACTION_TYPE__DESCRIPTION *
		/* The default category code for the deal type specified.
Validation Rules
Mandatory Input
Must be in the range of 20000 - 40000
Must exist on the CATEGORY file with SYSTEM.IND set to 'FX' */
		CATEGORY_CODE -> ST_Config:CATEGORY required
			@i18n:Label (en="Category Code")
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=2.0, core=true, t24Name=CATEGORY.CODE)
		/* Specifies the revaluation method to be used for the deal type specified.
Validation Rules

Mandatory for FW - Forward or SW - Swap type of deals.
No Input Allowed for SP - Spot type of deals
Valid values are RB - Rebate IN - Interest SL - Straight         Line IH - Interest Hedge SF - Straight Line Funding
Please refer to the helptext for the 'REVALUATION.TYPE'         field on the FOREX application for further details. */
		REVAL_TYPE -> FX_PositionAndReval:FX_REVAL_TYPE
			@i18n:Label (en="Reval Type")
			@t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=3.0, core=true, businessType=AA, t24Name=REVAL.TYPE)
		ACTIVITY_CODE -> byValue FX_Config:FX_TRANSACTION_TYPE__ACTIVITY_CODE *
		/* Specifies a maximum number of days for which a forex contract can be defined after which an override will be required for entering a FOREX deal.
Validation Rules
Optional Input */
		MAX_DURATION : mml:Integer
			@i18n:Label (en="Maximum Duration")
			@t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=7.0, core=true, t24Name=MAX.DURATION)
		/* Option processing in T24 refers to contracts in which tranches of a total contract are taken at dates nominated by the customer.
This function should NOT be used to process currency options.
Defines whether option processing is mandatory, optional or not allowed.
Validation Rules
Valid values are as follows:  Null - Signifies that processing is optional  NONE - Processing not allowed for this transaction type  YES - Processing is mandatory for this transaction type
For SP - Spot type of deals only NONE can be entered. */
		OPTION_PROCESS : FX_Config:FX_TRANSACTION_TYPE__OPTION_PROCESS
			@i18n:Label (en="Option Process")
			@t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=8.0, core=true, t24Name=OPTION.PROCESS)
		/* Defines the type of option processing required.
Validation Rules
Valid values are as follows:  Null - No Split delivery Allowed  SINGLE.RATE - Split delivery allowed but only a single rate may be               used for each takedown.  MULTI.RATE - Split delivery allowed with multiple rates to be used              on takedowns. */
		OPTION_TYPE : FX_Config:FX_TRANSACTION_TYPE__OPTION_TYPE
			@i18n:Label (en="Call or Put")
			@i18n:Tooltip (en="Type of option to be chosen like call or put")
			@t24:i (align=L, inputBehaviour=I, maxLength=13, sysNumber=9.0, core=true, t24Name=OPTION.TYPE)
		/* This field specifies whether partial delivery information can be specified on a FOREX contract or not.
Validation Rules
Mandatory input.
Valid values 'Y'es / 'N'o.
Can be 'Y' for 'MULTI.RATE' transaction types only. */
		ALLOW_PARTIAL_DELV : FX_Config:FX_TRANSACTION_TYPE__ALLOW_PARTIAL_DELV
			@i18n:Label (en="Partial Delivery")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=10.0, core=true, t24Name=ALLOW.PARTIAL.DELV)
		/* Standard T24 alphanumeric field.
Validation Rules
A maximum of 5 characters may be entered.
Must be the key to a valid entry on the CATEGORY file. */
		DB_SUSP_CATEGORY -> ST_Config:CATEGORY
			@i18n:Label (en="Debit Suspense Category")
			@t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=12.0, core=true, businessType=A, t24Name=DB.SUSP.CATEGORY)
		/* Standard T24 alphanumeric field.
Validation Rules
A maximum of 5 characters may be entered.
Must be the key to a valid entry on the CATEGORY file. */
		CR_SUSP_CATEGORY -> ST_Config:CATEGORY
			@i18n:Label (en="Cr Susp Category")
			@t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=13.0, core=true, businessType=A, t24Name=CR.SUSP.CATEGORY)
		/* The value from this field is defaulted to FOREX

field SOD.MAT, if it is left blank.
This field is used to define whether the FX contract which holds the Transaction type, is subject to the Start of day maturity or not.


Validation Rules


Valid       inputs are 'NO' or 'YES'.

Default 'NO'. */
		SOD_MAT : FX_Config:FX_TRANSACTION_TYPE__SOD_MAT
			@i18n:Label (en="Sod Mat")
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=14.0, core=true, t24Name=SOD.MAT)
		/* If this field holds value YES, then even if customer (NOSTRO) is given as COUNTERPARTY, MT202/MT210 would be sent.

Validation Rules


Valid       inputs are 'NO' or 'YES'. */
		PAYMENT_MSG_ADV : FX_Config:FX_TRANSACTION_TYPE__PAYMENT_MSG_ADV
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=15.0, core=true, t24Name=PAYMENT.MSG.ADV)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RESERVED_6 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=16.0, core=true, t24Name=RESERVED.6)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RESERVED_5 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=17.0, core=true, t24Name=RESERVED.5)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RESERVED_4 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=18.0, core=true, t24Name=RESERVED.4)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RESERVED_3 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=19.0, core=true, t24Name=RESERVED.3)
		/* This field is reserved for future expansion.
Validation Rules
This is a NOINPUT field. */
		RESERVED_2 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=20.0, core=true, t24Name=RESERVED.2)
		OVERRIDE -> byValue FX_Config:FX_TRANSACTION_TYPE__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=22.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=23.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue FX_Config:FX_TRANSACTION_TYPE__INPUTTER *
		DATE_TIME -> byValue FX_Config:FX_TRANSACTION_TYPE__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=26.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=27.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=28.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=29.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=30.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	FX_TRANSACTION_TYPE__DESCRIPTION
	{
		/* Description of the sub deal type
Validation Rules
Upto 35 Characters of free formatted text in the relevant language */
		DESCRIPTION : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, core=true, t24Name=DESCRIPTION)
	}
	FX_TRANSACTION_TYPE__ACTIVITY_CODE
	{
		/* Denotes activity code(s) required for delivery processing for the deal type specified.
Validation Rules
Optional input.
If the field is left blank then no special delivery processing is used. It means that all activity code(s) related to FX are required and MESSAGE.TYPE field cannot be populated.
Any activity code entered must be a valid id on the FX.ACTIVITY file OR can be one of the following values.
ALL     - denotes all activity code(s) related to FX are required for the message type defined in MESSAGE.TYPE field
NONE    - denotes no activity code(s) related to FX is required
If ALL or NONE is used then only one multi value can be entered.
Duplicate activity codes are not allowed. */
		ACTIVITY_CODE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=4.0, core=true, t24Name=ACTIVITY.CODE)
		/* The message type associated with the ACTIVITY.CODE specified. This field will be used by the delivery system to generate the delivery message/s. If left blank, system will generate appropriate (300 or 600) delivery messages.
Validation Rules
If the ACTIVITY.CODE has been entered then this field is mandatory.
If the ACTIVITY.CODE has not been entered then this field cannot be populated.
If entered then the message type must exist on the DE.MESSAGE file.
Recommended value for FOREX is 300 or 600 as the case may be.
No Duplicates allowed */
		MESSAGE_TYPE -> DE_Config:DE_MESSAGE
			@t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=5.0, core=true, t24Name=MESSAGE.TYPE)
		/* 1 to 4 digit format identifier for the second element of the DE.FORMAT.PRINT key.
Validation Rules
Must be entered if the corresponding MESSAGE.TYPE field has been populated.
Cannot be entered into if the corresponding MESSAGE.TYPE field has not been populated. */
		MESSAGE_FMT : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=6.0, core=true, t24Name=MESSAGE.FMT)
	}
	FX_TRANSACTION_TYPE__OVERRIDE
	{
		OVERRIDE : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=40, sysNumber=21.0, core=true, t24Name=OVERRIDE)
	}
	FX_TRANSACTION_TYPE__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=24.0, core=true, t24Name=INPUTTER)
	}
	FX_TRANSACTION_TYPE__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=25.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
}
Enumerations {
	FX_GROUP_CONDITION__PORTFOLIO__DEAL_TYPE__DEAL_TYPE : mml:string
		SP=SP
		FW=FW
		SW=SW
	FX_PARAMETERS__MKT_EXCH_ACCT_METHOD : mml:string
		INTERNAL=INTERNAL
		PANDL=PANDL
	FX_PARAMETERS__DEAL_TYPE__DEAL_TYPE : mml:string
		BULK=BULK
	FX_PARAMETERS__DISPLAY_OUTST : mml:string
		YES=YES
		NO=NO
	FX_PARAMETERS__CUS_MARGIN_DEFAULT : mml:string
		YES=YES
		NO=NO
	FX_TRANSACTION_TYPE__OPTION_PROCESS : mml:string
		NONE=NONE
		YES=YES
	FX_TRANSACTION_TYPE__OPTION_TYPE : mml:string
		SINGLE_RATE=SINGLE.RATE
		MULTI_RATE=MULTI.RATE
		EX__MULTI_RATE=EX-MULTI.RATE
	FX_TRANSACTION_TYPE__ALLOW_PARTIAL_DELV : mml:string
		YES=YES
		NO=NO
	FX_TRANSACTION_TYPE__SOD_MAT : mml:string
		YES=YES
		NO=NO
	FX_TRANSACTION_TYPE__PAYMENT_MSG_ADV : mml:string
		NO=NO
		YES=YES
}