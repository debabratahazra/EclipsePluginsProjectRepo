# UTF-8
# UTF-8
/* Overdue Processing for Syndicated Loans */
Domain SL_Overdue
	@t24:i (module=SL)
	@java:Package (value=com.temenos.t24.datamodel.sl.sl_overdue)
namespace "http://www.temenos.com/t24/SL_Overdue"
metamodelVersion 1.30.6
Classes {
	/* If Liquidation mode is INTERNAL, entries for disbursement would be raised in a manner similar to that of AUTOMATIC. On the schedule date,
(a)

(b)

Dr PRIN.LIQ.ACCT

Dr INT.LIQ.ACCT

Cr LIVEDB


Cr Asset Type accrual  SPEC ENTRY (for interest etc.)
(c)

The overdues would get written to SL.OD.PART & SL.OD.DUES files. Updates to OD related files would happen only for value INTERNAL.

The ID of SL.OD.DUES would be keyed by the ID of the FACILITY/SLL reference, hyphenated by the due date. This would hold the following information;

1.



2.1

3.1

4.1.1 OD.PARTICIPANT  Participant reference number
5.1.1 OD.PART.DUE  Dues to respective participant


SL.OD.PART would get written for T24 bank as well as other participants. When the borrower pays against overdues, the application SL.OD.SETTLE may be used.

Accounting entries would be raised debiting the PAY.ACCOUNT for the TOT.PAY.AMT, crediting NOSTRO for participants share and appropriate Liquidation account mentioned in the Facility/SLL. */
	SL_OD_DUES
		@t24:i (t24Name=SL.OD.DUES, level=F, type=L, allowedFunctions="L P S", localRefAllowed=false)
	{
		/* The ID of this file would be keyed by the ID of the FACILITY/SL.Loans reference, hyphenated by the due date.

One record for every scheduled date would be written for the Facility and SL.LOANS separately.

This is an internal file and only SEE function is allowed */
		SL_OD_DUE_ID -> SL_Overdue:SL_OD_DUES PK required
			@i18n:Label (en="SL OD Id")
			@i18n:Tooltip (en="SL Overdue Id")
			@t24:i (align=L, inputBehaviour=I, maxLength=32, sysNumber=0.0, core=true, businessType=A, t24Name=SL.OD.DUE.ID)
		/* Aggregate overdue amount against the said Facility / SL.Loans for the due date
Validation Rules

1-14 numeric characters plus decimal point */
		OD_AGG_DUE : T24BusinessTypes:AMT
			@i18n:Label (en="Aggregate OD Amount")
			@i18n:Tooltip (en="Aggregate Overdue Amount")
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=1.0, core=true, t24Name=OD.AGG.DUE, typeModifiers="6")
		OD_ASSET_TYPE -> byValue SL_Overdue:SL_OD_DUES__OD_ASSET_TYPE *
		/* Holds the overdue currency. Should be a valid reference in CURRENCY */
		OD_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@i18n:Label (en="OD Currency")
			@i18n:Tooltip (en="Overdue Currency")
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=6.0, core=true, businessType=CCY, t24Name=OD.CURRENCY)
	}
	SL_OD_DUES__OD_ASSET_TYPE
	{
		/* Asset type of the due. For convenience, values populated would be as follows
INT - for interest dues on SL.LOANS
FEE - for commitment fee on Facility
TAX - for tax on fee or interest
Multivalued field to record dues for more than one asset type */
		OD_ASSET_TYPE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=2.0, core=true, t24Name=OD.ASSET.TYPE)
		/* Aggregate dues against the specific asset type. System written from Facility / Loan balances file */
		OD_TYPE_DUE : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=3.0, core=true, t24Name=OD.TYPE.DUE, typeModifiers="6")
		OD_PART_ID -> byValue SL_Overdue:SL_OD_DUES__OD_ASSET_TYPE__OD_PART_ID *
	}
	SL_OD_DUES__OD_ASSET_TYPE__OD_PART_ID
	{
		/* ID of the participant to whom there is a share in the aggregate due. */
		OD_PART_ID : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=4.0, core=true, t24Name=OD.PART.ID)
		/* Share of the respective participant's due in the OD.TYPE.DUE */
		OD_PART_DUE : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=5.0, core=true, t24Name=OD.PART.DUE, typeModifiers="6")
	}
	SL_OD_DUES_HIST
		@t24:i (t24Name=SL.OD.DUES.HIST, level=F, type=L, allowedFunctions="L P S", localRefAllowed=false)
	{
		/* Refer to helptext of SL.OD.DUES */
		SL_OD_DUE_ID -> SL_Overdue:SL_OD_DUES_HIST PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=32, sysNumber=0.0, core=true, businessType=A, t24Name=SL.OD.DUE.ID)
		/* Refer to helptext of SL.OD.DUES */
		OD_AGG_DUE : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=1.0, core=true, t24Name=OD.AGG.DUE, typeModifiers="6")
		OD_ASSET_TYPE -> byValue SL_Overdue:SL_OD_DUES_HIST__OD_ASSET_TYPE *
		OD_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@i18n:Label (en=Currency)
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=6.0, core=true, businessType=CCY, t24Name=OD.CURRENCY)
	}
	SL_OD_DUES_HIST__OD_ASSET_TYPE
	{
		/* Refer to helptext of SL.OD.DUES */
		OD_ASSET_TYPE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=2.0, core=true, t24Name=OD.ASSET.TYPE)
		/* Refer to helptext of SL.OD.DUES */
		OD_TYPE_DUE : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=3.0, core=true, t24Name=OD.TYPE.DUE, typeModifiers="6")
		OD_PART_ID -> byValue SL_Overdue:SL_OD_DUES_HIST__OD_ASSET_TYPE__OD_PART_ID *
	}
	SL_OD_DUES_HIST__OD_ASSET_TYPE__OD_PART_ID
	{
		/* Refer to helptext of SL.OD.DUES */
		OD_PART_ID : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=4.0, core=true, t24Name=OD.PART.ID)
		/* Refer to helptext of SL.OD.DUES */
		OD_PART_DUE : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=5.0, core=true, t24Name=OD.PART.DUE, typeModifiers="6")
	}
	SL_OD_PART
		@t24:i (t24Name=SL.OD.PART, level=F, type=L, allowedFunctions="L P S", localRefAllowed=false)
	{
		/* This is the key field which is formed by participant ID appended with the ID of the SL.LOAN */
		SL_PART_ID -> SL_Overdue:SL_OD_PART PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=0.0, core=true, businessType=A, t24Name=SL.PART.ID)
		/* Holds the total amount due to the participant. This amount is the some of the due amounts from various assets under all of the due dates. */
		TOT_PART_DUE : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=1.0, core=true, t24Name=TOT.PART.DUE, typeModifiers="6")
		DUE_DATE -> byValue SL_Overdue:SL_OD_PART__DUE_DATE *
		/* The currency of the loan contract is updated in this field */
		OD_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@i18n:Label (en=Currency)
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=6.0, core=true, businessType=CCY, t24Name=OD.CURRENCY)
	}
	SL_OD_PART__DUE_DATE
	{
		/* This field captures the date on which the associted amounts become due to the participant. This is multivalue field associated to asset type and due amount fields */
		DUE_DATE : T24BusinessTypes:D
			@t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=2.0, core=true, t24Name=DUE.DATE)
		/* Amount field holds the total due as on the corresponding DUE.DATE field. */
		DUE_AMT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=3.0, core=true, t24Name=DUE.AMT, typeModifiers="6")
		OD_AST_TYPE -> byValue SL_Overdue:SL_OD_PART__DUE_DATE__OD_AST_TYPE *
	}
	SL_OD_PART__DUE_DATE__OD_AST_TYPE
	{
		/* This field holds asset type of the due amount such as INT, TAX, PRIN etc.,. This is a part of a subvalue field associated to OD.AST.DUE.AMT field. */
		OD_AST_TYPE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=4.0, core=true, t24Name=OD.AST.TYPE)
		/* The field holds the due amount of the asset type available in the associated field OD.AST.TYPE on the date defined in the associated field DUE.DATE
. */
		OD_AST_DUE_AMT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=5.0, core=true, t24Name=OD.AST.DUE.AMT, typeModifiers="6")
	}
	SL_OD_PART_HIST
		@t24:i (t24Name=SL.OD.PART.HIST, level=F, type=L, allowedFunctions="L P S", localRefAllowed=false)
	{
		/* Refer to helptext of SL.OD.PART */
		SL_PART_ID -> SL_Overdue:SL_OD_PART_HIST PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=0.0, core=true, businessType=A, t24Name=SL.PART.ID)
		/* Refer to helptext of SL.OD.PART */
		TOT_PART_DUE : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=1.0, core=true, t24Name=TOT.PART.DUE, typeModifiers="6")
		DUE_DATE -> byValue SL_Overdue:SL_OD_PART_HIST__DUE_DATE *
		OD_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@i18n:Label (en=Currency)
			@t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=6.0, core=true, businessType=CCY, t24Name=OD.CURRENCY)
	}
	SL_OD_PART_HIST__DUE_DATE
	{
		/* Refer to helptext of SL.OD.PART */
		DUE_DATE : T24BusinessTypes:D
			@t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=2.0, core=true, t24Name=DUE.DATE)
		/* Refer to helptext of SL.OD.PART */
		DUE_AMT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=3.0, core=true, t24Name=DUE.AMT, typeModifiers="6")
		OD_AST_TYPE -> byValue SL_Overdue:SL_OD_PART_HIST__DUE_DATE__OD_AST_TYPE *
	}
	SL_OD_PART_HIST__DUE_DATE__OD_AST_TYPE
	{
		/* Refer to helptext of SL.OD.PART */
		OD_AST_TYPE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=4.0, core=true, t24Name=OD.AST.TYPE)
		/* Refer to helptext of SL.OD.PART */
		OD_AST_DUE_AMT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=5.0, core=true, t24Name=OD.AST.DUE.AMT, typeModifiers="6")
	}
	/* The application SL.ROUND.ADJ is used to facilitate updating rounding adjustments to participant balances. This front end is available only if LIQUIDATION.MODE in the FACILITY / SL.LOANS (SLL) is set as INTERNAL. Rounding adjustments are enabled for
(a)

(b)

(c)

The agent of a facility would apportion the interest (or commitment fee) amongst the participants following a particular method of rounding. In case the borrower follows a different method of rounding the apportionment for interest (or commitment fee) and the tax thereon if any, would vary. This application allows the agent to re-apportion the dues to the participants in line with the borrower's calculation.
The purpose of this application is to handle rounding adjustments and in order to prevent input errors by the user, a permissible deviation value (from the existing calculation) may be defined in MAX.ROUNDING field in SL.PARAMETER.
System would perform validations to ensure that the amounts adjusted are within this allowed deviation. Adjustments are possible for interest, commitment fee and tax thereon. If T24 bank's share is adjusted accrual adjustment is handled ONLINE.
The @ID of SL.ROUND.ADJ may either be the






There should be a valid SL.OD.DUES record (either Facility or SLL) with similar ID (Facility/SLL plus date) for user to do adjustment.
If T24 bank acts as only an Agent and does not participate in the Facility, while writing participant's information in fields Part.ID, Part.Share & Revd.Share, T24 bank's reference is also added with Part.Share showing zero value. This is done to accommodate skimming adjustments where Revd.Share alone may be input with the amount of skim income.
In such scenario, accounting entries for the skim income would be raised ONLINE on authorising SL.ROUND.ADJ */
	SL_ROUND_ADJ
		@t24:i (t24Name=SL.ROUND.ADJ, level=F, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=false)
	{
		/* The @ID of SL.ROUND.ADJ may either be the



Facility ID hyphenated by a past Commitment fee due date (already cycled) or


SLL ID hyphenated by a past interest due date (already cycled).There should be a valid SL.OD.DUES record (either Facility or SLL) with similar ID (Facility/SLL plus date) for user to do adjustment. */
		SL_ADJ_ID -> SL_Overdue:SL_ROUND_ADJ PK required
			@i18n:Label (en="SL Round Adj id")
			@i18n:Tooltip (en="ID of this transaction")
			@t24:i (align=L, inputBehaviour=I, maxLength=27, sysNumber=0.0, core=true, businessType=A, t24Name=SL.ADJ.ID)
		DUE_TYPE -> byValue SL_Overdue:SL_ROUND_ADJ__DUE_TYPE *
		LOC_REFERENCE -> byValue SL_Overdue:SL_ROUND_ADJ__LOC_REFERENCE *
		/* This field is updated with the due currency from the corresponding SL.OD.DUES record
. */
		DUE_CURRENCY -> FIN_CurrencyConfig:CURRENCY
			@i18n:Label (en="Overdue Currency")
			@i18n:Tooltip (en="SL Overdue Currency")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=7.0, core=true, businessType=CCY, t24Name=DUE.CURRENCY)
		RESERVE_05 -> byValue SL_Overdue:SL_ROUND_ADJ__RESERVE_05 *
		RESERVE_04 -> byValue SL_Overdue:SL_ROUND_ADJ__RESERVE_04 *
		RESERVE_03 -> byValue SL_Overdue:SL_ROUND_ADJ__RESERVE_03 *
		RESERVE_02 -> byValue SL_Overdue:SL_ROUND_ADJ__RESERVE_02 *
		RESERVE_01 -> byValue SL_Overdue:SL_ROUND_ADJ__RESERVE_01 *
		OVERRIDE -> byValue SL_Overdue:SL_ROUND_ADJ__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=14.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=15.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue SL_Overdue:SL_ROUND_ADJ__INPUTTER *
		DATE_TIME -> byValue SL_Overdue:SL_ROUND_ADJ__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=18.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=19.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=20.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=21.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=22.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	SL_ROUND_ADJ__DUE_TYPE
	{
		/* Asset Type of due. For Facility the Commitment fee and for SLL,  interest would be populated. System written, no input by the user.

For easy understanding the words INT for interest on Loans, FEE for commitment fee and TAX for tax would be written.
Validation Rules

System written. No input allowed. */
		DUE_TYPE : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=1.0, core=true, t24Name=DUE.TYPE)
		/* Aggregate amount of fee or interest due on the respective due date. System written, no input by user.

This is the gross amount payable by the borrower. After adjustments are made the aggregate Revd.Share should equal the value in this field If the T24 bank is agent or agent cum participant.
Validation Rules

System populated. No input allowed. */
		TOT_DUE_AMT : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=2.0, core=true, t24Name=TOT.DUE.AMT, typeModifiers="7")
		PART_ID -> byValue SL_Overdue:SL_ROUND_ADJ__DUE_TYPE__PART_ID *
	}
	SL_ROUND_ADJ__DUE_TYPE__PART_ID
	{
		/* ID of the participant of the FACILITY / SLL. System written, no input by user.

The due amount
is defaulted based on outstanding for respective asset type from the participant balances file in field Part.Share

This is the calculation that is available as per T24 bank books and the user may modify this amount by inputting in Revd.Share.

The difference in amounts between Part.Share and Revd.Share may not exceed the amount specified in MAX.ROUNDING field in SL.PARAMETER. Such validation is performed for all participants other than T24 bank

For T24 bank this validation is performed only for downward adjustment. For any upward adjustment in Revd.Share (if Revd.Share is greater than Part.Share) this validation is skipped in order accommodate skimming adjustments.

In case the borrower is charged a different rate than the one charged by the participants, the difference is skimmed by the agent.

Ex - Three participants to a facility whose current period commitment fee is 100. The individual share that has been worked out are

A (T24 bank) - 40

B (outside participant) - 30

C (outside participant) - 20

The difference of 10 is skimmed by A and so its share is to be adjusted to be 50 (from 40). In this case, TOT.DUE.AMT would be written for 100, with Part.Share for A, B & C as 40, 30 & 20 respectively. User would input the Revd.Share for A as 50 to include the skim amount also.

If there are rounding differences (if aggregate of Part.Share does not equal Tot.Due.Amt) this record cannot be committed and SL.OD.SETTLE cannot be used to settle the dues.
Validation Rules

System written. No input allowed. */
		PART_ID : T24BusinessTypes:CUS
			@t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=3.0, core=true, t24Name=PART.ID)
		/* The due amount
is defaulted based on outstanding for respective asset type from the participant balances file in field Part.Share

This is the calculation that is available as per T24 bank books and the user may modify this amount by inputting in Revd.Share.

The difference in amounts between Part.Share and Revd.Share may not exceed the amount specified in MAX.ROUNDING field in SL.PARAMETER. Such validation is performed for all participants other than T24 bank

For T24 bank this validation is performed only for downward adjustment. For any upward adjustment in Revd.Share (if Revd.Share is greater than Part.Share) this validation is skipped in order accommodate skimming adjustments.

In case the borrower is charged a different rate than the one charged by the participants, the difference is skimmed by the agent.

Ex - Three participants to a facility whose current period commitment fee is 100. The individual share that has been worked out are

A (T24 bank) - 40

B (outside participant) - 30

C (outside participant) - 20

The difference of 10 is skimmed by A and so its share is to be adjusted to be 50 (from 40). In this case, TOT.DUE.AMT would be written for 100, with Part.Share for A, B & C as 40, 30 & 20 respectively. User would input the Revd.Share for A as 50 to include the skim amount also.

If there are rounding differences (if aggregate of Part.Share does not equal Tot.Due.Amt) this record cannot be committed and SL.OD.SETTLE cannot be used to settle the dues.
Validation Rules

System written. No input allowed. */
		PART_SHARE : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=4.0, core=true, t24Name=PART.SHARE, typeModifiers="7")
		/* The revised share of the participant after adjusting the rounding differences is input here.
If no input is made, system defaults the Part.Share and hence input is required only in case of participants where adjustments are required.
The revised share as appearing in this field is written to participant balances file (old amounts are replaced).

The due amount
is defaulted based on outstanding for respective asset type from the participant balances file in field Part.Share

This is the calculation that is available as per T24 bank books and the user may modify this amount by inputting in Revd.Share.

The difference in amounts between Part.Share and Revd.Share may not exceed the amount specified in MAX.ROUNDING field in SL.PARAMETER. Such validation is performed for all participants other than T24 bank. If adjustments are done for T24 bank interest adjustment entries are posted ONLINE.

For T24 bank this validation is performed only for downward adjustment. For any upward adjustment in Revd.Share (if Revd.Share is greater than Part.Share) this validation is skipped in order accommodate skimming adjustments.

In case the borrower is charged a different rate than the one charged by the participants, the difference is skimmed by the agent.

Ex - Three participants to a facility whose current period commitment fee is 100. The individual share that has been worked out are

A (T24 bank) - 40

B (outside participant) - 30

C (outside participant) - 20

The difference of 10 is skimmed by A and so its share is to be adjusted to be 50 (from 40). In this case, TOT.DUE.AMT would be written for 100, with Part.Share for A, B & C as 40, 30 & 20 respectively. User would input the Revd.Share for A as 50 to include the skim amount also.

If there are rounding differences (if aggregate of Part.Share does not equal Tot.Due.Amt) this record cannot be committed and SL.OD.SETTLE cannot be used to settle the dues.
Validation Rules

Adjustments for value higher than MAX.ROUNDING in SL.PARAMETER not allowed     for participants
For T24 bank, adjustment downwards are checked for MAX.ROUNDING     validation
Optional input. System defaults Part.Share if no input is made
Aggregate of Revd.Share must equal TOT.DUE.AMT
\ */
		REVD_SHARE : T24BusinessTypes:AMT
			@t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=5.0, core=true, t24Name=REVD.SHARE, typeModifiers="7")
	}
	SL_ROUND_ADJ__LOC_REFERENCE
	{
		/* Contains any additional information that has been defined locally to meet a specific local requirement
Validation Rules

Upto 35 A alphanumeric characters
To be defined locally */
		LOC_REFERENCE : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=6.0, core=true, t24Name=LOC.REFERENCE)
	}
	SL_ROUND_ADJ__RESERVE_05
	{
		/* reserved for future use */
		RESERVE_05 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=8.0, core=true, t24Name=RESERVE.05)
	}
	SL_ROUND_ADJ__RESERVE_04
	{
		/* reserved for future use */
		RESERVE_04 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=9.0, core=true, t24Name=RESERVE.04)
	}
	SL_ROUND_ADJ__RESERVE_03
	{
		/* reserved for future use */
		RESERVE_03 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=10.0, core=true, t24Name=RESERVE.03)
	}
	SL_ROUND_ADJ__RESERVE_02
	{
		/* reserved for future use */
		RESERVE_02 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=11.0, core=true, t24Name=RESERVE.02)
	}
	SL_ROUND_ADJ__RESERVE_01
	{
		/* reserved for future use */
		RESERVE_01 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=15, sysNumber=12.0, core=true, t24Name=RESERVE.01)
	}
	SL_ROUND_ADJ__OVERRIDE
	{
		OVERRIDE : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=13.0, core=true, t24Name=OVERRIDE)
	}
	SL_ROUND_ADJ__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=16.0, core=true, t24Name=INPUTTER)
	}
	SL_ROUND_ADJ__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=17.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
}