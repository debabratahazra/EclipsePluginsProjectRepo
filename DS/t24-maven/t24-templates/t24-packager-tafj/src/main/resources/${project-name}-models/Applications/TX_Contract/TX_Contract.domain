# UTF-8
# UTF-8
/* Template Servicing and Extraction for Tax Engine */
Domain TX_Contract
	@t24:i (module=TX)
	@java:Package (value=com.temenos.t24.datamodel.tx.tx_contract)
namespace "http://www.temenos.com/t24/TX_Contract"
metamodelVersion 1.30.6
Classes {
	TX_CONDITION
		@t24:i (t24Name=TX.CONDITION, level=C, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=false)
	{
		/* Specifies the valid Application name for which the Conditions / Events are defined. Also accepts CLASS-APPLICATION ID format
Validations
a)  Should be a valid T24 Application or in the format of CLASS-APPLICATION.
b)  in case of CLASS id, the valid applications allowed are:




CUSTOMER



SC.TRANS.NAME



SECURITY.MASTER


DIARY.TYPE */
		ID -> TX_Contract:TX_CONDITION PK required
			@i18n:Label (en="Transaction Ref")
			@i18n:Tooltip (en="Transaction Reference")
			@t24:i (align=L, inputBehaviour=I, maxLength=60, sysNumber=0.0, core=true, businessType=A, t24Name=ID)
		DECISION_FLD -> byValue TX_Contract:TX_CONDITION__DECISION_FLD *
		RESERVED15 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=13.0, core=true, t24Name=RESERVED15)
		RESERVED14 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=14.0, core=true, t24Name=RESERVED14)
		RESERVED13 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=15.0, core=true, t24Name=RESERVED13)
		/* Specifies the method of evaluating the events.  When Search.Type is  'Best Fit',  then the
Events having maximum number of conditions in them are evaluated first,  and then in that
order. When the Search.Type  is   'First Fit',   then  the  events  are  evaluated in the order
provided. In both the cases,  which ever event is satisfied first, the TXN.BASE.ID / MAPPING.ID
of that event is used.

Validations

a.  Input to this field is optional.
b.  The valid input to this field are  'B' for Best Fit  /  'F'  for First fit.
c.  When no input is provided,  then the default value of  'F' - First fit is used. */
		SEARCH_TYPE : TX_Contract:TX_CONDITION__SEARCH_TYPE
			@t24:i (align=L, inputBehaviour=I, maxLength=1, sysNumber=16.0, core=true, t24Name=SEARCH.TYPE)
		/* Indicates the Local Tax Key File. The corresponding file will get updates with the Transaction authorised message at the time of authorisation of the contract.
Validation Rules

The field should have a valid File Control. */
		AUTH_WRITE_FILE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=17.0, core=true, t24Name=AUTH.WRITE.FILE)
		AUTH_FILE_ID -> byValue TX_Contract:TX_CONDITION__AUTH_FILE_ID *
		RESERVED8 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=19.0, core=true, t24Name=RESERVED8)
		RESERVED7 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=20.0, core=true, t24Name=RESERVED7)
		RESERVED6 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=21.0, core=true, t24Name=RESERVED6)
		RESERVED5 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=22.0, core=true, t24Name=RESERVED5)
		RESERVED4 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=23.0, core=true, t24Name=RESERVED4)
		RESERVED3 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=24.0, core=true, t24Name=RESERVED3)
		RESERVED2 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=25.0, core=true, t24Name=RESERVED2)
		RESERVED1 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=26.0, core=true, t24Name=RESERVED1)
		OVERRIDE -> byValue TX_Contract:TX_CONDITION__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=28.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=29.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue TX_Contract:TX_CONDITION__INPUTTER *
		DATE_TIME -> byValue TX_Contract:TX_CONDITION__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=32.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=33.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=34.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=35.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=36.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	TX_CONDITION__DECISION_FLD
	{
		DECISION_FLD -> byValue TX_Contract:TX_CONDITION__DECISION_FLD__DECISION_FLD *
		TXN_BASE_ID -> byValue TX_Contract:TX_CONDITION__DECISION_FLD__TXN_BASE_ID *
		/* Specifies the Id of the Mapping file,  used for passing the data to external routine,  for Tax calculation
purposes.  Ref.  Calc.Routine in  Tax application.

Validations

a) Should be a valid key held on the TX.MAPPING table.
b) Only  OUT  mapping details to be given.   Eg.  MM*OUT,
c) The TRANSACTION.FILE  of the above mapping file in TX.MAPPING  should be the
Application for which the Tx.condition is defined. */
		TE_MAPPING_ID : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=40, sysNumber=9.0, core=true, t24Name=TE.MAPPING.ID)
		/* Specifies a brief description of the Condition or the Event.  The value of this field is
updated as EVENT.ID in the Transaction base file.  ( Ref. TX.TXN.BASE.PARMS)

Validations
a)  Input is optional. */
		EVENT_ID : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=40, sysNumber=10.0, core=true, t24Name=EVENT.ID)
		MSG_NUMBER -> byValue TX_Contract:TX_CONDITION__DECISION_FLD__MSG_NUMBER *
	}
	TX_CONDITION__DECISION_FLD__DECISION_FLD
	{
		/* Defines the Operator  to be used for the Condition defined.  Accepts CLASS TX condition record ids with a valid EVENT.ID. Also accepts a valid
user defined routine  which returns a  True / False value.

Validation Rules


The following are the valid operators that can be     defined :
EQ -  Equal.
NE -  Not Equal.
LE  -  Less than or Equal     to.
LT  -  Less than.
GE  - Greater than or Equal to.
GT  - Greater than.
RG  - Range values.
IN   - Match values which     are comma separated in Decision.Frm


The CLASS ID record of the TX.CONDITION is also a valid     input. This CLASS ID record is input along with an EVENT.ID
eg:- CLASS-CUSTOMER*GBFCPNBUY.
where,
CLASS-CUSTOMER is a valid CLASS-ID in TX.CONDITION.
GBFCPNBUY is an EVENT.ID of the above record.



It can also accept a valid     routine in the format  @ROUTINE .





The routine should have a valid PGM.FILE entry         with TYPE = S.



The routine         should return a value 1

-         for
True (or)
0
- for
False.



The routine should accept the following         parameters :

CONTRACT.ID
,
APPL.RECORD,
DECISION.FLD.NAME, RETURN.VALUE
Where  Contract.Id,  Appl.Record, Decision.Fld.Name  are      IN parameters.
Return.Value  is the OUT parameter.

Contract  Id   -   The Id of the Application     record, for which the condition checked.
Appl.Record  -   The Application record for which the     condition is checked.
Decision.Fld.Name   -   The Field name of the     Application for which this Routine is called.
Return.Value                -    The value returned by routine - either 1 for True / 0     for False. */
		DECISION_FLD : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=1.0, core=true, t24Name=DECISION.FLD)
		/* This field specifies a valid routine which does some conversion on the Decision data.The routine returns the converted data based on which Decision is made.
Validations :

1. The routine should have a valid PGM.FILE entry with TYPE = S.


2. The routine should be written with the following arguments,

IN.DECISION  ,  OUT.DECISION

IN.DECISION      -  In parameter, It has the value of the decision data on which conversion is done.

OUT.DECISION -  Out parameter.The Converted data returned from the routine. */
		DECIS_CONV : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=2.0, core=true, t24Name=DECIS.CONV)
		/* Defines the Operator  to be used for the Condition defined.  Also accepts a valid
user defined routine  which returns a  True / False value.

Validations

a. The following are the valid operators that can be defined :
EQ -  Equal.
NE -  Not Equal.
LE  -  Less than or Equal to.
LT  -  Less than.
GE  - Greater than or Equal to.
GT  - Greater than.
RG  - Range values.
IN   - Match values which are comma separated in Decision.Frm

b.
It can also accept a valid routine in the format  @ROUTINE .



The routine should have a valid PGM.FILE entry with TYPE = S.


The routine should return a value 1

- for
True (or)
0
- for
False.


The routine should accept the following parameters :

CONTRACT.ID
,
APPL.RECORD,

DECISION.FLD.NAME, RETURN.VALUE
Where  Contract.Id,  Appl.Record, Decision.Fld.Name  are  IN parameters.
Return.Value  is the OUT parameter.

Contract  Id   -   The Id of the Application record, for which the condition checked.
Appl.Record  -   The Application record for which the condition is checked.
Decision.Fld.Name   -   The Field name of the Application for which this Routine is called.
Return.Value            -    The value returned by routine - either 1 for True / 0 for False. */
		DECISION : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=3.0, core=true, t24Name=DECISION)
		/* Specifies the values to be checked for the Decision Field based on the Decision operator,
for the condition to be satisfied.

Validations

a. Input mandatory when the Decision has been specified as any operator.
b. Input should not be provided when a decision routine has been attached in Decision field.
c. When the Decision is  'IN',  then the values are  comma separated i.e.  val1, val2, ... */
		DECISION_FRM : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=4.0, core=true, t24Name=DECISION.FRM)
		/* Specifies the End value when the Decision = 'RG' ( Range) has been provided.

Validations

a.  Input is mandatory when Decision is 'RG'.
b.  For evaluation of the condition, the values inclusive between Decision.Frm and
Decision.To  are taken. */
		DECISION_TO : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=5.0, core=true, t24Name=DECISION.TO)
		/* Specifies the level of grouping of the conditions. In a particular event,  the conditions are
evaluated sequentially or can be formed into different levels depending on the complexity.

When conditions are evaluated sequentially, then the result of one condition is combined
with that of the next condition with the intervening operator. This is continued till the last
condition. The final result specifies whether the  Event is  satisfied or not.

When levels are defined,  then  within each level the conditions are evaluated sequentially
as above. Then results of all the levels  are evaluated sequentially to form the final result.

To specify  a  level  for  conditions,  a numeric value  is  provided.  To  classify  different
conditions as same level,  either the LEVEL is left blank  or  given the  same  number as
that of  the  previous condition.   To  specify a different level, a higher numeric value  is
provided for the next level.

Eg.  For a MM transaction, to specify a condition  as :
( Interest.Rate = 10  and  Principal  > 10000 )  OR  ( Interest.Rate = 12  and Principal > 20000)
Level 1                                                                    Level 2

Eg.
1. 1. 1     DECISION.FLD              INTEREST.RATE

2. 1. 1     DECISION....                  EQ

3. 1. 1     DECISION.FRM            10                                            ( LEVEL  1 )

5. 1. 1     LEVEL.......                      1

6. 1. 1     OPERAND.....                AND


1. 1. 2     DECISION.FLD             PRINCIPAL

2. 1. 2     DECISION....                  GT

3. 1. 2     DECISION.FRM            10000                                      ( LEVEL 1 )


6. 1. 2     OPERAND.....                OR


1. 1. 3     DECISION.FLD             INTEREST.RATE

2. 1. 3     DECISION....                  EQ

3. 1. 3     DECISION.FRM            12                                            ( LEVEL 2 )

5. 1. 3     LEVEL.......                      2

6. 1. 3     OPERAND.....                AND


1. 1. 4     DECISION.FLD             PRINCIPAL

2. 1. 4     DECISION....                  GT

3. 1. 4     DECISION.FRM            20000                                      ( LEVEL 2 )


7. 1. 1     TXN.BASE.ID.              TAXDB

9. 1         EVENT.ID.......               EVENT#1

In the above example,  the conditions at Level 1 is evaluated first  and then  at  Level 2.
The event is said to be satisfied  when  the final result  of   ( Level 1  OR  Level 2)  is  true.
This can be extended to various levels.

Validations

a) Input to this field is optional.  Should be a valid number value.
b) Within an Event,  the  levels  are to be specified in ascending order.  If blank, then it
is treated to be at same level as the previous. */
		LEVEL : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=6.0, core=true, t24Name=LEVEL)
		/* Specifies the Operand to be used for evaluating the conditions.

Validations

a) The valid values are 'OR' / 'AND'.
b) Input is mandatory when multiple conditions are provided for an Event. */
		OPERAND : TX_Contract:TX_CONDITION__DECISION_FLD__DECISION_FLD__OPERAND
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=7.0, core=true, t24Name=OPERAND)
	}
	TX_CONDITION__DECISION_FLD__TXN_BASE_ID
	{
		/* Specifies the ID of the Transaction Base file,  to be updated when the condition is satisfied.

Validations

a. Input to  this field  or  MAPPING.ID  is mandatory.
b. Accepts the valid key held on the TX.TXN.BASE.PARMS table. */
		TXN_BASE_ID : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=8.0, core=true, t24Name=TXN.BASE.ID)
	}
	TX_CONDITION__DECISION_FLD__MSG_NUMBER
	{
		/* Validation Rules */
		MSG_NUMBER : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=11.0, core=true, t24Name=MSG.NUMBER)
		/* Indicates the Delivery Process that is to be carried out for the respective message after Condition Satisfies. If the value is HOLD then the Delivery Process is held and the details are written to TI.TRANS.DETAILS. If the value is DELETE no delivery process occurs. Normal Delivery process happens if the value of this field is ONLINE
If not input and Message Number exist then Defaulted to 'ONLINE'.
Validation Rules

Input to this field is optional.
The valid input to this field are "HOLD' , 'DELETE' or 'ONLINE'.
If not input and if corresponding Message Number exist then Defaulted to 'ONLINE'. */
		DE_PROCESS : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=12.0, core=true, t24Name=DE.PROCESS)
	}
	TX_CONDITION__AUTH_FILE_ID
	{
		/* Specifies the ID format for the AUTH.WRITE.FILE.
Validation Rules

Can have the following values,
a) string - any string within "" or ''
b) DATETIME
c) TXNREF - Transaction Reference
d) COMPANY

Example:- AUTHORISED*SCTR100000010*20030303100. */
		AUTH_FILE_ID : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=18.0, core=true, t24Name=AUTH.FILE.ID)
	}
	TX_CONDITION__OVERRIDE
	{
		OVERRIDE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=27.0, core=true, t24Name=OVERRIDE)
	}
	TX_CONDITION__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=30.0, core=true, t24Name=INPUTTER)
	}
	TX_CONDITION__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=31.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	TX_MAPPING
		@t24:i (t24Name=TX.MAPPING, level=C, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=false)
	{
		/* Defines the ID of the mapping record used for Tax processing.
Validations :

Should in the format String*IN/OUT



IN  indicates that the mapping is from the external system into T24


OUT- indicates that the mapping is from T24 to the external system */
		ID -> TX_Contract:TX_MAPPING PK required
			@i18n:Label (en="Transaction Ref")
			@i18n:Tooltip (en="Transaction Reference")
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=0.0, core=true, businessType=A, t24Name=ID)
		/* Description of the Tx Mapping record.
Validations :


0 - 40  type A (alphanumeric) characters. */
		DESCRIPTION : T24BusinessTypes:A
			@i18n:Label (en=Description)
			@i18n:Tooltip (en=Description)
			@t24:i (align=L, inputBehaviour=I, maxLength=40, sysNumber=1.0, core=true, t24Name=DESCRIPTION)
		/* Specifies the style in which data is sent or received from T24 for Tax engine
processing.

Validations :


Should contain the following valid data CSV/T24/XML
CSV         - Sends data separated by Comma to a Unix file
T24 - Sends the data to a T24 Work file.
XML        - Sends the data in XML format. (currently not supported) */
		OUTPUT_STYLE : TX_Contract:TX_MAPPING__OUTPUT_STYLE
			@t24:i (align=L, inputBehaviour=I, maxLength=6, sysNumber=2.0, core=true, t24Name=OUTPUT.STYLE)
		/* Specifies the path for the output file.
Validations :


For CSV output style it contains the entire file     path. The output record is created in the path specified.

For  T24 output style it contains the valid     T24 work file     name with a file control. */
		HANDOFF_PATH : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=3.0, core=true, t24Name=HANDOFF.PATH)
		/* Specifies the position in the workfile where the Black box routine updates the status of
tax engine processing.

Validations :

Numeric value of 2 characters length. */
		COMPLETE_STATUS : mml:Integer
			@i18n:Label (en="Complete Status")
			@i18n:Tooltip (en="Complete Status")
			@t24:i (align=R, inputBehaviour=I, maxLength=1, sysNumber=4.0, core=true, t24Name=COMPLETE.STATUS)
		/* This field specifies when the Tax processing is going to happen. Whether immediate or
through phantom jobs.

Validations :


Should contains the following     values,
LAUNCH.AND.WAIT - This triggers the Tax engine processing immediately when the
transaction is input.
LAUNCH.AND.RETURN - Tax engine is not triggered immediately. It is carried over by the
phantom jobs after the transaction is committed. Currently
this is not supported */
		SCHEDULE : TX_Contract:TX_MAPPING__SCHEDULE
			@t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=5.0, core=true, t24Name=SCHEDULE)
		/* Gives the Application for which the mapping belongs.
Validations :

Valid T24 application name with
a valid PGM.FILE of      TYPE = L/U/H */
		TRANSACTION_FILE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=40, sysNumber=6.0, core=true, t24Name=TRANSACTION.FILE)
		/* The name of the Black box  routine triggered for Tax processing. The routine can be a T24 or an external routine.
Validations :


The routine should have a valid PGM.FILE entry with TYPE = S if the Output style is 'T24'. */
		BLACK_BOX : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=7.0, core=true, t24Name=BLACK.BOX)
		/* The position in the workfile where the Black box processing returns the Tax currency.
Validations :

Numeric value of 2 characters long. */
		TAX_CCY_POS : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=8.0, core=true, t24Name=TAX.CCY.POS)
		/* The position in the workfile where the Black box processing returns the Tax amount.
Validations :

Numeric value of 2 characters long. */
		TAX_AMT_POS : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=9.0, core=true, t24Name=TAX.AMT.POS)
		FILE_NAME -> byValue TX_Contract:TX_MAPPING__FILE_NAME *
		RESERVED12 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=19.0, core=true, t24Name=RESERVED12)
		RESERVED11 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=20.0, core=true, t24Name=RESERVED11)
		RESERVED10 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=21.0, core=true, t24Name=RESERVED10)
		RESERVED9 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=22.0, core=true, t24Name=RESERVED9)
		RESERVED8 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=23.0, core=true, t24Name=RESERVED8)
		RESERVED7 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=24.0, core=true, t24Name=RESERVED7)
		RESERVED6 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=25.0, core=true, t24Name=RESERVED6)
		OVERRIDE -> byValue TX_Contract:TX_MAPPING__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=27.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=28.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue TX_Contract:TX_MAPPING__INPUTTER *
		DATE_TIME -> byValue TX_Contract:TX_MAPPING__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=31.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=32.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=33.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=34.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=35.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	TX_MAPPING__FILE_NAME
	{
		/* Specifies the file name from which the data to be passed in/out from T24 to External tax processing system.
Validations :

Valid T24 application name with
a valid PGM.FILE of      TYPE = L/U/H */
		FILE_NAME : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=10.0, core=true, t24Name=FILE.NAME)
		RECORD_ID -> byValue TX_Contract:TX_MAPPING__FILE_NAME__RECORD_ID *
		/* Defines the ID with which the file name give in the field FILE.NAME is read an is specified only when the ID has to be retrieved from some other application.
Validations :


In the format     L APPL FIELD
Where APPL = Application to be read to get ID
FIELD - Field in the above application to form ID.




Eg. If we need to read SUB.ASSET.TYPE, when the mapping is defined for SEC.TRADE,
:


FILE.NAME

:
SUB.ASSET.TYPE


RECORD.ID

:
SEC.CODE
( Field in SEC.TRADE ).


CONVERSION :

L
SEC.MASTER
SUB.ASSET.CODE




(Sub asset code retrieved from SEC.MASTER ).



Can     also be a valid routine in the format  @ROUTINE.NAME .



The routine should have a valid PGM.FILE entry with TYPE = S.

The routine should return a value with which the   above said application is read.


The routine has the following parameters :

CONTRACT.ID
,
APPL.RECORD,RECORD.ID    -  In parameters


RETURN.VALUE       - Out parameter

Contract  Id   -   The transaction Id for which the mapping is done.
Appl.Record  -   The transaction record for which the mapping is done.
Record Id      -    The Value for the field specified in the RECORD.ID.
RETURN.VALUE  -    The value returned by routine.



Should     not be specified when File specified in TRANSACTION.FILE & FILE.NAME are     same. */
		CONVERSION : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=12.0, core=true, t24Name=CONVERSION)
		FROM_FIELD -> byValue TX_Contract:TX_MAPPING__FILE_NAME__FROM_FIELD *
		FIELD_NAME -> byValue TX_Contract:TX_MAPPING__FILE_NAME__FIELD_NAME *
		/* Defines the routine to do some special processing on the returned/ passed data for IN/OUT mapping.
For IN mapping,

it performs special processing on the value returned by the Black Box  in the RET.FLD.POS.  For OUT mapping, it  returns data from multiple files that needs to be passed to the Black Box, in the form of a Dynamic array.
Validations :



Should     have a valid PGM.FILE entry with TYPE = S.

The routine should return a dynamic array for the above said processing.


The routine has the following parameters :

CONTRACT.ID
,
APPL.RECORD-  In parameters


RETURN.VALUE       - In/Out parameter

CONTRACT.ID     -   The transaction Id for which the mapping is done.
APPL.RECORD     -   The transaction record for which the mapping is done.
RETURN.VALUE  -    The passed to routine and updated by the routine. */
		ROUTINE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=18.0, core=true, t24Name=ROUTINE)
	}
	TX_MAPPING__FILE_NAME__RECORD_ID
	{
		/* Defines the ID with which the file name give in the field FILE.NAME is read.
Validations :


A valid field in the file given in     TRANSACTION.FILE.


Can     also be a valid routine in the format  @ROUTINE.NAME .



The routine should have a valid PGM.FILE entry with TYPE = S.

The routine should return a value with which the   above said application is read.


The routine has the following parameters :

CONTRACT.ID
,
APPL.RECORD,-  In parameters


RETURN.VALUE       - Out parameter

Contract  Id   -   The transaction Id for which the mapping is done.
APPL.RECORD  -   The transaction record for which the mapping is done.
RETURN.VALUE  -    The value returned by routine.



If the FILE.NAME is equal to the TRANSACTION.FILE,

then this field is defaulted with the value @ID and should not     be input with any other value.

When     FROM.FIELD,  TO.FIELD or FIELD.NAME is not specified for OUT mapping     record, then the Entire record of file specified in FILE.NAME is passed for     tax processing.

Mandatory     Input. */
		RECORD_ID : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=11.0, core=true, t24Name=RECORD.ID)
	}
	TX_MAPPING__FILE_NAME__FROM_FIELD
	{
		/* Specifies the Starting Field from the file specified in FILE.NAME when set of fields are to be passed for tax processing.
Validations :


A valid Field name or number from the file     specified in FILE.NAME

Should be given only of Out mapping record. */
		FROM_FIELD : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=13.0, core=true, t24Name=FROM.FIELD)
		/* Specifies the End Field from the file specified in FILE.NAME when set of fields are to be passed for tax processing.
Validations :


A valid Field name or number from the file     specified in FILE.NAME

Should be given only of Out mapping record. */
		TO_FIELD : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=14.0, core=true, t24Name=TO.FIELD)
	}
	TX_MAPPING__FILE_NAME__FIELD_NAME
	{
		/* Specifies the field  from the file specified in FILE.NAME which is passed for tax processing.
Validation :


A valid Field name or number from the file     specified in FILE.NAME

Should be given only of Out mapping record. */
		FIELD_NAME : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=15.0, core=true, t24Name=FIELD.NAME)
		/* Specifies the position of returned data in the workfile which is to be updated in the file specified in FILE.NAME.
Validations :


Numeric value of 2 characters long.

Mandatory input for IN mapping record. */
		RET_FLD_POS : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=16.0, core=true, t24Name=RET.FLD.POS)
		/* Currently not in use. */
		RET_FLD_CONV : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=17.0, core=true, t24Name=RET.FLD.CONV)
	}
	TX_MAPPING__OVERRIDE
	{
		OVERRIDE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=26.0, core=true, t24Name=OVERRIDE)
	}
	TX_MAPPING__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=29.0, core=true, t24Name=INPUTTER)
	}
	TX_MAPPING__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=30.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	TX_TXN_BASE_MAPPING
		@t24:i (t24Name=TX.TXN.BASE.MAPPING, level=C, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=false)
	{
		/* This field specifies the Mapping ID for the Transaction base file.
Validations :

Should be given in the format APPL * TXN.BASE.ID where

APPL

-
is the Valid Application.
Eg.
MM.MONEY.MARKET etc.



TXN.BASE.ID  is the Id of the TXN.Base filespecified in TX.TXN.BASE.PARMS. */
		TXN_BASE_ID -> TX_Contract:TX_TXN_BASE_MAPPING PK required
			@t24:i (align=L, inputBehaviour=I, maxLength=60, sysNumber=0.0, core=true, businessType=A, t24Name=TXN.BASE.ID)
		ID_FIELD_NAME -> byValue TX_Contract:TX_TXN_BASE_MAPPING__ID_FIELD_NAME *
		TXN_BASE_FIELD -> byValue TX_Contract:TX_TXN_BASE_MAPPING__TXN_BASE_FIELD *
		/* This routine is called at input stage when updating the Transaction Base file.
Validations :

Need to have an entry in the PGM.FILE with TYPE = 'S'.

The parameters to the routine are -

Routine (CONTRACT.ID, Y.APPL.RECORD, MAPPING.REC, MAPPING.ID, Y.RETURN.ARRAY )

Where -

CONTRACT.ID            - is the ID of the current Transaction (current record) for which is mapping is done.

Y.APPL.RECORD        - is the Application (contract) record details.

MAPPING.REC            - is the mapped record based on the fields in TXN.BASE.FIELD.

MAPPING.ID                - is the ID of the current TX.TXN.BASE.MAPPING record which is being mapped.

Y.RETURN.ARRAY     - is the updated array returned by the routine, which is used to update the
Transaction Base file. */
		INPUT_ROUTINE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=9.0, core=true, t24Name=INPUT.ROUTINE)
		/* This routine is called during updation (deletion/reversal) of the Transaction Base file.
Validations :

Need to have an entry in the PGM.FILE with TYPE = 'S'

The parameters to the routine would be

Routine (CONTRACT.ID, Y.APPL.RECORD, MAPPING.REC,     MAPPING.ID, Y.RETURN.ARRAY )

Where -

CONTRACT.ID    - is the ID of the current Transaction (current record) for which is mapping     is  done.

Y.APPL.RECORD - is the Application (contract) record details.

MAPPING.REC     - is the Transaction Base record which is being deleted.

MAPPING.ID      - is the ID of the current TX.TXN.BASE.MAPPING record which is     being mapped.

Y.RETURN.ARRAY     - is the     updated array returned by the routine, Currently no processing is done with     the returned array. */
		DELETE_ROUTINE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=10.0, core=true, t24Name=DELETE.ROUTINE)
		LINK_ID_ROUTINE -> byValue TX_Contract:TX_TXN_BASE_MAPPING__LINK_ID_ROUTINE *
		RESERVED1 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=15.0, core=true, t24Name=RESERVED1)
		OVERRIDE -> byValue TX_Contract:TX_TXN_BASE_MAPPING__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=17.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=18.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue TX_Contract:TX_TXN_BASE_MAPPING__INPUTTER *
		DATE_TIME -> byValue TX_Contract:TX_TXN_BASE_MAPPING__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=21.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=22.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=23.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=24.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=25.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	TX_TXN_BASE_MAPPING__ID_FIELD_NAME
	{
		/* This field takes the value present in TXN.BASE.ID field of TX.TXN.BASE.PARMS, which is used as the ID for  mapping.

Validations :


Must be a value defined in TXN.BASE.ID field in     TX.TXN.BASE.PARMS. */
		ID_FIELD_NAME : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=1.0, core=true, t24Name=ID.FIELD.NAME)
		/* Specifies the corresponding field of  the APPLICATION in the ID, with which mapping is done.

Validations :


Must be a SINGLE-VALUE (NO multi/sub-value) field of     the APPLICATION provided in     the ID (or)


It can also accept a valid routine in the format  @ROUTINE .





The routine should have a valid PGM.FILE entry with TYPE = S.


The routine should accept the following parameters :

CONTRACT.ID
,
APPL.RECORD,
PASS.DATA, RETURN.VALUE

CONTRACT.ID - Transaction ID

APPL.RECORD - Transaction record.

PASS.DATA      -  Any other info need to be passed.Currently Null value is passed.

RETURN VALUE - Returned data from the routine which is used in the formation of ID.


In the     format given below -
! FIELD appl.fld,separator,part.no  where
- appl.fld  its a valid single-value field of application in the ID.
- separator field delimiter.
- part.no if  delimiter present, then which part of the field is to be retrieved.

NOTE  - For SC applications input in this field can either be a valid field of SECURITY.TRANS or
from the application in the ID. This holds good even for the field name (appl.fld) used in
the ! FIELD option. */
		ID_APPL_FIELD : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=2.0, core=true, t24Name=ID.APPL.FIELD)
	}
	TX_TXN_BASE_MAPPING__TXN_BASE_FIELD
	{
		/* This is the actual field for which mapping is done. The   value for this field is taken from FIELD.NAME (a field  of TXN.BASE.PARMS   file.)

Validations :


Data of FIELD.NAME (a field of TXN.BASE.PARMS file).

Cannot take these (TXN.ID, TXN.STATUS or EVENT.ID)       FIELD.NAME from TXN.BASE.PARMS. They are the defaulted field names.

If the field name is a TOTAL       type field (check its FIELD.TYPE in TX.TXN.BASE.PARMS file), only       TXN.APPL.FIELD need to be inputted other fields in this multi-value set must be       blank. */
		TXN_BASE_FIELD : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=3.0, core=true, t24Name=TXN.BASE.FIELD)
		/* This field has value only when fields are to be mapped from an application apart from the ID application.

Validations :


A valid T24 application. */
		TXN_APPLN : T24BusinessTypes:PG
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=4.0, core=true, t24Name=TXN.APPLN, typeModifiers=HUL)
		/* The application in field# 4 is read using the value of this field, which needs to be a field of the Application in the ID.

Validations :


Can be a field of the Application in the ID (or)

User-defined value within quotes. (eg -     "SYSTEM") (or)

A valid routine in the format -     @ROUTINE.NAME,<Field>, where
'FIELD' - is a valid field of the     Application     given in the ID. Input after the coma I.e.<Field> is optional,
if     given the VALUE of this field is passed as the 3rd parameter inside the Routine.
The Routine must have a PGM.FILE entry, whose type = 'S'.
It has 4 arguments -
In Parameter - CONTRACT.ID, APPL.REC, FLD.VALUE
CONTRACT.ID - is the Id of the Application for which mapping is done.
APPL.REC         - application record for which mapping is done.
FLD.VALUE      - value of <field> if given, else its left blank.
Out Parameter -
RETURN.VALUE - Value with which Application in the ID is read. */
		APPL_RECORD_ID : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=5.0, core=true, t24Name=APPL.RECORD.ID)
		/* The field name mentioned in this field is used for mapping.

Validations :


It must be a valid field of the application provided in the     ID. (or)

If field# 4(TXN.APPL) is given,     then input is a valid field     of the application in field# 4. (or)

If the field     name in TXN.BASE.FIELD is of TOTAL type (check its FIELD.TYPE in     TXN.BASE.PARMS file), then value of this field should be a TXN.BASE.FIELD     which is already mapped. (i.e.- the value in this field should have been     previously defined in any of the multi-values of TXN.BASE.FIELD)
NOTE - If the Application in the ID is a SECURITY one (i.e. - if the PRODUCT is 'SC' in the
respected  application's PGM.FILE record), then input in this field can either be a valid
field of SECURITY.TRANS or of the Security application in the ID. This holds good even
for the field name (appl.fld) variable  if  !FIELD option is being used. */
		TXN_APPL_FIELD : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=6.0, core=true, t24Name=TXN.APPL.FIELD)
		/* The input in this field is a user-defined routine, which specifies whether the TXN.BASE.FIELD should be updated in the TXN.BASE file.
Validations :

Routine should have an entry in PGM.FILE with TYPE = 'S'
It accepts 4 parameters -
IN parameters are - CONTRACT.ID, APPL.REC, FLD.VALUE

CONTRACT.ID - is the Id of the Application for which mapping is done.
APPL.REC         - application record for which mapping is done.
FLD.VALUE      - the mapped data of the field.

Out Parameter -
RETURN.VALUE - the value in this field determines if the TXN.BASE.FIELD needs to updated or not
in the TXN.BASE file. If 0 is returned then the field is not updated. If 1 then its
updated. */
		CHECK_ROUTINE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=7.0, core=true, t24Name=CHECK.ROUTINE)
		/* This field has value when data is to be retrieved from other application apart from that in the ID.

Validations :


L APPL.NAME     FIELD.NAME, where
APPL.NAME     - a valid T24 application
FIELD.NAME    - valid field of APPL.NAME.
The application in APPL.NAME is read using the value in APPL.RECORD.ID field if TXN.APPL is
given else it uses TXN.APPL.FIELD
Space is the delimiter.


Can also accept     a routine name in the format @ROUTINE.NAME.
The routine needs to have a PGM.FILE entry, with TYPE = 'S'.
It accepts four parameters -
Out parameters -
CONTRACT.ID  - is the Id of the Application for which mapping is done.
APPL.REC          - application record for which mapping is done.
FLD.NAME        -  either APPL.RECORD.ID if TXN.APPL is given or of TXN.APPL.FIELD
Out Parameter -
RETURN.VALUE - value (data) of FLD.NAME */
		LINK_DATA : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=8.0, core=true, t24Name=LINK.DATA)
	}
	TX_TXN_BASE_MAPPING__LINK_ID_ROUTINE
	{
		LINK_ID_ROUTINE : T24BusinessTypes:API
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=11.0, core=true, t24Name=LINK.ID.ROUTINE)
		LINK_SEPARATOR : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=12.0, core=true, t24Name=LINK.SEPARATOR)
		FIELD_NAME : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=13.0, core=true, t24Name=FIELD.NAME)
		FIELD_POSN : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=14.0, core=true, t24Name=FIELD.POSN)
	}
	TX_TXN_BASE_MAPPING__OVERRIDE
	{
		OVERRIDE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=16.0, core=true, t24Name=OVERRIDE)
	}
	TX_TXN_BASE_MAPPING__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=19.0, core=true, t24Name=INPUTTER)
	}
	TX_TXN_BASE_MAPPING__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=20.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
	TX_TXN_BASE_PARMS
		@t24:i (t24Name=TX.TXN.BASE.PARMS, level=C, type=H, allowedFunctions="A C D E H I L P Q R S", localRefAllowed=false)
	{
		/* This is the ID of the transaction base file.

Validations :

1. Characters of 1-30 length. */
		ID -> TX_Contract:TX_TXN_BASE_PARMS PK required
			@i18n:Label (en="Transaction Ref")
			@i18n:Tooltip (en="Transaction Reference")
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=0.0, core=true, businessType=A, t24Name=ID)
		TXN_BASE_ID -> byValue TX_Contract:TX_TXN_BASE_PARMS__TXN_BASE_ID *
		FIELD_NAME -> byValue TX_Contract:TX_TXN_BASE_PARMS__FIELD_NAME *
		/* This field indicates whether the history details need to stored or not in the TXN.BASE file that is being created.

Validations :

'ACTION' or 'DELETE'
'ACTION' - stores the history details whereas 'DELETE' does not. */
		REV_ACTION : TX_Contract:TX_TXN_BASE_PARMS__REV_ACTION
			@t24:i (align=L, inputBehaviour=F, maxLength=10, sysNumber=9.0, core=true, t24Name=REV.ACTION)
		/* Specifies the Sorting field, based on which TXN.BASE file data will be sorted.

Validations :


Should be a valid field defined in FIELD.NAME other     than the defaulted fields (TXN.ID, TXN.STATUS ,EVENT.ID,COMPANY) */
		SORT_FIELD : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=F, maxLength=30, sysNumber=10.0, core=true, t24Name=SORT.FIELD)
		PREFIX : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=F, maxLength=10, sysNumber=11.0, core=true, t24Name=PREFIX)
		MAINT_HIST : TX_Contract:TX_TXN_BASE_PARMS__MAINT_HIST
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=12.0, core=true, t24Name=MAINT.HIST)
		RESERVED8 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=13.0, core=true, t24Name=RESERVED8)
		RESERVED7 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=14.0, core=true, t24Name=RESERVED7)
		RESERVED6 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=15.0, core=true, t24Name=RESERVED6)
		RESERVED5 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=16.0, core=true, t24Name=RESERVED5)
		RESERVED4 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=17.0, core=true, t24Name=RESERVED4)
		RESERVED3 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=18.0, core=true, t24Name=RESERVED3)
		RESERVED2 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=19.0, core=true, t24Name=RESERVED2)
		RESERVED1 : mml:Integer
			@t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=20.0, core=true, t24Name=RESERVED1)
		OVERRIDE -> byValue TX_Contract:TX_TXN_BASE_PARMS__OVERRIDE *
		RECORD_STATUS : T24BusinessTypes:STAT
			@i18n:Label (en="Record Status")
			@t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=22.0, core=true, t24Name=RECORD.STATUS)
		CURR_NO : mml:Integer
			@i18n:Label (en="Curr No")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=23.0, core=true, t24Name=CURR.NO)
		INPUTTER -> byValue TX_Contract:TX_TXN_BASE_PARMS__INPUTTER *
		DATE_TIME -> byValue TX_Contract:TX_TXN_BASE_PARMS__DATE_TIME *
		AUTHORISER : T24BusinessTypes:A
			@i18n:Label (en=Authoriser)
			@i18n:Tooltip (en="Indicates the User who Authorises the record")
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=26.0, core=true, t24Name=AUTHORISER)
		CO_CODE -> ST_CompanyCreation:COMPANY
			@i18n:Label (en=Company)
			@t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=27.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
		DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
			@i18n:Label (en="Dept Code")
			@t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=28.0, core=true, t24Name=DEPT.CODE)
		AUDITOR_CODE : T24BusinessTypes:A
			@i18n:Label (en="Auditor Code")
			@i18n:Tooltip (en="Auditor Code")
			@t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=29.0, core=true, t24Name=AUDITOR.CODE)
		AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
			@i18n:Label (en="Audit Date Time")
			@i18n:Tooltip (en="Date and time when record was audited")
			@t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=30.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
	}
	TX_TXN_BASE_PARMS__TXN_BASE_ID
	{
		/* This is the ID field name of the TXN.BASE file to be created.This is used for mapping the Record  ID of the data populated in the Txn base file created.

Validations :



Input mandatory. */
		TXN_BASE_ID : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=F, maxLength=30, sysNumber=1.0, core=true, t24Name=TXN.BASE.ID)
	}
	TX_TXN_BASE_PARMS__FIELD_NAME
	{
		/* Provides the list of FIELD NAMES for the TXN.BASE file to be created, which is subsequently mapped in TX.TXN.BASE.MAPPING.

Validations :


Input mandatory.

The data of this field is updated in SYS.FIELD.NAME     field of the Standard.Selection which will be created for the TXN.BASE file. */
		FIELD_NAME : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=2.0, core=true, t24Name=FIELD.NAME)
		/* Input in this field describes the type (nature) of the field mentioned in FIELD.NAME.

Validations :


Is either TOTAL or NULL.
"NULL"  - is specified for normal fields

"TOTAL" - for fields which are used for maintaining sum of field mapped TX.TXN.BASE.MAPPING. */
		FIELD_TYPE : TX_Contract:TX_TXN_BASE_PARMS__FIELD_NAME__FIELD_TYPE
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=3.0, core=true, t24Name=FIELD.TYPE)
		/* Specifies the output format (i.e. the length and justification) for the data of this field when it is being displayed.


Validations :


Specified in the fomat   'Field.size Just'     like 10L
Field.size    - Size (width) of the display field.
Just           -  Justification ( R, L , or T )


The data of this field is updated in SYS.DISPLAY.FMT     field of the Standard.Selection which will be created for the TXN.BASE file.

Input mandatory. */
		FIELD_FMT : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=4.0, core=true, t24Name=FIELD.FMT)
		/* Specifies the validation routine to be called to modify the user input.
A standard 'T24'  IN2 routine can be specified here (i.e. to convert customer mnemonic etc. ).

Validations :


IN2xxxx where xxxx is a valid suffix, i.e. CUS, AMT     etc.

Input should have valid PGM.FILE entry with TYPE = 'S'.


The data of this field is updated in SYS.VAL.PROG field of the Standard.Selection which is will created for the TXN.BASE file.

Input mandatory. */
		FLD_VAL_RTN : T24BusinessTypes:A required
			@t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=5.0, core=true, t24Name=FLD.VAL.RTN)
		/* Specifies if the field entered in FIELD.NAME is a multi-value field or not.

Validations :


'YES' or 'NO'

If input = 'YES' then 'M' (Multi-valued field) is     updated in SYS.SINGLE.MULT field of the Standard.Selection which will be     created for the TXN.BASE file.

If the field entered in FIELD.NAME is of TOTAL type     (check its FIELD.TYPE in TX.TXN.BASE.PARMS file), then input in this field     must be 'NO'.

Input mandatory. */
		MVAL : TX_Contract:TX_TXN_BASE_PARMS__FIELD_NAME__MVAL
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=6.0, core=true, t24Name=MVAL)
		/* Specifies if the field entered in FIELD.NAME is a sub-value field or not.

Validations :


'YES' or 'NO'

If the field entered in FIELD.NAME is of TOTAL type     (check its FIELD.TYPE in TX.TXN.BASE.PARMS file), then input in this field     must be 'NO'. */
		SVAL : TX_Contract:TX_TXN_BASE_PARMS__FIELD_NAME__SVAL
			@t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=7.0, core=true, t24Name=SVAL)
		/* Currently not handled. */
		ASOCFLD : mml:Integer
			@t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=8.0, core=true, t24Name=ASOCFLD)
	}
	TX_TXN_BASE_PARMS__OVERRIDE
	{
		OVERRIDE : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=21.0, core=true, t24Name=OVERRIDE)
	}
	TX_TXN_BASE_PARMS__INPUTTER
	{
		INPUTTER : T24BusinessTypes:A
			@t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=24.0, core=true, t24Name=INPUTTER)
	}
	TX_TXN_BASE_PARMS__DATE_TIME
	{
		DATE_TIME : T24BusinessTypes:RELTIME
			@t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=25.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
	}
}
Enumerations {
	TX_CONDITION__DECISION_FLD__DECISION_FLD__OPERAND : mml:string
		AND=AND
		OR=OR
	TX_CONDITION__DECISION_FLD__MSG_NUMBER__DE_PROCESS : mml:string
		ONLINE=ONLINE
		DELETE=DELETE
		HOLD=HOLD
	TX_CONDITION__SEARCH_TYPE : mml:string
		B=B
		F=F
		M=M
	TX_MAPPING__OUTPUT_STYLE : mml:string
		CSV=CSV
		XML=XML
		GLOBUS=GLOBUS
	TX_MAPPING__SCHEDULE : mml:string
		LAUNCH_AND_WAIT=LAUNCH.AND.WAIT
		LAUNCH_AND_RETURN=LAUNCH.AND.RETURN
	TX_TXN_BASE_PARMS__FIELD_NAME__FIELD_TYPE : mml:string
		TOTAL=TOTAL
		NULL=NULL
	TX_TXN_BASE_PARMS__FIELD_NAME__MVAL : mml:string
		YES=YES
		NO=NO
	TX_TXN_BASE_PARMS__FIELD_NAME__SVAL : mml:string
		YES=YES
		NO=NO
	TX_TXN_BASE_PARMS__REV_ACTION : mml:string
		DELETE=DELETE
		ACTION=ACTION
	TX_TXN_BASE_PARMS__MAINT_HIST : mml:string
		YES=YES
		NO=NO
}