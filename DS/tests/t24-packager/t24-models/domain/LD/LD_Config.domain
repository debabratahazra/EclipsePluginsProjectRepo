# UTF-8
 /* Parameter definitions for Loans and Deposits */ 
 Domain LD_Config 
 @t24:i (module=LD) 
 @java:Package (value=com.temenos.t24.datamodel.ld.ld_config) 
 namespace "http://www.temenos.com/t24/LD_Config" 
 metamodelVersion 4.3.0.20110527 
 Classes { 
 PM_LD_PARAM 
 @t24:i (level=I, type=H, localRefAllowed=false) 
 { 
 PM_LD_PARAM_ID : LD_Config:PM_LD_PARAM__PM_LD_PARAM_ID PK required 
 @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=0.0, t24Name=PM.LD.PARAM.ID) 
 
 DESCRIPTION -> byValue LD_Config:PM_LD_PARAM__DESCRIPTION * 
 
 CATEG_DEP_ST -> byValue LD_Config:PM_LD_PARAM__CATEG_DEP_ST * 
 
 NO_OF_ROWS : LD_Config:PM_LD_PARAM__NO_OF_ROWS required 
 @t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=26.0, t24Name=NO.OF.ROWS) 
 
 GM_DATE_SFX : LD_Config:PM_LD_PARAM__GM_DATE_SFX 
 @t24:i (align=R, inputBehaviour=F, maxLength=1, sysNumber=27.0, t24Name=GM.DATE.SFX) 
 
 SHOW_FWD_INT : LD_Config:PM_LD_PARAM__SHOW_FWD_INT 
 @i18n:Label (en="Show Fwd Int") 
 @i18n:Tooltip (en="Show Forward Interest") 
 @t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=28.0, t24Name=SHOW.FWD.INT) 
 
 PM_MAX_PERIOD : mml:string 
 @i18n:Label (en="Maximum Period") 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=29.0, t24Name=PM.MAX.PERIOD) 
 
 RESERVED2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=30.0, t24Name=RESERVED2) 
 
 OVERRIDE -> byValue LD_Config:PM_LD_PARAM__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=32.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=33.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue LD_Config:PM_LD_PARAM__INPUTTER * 
 
 DATE_TIME -> byValue LD_Config:PM_LD_PARAM__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=36.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=37.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=38.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=39.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=40.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PM_LD_PARAM__DESCRIPTION 
 { 
 DESCRIPTION : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 PM_LD_PARAM__CATEG_DEP_ST 
 { 
 CATEG_DEP_ST : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=6, sysNumber=2.0, t24Name=CATEG.DEP.ST) 
 
 CATEG_DEP_END : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=6, sysNumber=3.0, t24Name=CATEG.DEP.END) 
 
 CATEG_LOAN_ST : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=6, sysNumber=4.0, t24Name=CATEG.LOAN.ST) 
 
 CATEG_LOAN_END : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=6, sysNumber=5.0, t24Name=CATEG.LOAN.END) 
 
 POS_START -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=6.0, t24Name=POS.START) 
 
 POS_MAT_CASH -> PM_Config:PM_POSN_CLASS 
 @t24:i (align=L, inputBehaviour=N, maxLength=5, sysNumber=7.0, t24Name=POS.MAT.CASH) 
 
 POS_MAT_GAP -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=8.0, t24Name=POS.MAT.GAP) 
 
 POS_FWD_FIX_CAP -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=9.0, t24Name=POS.FWD.FIX.CAP) 
 
 POS_FWD_VAR_CAP -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=10.0, t24Name=POS.FWD.VAR.CAP) 
 
 POS_INT_CAP -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=11.0, t24Name=POS.INT.CAP) 
 
 POS_CHARGE_CAP -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=12.0, t24Name=POS.CHARGE.CAP) 
 
 POS_FEE -> PM_Config:PM_POSN_CLASS 
 @t24:i (align=L, inputBehaviour=N, maxLength=5, sysNumber=13.0, t24Name=POS.FEE) 
 
 POS_FWD_COMM -> PM_Config:PM_POSN_CLASS 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=14.0, t24Name=POS.FWD.COMM) 
 
 POS_PPL_INC -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=15.0, t24Name=POS.PPL.INC) 
 
 POS_PPL_DEC_CSH -> PM_Config:PM_POSN_CLASS 
 @t24:i (align=L, inputBehaviour=N, maxLength=5, sysNumber=16.0, t24Name=POS.PPL.DEC.CSH) 
 
 POS_PPL_DEC_GAP -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=17.0, t24Name=POS.PPL.DEC.GAP) 
 
 POS_PRIN_CASH -> PM_Config:PM_POSN_CLASS 
 @t24:i (align=L, inputBehaviour=N, maxLength=5, sysNumber=18.0, t24Name=POS.PRIN.CASH) 
 
 POS_PRIN_GAP -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=19.0, t24Name=POS.PRIN.GAP) 
 
 POS_TAX_PRIN -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=20.0, t24Name=POS.TAX.PRIN) 
 
 POS_TAX_INT -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=21.0, t24Name=POS.TAX.INT) 
 
 POS_TAX_COMM -> PM_Config:PM_POSN_CLASS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=22.0, t24Name=POS.TAX.COMM) 
 
 POS_FWD_FIX_INT -> PM_Config:PM_POSN_CLASS 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=23.0, t24Name=POS.FWD.FIX.INT) 
 
 POS_FWD_VAR_INT -> PM_Config:PM_POSN_CLASS 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=24.0, t24Name=POS.FWD.VAR.INT) 
 
 INT_TYPE_TO_USE : LD_Config:PM_LD_PARAM__CATEG_DEP_ST__INT_TYPE_TO_USE 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=25.0, t24Name=INT.TYPE.TO.USE) 
 } 
 PM_LD_PARAM__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=31.0, t24Name=OVERRIDE) 
 } 
 PM_LD_PARAM__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=34.0, t24Name=INPUTTER) 
 } 
 PM_LD_PARAM__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=35.0, t24Name=DATE.TIME) 
 } 
 /* The user may define the set of rules governing the specific product category of the LD. Within a category, rules may be defined for each currency. These rules are validated at the time of initial input of the deal only.  This table could be used to default the interest rate (or key plus spread) charges and commissions, etc., on to the LD deal.  The table can also be used to control the term and drawdown amount to pre-defined ranges for a specific product category and currency. Should the user input a LD for a term or drawdown amount exceeding the tolerance specified in this table, appropriate overrides are generated at the deal.  If the default values for the respective category are modified at the deal, appropriate overrides are generated.  For Certificate of Deposit (CD) type of products, tolerances for the user-input value either in absolute amount or in percentage formats may also be defined in this table. */ 
 LD_TXN_TYPE_CONDITION 
 @t24:i (level=F, type=H, localRefAllowed=true) 
 { 
 /* The category code in LD that the set of rules in the TXN table governs.  Must be in the range 21001-21039 or 21045-21099 or 21101-21105. Must be a value in the CATEGORY table. */ 
 CATEGORY : mml:string PK required 
 @i18n:Label (en=Category) 
 @i18n:Tooltip (en="Specifies the Category") 
 @t24:i (align=R, inputBehaviour=I, maxLength=6, sysNumber=0.0, t24Name=CATEGORY) 
 
 DESCRIPTION -> byValue LD_Config:LD_TXN_TYPE_CONDITION__DESCRIPTION * 
 
 /* Flag for maturing a LD contract during Start of Day .   If set to YES, maturity entries would be raised during Start of Day process. This rule is applicable for all types of contracts with or without schedules. All scheduled events like principal, interest, commission etc., would be processed during start of day.  Required STMT.ENTRY(s) and CATEG.ENTRY(s) would be generated during start of day. CONSOL.ENT.TODAY records would be raised during SOD for all deal level updations like repayment of principal, capitalisation of interest or liquidation of contract.   If not set to YES, maturity entries would be generated during End of Day process. Value entered in the LD.TXN.TYPE.CONDITION table will be defaulted to the contract, which can be modified at the deal level. Validation Rules O ptional Input field */ 
 MATURE_AT_SOD : LD_Config:LD_TXN_TYPE_CONDITION__MATURE_AT_SOD 
 @i18n:Label (en="Mature at Start Of Day") 
 @i18n:Tooltip (en="Whether to mature at Start Of Day or not") 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=2.0, t24Name=MATURE.AT.SOD) 
 
 CURRENCY -> byValue LD_Config:LD_TXN_TYPE_CONDITION__CURRENCY * 
 
 /* While settling the dues in a LD where liquidation is made in a currency other then the deal currency, the user may input the exchange rate for each scheduled day for each currency (in which dues are repaid) in SETTLEMENT.RATES table. If the bank desires to use a single rate for all liquidations in a specific currency(s), a new currency market may be created in order to define the liquidation rate for each currency.  First a new market has to be created in CURRENCY.MARKET. The default exchange rate that is to be used for settlement is input in the respective currency tables under the specific market chosen. User may input the BUY & SELL rates for all currencies in which settlement may take place on that day. Based on the value in SETTLEMENT.MARKET and CONVERSION.TYPE (which may be BUY/SELL/MID) in the deal, the appropriate rate is used for conversion purposes during EOD. If the user has input a rate in EV.APPL.RATE in SETTLEMENT.RATES table for a particular deal, then this rate is considered for conversion. Should there be no input in EV.APPL.RATE for the deal for the scheduled date, the rate in the CURRENCY table for the CURRENCY.MARKET and CONVERSION.TYPE defined in the deal is used for conversion. Eg. The bank desires to have a single conversion rate for all GBP loan dues that are settled in USD. In this case single input of exchange rate in the currency table for the relevant market and conversion type would suffice. If the rate that is to be applied to a particular deal is different, respective rate may be defined in EV.APPL.RATE. The value input here would be defaulted at the deal level for the relevant category. Validation Rules 2 numeric characters. Code     must be in the range 1-99.  Must be a valid value on the     CURENCY.MARKET table. */ 
 SETTLEMENT_MARKET -> FIN_CurrencyConfig:CURRENCY_MARKET 
 @t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=23.0, t24Name=SETTLEMENT.MARKET) 
 
 /* The conversion type, BUY, SELL or MID that is to be used. Associated with field SETTLEMENT.MARKET. Default conversion type that is to be used if no input is made in EV.APPL.RATE is input in SETTLEMENT.RATES table for the deal. The value input here would be defaulted in the deal for the relevant category. Validation Rules 4     character alpha character. Allowed values are only BUY, SELL or MID */ 
 CONVERSION_TYPE : LD_Config:LD_TXN_TYPE_CONDITION__CONVERSION_TYPE 
 @t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=24.0, t24Name=CONVERSION.TYPE) 
 
 /* This field will hold Product level EB.ACCRUAL.PARAM.ID for the interest / commission / accrual calculations.  Based on the definition of this field a contract can be configured to do the following,  Include first day of the interest period and exclude the last of the interest period Exclude the first day of the interest period and include the last of the interest period. Include both first (only value date) and last day of accrual period.  Adjust the principal increase and decrease effective dates for interest calculation and accrual calculation purposes. */ 
 ACCRUAL_PARAM -> AC_Fees:EB_ACCRUAL_PARAM 
 @i18n:Label (en="Interest Accrual Method") 
 @i18n:Tooltip (en="Method by which interest accrual is processed") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=26.0, t24Name=ACCRUAL.PARAM) 
 
 /* This field indicates the interest frequency for generation of interest schedules. The value input here will be defaulted to the INTEREST.DUE.DATE field in LD contracts (at input stage) for categories that have records in LD.TXN.TYPE.CONDITION.  The values that will be accepted by this field are:  D/DAILY: to specify daily schedules. In the LD contract this would be defaulted to show a daily frequency starting from the day after the value date of the contract.  Wn / WEEKn : to specify weekly schedules starting n weeks from the value date of the contract. For example if the input is W1, for a contract dated February 14, 2002, the interest frequency would be on a weekly basis beginning February 21, 2002.  Mxxnn: to specify monthly schedules every xx months on nn date of the month. For example if the input is M0315, for a contract value dated February 14, 2002, the first schedule generated would be on February 15,2002, the next schedule on May 15, 2002 and so on. It is also possible to simply specify the no. of months in the frequency without specifying the date component. In the above example, if the input was M03, the first interest schedule will start 3 months from the value date of the contract on the anniversary of the value date of the contract. For example, for a contract input on February 14, 2002, the next interest due date will be on May 14, 2002. BSNSS : this will generate interest schedules on every business day. Apart from the above, the records specified in EB.FREQUENCY application can also be input in this field. */ 
 INTEREST_FREQ : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=27.0, t24Name=INTEREST.FREQ) 
 
 /* This field indicates the method which will be followed for the generation of interest and commission schedules. The value input here is defaulted to the FWD.BWD.KEY field in LD records (at input stage)  for categories that have records in LD.TXN.TYPE.CONDITION.   The following provides an explanation of the various input values for this field:  If the derived day is a non working day the system response will be:  FWD = forward The system will go forward to the next working day.  BWD = backward The system will go backward to the last working day.  FSM = forward same month The system will go forward to the next working day provided it is within the same month. If it is not within the same month the system will go backward to the last working day.  CAL = Calendar The system will use the same date irrespective of whether dates cycled are working days or not.  Validation Rules */ 
 FWD_BWD_KEY : LD_Config:LD_TXN_TYPE_CONDITION__FWD_BWD_KEY 
 @i18n:Label (en="Forward Backward Key") 
 @i18n:Tooltip (en="Indicates the forward backward key") 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=28.0, t24Name=FWD.BWD.KEY) 
 
 /* This field provides the user with the option to specify the basis under which subsequent event dates will be derived for interest and commission schedules. The value input in this field will be defaulted to the BASE.DATE.KEY field in LD records (at input stage)   for categories that have records in LD.TXN.TYPE.CONDITION.  The values that can be input are : Base : The system will use the first scheduled date entered to compute the subsequent event date(s).  Prev : The system will use the last computed schedule date in order to compute the subsequent event date.  Validation Rules Input     allowed should be either BASE or PREV */ 
 BASE_DATE_KEY : LD_Config:LD_TXN_TYPE_CONDITION__BASE_DATE_KEY 
 @i18n:Label (en="Base Date Key") 
 @i18n:Tooltip (en="Method by which schedule dates to be cycled") 
 @t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=29.0, t24Name=BASE.DATE.KEY) 
 
 /* Field indicates the commission frequency for generation of commission schedules. The value input here will be defaulted to the COMM.DUE.DATE field in LD contracts (at input stage) for categories that have records in LD.TXN.TYPE.CONDITION Validation rules: The values that will be accepted by this field are:      1. D/DAILY: to specify daily schedules. In the LD contract this would be defaulted to show a daily frequency starting from the day after the value date of the contract.      2.  Wn / WEEKn : to specify weekly schedules starting n weeks from the value date of the contract.     3. Mxxnn: to specify monthly schedules every xx months on nn date of the month.        4. BSNSS : this will generate interest schedules on every business day. */ 
 COMMISSION_FREQ : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=30.0, t24Name=COMMISSION.FREQ) 
 
 /* This field will hold Product level rounding rule for interest, commission, charge and fee calculations.  Validation Rules Should be a valid EB.ROUNDING.RULE id.  No change permitted after first authorization.   For detailed options on different rounding options help text on EB.ROUNDING.RULE file can be referred. */ 
 ROUNDING_RULE -> EB_SystemTables:EB_ROUNDING_RULE 
 @i18n:Label (en="Rounding Rule") 
 @i18n:Tooltip (en="Indicates the rounding rule") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=31.0, t24Name=ROUNDING.RULE) 
 
 RESERVED5 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=32.0, t24Name=RESERVED5) 
 
 RESERVED4 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=33.0, t24Name=RESERVED4) 
 
 RESERVED3 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=34.0, t24Name=RESERVED3) 
 
 RESERVED2 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=35.0, t24Name=RESERVED2) 
 
 RESERVED1 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=36.0, t24Name=RESERVED1) 
 
 OVERRIDE -> byValue LD_Config:LD_TXN_TYPE_CONDITION__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=38.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=39.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue LD_Config:LD_TXN_TYPE_CONDITION__INPUTTER * 
 
 DATE_TIME -> byValue LD_Config:LD_TXN_TYPE_CONDITION__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=42.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=43.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=44.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=45.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=46.0, t24Name=AUDIT.DATE.TIME) 
 } 
 LD_TXN_TYPE_CONDITION__DESCRIPTION 
 { 
 /* Free text description for the set of rules that are defined. Validation Rules Mandatory input 5-35 alphanumeric characters */ 
 DESCRIPTION : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 LD_TXN_TYPE_CONDITION__CURRENCY 
 { 
 /* Indicates the currency for which the set of rules is defined.  Different set of rules can be defined for different currencies, by multi-valuing this field. Mandatory input if any rules under it are defined. Validation Rules 3     alpha currency mnemonic or 1-3 numeric currency code. The     currency code or the mnemonic must exist on the currency table */ 
 CURRENCY -> FIN_CurrencyConfig:CURRENCY 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=3.0, t24Name=CURRENCY) 
 
 /* Default interest rate for the LD category The rate to be defaulted to the INTEREST.RATE field in LD for interest computation of loans and deposits contracts and commitment fee calculation for commitment contracts. Validation Rules 1-10     numeric characters plus a decimal point.  Input     must be positive value. Value cannot exceed 100. Optional     Input. Either Interest rate or Interest Key plus spread can be input */ 
 INTEREST_RATE : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=12, sysNumber=4.0, t24Name=INTEREST.RATE) 
 
 /* Reference number of the appropriate key that will be used for interest computation. The key should be present in the BASIC.RATE.TEXT table and value should be present for the respective currency in the BASIC.INTEREST table. Validation Rules 1-4     numeric characters Must     be present in BASIC.RATE.TEXT table Optional     Input. Either Interest rate or Interest Key plus spread can be input */ 
 INTEREST_KEY -> ST_RateParameters:BASIC_RATE_TEXT 
 @t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=5.0, t24Name=INTEREST.KEY) 
 
 /* Default interest spread (margin) to be added/subtracted from the rate defined in the associated interest key.For contracts with the category code of this LD.TXN.TYPE.CONDITION this spread will be used to default the end user rate. For loan type contracts this would normally be a spread added to the floating rate; for deposits it would normally be a deduction. Note the end user spread can also be affected by values in the LD.GROUP.CONDITION where a further override/default of the spread can be defined by group.Example Base Rate 10%In record 21050 INTEREST.SPREAD = 1.00 therefore defaulted spread would be 11% (10% + 1%)In record 21030 INTEREST.SPREAD = -0.5 therefore defaulted spread would be 9.5% (10% - 0.5%)See LD.GROUP.CONDITION for additional examplesValidation RulesOptional InputAllowed for input only if INTEREST.KEY is inputCannot be greater than 100. Negative values allowed but cannot exceed -100 */ 
 INTEREST_SPREAD : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=12, sysNumber=6.0, t24Name=INTEREST.SPREAD) 
 
 /* Maximum amount that is allowed to be drawn down (Principal Amount) under the respective category and currency.  Any amount drawn down in the LD deal in excess of this amount will bring an override.  Validation Rules Standard     T24 Amount format  1-14     numeric characters plus a decimal point Value     must be greater than zero Optional     Input Either     MAX.INIT.AMT or MIN.INIT.AMT alone can also be defined if so required. */ 
 MAX_INIT_AMT : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=7.0, t24Name=MAX.INIT.AMT) 
 
 /* Minimum amount that is to be drawn down (Principal Amount) for the respective category and currency.  Any amount drawn down in LD less than the value in this field will bring an override Validation Rules Standard     T24 Amount format 1-14     numeric characters plus a decimal point Value     must be greater than zero Either     MAX.INIT.AMT or MIN.INIT.AMT alone can also be defined if so required. */ 
 MIN_INIT_AMT : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=8.0, t24Name=MIN.INIT.AMT) 
 
 CHARGE_CODE -> byValue LD_Config:LD_TXN_TYPE_CONDITION__CURRENCY__CHARGE_CODE * 
 } 
 LD_TXN_TYPE_CONDITION__CURRENCY__CHARGE_CODE 
 { 
 /* Represents a reference on the LMM.CHARGE.CONDITIONS table that holds the P&L category code where the charge amount will be taken.  Multi-value set in order to default as many charge codes as desired Optional Input  Validation Rules 1-3     numeric characters. Optional Input Must     be a valid code on the LMM.CHARGE.CONDITIONS */ 
 CHARGE_CODE -> LM_Fees:LMM_CHARGE_CONDITIONS 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=9.0, t24Name=CHARGE.CODE) 
 
 /* Default commission rate to be taken for the category and currency. This rate is used for commission computation on LD. Optional Input Validation Rules 1-10     numeric characters plus a decimal point Must     be greater than zero Override     will be given if value is greater than 100 */ 
 COMM_RATE : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=10.0, t24Name=COMM.RATE) 
 
 /* Maximum term for which the LD contracts can be input for the respective category and currency. Term can be defined either in number of days or months or years in the following manner XXX - where X is a positive number - upto 999 days XXM - expressed in number of months - upto 99M XXY - expressed in number of years - upto 99 Y The MAX.TERM and MIN.TERM should be of compatible types. That is, both values should be given in the same units of either days or months or years.  If the underlying LD were input for a term exceeding this value an override would be generated.   Validation for Max and Min term is done only for fixed maturity date contracts and not for Call or Notice type contracts. Optional Input. Either MAX.TERM or MIN.TERM alone can also be defined, if so required. Validation Rules MAX.TERM cannot be less than     MIN.TERM */ 
 MAX_TERM : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=11.0, t24Name=MAX.TERM) 
 
 /* Minimum term for which the LD contracts can be input for respective category and currency.  Term can be defined either in number of days or months or years in the following manner XXX - where X is a positive number - upto 999 days XXM - expressed in number of months - upto 99M XXY - expressed in number of years - upto 99 Y The MAX.TERM and MIN.TERM should be of compatible types. That is, both values should be given in the same units of either days or months or years.  If the underlying LD were input for a term lower than this value an override would be generated.   Validation of Max and Min terms are done only for fixed maturity date contracts and not for Call or Notice type contracts. Optional Input. Either MAX.TERM or MIN.TERM alone can also be defined, if so required. Validation Rules MAX.TERM cannot be less than     MIN.TERM */ 
 MIN_TERM : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=12.0, t24Name=MIN.TERM) 
 
 /* Tolerance in absolute amount on the SYSTEM calculated amount when MAT.AMOUNT is input in LD. This field has specific significance to Certificate of deposit type of product, where the user inputs the final maturity amount. Where a card rate is available, the user may input the initial investment (AMOUNT field in LD) as well as the final maturity amount (MAT.AMOUNT in LD). If the user-input value in the AMOUNT field is different from the amount calculated by the SYSTEM an override is provided.  In order to protect typographical errors in such input, maximum tolerance in absolute amount may be specified in this field. If the system calculated amount plus the tolerance in this field is less than the value input by the user in the AMOUNT field an error will be displayed and the deal cannot be put through. Such comparison is done and error shown only if MAT.AMOUNT is input in the LD. For a standard loan or deposit (where no input is made in MAT.AMOUNT) the tolerance is this field is added to the MAX.INIT.AMT to decide the maximum AMOUNT that can be drawn down in the LD. Standard T24 Amount format  Validation Rules  1-14     numeric characters plus a decimal point Value     must be greater than zero Optional     Input. Input allowed only if MAX.INIT.AMT is input. Either     set of fields MAX.PR.AMT.TOL & MIN.PR.AMT.TOL or set of fields     MAX.PR.PER.TOL & MIN.PR.PER.TOL may be input. Either     MAX.PR.AMT.TOL or MIN.PR.AMT.TOL can alone be defined if so required */ 
 MAX_PR_AMT_TOL : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=13.0, t24Name=MAX.PR.AMT.TOL) 
 
 /* Tolerance in absolute amount on the SYSTEM calculated amount when MAT.AMOUNT is input in LD. This field has specific significance to Certificate of deposit type of product, where the user inputs the final maturity amount. Where a card rate is available, the user may input the initial investment (AMOUNT field in LD) as well as the final maturity amount (MAT.AMOUNT in LD). If the user-input value in the AMOUNT field is different from the amount calculated by the SYSTEM an override is provided.  In order to protect typographical errors in such input, minimum tolerance in absolute amount may be specified in this field. If the system calculated amount less the tolerance in this field is more than the value input by the user in the AMOUNT field an error will be displayed and the deal cannot be put through. Such comparison is done and error shown only if MAT.AMOUNT is input in the LD. For a standard loan or deposit (where no input is made in MAT.AMOUNT) the tolerance is this field is reduced from the MAX.INIT.AMT to decide the minimum AMOUNT that can be drawn down in the LD. Standard T24 Amount format  Validation Rules  1-14     numeric characters plus a decimal point Value     must be greater than zero MIN.PR.AMT.TOL     cannot be greater than MIN.INIT.AMT Optional     Input. Input allowed only if MIN.INIT.AMT is input. Either     set of fields MAX.PR.AMT.TOL & MIN.PR.AMT.TOL or set of fields     MAX.PR.PER.TOL & MIN.PR.PER.TOL may be input. Either     MAX.PR.AMT.TOL or MIN.PR.AMT.TOL can alone be defined if so required */ 
 MIN_PR_AMT_TOL : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=14.0, t24Name=MIN.PR.AMT.TOL) 
 
 /* Tolerance in percentage formats on the SYSTEM calculated amount when MAT.AMOUNT is input in LD. This field has specific significance to Certificate of deposit type of product, where the user inputs the final maturity amount. Where a card rate is available, the user may input the initial investment (AMOUNT field in LD) as well as the final maturity amount (MAT.AMOUNT in LD). If the user input value in the AMOUNT field is different from the amount calculated by the SYSTEM an override is provided.  In order to protect typographical errors in such input, maximum tolerance in percentage formats may be specified in this field. If the system calculated amount plus the tolerance in this field is less than the value input by the user in the AMOUNT field an error will be displayed and the deal cannot be put through. Such comparison is done and error shown only if MAT.AMOUNT is input in the LD. For a standard loan or deposit (where no input is made in MAT.AMOUNT) the tolerance is this field is added to the MAX.INIT.AMT to decide the maximum AMOUNT that can be drawn down in the LD. Standard T24 percentage field Validation Rules Cannot     be greater than 100. Negative values not allowed. Optional     Input. Input allowed only if MAX.INIT.AMT is input.  Either     set of fields MAX.PR.AMT.TOL & MIN.PR.AMT.TOL or set of fields     MAX.PR.PER.TOL & MIN.PR.PER.TOL may be input. Either     MAX.PR.PER.TOL or MIN.PR.PER.TOL can alone be input if so required */ 
 MAX_PR_PER_TOL : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=15.0, t24Name=MAX.PR.PER.TOL) 
 
 /* Tolerance in absolute amount on the SYSTEM calculated amount when MAT.AMOUNT is input in LD. This field has specific significance to Certificate of deposit type of product, where the user inputs the final maturity amount. Where a card rate is available, the user may input the initial investment (AMOUNT field in LD) as well as the final maturity amount (MAT.AMOUNT in LD). If the user input value in the AMOUNT field is different from the amount calculated by the SYSTEM an override is provided.  In order to protect typographical errors in such input, minimum tolerance in percentage formats may be specified in this field. If the system calculated amount less the tolerance in this field is more than the value input by the user in the AMOUNT field an error will be displayed and the deal cannot be put through. Such comparison is done and error shown only if MAT.AMOUNT is input in the LD. For a standard loan or deposit (where no input is made in MAT.AMOUNT) the tolerance is this field is added to the MAX.INIT.AMT to decide the maximum AMOUNT that can be drawn down in the LD. Standard T24 percentage field Validation Rules Cannot     be greater than 100. Negative values not allowed. Optional     Input. Input allowed only if MIN.INIT.AMT is input.  Either     set of fields MAX.PR.AMT.TOL & MIN.PR.AMT.TOL or set of fields     MAX.PR.PER.TOL & MIN.PR.PER.TOL may be input. Either     MAX.PR.PER.TOL or MIN.PR.PER.TOL can alone be input if so required */ 
 MIN_PR_PER_TOL : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=16.0, t24Name=MIN.PR.PER.TOL) 
 
 /* This field holds the classification of contract based on IFRS standard.Input allowed only for Loans and Deposits */ 
 IAS_CLASSIFICATION -> IA_Config:IAS_CLASSIFICATION 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=17.0, t24Name=IAS.CLASSIFICATION) 
 
 /* This field holds the Sub type  for the corresponding classification defined in IAS.CLASSIFICATION field. */ 
 IAS_SUBTYPE : LD_Config:LD_TXN_TYPE_CONDITION__CURRENCY__CHARGE_CODE__IAS_SUBTYPE 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=18.0, t24Name=IAS.SUBTYPE) 
 
 /* Market rate information to calculate the EIR. It can either be a fixed rate or PERIODIC.INTEREST  key with prefix P. */ 
 MARKET_KEY : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=19.0, t24Name=MARKET.KEY) 
 
 /* Margin to calculate the EIR based on cashflow information. It can be either positive or negative  value */ 
 MARKET_MARGIN : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=12, sysNumber=20.0, t24Name=MARKET.MARGIN) 
 
 /* Field to specify the number of compounding periods per year. It can hold values DAILY, WEEKn, Mnn or Nnn. This field is used to default the compounding frequency in LD.LOANS.AND.DEPOSITS based on the product category and currency. */ 
 COMPOUND_TYPE : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=21.0, t24Name=COMPOUND.TYPE) 
 
 /* Field to indicate the Daily compounding method. The field can hold values YIELD or Null. This field is used to default the daily compounding method in LD.LOANS.AND.DEPOSITS. Validation Rules Value can be set to YIELD only when the COMPOUND.TYPE is DAILY. */ 
 COMPOUND_YIELD_METHOD : LD_Config:LD_TXN_TYPE_CONDITION__CURRENCY__CHARGE_CODE__COMPOUND_YIELD_METHOD 
 @t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=22.0, t24Name=COMPOUND.YIELD.METHOD) 
 } 
 LD_TXN_TYPE_CONDITION__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=37.0, t24Name=OVERRIDE) 
 } 
 LD_TXN_TYPE_CONDITION__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=40.0, t24Name=INPUTTER) 
 } 
 LD_TXN_TYPE_CONDITION__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=41.0, t24Name=DATE.TIME) 
 } 
 LD_TXN_CODES 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 /* Key to this application. Only SYSTEM is allowed */ 
 ID : LD_Config:LD_TXN_CODES__ID PK required 
 @i18n:Label (en="Transaction Ref") 
 @i18n:Tooltip (en="Transaction Reference") 
 @t24:i (align=R, inputBehaviour=I, maxLength=6, sysNumber=0.0, t24Name=ID) 
 
 /* Transaction code used for statement entry when a deposit is placed.Validation Rules
        Should be a valid entry in the TRANSACTION table */ 
 OPEN_DEPOSIT -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=1.0, t24Name=OPEN.DEPOSIT) 
 
 /* Transaction code used for statement entry when a loan is given.Validation Rules
        Should be a valid entry in the TRANSACTION table */ 
 OPEN_LOAN -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=2.0, t24Name=OPEN.LOAN) 
 
 /* Transaction code used for statement entry when a placement is made.Validation Rules
        Should be a valid entry in the TRANSACTION table.. */ 
 OPEN_PLACEMENT -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=3.0, t24Name=OPEN.PLACEMENT) 
 
 /* Transaction code used for statement entry when an account receivable type loan is givenValidation Rules
        Should be a valid entry in the TRANSACTION file */ 
 OPEN_ACC_REC -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=4.0, t24Name=OPEN.ACC.REC) 
 
 /* Transaction code used for statement entry when a sundry deposit is placedValidation Rules
        Should be a valid entry in the TRANSACTION table. */ 
 OPEN_SUNDRY -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=5.0, t24Name=OPEN.SUNDRY) 
 
 /* Reserved for future use. */ 
 OPEN_COMMT -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=6.0, t24Name=OPEN.COMMT) 
 
 /* Transaction code for statement entry when a principal increase is done on a contract.Validation Rules
        Should be a valid entry in the TRANSACTION table. */ 
 PRIN_INCREASE -> ST_Config:TRANSACTION 
 @i18n:Label (en="Principal Increase") 
 @i18n:Tooltip (en="Indicates the increase / decrease in principal") 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=7.0, t24Name=PRIN.INCREASE) 
 
 /* Reserved for future use. */ 
 OPEN_LIAB_COMMT -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=8.0, t24Name=OPEN.LIAB.COMMT) 
 
 /* Transaction code for statement entry when principal is repaid on a loan or deposit contract.Validation Rules
        Should be a valid entry in TRANSACTION table. */ 
 PRIN_REPAYMENT -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=9.0, t24Name=PRIN.REPAYMENT) 
 
 /* Transaction code for statement entry when interest is paid on a deposit contract.Validation Rules
        Should be a valid entry in TRANSACTION table. */ 
 INT_PAY -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=10.0, t24Name=INT.PAY) 
 
 /* Transaction code for statement entry when commission is paid on a contract.Validation Rules
        Should be a valid entry in the TRANSACTION table. */ 
 COM_PAY -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=11.0, t24Name=COM.PAY) 
 
 /* Transaction code used for statement entry when commission is received on a contract.Validation Rules
        Should be a valid entry in TRANSACTION table. */ 
 COM_REC -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=12.0, t24Name=COM.REC) 
 
 /* Transaction code used for the category entry when a charge is capitalised (added to the principal amount)Validation Rules
        Should be a valid entry in the TRANSACTION table. */ 
 CAP_CHG -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=13.0, t24Name=CAP.CHG) 
 
 /* Transaction code used for statement entry when interest is received on a loan contract.Validation Rules
        Should be a valid entry in the TRANSACTION table. */ 
 INT_REC -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=14.0, t24Name=INT.REC) 
 
 /* Reserved for future use. */ 
 COM_ADJ -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=15.0, t24Name=COM.ADJ) 
 
 /* Reserved for future use. */ 
 INT_ADJ -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=16.0, t24Name=INT.ADJ) 
 
 /* Transaction code for category entry when interest is accrued on a contract.Validation Rules
        Should be a valid entry in TRANSACTION file. */ 
 INT_ACCRUAL -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=17.0, t24Name=INT.ACCRUAL) 
 
 /* Transaction code for category entry when commission is accrued on a contract.Validation Rules
        Should be a valid entry in the TRANSACTION table. */ 
 COM_ACCRUAL -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=18.0, t24Name=COM.ACCRUAL) 
 
 /* Transaction code for statement entry when a principal decrease is effected in a contract.Validation Rules
        Should be a valid entry in TRANSACTION code. */ 
 PRIN_DECREASE -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=19.0, t24Name=PRIN.DECREASE) 
 
 /* Transaction code for statement entry when charge is received on a contract.Validation Rules
        Should be a valid entry in TRANSACTION table. */ 
 CHRG_REC -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=20.0, t24Name=CHRG.REC) 
 
 /* Transaction code used for statement entry when a charge is paid in a contract.Validation Rules
        Should be a valid entry in TRANSACTION table. */ 
 CHRG_PAY -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=21.0, t24Name=CHRG.PAY) 
 
 /* Transaction code for statement entry when a deposit contract is reversed.Validation Rules
        Should be a valid entry in TRANSACTION file. */ 
 REVERSAL_DEPOSIT -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=22.0, t24Name=REVERSAL.DEPOSIT) 
 
 /* Transaction code for statement entry when a loan contract is reversed.Validation Rules
        Should be a valid entry in TRANSACTION table. */ 
 REVERSAL_LOAN -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=23.0, t24Name=REVERSAL.LOAN) 
 
 /* Transaction code for statement entry when a placement contract is reversed.Validation Rules
        Should be a valid entry in TRANSACTION file. */ 
 REVERSAL_PLACEMENT -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=24.0, t24Name=REVERSAL.PLACEMENT) 
 
 /* Transaction code for reversal of Account Receivable type loan.Validation Rules
        Should be a valid entry in TRANSACTION file. */ 
 REV_ACC_REC -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=25.0, t24Name=REV.ACC.REC) 
 
 /* Transaction entry for reversal of Sundry Deposit type loan contract.Validation Rules
        Should be valid entry in TRANSACTION table. */ 
 REVERSAL_SUNDRY -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=26.0, t24Name=REVERSAL.SUNDRY) 
 
 /* Reserved for future use. */ 
 REVERSAL_COMMT -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=27.0, t24Name=REVERSAL.COMMT) 
 
 /* Reserved for future use. */ 
 REV_LIAB_COMMT -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=28.0, t24Name=REV.LIAB.COMMT) 
 
 /* Transaction code for statement entry when customer's account is debited for tax.Validation Rules
        Should be a valid entry in TRANSACTION table. */ 
 TAX_DEB -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=29.0, t24Name=TAX.DEB) 
 
 RESERVED_10 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=31.0, t24Name=RESERVED.10) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=32.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=33.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=34.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=35.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=36.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=37.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=38.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=39.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=40.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue LD_Config:LD_TXN_CODES__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=42.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=43.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue LD_Config:LD_TXN_CODES__INPUTTER * 
 
 DATE_TIME -> byValue LD_Config:LD_TXN_CODES__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=46.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=47.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=48.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=49.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=50.0, t24Name=AUDIT.DATE.TIME) 
 } 
 LD_TXN_CODES__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=0, sysNumber=41.0, t24Name=OVERRIDE) 
 } 
 LD_TXN_CODES__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=44.0, t24Name=INPUTTER) 
 } 
 LD_TXN_CODES__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=45.0, t24Name=DATE.TIME) 
 } 
 LD_PARTICIPANT 
 @t24:i (level=F, type=T, localRefAllowed=false) 
 { 
 /* Standard T24 customer field. Validation RulesA maximum of 10 characters may be entered. */ 
 PARTICIPANT_NO : mml:string PK required 
 @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=0.0, t24Name=PARTICIPANT.NO) 
 
 /* Standard T24 alphanumeric field. Validation RulesA maximum of 14 characters may be entered. */ 
 CONTRACT_NO : mml:string 
 @i18n:Label (en="Contract No") 
 @t24:i (align=L, inputBehaviour=I, maxLength=14, sysNumber=1.0, t24Name=CONTRACT.NO) 
 } 
 LD_GRP_CONDN_CHANGE 
 @t24:i (level=F, type=L, localRefAllowed=false) 
 { 
 GROUP_ID : mml:string PK required 
 @i18n:Label (en="Group Id") 
 @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=0.0, t24Name=GROUP.ID) 
 
 NEW_SPREAD_LOAN : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=3, sysNumber=1.0, t24Name=NEW.SPREAD.LOAN) 
 
 OLD_SPREAD_LOAN : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=3, sysNumber=2.0, t24Name=OLD.SPREAD.LOAN) 
 
 NEW_SPREAD_DEP : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=3, sysNumber=3.0, t24Name=NEW.SPREAD.DEP) 
 
 OLD_SPREAD_DEP : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=3, sysNumber=4.0, t24Name=OLD.SPREAD.DEP) 
 
 SPREAD_CHANGE_DATE : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=5.0, t24Name=SPREAD.CHANGE.DATE) 
 } 
 /* It is possible to stipulate customer/ customer-group specific conditions When inputting an LD contract where the customer (or customer group) has an entry in the LD.GROUP.CONDITION application and if the category input has been defined in LD.TXN.TYPE.CONDITION application, then entering individual values for interest, commission and charges becomes redundant as the system will default these values making use of the entries in LD.TXN.TYPE.CONDITION and LD.GROUP.CONDITION. The user, may however, wish to input values at the deal level, by overriding the default values. */ 
 LD_GROUP_CONDITION 
 @t24:i (level=C, type=H, localRefAllowed=false) 
 { 
 /* Indicates the customer group or individual customer for whom customerlevel spread and charge stipulations are being made. Validations For     customer groups, the group should first have been defined in     APPL.GEN.CONDITION For     individual customers, the ID should be the customer number preceded by C- */ 
 GROUP_ID : mml:string PK required 
 @i18n:Label (en="Group Id") 
 @t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=0.0, t24Name=GROUP.ID) 
 
 /* Default spread to be applied to loan type contracts for a specific customer or group. The value can be positive or negative as this value can be used to increase or decrease the end user rate.In usage the bank may wish to set a floating rate record to be the generally available rate for customer loans and use the values here to soften the rates by deducting a small amount, thereby reducing the rate to the user. However, it is just as valid to use the standard rate record as the base rate and add a spread to this to provide client rates.Whichever is used the system will work out the end spread as follows:BASIC.INTEREST + LD.TXN.TYPE.CONDITION(INTEREST.SPREAD) + LD.GROUP.CONDITION(INT.SPREAD.LOAN)Example 1: Say in LD.TXN.TYPE.CONDITION the category 21050 stipulates an interest key for all USD contracts. This key corresponds to a rate of 5% in the BASIC.INTEREST table. If a particular group (say GRPA) has an entry of 0.5 in the INT.SPREAD.LOAN field in LD.GROUP.CONDITION, this would mean that a USD loan taken by a customer falling in GRPA would be at a defaulted rate of 5.5% (5% +0.5%).Example 2: Say in LD.TXN.TYPE.CONDITION the category 21051 stipulates an interest key for all USD contracts and a spread of 0.75%. This key corresponds to a rate of 5% in the BASIC.INTEREST table so general loans are going to get 5.75% interest. If a particular group (say GRPB) has an entry of -0.5 in the INT.SPREAD.LOAN field in LD.GROUP.CONDITION, this would mean that a USD loan given to a customer falling in GRPA would be at a defaulted rate of 5.25% (5% +0.75% -0.5%), thereby getting a lower rate than the general loans.Validation RulesOptional InputCannot be greater than 100. Negative values allowed but cannot exceed -100 */ 
 INT_SPREAD_LOAN : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=12, sysNumber=1.0, t24Name=INT.SPREAD.LOAN) 
 
 /* Default spread to be applied to deposit type contracts for a specific customer or group. The value can be positive or negative as this value can be used to increase or decrease the end user rate.In usage the bank may wish to set a floating rate record to be the generally available rate for customer deposits and use the values here to soften the rates by adding a premium, thereby increasing the rate to the user. However, it is just as valid to use the standard rate record as the base rate and deduct a spread from this to provide client rates.Whichever is used the system will work out the end spread as follows:BASIC.INTEREST + LD.TXN.TYPE.CONDITION(INTEREST.SPREAD) + LD.GROUP.CONDITION(INT.SPREAD.DEP)Example 1: Say in LD.TXN.TYPE.CONDITION the category 21006 stipulates an interest key for all USD contracts. This key corresponds to a rate of 5% in the BASIC.INTEREST table. If a particular group (say GRPA) has an entry of 0.5 in the INT.SPREAD.DEP field in LD.GROUP.CONDITION, this would mean that a USD deposit taken from a customer falling in GRPA would be at a defaulted rate of 5.5% (5%+0.5%).Example 2: Say in LD.TXN.TYPE.CONDITION the category 21005 stipulates an interest key for all USD contracts and a negative spread of 0.75%. This key corresponds to a rate of 5% in the BASIC.INTEREST table so general deposits are going to get 4.25% interest. If a particular group (say GRPB) has an entry of 0.5 in the INT.SPREAD.DEP field in LD.GROUP.CONDITION, this would mean that a USD deposit taken from a customer falling in GRPA would be at a defaulted rate of 4.75% (5% -0.75% +0.5%), thereby getting a better rate than the general deposits.Validation RulesOptional InputCannot be greater than 100. Negative values allowed but cannot exceed -100 */ 
 INT_SPREAD_DEP : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=12, sysNumber=2.0, t24Name=INT.SPREAD.DEP) 
 
 /* Entries in this field can be YES or Example: Say, in LD.TXN.TYPE.CONDITION the category 21065 stipulates a fixed interest of 8% on all USD contracts. If a particular group (say GRPA) has an entry of 2 in the INT.SPREAD.LOAN in LD.GROUP.CONDITION, this would mean that a USD loan to a customer falling in GRPA would be at a defaulted rate of 6% (8%-2%). The same would apply for deposit contracts also. */ 
 FIXED_CONTRACT : LD_Config:LD_GROUP_CONDITION__FIXED_CONTRACT 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=3.0, t24Name=FIXED.CONTRACT) 
 
 /* This NOINPUT field is currently not used. */ 
 EXCHANGE_SPREAD : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=4.0, t24Name=EXCHANGE.SPREAD) 
 
 CHARGE_TYPE -> byValue LD_Config:LD_GROUP_CONDITION__CHARGE_TYPE * 
 
 /* Inputs in this field can be YES or NO. If set to '"YES", it would mean that any changes in the INT.SPREAD.LOAN or INT.SPREAD.DEP fields would be applicable to the customer/customer-group specified in the ID, for existing floating rate contract. Validation For     this field to be changed from NO to YES, a change should first     be made in the INT.SPREAD.LOAN or INT.SPREAD.DEP field. */ 
 APPLY_CURR_LOANS : LD_Config:LD_GROUP_CONDITION__APPLY_CURR_LOANS 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=9.0, t24Name=APPLY.CURR.LOANS) 
 
 RESERVED6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=10.0, t24Name=RESERVED6) 
 
 RESERVED5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=11.0, t24Name=RESERVED5) 
 
 RESERVED4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=12.0, t24Name=RESERVED4) 
 
 RESERVED3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=13.0, t24Name=RESERVED3) 
 
 RESERVED2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=14.0, t24Name=RESERVED2) 
 
 RESERVED1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=55, sysNumber=15.0, t24Name=RESERVED1) 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=16.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=17.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue LD_Config:LD_GROUP_CONDITION__INPUTTER * 
 
 DATE_TIME -> byValue LD_Config:LD_GROUP_CONDITION__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=20.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=21.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=22.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=23.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=24.0, t24Name=AUDIT.DATE.TIME) 
 } 
 LD_GROUP_CONDITION__CHARGE_TYPE 
 { 
 /* Forms part of the associated multi-value set CHARGE.TYPE to CHRG.FLT.AMT. Input in this field must be an entry in the LMM.CHARGE.CONDITIONS application. Validation Must be */ 
 CHARGE_TYPE -> LM_Fees:LMM_CHARGE_CONDITIONS 
 @t24:i (align=R, inputBehaviour=I, maxLength=5, sysNumber=5.0, t24Name=CHARGE.TYPE) 
 
 CHARGE_CCY -> byValue LD_Config:LD_GROUP_CONDITION__CHARGE_TYPE__CHARGE_CCY * 
 } 
 LD_GROUP_CONDITION__CHARGE_TYPE__CHARGE_CCY 
 { 
 /* Forms part of an associated sub-value set from CHARGE.CCY to CHARGE.FLT.AMT. For every CHARGE.TYPE specified it is possible to stipulate the various currencies for which the charge would be applicable.  Validation Input     in this field must be a valid entry in the CURRENCY table If     the CHARGE.TYPE is linked to an entry in FT.COMMISSION.TYPE/FT.CHARGE.TYPE,     an entry for CHARGE.CCY would also have to exist in FT.COMMISSION.TYPE/     FT.CHARGE.TYPE for that particular charge, for this field to be recognized  Could     be set to   for all currencies or to REST for all currencies not     specifically defined. However REST can be input only if at least one     currency has been defined for that charge. */ 
 CHARGE_CCY : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=6.0, t24Name=CHARGE.CCY) 
 
 /* Forms part of an associated sub-value set from CHARGE.CCY to CHARGE.FLT.AMT. For every currency defined in CHARGE.CCY, this field can be used to define whether only a certain percentage of charges in that currency would be applicable to the customer/customer-group in the ID. Validation Should     be a numeric input Cannot     be a negative value or a value greater than 100 Input     in this field is prohibited if there is an input in CHARGE.FLT.AMT field. */ 
 CHARGE_PERC : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=7.0, t24Name=CHARGE.PERC) 
 
 /* Forms part of an associated sub-value set from CHARGE.CCY to CHARGE.FLT.AMT. For every CHARGE.CCY specified it is possible to stipulate a flat amount for the customer/customer-group specified in the ID. Validation Should     be a numeric input Input     in this field is prohibited if there is an input in the CHARGE.PERC field. */ 
 CHRG_FLT_AMT : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=6, sysNumber=8.0, t24Name=CHRG.FLT.AMT) 
 } 
 LD_GROUP_CONDITION__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=18.0, t24Name=INPUTTER) 
 } 
 LD_GROUP_CONDITION__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=19.0, t24Name=DATE.TIME) 
 } 
 } 
 Enumerations { 
 PM_LD_PARAM__PM_LD_PARAM_ID : mml:string 
 SYSTEM=SYSTEM 
 
 PM_LD_PARAM__CATEG_DEP_ST__INT_TYPE_TO_USE : mml:string 
 MIS=MIS 
 
 PM_LD_PARAM__NO_OF_ROWS : mml:string 
 n21=21 
 
 PM_LD_PARAM__GM_DATE_SFX : mml:string 
 n8=8 
 
 PM_LD_PARAM__SHOW_FWD_INT : mml:string 
 BOTH=BOTH 
 FIXED=FIXED 
 VARIABLE=VARIABLE 
 
 LD_TXN_TYPE_CONDITION__MATURE_AT_SOD : mml:string 
 YES=YES 
 NULL=NULL 
 
 LD_TXN_TYPE_CONDITION__CURRENCY__CHARGE_CODE__IAS_SUBTYPE : mml:string 
 n17=17 
 
 LD_TXN_TYPE_CONDITION__CURRENCY__CHARGE_CODE__COMPOUND_YIELD_METHOD : mml:string 
 YIELD=YIELD 
 NULL=NULL 
 
 LD_TXN_TYPE_CONDITION__CONVERSION_TYPE : mml:string 
 BUY=BUY 
 SELL=SELL 
 MID=MID 
 
 LD_TXN_TYPE_CONDITION__FWD_BWD_KEY : mml:string 
 FWD=FWD 
 BWD=BWD 
 FSM=FSM 
 CAL=CAL 
 
 LD_TXN_TYPE_CONDITION__BASE_DATE_KEY : mml:string 
 BASE=BASE 
 PREV=PREV 
 
 LD_TXN_CODES__ID : mml:string 
 SYSTEM=SYSTEM 
 
 LD_GROUP_CONDITION__FIXED_CONTRACT : mml:string 
 YES=YES 
 NO=NO 
 
 LD_GROUP_CONDITION__APPLY_CURR_LOANS : mml:string 
 YES=YES 
 NO=NO 
 
 } 
