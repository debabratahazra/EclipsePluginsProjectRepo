# UTF-8
 /* Foundation for Process Workflow */ 
 Domain PW_Foundation 
 @t24:i (module=PW) 
 @java:Package (value=com.temenos.t24.datamodel.pw.pw_foundation) 
 namespace "http://www.temenos.com/t24/PW_Foundation" 
 metamodelVersion 4.3.0.20110527 
 Classes { 
 PW_VERB 
 @t24:i (level=I, type=U, localRefAllowed=true) 
 { 
 PW_VERB_ID : mml:string PK required 
 @i18n:Label (en="Verb Id") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=PW.VERB.ID) 
 
 DESCRIPTION -> byValue PW_Foundation:PW_VERB__DESCRIPTION * 
 
 PARENT -> PW_Foundation:PW_VERB 
 @i18n:Label (en=Parent) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=2.0, t24Name=PARENT) 
 
 RESERVED_10 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=3.0, t24Name=RESERVED.10) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=4.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=5.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=6.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=7.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=8.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=9.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=10.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=11.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=12.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_VERB__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=15.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=16.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_VERB__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_VERB__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=19.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=20.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=21.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=22.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=23.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_VERB__DESCRIPTION 
 { 
 DESCRIPTION : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 PW_VERB__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=14.0, t24Name=OVERRIDE) 
 } 
 PW_VERB__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=17.0, t24Name=INPUTTER) 
 } 
 PW_VERB__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=18.0, t24Name=DATE.TIME) 
 } 
 PW_TXN_REF 
 @t24:i (level=F, type=T, localRefAllowed=false) 
 { 
 PW_TXN_REF_ID : mml:string PK required 
 @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=0.0, t24Name=PW.TXN.REF.ID) 
 
 ACTIVITY_TXN_ID -> PW_Foundation:PW_ACTIVITY_TXN required 
 @t24:i (align=R, inputBehaviour=I, maxLength=35, sysNumber=1.0, t24Name=ACTIVITY.TXN.ID) 
 } 
 PW_TRANSITION 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 PW_TRANSITION_ID : mml:string PK required 
 @i18n:Label (en=RULE.ID) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=PW.TRANSITION.ID) 
 
 DESCRIPTION -> byValue PW_Foundation:PW_TRANSITION__DESCRIPTION * 
 
 SELECTION_FIELD -> byValue PW_Foundation:PW_TRANSITION__SELECTION_FIELD * 
 
 SELECTION_OPERAND : PW_Foundation:PW_TRANSITION__SELECTION_OPERAND 
 @i18n:Label (en="Selection Operand") 
 @i18n:Tooltip (en="Selection Operand") 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=5.0, t24Name=SELECTION.OPERAND) 
 
 ROUTINE : mml:string 
 @i18n:Label (en=Routine) 
 @i18n:Tooltip (en=Routine) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=6.0, t24Name=ROUTINE) 
 
 RESERVED_10 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=7.0, t24Name=RESERVED.10) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=8.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=9.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=10.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=11.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=12.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=13.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=14.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=15.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=16.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_TRANSITION__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=19.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=20.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_TRANSITION__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_TRANSITION__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=23.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=24.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=25.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=26.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=27.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_TRANSITION__DESCRIPTION 
 { 
 DESCRIPTION : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 PW_TRANSITION__SELECTION_FIELD 
 { 
 SELECTION_FIELD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=2.0, t24Name=SELECTION.FIELD) 
 
 OPERAND : PW_Foundation:PW_TRANSITION__SELECTION_FIELD__OPERAND 
 @t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=3.0, t24Name=OPERAND) 
 
 CRITERIA : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, t24Name=CRITERIA) 
 } 
 PW_TRANSITION__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=18.0, t24Name=OVERRIDE) 
 } 
 PW_TRANSITION__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=21.0, t24Name=INPUTTER) 
 } 
 PW_TRANSITION__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=22.0, t24Name=DATE.TIME) 
 } 
 /* This table contains the various status codes that could be used to attach to different activities. The status is defined separately so as to allow reuse. */ 
 PW_STATUS 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 /* PW.STATUS  @ID This is the key by which the PW.STATUS record can be identified. It is a user defined descriptive key which will is used to define the status of an ACTIVITY in a PROCESS workflow. Validation Rules  2-35 (Uppercase      alphanumeric) Type A. */ 
 PW_STATUS_ID : mml:string PK required 
 @i18n:Label (en="PW Status") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=PW.STATUS.ID) 
 
 DESCRIPTION -> byValue PW_Foundation:PW_STATUS__DESCRIPTION * 
 
 SHORT_DESC -> byValue PW_Foundation:PW_STATUS__SHORT_DESC * 
 
 RESERVED_10 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=3.0, t24Name=RESERVED.10) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=4.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=5.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=6.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=7.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=8.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=9.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=10.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=11.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=12.0, t24Name=RESERVED.1) 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=14.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=15.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_STATUS__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_STATUS__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=18.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=19.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=20.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=21.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=22.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_STATUS__DESCRIPTION 
 { 
 /* PW.STATUS DESCRIPTION Describes the PW.STATUS record and is used for enrichment of the key.  Validation Rules  A maximum of 35      alphanumeric characters may be entered. */ 
 DESCRIPTION : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 PW_STATUS__SHORT_DESC 
 { 
 /* PW.STATUS SHORT.DESC Describes the PW.STATUS record in an abbreviated format, which can be used for reporting. Validation Rules  1-35 alphanumeric      characters may be entered. Mandatory field. */ 
 SHORT_DESC : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=2.0, t24Name=SHORT.DESC) 
 } 
 PW_STATUS__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=16.0, t24Name=INPUTTER) 
 } 
 PW_STATUS__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=17.0, t24Name=DATE.TIME) 
 } 
 /* PW.PROCESS    This table is the actual instance of a particular process. This table helps to mark the beginning of the process and the customer (if existing) for whom the current process is being initiated. The user has to input the process definition key. On authorization of this record, the system creates records in PW.ACTIVITY.TXN. The records created are for one per activity for the process. The records are created only when the particular activity is available for launching. */ 
 PW_PROCESS 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 /* PW.PROCESS          @ID          This is an alphanumeric serial key to identify each individual process. This key is automatically generated using the F.LOCKING file and a record must be set up in the AUTO.ID.START file for the PW.PROCESS and PW.ACTIVITY.TXN files before creating processes.          Validation Rules */ 
 PW_PROCESS_ID : mml:string PK required 
 @i18n:Label (en="Process Id") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=PW.PROCESS.ID) 
 
 /* PW.PROCESS          PROCESS.DEFINITION          This is the PW.PROCESS.DEFINITION key for which you want to create a process for.          Validation Rules      1. Mandatory field.      2. A valid key from PW.PROCESS.DEFINITION */ 
 PROCESS_DEFINITION -> PW_Foundation:PW_PROCESS_DEFINITION required 
 @i18n:Label (en="Product ID") 
 @i18n:Tooltip (en="Process definition key") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=1.0, t24Name=PROCESS.DEFINITION) 
 
 /* PW.PROCESS          CUSTOMER          Used for Data Mapping, if the customer for the process is known the customer number can be input here which can then be used to default the customer details in a PW activity record.           Validation Rules      1. Non-mandatory field.      2. If populated then it should be a valid key from the Customer Application. */ 
 CUSTOMER -> ST_Customer:CUSTOMER 
 @i18n:Label (en="Customer No") 
 @t24:i (align=R, inputBehaviour=I, maxLength=35, sysNumber=2.0, t24Name=CUSTOMER) 
 
 /* PW.PROCESS          OWNER          A valid PW.PARTICIPANT key defining which user group is responsible for this process. The USERs or ACCT.OFFICERs listed in the PW.PARTICIPANT record will each allocated to a PW.ACTIVITY.TXN record on a rotational bases.          If an OWNER is not defined on the PW.ACTIVITY record then this OWNER field will be used to allocate USERs or ACCT.OFFICERs from.          Validation Rules      1. Mandatory field.      2. A valid PW.PARTICIPANT key. */ 
 OWNER -> PW_Foundation:PW_PARTICIPANT 
 @i18n:Label (en=Owner) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=3.0, t24Name=OWNER) 
 
 /* PW.PROCESS          START.DATE          The date this PW.PROCESS record was created. If a date is not filled in, when the record is committed a date is defaulted into the record.          Validation Rules      1. Non-mandatory field.      2. If populated then it should be a valid Date */ 
 START_DATE : mml:string 
 @i18n:Label (en="Start Date") 
 @i18n:Tooltip (en="Start Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=4.0, t24Name=START.DATE) 
 
 /* PW.PROCESS          DUE.DATE          This is calculated by adding the DEF.DURATION from the PW.PROCESS.DEFINITION to the START.DATE. (calculated on week days only).          Validation Rules      System maintained. This is a NOINPUT field. */ 
 DUE_DATE : mml:string 
 @i18n:Label (en="Due Date") 
 @i18n:Tooltip (en="Due Date") 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=5.0, t24Name=DUE.DATE) 
 
 /* PW.PROCESS          COMPLETION.DATE          This is automatically populated when the final ACTIVITY in the PROCESS is complete (when the COMPLETE.ACT in the PW.PROCESS.DEFINITION has been met).          Validation Rules      System maintained. This is a NOINPUT field. */ 
 COMPLETION_DATE : mml:string 
 @i18n:Label (en="Completion Date") 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=6.0, t24Name=COMPLETION.DATE) 
 
 ACTIVITY_TXN -> byValue PW_Foundation:PW_PROCESS__ACTIVITY_TXN * 
 
 /* PW.PROCESS          PROCESS.STATUS          This field indicates the overall status of the Process. This field gets its value populated depending upon the value mentioned in the field PROCESS.STATUS in PW.PROCESS.DEFINITION.        Validation Rules       System maintained. This is a NOINPUT field. */ 
 PROCESS_STATUS : mml:string 
 @i18n:Label (en="Process Status") 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=18.0, t24Name=PROCESS.STATUS) 
 
 /* PW.PROCESS          PARENT.PROCESS          PW.PROCESS Id in this field denotes that this PW.PROCESS is an instance of a PW.PROCESS.DEFINITION(child) which is specified as an Activity within another PW.PROCESS.DEFINITION(Parent.)       PW.PROCESS Id in this field is the PW.PROCESS Id of the Parent PW.PROCESS       Validation Rules       System maintained. This is a NOINPUT field. */ 
 PARENT_PROCESS : mml:string 
 @i18n:Label (en="Parent Process") 
 @i18n:Tooltip (en="Parent Process") 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=19.0, t24Name=PARENT.PROCESS) 
 
 /* PW.PROCESS Specifies the Campaign Generator Id which caused the generation of the PW Process. Validation Rules :  System populated field. Noinput Field. Must be a valid Campaign Generator Id, with Iteration Code. */ 
 CAMP_GEN_ID : mml:string 
 @t24:i (align=L, inputBehaviour=E, maxLength=35, sysNumber=20.0, t24Name=CAMP.GEN.ID) 
 
 /* PW.PROCESS Specifies the Opportunity Generator Id which caused the generation of the PW Process. Validation Rules :  System populated field. Noinput Field. Must be a valid Opportunity Generator id. */ 
 OPP_GEN_ID : mml:string 
 @t24:i (align=L, inputBehaviour=E, maxLength=35, sysNumber=21.0, t24Name=OPP.GEN.ID) 
 
 /* Provides the Parent Context Id, as generated by the Campaign Generator or Opportunity Generator. During the running of the Campaign Or Opportunity Generation process, the system pre-selects a set of records, and runs each one against the Qualification Rule.  When one record passes the qualification rule, it creates the PW.PROCESS.  This field holds the ID of that record which passed the qualification rule.  This information is necessary, because when the opportunity is generated, it will require additional information such as the Probability Score and the Amount, which require rules to run.  These rules will be run to generate the Opportunity records. When a Opportunity record is changed from INBOUND to OUTBOUND. It initiates a Sales Workflow. In that case this field will contain the Opportunity Id. Validation Rules :  System Populated field., Noinput field. Contains the @ID of record provided by Opportunity Generator or Campaign Generator which has passed the qualification rule. */ 
 PARENT_CTX_ID : mml:string 
 @t24:i (align=L, inputBehaviour=E, maxLength=35, sysNumber=22.0, t24Name=PARENT.CTX.ID) 
 
 /* PW.PROCESS         SLA         This field contains the SLA(Service Level Agreement) defined for the process.         It should be defaulted from PW.PROCESS.DEFINITION.         Validation Rules         Up to 35 alphanumeric characters.         NOINPUT field.         Must be a valid record from SG.SLA application. */ 
 SLA : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=23.0, t24Name=SLA) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=24.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_PROCESS__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=27.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=28.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_PROCESS__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_PROCESS__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=31.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=32.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=33.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=34.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=35.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_PROCESS__ACTIVITY_TXN 
 { 
 /* PW.PROCESS          ACTIVITY.TXN          When the PW.PROCESS record is committed and authorised, for each ACTIVITY on the corresponding PW.PROCESS.DEFINITION record that can be created ( IE. Activities that have no PRE.REQ.ACTs), the system creates PW.ACTIVITY.TXN record for each activity and these should appear on the process ENQUIRY to be executed.          These PW.ACTIVITY.TXN keys appear in this ACTIVITY.TXN field.         If the Activity specified is a PW.PROCESS.DEFINITION then this field is ppulated with the PW.PROCESS Id of the nested Process defintion.          Validation Rules           System maintained. This is a NOINPUT field. */ 
 ACTIVITY_TXN : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=7.0, t24Name=ACTIVITY.TXN) 
 
 /* PW.PROCESS          COMPLETED           This field contains a &#8216;Y&#8217; for Yes, when PW.ACTIVITY.TXN record has been completed.          Validation Rules      System maintained. This is a NOINPUT field. */ 
 COMPLETED : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=8.0, t24Name=COMPLETED) 
 
 /* PW.PROCESS          ACTIVITY          Names the PW.ACTIVITY that is being run for this particular PW.ACTIVITY.TXN record. Is only populated if a PW.ACTIVITY.TXN record has been created.         If a PW.PROCESS.DEFINITION is specified as an Activity (i.e nested Process Definiton), then this field will hold the name of the nested PW.PROCESS.DEFINITION instead of PW.ACTIVITY.  All other rules remains the same.          Validation Rules          System maintained. This is a NOINPUT field. */ 
 ACTIVITY : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=99, sysNumber=9.0, t24Name=ACTIVITY) 
 
 /* PW.PROCESS          PATTERN.CONSTR          This holds the pattern construct of the corresponding PW.ACTIVITY.TXN record.          Validation Rules      System maintained. This is a NOINPUT field. */ 
 PATTERN_CONSTR : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=10.0, t24Name=PATTERN.CONSTR) 
 
 /* PW.PROCESS         ROUTE.RULE.VALN         This field holds the returned Boolean value of the EVAL.COND/EVAL.RULE of corresponding ROUTE.TO pattern construct in the process.          Validation Rules      System maintained. This is a NOINPUT field. */ 
 ROUTE_RULE_VALN : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=11.0, t24Name=ROUTE.RULE.VALN) 
 
 /* PW.PROCESS         ROUTE.TO.ACT         This holds the earlier activity stage in the process. The process loops back to this particular stage in the process during runtime.         Validation Rules      System maintained. This is a NOINPUT field. */ 
 ROUTE_TO_ACT : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=12.0, t24Name=ROUTE.TO.ACT) 
 
 FLOW_ACT -> byValue PW_Foundation:PW_PROCESS__ACTIVITY_TXN__FLOW_ACT * 
 } 
 PW_PROCESS__ACTIVITY_TXN__FLOW_ACT 
 { 
 /* PW.PROCESS          FLOW.ACT          This holds the values of parallel activities defined in the process definition using the PARALLEL.FLOW pattern construct.          Validation Rules      System maintained. This is a NOINPUT field. */ 
 FLOW_ACT : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=13.0, t24Name=FLOW.ACT) 
 
 /* PW.PROCESS          CASE.ACTIVITY          This holds the activity which was activated from the list of CASE.ACTIVITY values defined in the associated SWITCH pattern construct in the process definition.           The specific CASE.ACTIVITY is triggered on the basis of the EVAL.CONDITION/ EVAL.RULE defined in the process definition. More information on defining the EVAL.CONDITION for a SWITCH pattern construct can be found in the helptext for PW.PROCESS.DEFINITION          Validation Rules      System maintained. This is a NOINPUT field. */ 
 CASE_ACTIVITY : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=14.0, t24Name=CASE.ACTIVITY) 
 
 /* PW.PROCESS          DEF.ACTIVITY          This holds the default branch activity name of the corresponding SWITCH pattern construct defined in the process.          If the condition defined through EVAL.CONDITION/ EVAL.RULE fails, then the value defined in DEF.ACTIVITY will be activated.      Validation Rules      System maintained. This is a NOINPUT field. */ 
 DEF_ACTIVITY : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=15.0, t24Name=DEF.ACTIVITY) 
 
 /* PW.PROCESS          REPEAT.BLOCK          This holds the value either Y or N .This is a system maintained marker used to validate if an activity is eligible for repetition at runtime.          Validation Rules      System maintained. This is a NOINPUT field. */ 
 REPEAT_BLOCK : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=16.0, t24Name=REPEAT.BLOCK) 
 
 /* PW.PROCESS          UNIQUE.NAME           The UNIQUE.NAME that corresponds to the ACTIVITY defined on the PW.PROCESS.DEFINITION record. Can be used when two or more identical ACTIVITY names are defined on the PW.PROCESS.DEFINITION.          Validation Rules      System maintained. This is a NOINPUT field. */ 
 UNIQUE_NAME : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=50, sysNumber=17.0, t24Name=UNIQUE.NAME) 
 } 
 PW_PROCESS__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=26.0, t24Name=OVERRIDE) 
 } 
 PW_PROCESS__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=29.0, t24Name=INPUTTER) 
 } 
 PW_PROCESS__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=30.0, t24Name=DATE.TIME) 
 } 
 /* PW.PROCESS.DEFINITION       This table enables linking of different activities and workflow constructs into a logical process. This table defines the sequence of various activities in the process and their dependencies. It also defines the activities that get enabled based on the dynamic flow of the process.       An activity could be attached to a process as independent activity or dependant on the completion of a previous activity. Further, the activity could be further made rigid by making the triggering of activity conditional on an appropriate status of the previous activity.       An example could be in a process called LOAN, if charges are waived in an activity, then the activity that captures charges shall not be triggered as a part of the process. In case, the charges are not waived, then the activity that captures charges will be a part of the process.       Thus process definition helps in not only defining the activities to be a part of the process, but the sequence and the stage at which they have to appear in the process are defined.       Process definition also helps in identifying the activity and its status that can be construed as the completion of the process. */ 
 PW_PROCESS_DEFINITION 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 /* PW.PROCESS.DEFINITION                  PW.DEF.ID @ID                  This is the ID of the PW.PROCESS.DEFINITION record.                  Validation Rules                  Up to 35 Alphanumeric      characters. */ 
 PW_DEF_ID : mml:string PK required 
 @i18n:Label (en=Process) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=PW.DEF.ID) 
 
 DESCRIPTION -> byValue PW_Foundation:PW_PROCESS_DEFINITION__DESCRIPTION * 
 
 SHORT_DESC -> byValue PW_Foundation:PW_PROCESS_DEFINITION__SHORT_DESC * 
 
 /* PW.PROCESS.DEFINITION                  DEF.DURATION                  Default duration of this entire process in definable units.                  Validation Rules                  1-3 numeric characters.                  Mandatory field. */ 
 DEF_DURATION : mml:string required 
 @i18n:Label (en="Default Duration") 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=3.0, t24Name=DEF.DURATION) 
 
 ACTIVITY -> byValue PW_Foundation:PW_PROCESS_DEFINITION__ACTIVITY * 
 
 PROCESS_COMPLETION_STATUS -> byValue PW_Foundation:PW_PROCESS_DEFINITION__PROCESS_COMPLETION_STATUS * 
 
 ALLOWED_STATUS -> byValue PW_Foundation:PW_PROCESS_DEFINITION__ALLOWED_STATUS * 
 
 /* Specifies the user(s) who is/are privileged to execute the current process            Validation Rules:                Input must have an existing code on PW.PARTICIPANT */ 
 OWNER -> PW_Foundation:PW_PARTICIPANT required 
 @i18n:Label (en=Owner) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=37.0, t24Name=OWNER) 
 
 /* This can accept any valid keys of EB.RULE.GATEWAY. This is mutually exclusive with ALLOWED.STATUS, PROCESS.ACTIVITY, ACTIVITY.STATUS adn PROCESS.STATUS.RULE multi-value field set.   Validation Rules   0-35 characters   Optional field */ 
 PROC_STAT_EVAL -> EB_RulesEngine:EB_RULE_GATEWAY 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=38.0, t24Name=PROC.STAT.EVAL) 
 
 /* PW.PROCESS.DEFINITION                  SLA                  This field is used to define a SLA(Service Level Agreement) for the process.                  INPUT only when SG product is installed otherwise NOINPUT.                  Validation Rules                  Up to 35 alphanumeric characters.                  Must be a valid record from SG.SLA application. */ 
 SLA -> SG_Framework:SG_SLA 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=39.0, t24Name=SLA) 
 
 /* Contains the project name of the process model as defined in the plug-in user interface. */ 
 PROCESS_XML : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=40.0, t24Name=PROCESS.XML) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=41.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=42.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=43.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_PROCESS_DEFINITION__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=46.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=47.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_PROCESS_DEFINITION__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_PROCESS_DEFINITION__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=50.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=51.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=52.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=53.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=54.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_PROCESS_DEFINITION__DESCRIPTION 
 { 
 /* PW.PROCESS.DEFINITION                  DESCRIPTION                  Described the PW.PROCESS.DEFINITION record and is used as the enrichment of the key.                  Validation Rules                  Up to 35 Alphanumeric      characters.                  Multi-valued field. */ 
 DESCRIPTION : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 PW_PROCESS_DEFINITION__SHORT_DESC 
 { 
 /* PW.PROCESS.DEFINITION                  SHORT.DESC                  Describes the PW.PROCESS.DEFINITION record in an abbreviated format, which can be used for reporting purposes where space is limited.                  Validation Rules                  Up to 35 alphanumeric      characters.                  Mandatory field. */ 
 SHORT_DESC : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=2.0, t24Name=SHORT.DESC) 
 } 
 PW_PROCESS_DEFINITION__ACTIVITY 
 { 
 /* PW.PROCESS.DEFINITION                  ACTIVITY                  Used to set up PW.ACTIVITY records in the logical business order or flow the user requires the                   PW.ACTIVITYs to be displayed and consequently executed in.                  Usually the first ACTIVITY does not contain PRE.REQ.ACT, PRE.REQ.STAT OR                     PRE.REQ.RULEs as there is no previous activity in this process to base these pre-requisites on.                  Within the range of processes that exist within any organisations there are a number of “activity                   sequences” which are common across many processes.                   Therefore it is possible to create these types of recurring activity sequences as processes                   in their own right which can then be embedded or nested within an overall process. Therefore we                    have the ability to include a PW.PROCESS.DEFINITION as an activity within another                   PW.PROCESS.DEFINITION record (i.e nesting a PW.PROCESS.DEFINTION within another)                  Validation Rules                  A PW.ACTIVITY Key can be linked to this field as usual.                   If a PW.PROCESS.DEFINITION is specified as an activity, then it should end with ‘.DEF’ to                    distinguish whether it’s a PW.ACTIVITY or nested Process definition Key.                  Since this field can take values either from PW.ACTIVITY or PW.PROCESS.DEFINITION the                    CHECKFILE validations has been removed. */ 
 ACTIVITY : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, t24Name=ACTIVITY) 
 
 PRE_REQ_ACT -> byValue PW_Foundation:PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT * 
 
 FLOW_ACT -> byValue PW_Foundation:PW_PROCESS_DEFINITION__ACTIVITY__FLOW_ACT * 
 
 CASE_ACTIVITY -> byValue PW_Foundation:PW_PROCESS_DEFINITION__ACTIVITY__CASE_ACTIVITY * 
 } 
 PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT 
 { 
 /* PW.PROCESS.DEFINITION                  PRE.REQ.ACT                  This field is used to define a previous ACTIVITY that has to have run in this process before the                   corresponding ACTIVITY (to the PRE.REQ.ACT) will appear on the process ENQUIRY and hence                   be allowed to be executed.                  If no PRE.REQ.STAT or PRE.REQ.RULE has been defined along with this PRE.REQ.ACT then                   the defined PRE.REQ.ACT must just have previously run and regardless of it&#8217;s status, the                   corresponding ACTIVITY will appear on the ENQUIRY.                          EG.                   Field 4.1 Activity = CREATE.CUSTOMER                   Field 5.1.1 Pre.Req.Activity =                   Field 6.1.1 Pre.Req.Stat =                   Field 7.1.1 Pre.Req.Rule =                   Field 4.2 Activity = CREATE.ACCOUNT                   Field 5.2.1 Pre.Req.Activity =                   Field 6.2.1 Pre.Req.Stat =                   Field 7.2.1 Pre.Req.Rule =                   CREATE.CUSTOMER must have run before a PW.ACTIVITY.TXN record is automatically created,                   and therefore before the CREATE.ACOUNT activity will appear on the ENQUIRY.                  With the ability of including a PW.PROCESS.DEFINITION as an activity, this field now accepts a valid PW.PROCESS.DEFINITION Id well. When a PW.PROCESS.DEFINTION ID is specified then the value specified in the PRE.REQ.STATUS will be evaluated against the overall status of the embedded process.            Validation Rules            Non-Mandatory field.             A PW.ACTIVITY Key can be linked to this field as usual.             If a PW.PROCESS.DEFINITION is specified as an pre-req-activity, then it should end with ‘.DEF’ to distinguish whether it’s a PW.ACTIVITY or nested Process definition Key.            The PW.ACTIVITY or PW.PROCESS.DEFINITON record must appear previously as an ACTIVITY on this PW.PROCESS.DEFINITION record. */ 
 PRE_REQ_ACT : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=5.0, t24Name=PRE.REQ.ACT) 
 
 /* PW.PROCESS.DEFINITION                  PRE.REQ.STAT                  This is the Pre-requisite status that the corresponding PRE.REQ.ACT needs to be at in order for the PW.ACTIVITY.TXN record, for the corresponding ACTIVITY, to be automatically created and appear on the ENQUIRY to be executed.                   If the status of the corresponding PRE.REQ.ACT does not equal what is defined in this PRE.REQ.STAT then the corresponding ACTIVITY defined will not appear on the ENQUIRY to be executed.                  The PRE.REQ.STAT and PRE.REQ.RULE fields are mutually exclusive.                   The PRE.REQ.STAT and PRE.REQ.RULE cannot be used to work together with the same PRE.REQ.ACT. A PRE.REQ.ACT is EITHER dependant on itself, or on a PRE.REQ.STAT or on a PRE.REQ.RULE.                  The PRE.REQ.STAT here is dependant on the status from the PW.ACTIVITY.TXN record which is turn is worked out according to the STATUS.RULE field on the PW.ACTIVITY record of the PRE.REQ.ACT.                  EG.                   Field 4.1 Activity = CREATE.CUSTOMER                  Field 5.1.1 Pre.Req.Activity =                  Field 6.1.1 Pre.Req.Stat =                   Field 7.1.1 Pre.Req.Rule =                  Field 4.2 Activity = CREATE.ACCOUNT                  Field 5.2.1 Pre.Req.Activity =                  Field 6.2.1 Pre.Req.Stat = CUSTOMER.COMPLETE                  Field 7.2.1 Pre.Req.Rule =                  Until the CREATE.CUSTOMER PW.ACTIVITY.TXN record has a status of CUSTOMER.COMPLETE, the CREATE.ACCOUNT activity will not appear on the ENQUIRY in this process to be executed.                  When the CREATE.CUSTOMER activity is run, the conditions attached to the CREATE.CUSTOMER PW.ACTIVITY record                  With the ability of including a PW.PROCESS.DEFINITION as an activity, this field now accepts a valid PW.PROCESS.DEFINITION Id well. When a PW.PROCESS.DEFINTION ID is specified then the value specified in the PRE.REQ.STATUS will be evaluated against the overall status of the embedded process.             Validation Rules             Non-Mandatory field.              An PW.ACTIVITY Key can be linked to this field as usual.              If a PW.PROCESS.DEFINITION is specified as an pre-req-activity, then it should end with ‘.DEF’ to distinguish whether it’s a PW.ACTIVITY or nested Process              definition Key.             Since this field can take values either from PW.ACTIVITY or PW.PROCESS.DEFINITION the CHECKFILE validations have been removed.             The PW.ACTIVITY or PW.PROCESS.DEFINITON record must appear previously as an ACTIVITY on this PW.PROCESS.DEFINITION record. */ 
 PRE_REQ_STAT -> PW_Foundation:PW_STATUS 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=6.0, t24Name=PRE.REQ.STAT) 
 
 /* PW.PROCESS.DEFINITION                  PRE.REQ.RULE                  Pre-requisites rule associated with an Activity           Validation Rules                  A valid PW.TRANSITION key. */ 
 PRE_REQ_RULE -> PW_Foundation:PW_TRANSITION 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=7.0, t24Name=PRE.REQ.RULE) 
 
 /* PW.PROCESS.DEFINITION                  OPERATION                  Flag to say whether we need to 'AND' or 'OR'  the pre - requisites specified.                 Validation Rules           This is a non-mandatory field.           Can either take values ‘AND’, ‘OR’ or BLANK.           Leaving the field blank or NULL defaults to 'AND' condition */ 
 OPERATION : PW_Foundation:PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT__OPERATION 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=8.0, t24Name=OPERATION) 
 
 /* PW.PROCESS.DEFINITION                 PRE.REQ.CONSTR                 This field is used to define a previous CONSTRUCT  that has to have run in this process before the corresponding ACTIVITY/ CONSTRUCT (to the PRE.REQ.CONSTR) will be allowed to be executed.                  Validation Rules                  The format of PRE REQ CONSTRUCT value is PATTERN.CONSTR_UNIQUE.NAME (Ex: SWITCH_ONE where SWITCH is a workflow pattern construct and ONE corresponds to the UNIQUE.NAME defined in this construct). This is a mandatory format. */ 
 PRE_REQ_CONSTR : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=9.0, t24Name=PRE.REQ.CONSTR) 
 
 /* PW.PROCESS.DEFINITION                  UNIQUE.NAME                   Can be used when 2 or more identical ACTIVITY names are defined on the PW.PROCESS.DEFINITION and is used for Data Mapping, to differentiate between identical ACTIVITY records.                  Validation Rules                  Input now allowed if PW.PROCESS.DEFINITION is specified as an Activity. */ 
 UNIQUE_NAME : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=10.0, t24Name=UNIQUE.NAME) 
 
 /* PW.PROCESS.DEFINITION                  TIME.TRIGGER          A facility whereby the status of an activity is evaluated by a tSA service as opposed to a user interaction on the process.            If this field is set to ‘YES’ then PW.ACTIVITY.TXN record corresponding to the PW.ACTIVITY will be selected by the job PW.TIME.TRIGGER ( in the service PW.MAPPING) for evaluating the status of the activity.           If a PW.ACTIVITY.TXN record already exists for the Activity then the service checks to see if any time triggers have been reached and then invokes the PW Process-engine to re-evaluate the activity status otherwise creates the PW.ACTIVITY.TXN record for the Activity based on the conditions/rules specified.          Validation Rules          This is a non-mandatory field.          Can either take values ‘YES’, ‘NO’ or BALNK.          (NO and BLANK means the same.) */ 
 TIME_TRIGGER : PW_Foundation:PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT__TIME_TRIGGER 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=11.0, t24Name=TIME.TRIGGER) 
 
 /* A facility where T24 automatically presents an input screen to a user without them directly                  requesting it based on the definition of the activity within the workflow.  This would be optional                   and would be required in two situations:                  1. When a PW.PROCESS record is created                  2. When one activity reaches a certain status and a new activity is to be started.                  The idea is that we can automatically present successive screens which form a sequence of   activities in a process to the same user one after the other (assuming the last activity was successful) without the user having to reference the process enquiry.              Therefore the requirement is to define an activity as a “follow on activity” if:              1.The necessary pre-requisites for the “follow on” activity are met.              2.The Participant of the “follow on” activity is the same as the participant of the activity which has just invoked the “workflow engine”              In the case of a “follow-on” activity being the first activity in the process then there will be no pre requisite and we should check that the participant of the activity is the same and the creator of the process and the workflow engine has been invoked by the creation of a process and not the update of another activity.              If there is more than one activity ready to follow-on, then the first Activity ready to follow-on would be triggered as not more than one screen can be presented to the USER at the same time.           Validation Rules           This is a non-mandatory field           Can either take values ‘YES’, ‘NO’ or BLANK.           (NO and BLANK means the same.)           Set the flag to YES, to mark an Activity to be follow-on. */ 
 FOLLOW_ON_ACT : PW_Foundation:PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT__FOLLOW_ON_ACT 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=12.0, t24Name=FOLLOW.ON.ACT) 
 
 /* Specifies the mapping to perform on the current activity of the process.            Validation Rules:             Input should have an entry on EB.MAPPING.SOURCE table.             Input not allowed when TARGET field in PW.ACTIVITY is an Enquiry */ 
 EB_MAPPING -> EB_SystemTables:EB_MAPPING_SOURCE 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=13.0, t24Name=EB.MAPPING) 
 
 /* This can accept any valid keys of EB.RULE.GATEWAY. This is mutually exclusive with PRE.REQ.ACT, PRE.REQ.STAT and PRE.REQ.RULE multi-value field set.   Validation Rules   0-35 characters   Optional field */ 
 PRE_REQ_EVAL -> EB_RulesEngine:EB_RULE_GATEWAY 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=14.0, t24Name=PRE.REQ.EVAL) 
 
 /* PW.PROCESS.DEFINITION                  RECU.EVAL.RULE                  This field is used to implement the recursive workflow pattern in process. This field holds the the EB.API id. Based on the boolean value(if TRUE) returned from the condition, the specific activity instance is repeated again recursively until the condition returns a value FALSE. It can hold values from the EB.RULE.GATEWAY application.                  Validation Rules                  The RECU.EVAL.COND and RECU.EVAL.RULE are mutually exclusive fields. */ 
 RECU_EVAL_RULE -> EB_RulesEngine:EB_RULE_GATEWAY 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=15.0, t24Name=RECU.EVAL.RULE) 
 
 /* PW.PROCESS.DEFINITION                  RECU.EVAL.COND                  This field is used to implement the recursive workflow pattern in process. This field holds the the EB.API id. Based on the boolean value(if TRUE) returned from the condition, the specific activity instance is repeated again recursively until the condition returns a value FALSE.                  The”@ “symbol should be added with the EB.API id for ex.,@Route condition. This is a mandatory format.                  Validation Rules                  The RECU.EVAL.COND and RECU.EVAL.RULE are mutually exclusive fields. */ 
 RECU_EVAL_COND : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=16.0, t24Name=RECU.EVAL.COND) 
 
 /* PW.PROCESS.DEFINITION                   PATTERN.CONSTR                   This field is used to define a specific workflow pattern construct.                   This is a mandatory field to implement a specific workflow pattern in the process. If the pattern construct is set up then an associated UNIQUE.NAME should be defined.                   There are three pattern construct options like ROUTE.TO, PARALLEL.FLOW and SWITCH.                    Validation Rules                   The ROUTE.TO pattern construct implements the structured loop pattern (repeat variant) in the process. The ROUTE.TO pattern construct cannot be defined as the first node in the process definition. The fields EVAL.CONDITION/EVAL.RULE ,ROUTE.TO.ACT,  ROUTE. ACT. STATUS  are mutually inclusive fields for implementing the ROUTE.TO pattern construct.                  The PARALLEL.FLOW pattern construct implements the parallel split workflow pattern in the process. To construct the PARALLEL.FLOW pattern the field FLOW.ACT should be defined because the FLOW.ACT field is mutually inclusive with PARALLEL.FLOW.                  The SWITCH pattern construct is used to implement the exclusive choice workflow pattern in the process. To construct the switch pattern in process the fields CASE.ACTIVITY and DEF.ACTIVITY should be defined because these are mutually inclusive fields for SWITCH pattern construct. */ 
 PATTERN_CONSTR : PW_Foundation:PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT__PATTERN_CONSTR 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=17.0, t24Name=PATTERN.CONSTR) 
 
 /* PW.PROCESS.DEFINITION                 EVAL.CONDITION                 This field is used in conjunction with the the Loop (ROUTE.TO) and Switch(SWITCH) pattern constructs in the process definition. It can hold values from the EB.API application.                 The”@ “symbol should be added with the EB.API id for ex.,@Route condition. This is a mandatory format for defining values in this field.                 Validation Rules                 EVAL.CONDITION and EVAL.RULE are mutually exclusive fields. */ 
 EVAL_CONDITION : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=18.0, t24Name=EVAL.CONDITION) 
 
 /* PW.PROCESS.DEFINITION                  EVAL.RULE                  This field is used in conjunction with the the Loop (ROUTE.TO) and Switch(SWITCH) pattern constructs in the process definition. It can hold values from the EB.RULE.GATEWAY application.                  Validation Rules                  EVAL. CONDITION and EVAL.RULE are mutually exclusive fields. */ 
 EVAL_RULE -> EB_RulesEngine:EB_RULE_GATEWAY 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=19.0, t24Name=EVAL.RULE) 
 
 /* PW.PROCESS.DEFINITION                  ROUTE.TO.ACT                  This field is used to define the activity stage in the process to which the process loops back upon encountering the ROUTE.TO pattern construct.                   Validation Rules                  If the value defined in ROUTE.TO.ACT activity has not been defined more than once in the process definition then ROUTE.TO.ACT should accept id values from the PW.ACTIVITY table.                  If the value defined in ROUTE.TO.ACT activity has been defined more than once in the process definition then ROUTE.TO.ACT should accep values in the format PW.ACTIVITY_UNIQUE.NAME where UNIQUE.NAME corresponds to the specific instance of the PW.ACTIVITY. */ 
 ROUTE_TO_ACT : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=20.0, t24Name=ROUTE.TO.ACT) 
 
 /* PW.PROCESS.DEFINITION                  ROUTE.ACT.STATUS                  This field is used to define the status to be set for activity stage to which the process loops back.                  Validation Rules                  ROUTE.TO.ACT  and  ROUTE. ACT. STATUS  are mutually inclusive fields.                  The ROUTE.ACT.STATUS must be defined if the PATTERN.CONSTR field set as ROUTE.TO. */ 
 ROUTE_ACT_STATUS -> PW_Foundation:PW_STATUS 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=21.0, t24Name=ROUTE.ACT.STATUS) 
 } 
 PW_PROCESS_DEFINITION__ACTIVITY__FLOW_ACT 
 { 
 /* PW.PROCESS.DEFINITION                 FLOW.ACT                 The FLOW.ACT is used to define multiple activities to construct PARALLEL.FLOW in process.                 Validation Rules                 This sub value field holds PW.ACTIVITY id values.                 If the PATTERN.CONSTR field is set as PARALLEL.FLOW then the FLOW.ACT should be defined. */ 
 FLOW_ACT : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=22.0, t24Name=FLOW.ACT) 
 } 
 PW_PROCESS_DEFINITION__ACTIVITY__CASE_ACTIVITY 
 { 
 /* PW.PROCESS.DEFINITION                  CASE.ACTIVITY                  This field is used define the activities to the SWITCH pattern construct in the process.                  Validation Rules                  This sub value field holds an associated set of PW.ACTIVITY id values.                  If the PATTERN.CONSTR field is set as SWITCH then the CASE.ACTIVITY should be defined.  The CASE.ACTIVITY and DEF.ACTIVITY   are mutually inclusive fields.                  If the value returned in the specific argument by the corresponding EVAL.CONDITION/ EVAL.RULE corresponds to an existing  value of CASE.ACTIVITY, then it will be activated. */ 
 CASE_ACTIVITY : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=23.0, t24Name=CASE.ACTIVITY) 
 
 /* PW.PROCESS.DEFINITION                  DEF.ACTIVITY                  This field holds a PW.ACTIVITY id value.If the PATTERN.CONSTR field is set as SWITCH, then the DEF.ACTIVITY should be defined. The DEF.ACTIVITY and CASE.ACTIVITY are mutually inclusive fields.                   Validation Rules                  If the corresponding EVAL. CONDITION/ EVAL.RULE are evaluated to FALSE, then the DEF.ACTIVITY will be activated. */ 
 DEF_ACTIVITY : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=24.0, t24Name=DEF.ACTIVITY) 
 
 /* PW.PROCESS.DEFINITION                  ACTIVITY OWNER                  DESCRIPTION                  Specifies the user(s) who is/are privileged to      execute this activity.                  Validation Rules                   Input must have a record in PW.PARTICIPANT application. */ 
 ACTIVITY_OWNER -> PW_Foundation:PW_PARTICIPANT 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=25.0, t24Name=ACTIVITY.OWNER) 
 
 RESERVED_12 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=26.0, t24Name=RESERVED.12) 
 } 
 PW_PROCESS_DEFINITION__PROCESS_COMPLETION_STATUS 
 { 
 CASE_ACTIVITY -> byValue PW_Foundation:PW_PROCESS_DEFINITION__PROCESS_COMPLETION_STATUS__CASE_ACTIVITY * 
 } 
 PW_PROCESS_DEFINITION__PROCESS_COMPLETION_STATUS__CASE_ACTIVITY 
 { 
 /* Defines the status which when reached means the process is complete.            Validation Rules:                   Input must have an existing code on PW.STATUS */ 
 PROCESS_COMPLETION_STATUS -> PW_Foundation:PW_STATUS required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=27.0, t24Name=PROCESS.COMPLETION.STATUS) 
 } 
 PW_PROCESS_DEFINITION__ALLOWED_STATUS 
 { 
 CASE_ACTIVITY -> byValue PW_Foundation:PW_PROCESS_DEFINITION__ALLOWED_STATUS__CASE_ACTIVITY * 
 
 PROCESS_ACTIVITY -> byValue PW_Foundation:PW_PROCESS_DEFINITION__ALLOWED_STATUS__PROCESS_ACTIVITY * 
 
 PROCESS_CONSTR -> byValue PW_Foundation:PW_PROCESS_DEFINITION__ALLOWED_STATUS__PROCESS_CONSTR * 
 } 
 PW_PROCESS_DEFINITION__ALLOWED_STATUS__CASE_ACTIVITY 
 { 
 /* Defines the statuses that can be assigned to the process.                   Validation Rules:                    Any completions statuses as defined in the prior field must appear here before any             other non completion statuses.           Input must have an existing code on PW.STATUS */ 
 ALLOWED_STATUS -> PW_Foundation:PW_STATUS 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=28.0, t24Name=ALLOWED.STATUS) 
 } 
 PW_PROCESS_DEFINITION__ALLOWED_STATUS__PROCESS_ACTIVITY 
 { 
 /* Name of an activity on the process definition record.            Validation Rules:                    Must be an activity on this process            Input must have an existing code on PW.ACTIVITY */ 
 PROCESS_ACTIVITY : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=40, sysNumber=29.0, t24Name=PROCESS.ACTIVITY) 
 
 /* When the above activity reaches this status then the process will be assigned the              status of the associated ALLOWED.STATUS field            Validation Rules:                Must be an allowed status for the activity as defined on the PW.ACTIVITY record         Input must have an existing code on PW.STATUS */ 
 ACTIVITY_STATUS -> PW_Foundation:PW_STATUS 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=30.0, t24Name=ACTIVITY.STATUS) 
 } 
 PW_PROCESS_DEFINITION__ALLOWED_STATUS__PROCESS_CONSTR 
 { 
 /* PW.PROCESS.DEFINITION                  PROCESS.CONSTR                  This field can hold values from the PATTERN.CONSTRUCT field. This is used to decide the process completion status.                  Validation Rules                  The format of PROCESS.CONSTRUCT should accept values in the format PATTERN.CONSTR_UNIQUE.NAME. */ 
 PROCESS_CONSTR : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=40, sysNumber=31.0, t24Name=PROCESS.CONSTR) 
 
 /* PW.PROCESS.DEFINITION                  CONSTR.STATUS                  This field can hold values from the PW.STATUS field. This is used to determine the process completion status.                  The CONSTR.STATUS and ACTIVITY.STATUS are mutually exclusive fields.                  Validation Rules                  Input must have an existing code on PW.STATUS. */ 
 CONSTR_STATUS -> PW_Foundation:PW_STATUS 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=32.0, t24Name=CONSTR.STATUS) 
 
 /* Links to a rule that if true will set the status of the process to that held in the associated ALLOWED.STATUS.       Validation Rules:           Input must have an existing code on PW.TRANSITION */ 
 PROCESS_STATUS_RULE -> PW_Foundation:PW_TRANSITION 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=33.0, t24Name=PROCESS.STATUS.RULE) 
 
 RESERVED_10 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=34.0, t24Name=RESERVED.10) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=35.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=36.0, t24Name=RESERVED.8) 
 } 
 PW_PROCESS_DEFINITION__OVERRIDE 
 { 
 /* PW.PROCESS.DEFINITION                 OVERRIDE                 This holds the override messages of PW.PROCESS.DEFINITION */ 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=45.0, t24Name=OVERRIDE) 
 } 
 PW_PROCESS_DEFINITION__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=48.0, t24Name=INPUTTER) 
 } 
 PW_PROCESS_DEFINITION__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=49.0, t24Name=DATE.TIME) 
 } 
 /* PW.PARTICIPANT This table helps in grouping together users. The grouped users can be made as default owners of activities and processes. This helps them in identifying their Daily work and can use the Enquiry to drill down and launch their tasks. */ 
 PW_PARTICIPANT 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 /* PW.PARTICIPANT  @ID  A descriptive key, ideally the name of a USER or DEPT.ACCT.OFFICER group or who are responsible for certain areas of work.  Validation Rules  Up to 35 Alphanumeric      characters. */ 
 PW_PARTICIPANT_ID : mml:string PK required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=PW.PARTICIPANT.ID) 
 
 DESCRIPTION -> byValue PW_Foundation:PW_PARTICIPANT__DESCRIPTION * 
 
 SHORT_DESC -> byValue PW_Foundation:PW_PARTICIPANT__SHORT_DESC * 
 
 ACCT_OFFICER -> byValue PW_Foundation:PW_PARTICIPANT__ACCT_OFFICER * 
 
 USER -> byValue PW_Foundation:PW_PARTICIPANT__USER * 
 
 /* PW.PARTICIPANT  LAST.USER  Indicates the last USER from the multi-value list of USERs that was assigned to a PW.ACTIVITY.TXN.  Automatically populated with each new PW.ACTIVITY.TXN record that has been created.   Validation Rules  No input field.      Automatically populated. */ 
 LAST_USER : mml:string 
 @i18n:Label (en="Last User") 
 @i18n:Tooltip (en="Last User") 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=5.0, t24Name=LAST.USER) 
 
 /* PW.PARTICIPANT  LAST.DAO  Indicates the last DEPT.ACCT.OFFICER from the multi-value list of ACCT.OFFICERs that was assigned to a PW.ACTIVITY.TXN.  Automatically populated with each new PW.ACTIVITY.TXN record that has been created.   Validation Rules  No input field.      Automatically populated. */ 
 LAST_DAO : mml:string 
 @i18n:Label (en="Last DAO") 
 @i18n:Tooltip (en="Last Dao") 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=6.0, t24Name=LAST.DAO) 
 
 /* Field to indicate if the activity can be assigned to an external user. */ 
 ALLOW_EXT_USR : PW_Foundation:PW_PARTICIPANT__ALLOW_EXT_USR 
 @i18n:Label (en="Allow Ext Usr") 
 @i18n:Tooltip (en="Allow External User") 
 @t24:i (align=L, inputBehaviour=I, maxLength=1, sysNumber=7.0, t24Name=ALLOW.EXT.USR) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=8.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=9.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=10.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=11.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=12.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=13.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=14.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=15.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=16.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_PARTICIPANT__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=19.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=20.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_PARTICIPANT__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_PARTICIPANT__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=23.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=24.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=25.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=26.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=27.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_PARTICIPANT__DESCRIPTION 
 { 
 /* PW.PARTICIPANT  DESCRIPTION  Describes the PW.PARTICIPANT record and is used for the enrichment of the key.  Validation Rules  Up to 35 Alphanumeric characters. */ 
 DESCRIPTION : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 PW_PARTICIPANT__SHORT_DESC 
 { 
 /* PW.PARTICIPANT  SHORT.DESC  Describes the PW.PARTICIPANT record in an abbreviated form, which can be used for reporting purposes where space is limited.   Validation Rules  Up to 35 Alphanumeric      characters. */ 
 SHORT_DESC : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=2.0, t24Name=SHORT.DESC) 
 } 
 PW_PARTICIPANT__ACCT_OFFICER 
 { 
 /* PW.PARTICIPANT  ACCT.OFFICER  Multi-value field to define list of ACCT.OFFICERs each of which will be automatically, cyclically assigned ownership to a PW.ACTIVITY.TXN.   Validation Rules  Up to 35 alphanumeric      characters.  Accepts valid      DEPT.ACCT.OFFICER key only.  Will not allow data to be      inputted if USER/s have already been entered. ACCT.OFFICER and USER fields      are mutually exclusive. A PW.PARTICIPANT record can only contain either a      USER/list of USERS OR an ACCT.OFFICER/list of ACCT.OFFICERs. */ 
 ACCT_OFFICER -> ST_Config:DEPT_ACCT_OFFICER 
 @t24:i (align=R, inputBehaviour=I, maxLength=35, sysNumber=3.0, t24Name=ACCT.OFFICER) 
 } 
 PW_PARTICIPANT__USER 
 { 
 /* PW.PARTICIPANT  USER  Multi-value field to define list of USERs each of which will be automatically, cyclically assigned ownership to a PW.ACTIVITY.TXN.   Validation Rules  Up to 35 alphanumeric      characters.  Accepts valid USER key      only.  Will not allow data to be      inputted if ACCT.OFFICER/s have already been entered. ACCT.OFFICER and      USER fields are mutually exclusive. A PW.PARTICIPANT record can only      contain either a USER/list of USERS OR an ACCT.OFFICER/list of      ACCT.OFFICERs. */ 
 USER -> EB_Security:USER 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, t24Name=USER) 
 } 
 PW_PARTICIPANT__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=18.0, t24Name=OVERRIDE) 
 } 
 PW_PARTICIPANT__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=21.0, t24Name=INPUTTER) 
 } 
 PW_PARTICIPANT__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=22.0, t24Name=DATE.TIME) 
 } 
 /* Parameter table of the PW product. */ 
 PW_PARAMETER 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 /* The only ID of this Table is 'SYSTEM'. */ 
 SYSTEM : PW_Foundation:PW_PARAMETER__SYSTEM PK required 
 @i18n:Label (en=System) 
 @t24:i (align=R, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=SYSTEM) 
 
 DESCRIPTION -> byValue PW_Foundation:PW_PARAMETER__DESCRIPTION * 
 
 /* PW.PROCESS and PW.ACTIVITY.TXN records are archived if the COMPLETION.DATE of PW.PROCESS record is older than or equal to this date.     Validation:   1. valid T24 date field.   2. 1 - 8 characters   3. Optional input.   4. Mutually exclusive with RETENTION.PERIODDate on which the PW.PROCESS records should be moved from live to history. */ 
 MOV_HIS_DATE : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=2.0, t24Name=MOV.HIS.DATE) 
 
 /* PW.PROCESS and PW.ACTIVITY.TXN records are archived if the COMPLETION.DATE of PW.PROCESS record is older than or equal to this period.   Alternative method of specifying the MOV.HIS.DATE.    In the format nnD or nnW or nnM or nnY where nn is a number of either Days or Weeks or Months or Years   Validation:   1. Valid T24 period    2. 1-10 type "A" (alphanumeric) characters.   3. Should be in the format nnD (days) or nnW (weeks) or nnM (months) or nnY (years)   4. Mutually exclusive with MOV.HIS.DATE.Number of days the record can stay in live file after  PW.PROCESS is completed, monthly,yearly or weekly. */ 
 RETENTION_PERIOD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=10, sysNumber=3.0, t24Name=RETENTION.PERIOD) 
 
 /* Setting this field to YES enables us to define the pattern construct fields in PW.PROCESS.DEFINITION.The value of NO prevents the user from using the pattern constructs in the process definition.   Validation:   1. Value of YES or NO. */ 
 USE_WFLOW_PATTERNS : PW_Foundation:PW_PARAMETER__USE_WFLOW_PATTERNS 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, t24Name=USE.WFLOW.PATTERNS) 
 
 RESERVED_10 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=5.0, t24Name=RESERVED.10) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=6.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=7.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=8.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=9.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=10.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=11.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=12.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=13.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=14.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_PARAMETER__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=17.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=18.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_PARAMETER__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_PARAMETER__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=21.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=22.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=23.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=24.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=25.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_PARAMETER__DESCRIPTION 
 { 
 /* Description of PW.PARAMETER   Validaton:   1. 1-35 type "A" (any) characters.   2. Mandatory and multivaluable. */ 
 DESCRIPTION : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 PW_PARAMETER__OVERRIDE 
 { 
 /* A multivalued override field with NO-INPUT. */ 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=16.0, t24Name=OVERRIDE) 
 } 
 PW_PARAMETER__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=19.0, t24Name=INPUTTER) 
 } 
 PW_PARAMETER__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=20.0, t24Name=DATE.TIME) 
 } 
 PW_MAPPING 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 MAPPING_NAME : mml:string PK required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=MAPPING.NAME) 
 
 TABLE_TO : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=1.0, t24Name=TABLE.TO) 
 
 DATA_NAME -> byValue PW_Foundation:PW_MAPPING__DATA_NAME * 
 
 MAP_SOURCE_ID -> byValue PW_Foundation:PW_MAPPING__MAP_SOURCE_ID * 
 
 TARGET_FIELD -> byValue PW_Foundation:PW_MAPPING__TARGET_FIELD * 
 
 OVERWRITE : PW_Foundation:PW_MAPPING__OVERWRITE 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=7.0, t24Name=OVERWRITE) 
 
 RESERVED_10 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=8.0, t24Name=RESERVED.10) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=9.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=10.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=11.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=12.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=13.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=14.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=15.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=16.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=17.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_MAPPING__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=20.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=21.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_MAPPING__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_MAPPING__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=24.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=25.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=26.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=27.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=28.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_MAPPING__DATA_NAME 
 { 
 DATA_NAME : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=2.0, t24Name=DATA.NAME) 
 
 DATA_SOURCE : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=3.0, t24Name=DATA.SOURCE) 
 } 
 PW_MAPPING__MAP_SOURCE_ID 
 { 
 MAP_SOURCE_ID : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, t24Name=MAP.SOURCE.ID) 
 } 
 PW_MAPPING__TARGET_FIELD 
 { 
 TARGET_FIELD : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=40, sysNumber=5.0, t24Name=TARGET.FIELD) 
 
 TARGET_VALUE : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=6.0, t24Name=TARGET.VALUE) 
 } 
 PW_MAPPING__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=19.0, t24Name=OVERRIDE) 
 } 
 PW_MAPPING__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=22.0, t24Name=INPUTTER) 
 } 
 PW_MAPPING__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=23.0, t24Name=DATE.TIME) 
 } 
 PW_MAP_SOURCE 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 MAPPING_NAME : mml:string PK required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=MAPPING.NAME) 
 
 DATA_NAME : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=1.0, t24Name=DATA.NAME) 
 
 DATA_SOURCE -> byValue PW_Foundation:PW_MAP_SOURCE__DATA_SOURCE * 
 
 RESERVED_10 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=3.0, t24Name=RESERVED.10) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=4.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=5.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=6.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=7.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=8.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=9.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=10.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=11.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=12.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_MAP_SOURCE__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=15.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=16.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_MAP_SOURCE__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_MAP_SOURCE__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=19.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=20.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=21.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=22.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=23.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_MAP_SOURCE__DATA_SOURCE 
 { 
 DATA_SOURCE : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=2.0, t24Name=DATA.SOURCE) 
 } 
 PW_MAP_SOURCE__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=14.0, t24Name=OVERRIDE) 
 } 
 PW_MAP_SOURCE__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=17.0, t24Name=INPUTTER) 
 } 
 PW_MAP_SOURCE__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=18.0, t24Name=DATE.TIME) 
 } 
 /* This table contains the individual activities. Every activity contains default duration and the activities are defined as either manual or auto. Activities also carry the intended target which could be a T24 version. The activities are scanned through for the rules specified and an appropriate status is allotted. The activity while scanning for the compliance of transitions comes out of the scan if a particular transition is successfully validated. Thus, the earliest transition that is matching is being accepted and the appropriate status defined in the associated multi value set is taken as the status for the current instance of the activity. If the activity does not fit with any of the rules specified as a part of transition, then the default status code is allotted. Default Participants can be allotted to a particular activity.        Status code and Transition together form a multi value set. Complete.Status  field enables to define whether attainment of this status could be denoted as completion of the activity. For example, we could say that the record is not completed until certain conditions are met. Then even though record gets validated and accepted within T24, as far as the workflow goes the activity remains unfinished and activity needs to be completed for further progress in the workflow.        Target denotes the actual T24 template/version to be invoked whenever the activity is launched.         Activity type is also either MANUAL or AUTO. Auto denotes an automatic activity which is actually worked upon by the routine attached. This runs as a background task. */ 
 PW_ACTIVITY 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 /* PW.ACTIVITY            @ID            Descriptive key used for naming of the PW.ACTIVITY records.            If the Id starts with 'WS.', it means the Activity is created for being used in Web Services.            Validation Rules            Up to 35 alphanumeric      characters.            Must follow naming  convention where key is made up of a PW.VERB key followed by a PW.ACTIVITY.OBJECT key.            eg:- 'CREATE.ACCOUNT'is a PW.ACTIVITY ID with 'CREATE' being a PW.VERB key and 'ACCOUNT' being a PW.ACTIVITY.OBJECT key, both separated by a '.'           If ID of the PW.ACTIVITY record is prefixed with â€˜WS.â€™,then there is no ID validation for PW.VERB and PW.ACTIVITY.OBJECT. */ 
 PW_ACTIVITY_ID : mml:string PK required 
 @i18n:Label (en="Activity Id") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=PW.ACTIVITY.ID) 
 
 DESCRIPTION -> byValue PW_Foundation:PW_ACTIVITY__DESCRIPTION * 
 
 SHORT_DESC -> byValue PW_Foundation:PW_ACTIVITY__SHORT_DESC * 
 
 /* PW.ACTIVITY            DEF.DURATION            Default duration of this activity in definable units.            Validation Rules            1-3 numeric characters may      be entered.             Mandatory field, if ID does not start with "WS." */ 
 DEF_DURATION : mml:string 
 @i18n:Label (en="Default Duration") 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=3.0, t24Name=DEF.DURATION) 
 
 /* PW.ACTIVITY            ACTIVITY.TYPE            Set to Manual for manual Activities, activities executed from the ENQUIRY or set to AUTO for OFS activities, to be executed via OFS.             Validation Rules            MANUAL or AUTO. */ 
 ACTIVITY_TYPE : PW_Foundation:PW_ACTIVITY__ACTIVITY_TYPE 
 @i18n:Label (en=Type) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=4.0, t24Name=ACTIVITY.TYPE) 
 
 STATUS_CODES -> byValue PW_Foundation:PW_ACTIVITY__STATUS_CODES * 
 
 /* This can accept any valid keys of EB.RULE.GATEWAY application. This is mutually exclusive with the STATUS.CODES and STATUS.RULES multi-value set.       Validation Rules      0-35 characters      Optional field */ 
 EVAL_RULE -> EB_RulesEngine:EB_RULE_GATEWAY 
 @i18n:Label (en="Evaluation Rule") 
 @i18n:Tooltip (en="Eval Rule") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=7.0, t24Name=EVAL.RULE) 
 
 COMPLETE_STATUS -> byValue PW_Foundation:PW_ACTIVITY__COMPLETE_STATUS * 
 
 /* PW.ACTIVITY            OWNER            This is the key to the PW.PARTICIPANT record which lists the USERs or ACCT.OFFICERs that will be allocated to the activities in the process. If this OWNER field is not set then the OWNER field on the PW.PROCESS record will be used to determine ownership of a PW.ACTIVITY.TXN.            Validation Rules            A valid PW.PARTICIPANT key. */ 
 OWNER -> PW_Foundation:PW_PARTICIPANT 
 @i18n:Label (en=Owner) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=9.0, t24Name=OWNER) 
 
 /* PW.ACTIVITY         TARGET         This field holds the T24 Application/Version/Enquiry and Function which should be presented to the USER upon the execution of the Activity i.e. the Application/version/Enquiry associated with the Activity.          If a new Id is to be generated upon the execution of the Activity then the format would be like:         ACCOUNT, I F3           If ID mapping is specified that it is enough if we specify the Application/version name along with the function:         ACCOUNT, I         if any Application/version name is mentioned in the field DEFAULT.TARGET in associated PW.ACTIVITY.OBJECT then it will get defaulted when trying to create a new PW.ACTIVITY.        To launch an enquiry ,the format would be like          ENQ <ENQUIRY NAME>          Validation Rules         Standard T24 application / version / Enquiry name along with the Function */ 
 TARGET : mml:string required 
 @i18n:Label (en=Target) 
 @i18n:Tooltip (en=Target) 
 @t24:i (align=L, inputBehaviour=I, maxLength=55, sysNumber=10.0, t24Name=TARGET) 
 
 /* PW.ACTIVITY         DEF.STATUS.CODE         This field holds the default PW.STATUS the PW.ACTIVITY.TXN of the PW.ACTIVITY would assume, if none of the conditions mentioned in the STATUS.RULES get satisfied.         Validations:         Mandatory field, if ID does not start with "WS."         A valid key of PW.STATUS */ 
 DEF_STATUS_CODE -> PW_Foundation:PW_STATUS 
 @i18n:Label (en="Def Status Code") 
 @i18n:Tooltip (en="Def Status Code") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=11.0, t24Name=DEF.STATUS.CODE) 
 
 /* PW.ACTIVITY            MAPPING.ID            This is a PW.MAPPING key which contains all the data mapping rules for the APPLICATION that is launched via this PW.ACTIVITY record.            Validation Rules            A valid PW.MAPPING key.            Should not be defined when the TARGET is an enquiry. */ 
 MAPPING_ID -> PW_Foundation:PW_MAPPING 
 @i18n:Label (en="Mapping Id") 
 @i18n:Tooltip (en="Mapping Id") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=12.0, t24Name=MAPPING.ID) 
 
 /* PW.ACTIVITY         PRIORITY         Can be populated for audit or reporting reasons         Validations:         Non-Mandatory field */ 
 PRIORITY : PW_Foundation:PW_ACTIVITY__PRIORITY 
 @i18n:Label (en=Priority) 
 @t24:i (align=R, inputBehaviour=I, maxLength=1, sysNumber=13.0, t24Name=PRIORITY) 
 
 /* PW.ACTIVITY         OFS.SOURCE.ID         This field holds the name of the OFS.SOURCE record ID which is used by the service PW.MAP.ACTIVITY to execute the Activity via OFS.         Validations:         Mandatory field if the ACTIVITY.TYPE is AUTO.         A valid key of OFS.SOURCE */ 
 OFS_SOURCE_ID -> EB_Interface:OFS_SOURCE 
 @i18n:Label (en="OFS Source Id") 
 @i18n:Tooltip (en="Ofs Source Id") 
 @t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=14.0, t24Name=OFS.SOURCE.ID) 
 
 /* PW.ACTIVITY          EB.MAPPING          This is new generalized and enhanced mapping mechanism when compared with PW.MAPPING. This mapping techinque which allows universal ID mapping, the ability to manipulate data through concatenation, using routines, local reference mapping and basic mathematical operations such as addition, subtraction, multiplication, division and mapping from $NAU files etc.          The new functionality will make use of the EB.FORMAT.ENTRY module and be attached to the current PW module through EB.MAPPING.SOURCE.          This does not stop running PW mapping which is already set-up. But no-longer PW mapping can be specified for new Activities which are set-up.           If both PW.MAPPING and EB.MAPPING are specified only ID mapping can be acheived via EB.MAPPING. For field mappings only PW.MAPPING mechanism will be used.          Validations          Non-mandatory field.          If specified, a Valid key from EB.MAPPING.SOURCE          Should not be defined when the TARGET is an enquiry. */ 
 EB_MAPPING -> EB_SystemTables:EB_MAPPING_SOURCE 
 @i18n:Label (en="Mapping Source") 
 @i18n:Tooltip (en="Eb Mapping") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=15.0, t24Name=EB.MAPPING) 
 
 /* This field holds an API hook routine which returns the Participant + User to be allocated to the PW.ACTIVITY.TXN for the Activity */ 
 ALT_OWNER : mml:string 
 @i18n:Label (en="Alternate Owner") 
 @i18n:Tooltip (en="Alt Owner") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=16.0, t24Name=ALT.OWNER) 
 
 /* PW.ACTIVITY           EXPIRATION.HOURS           Specifies the duration in hours before the activity expires.It is used with reference to the DEF.DURATION and EXPIRATION.MINS.       Validation Rules      Numeric character. */ 
 EXPIRATION_HOURS : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=17.0, t24Name=EXPIRATION.HOURS) 
 
 /* PW.ACTIVITY           EXPIRATION.MINS           Specifies the duration in minutes before the activity expires.It is used with reference to the DEF.DURATION and EXPIRATION.HOURS.       Validation Rules      Numeric character. */ 
 EXPIRATION_MINS : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=18.0, t24Name=EXPIRATION.MINS) 
 
 /* PW.ACTIVITY           MONITOR.STAGE           This field should be set to START to record the duration metrics of the Activity           The fields MONITOR.INIT.DATE, MONITOR.INIT.TIME, DUE.DATE and DUE.TIME of the corresponding PW Activity Txn record gets updated.       Validation Rules      This is a non mandatory field.       Can take the values START,COMPENSATE,FAULT */ 
 MONITOR_STAGE : PW_Foundation:PW_ACTIVITY__MONITOR_STAGE 
 @t24:i (align=L, inputBehaviour=I, maxLength=12, sysNumber=19.0, t24Name=MONITOR.STAGE) 
 
 /* PW.ACTIVITY           MONITOR.KPI           Reserved for future Use      Validation Rules      No Input field */ 
 MONITOR_KPI : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=5, sysNumber=20.0, t24Name=MONITOR.KPI) 
 
 /* PW.ACTIVITY           MONITOR.ACTION           Reserved for future Use      Validation Rules      No Input field */ 
 MONITOR_ACTION : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=5, sysNumber=21.0, t24Name=MONITOR.ACTION) 
 
 /* PW.ACTIVITY            SLA            This field is used to define a SLA(Service Level Agreement) for the concerned activity.            INPUT only when SG product is installed otherwise NOINPUT.            Validation Rules            Up to 35 alphanumeric characters.            Must be a valid record from SG.SLA application. */ 
 SLA -> SG_Framework:SG_SLA 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=22.0, t24Name=SLA) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=23.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=24.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=25.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_ACTIVITY__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=28.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=29.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_ACTIVITY__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_ACTIVITY__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=32.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=33.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=34.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=35.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=36.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_ACTIVITY__DESCRIPTION 
 { 
 /* PW.ACTIVITY            DESCRIPTION            Described the PW.ACTIVITY record and is used as an enrichment for the PW.ACTIVITY. key.            Validation Rules            Up to 35 alphanumeric      characters. */ 
 DESCRIPTION : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 PW_ACTIVITY__SHORT_DESC 
 { 
 /* PW.ACTIVITY            SHORT.DESC            Describes the PW.ACTIVITY record in an abbreviated format, which can be used for reporting            Validation Rules            1-35 alphanumeric      characters may be entered.             Mandatory field. */ 
 SHORT_DESC : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=2.0, t24Name=SHORT.DESC) 
 } 
 PW_ACTIVITY__STATUS_CODES 
 { 
 /* PW.ACTIVITY            STATUS.CODES            This is the PW.STATUS code that the PW.ACTIVITY.TXN record will be changed to when the rules or conditions set up in the corresponding PW.TRANSITION record, indicated in the STATUS.RULES field, have been met.            Validation Rules            Any valid PW.STATUS key. */ 
 STATUS_CODES -> PW_Foundation:PW_STATUS 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=5.0, t24Name=STATUS.CODES) 
 
 /* PW.ACTIVITY            STATUS.RULES            This is the PW.TRANSITION key to the record that contains the rule or condition, which determines if the STATUS.CODE changes on the PW.ACTIVITY.TXN record.            Validation Rules            Any valid PW.TRANSITION      key. */ 
 STATUS_RULES -> PW_Foundation:PW_TRANSITION 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=6.0, t24Name=STATUS.RULES) 
 } 
 PW_ACTIVITY__COMPLETE_STATUS 
 { 
 /* This field can accept any valid keys of the application PW.STATUS. The values in this field determines the completion status of the respective activity.       Validation Rules      0-35 characters      Multi value field */ 
 COMPLETE_STATUS -> PW_Foundation:PW_STATUS 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=8.0, t24Name=COMPLETE.STATUS) 
 } 
 PW_ACTIVITY__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=27.0, t24Name=OVERRIDE) 
 } 
 PW_ACTIVITY__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=30.0, t24Name=INPUTTER) 
 } 
 PW_ACTIVITY__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=31.0, t24Name=DATE.TIME) 
 } 
 /* PW.ACTIVITY.TXN   The records in this table are created automatically by the system. The records are created either at the time of authorization of the PW.PROCESS record or upon the completion of an activity. Upon completion of an activity, the system scans through the PROCESS.DEFINTION record and creates PW.ACTIVITY.TXN records for all activities that could be started now.   PW.ACTIVITY.TXN records also contain the start date /end date of the particular activity. Also the T24 transaction reference is stored. A concat file PW.TXN.REF is also updated with the transaction reference for later reference and easy retrieval. */ 
 PW_ACTIVITY_TXN 
 @t24:i (level=I, type=H, localRefAllowed=true) 
 { 
 /* PW.ACTIVITY.TXN           @ID           This is an alphanumeric serial key to identify each individual activity transaction within a process. This key is automatically generated using the F.LOCKING file and a record must be set up in the F.AUTO.ID.START file for the PW.PROCESS and PW.ACTIVITY.TXN files before creating processes.           This is a system generated code. PW.ACTIVITY.TXN records will only be created once a PW.PROCESS record is committed and authorised and only for activities which are not dependant on a PRE.REQ.ACT, PRE.REQ.STAT or PRE.REQ.RULES (in the PW.PROCESS.DEFINITION record).           If PW.ACTIVITY.TXN records are not being created, check that at least one STATUS.CODES multi-value group has a COMPLETE flag set defining which STATUS.CODES/RULES ends or completes the activity.           Validation Rules */ 
 PW_ACTIVITY_TXN_ID : mml:string PK required 
 @i18n:Label (en="Activity Txn") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=PW.ACTIVITY.TXN.ID) 
 
 /* PW.ACTIVITY.TXN           PROCESS           This is an alphanumeric serial key to identify that identifies the PW.PROCESS that this PW.ACTIVITY.TXN record is part of.           Validation Rules      System maintained and no-input field.      A valid PW.PROCESS id */ 
 PROCESS -> PW_Foundation:PW_PROCESS 
 @i18n:Label (en="Process Id") 
 @t24:i (align=L, inputBehaviour=E, maxLength=35, sysNumber=1.0, t24Name=PROCESS) 
 
 /* PW.ACTIVITY.TXN           ACTIVITY           The PW.ACTIVITY key which defines which activity ids being run.           Validation Rules      System maintained and no-input field.      A valid PW.ACTIVITY Id. */ 
 ACTIVITY -> PW_Foundation:PW_ACTIVITY 
 @i18n:Label (en=Activity) 
 @t24:i (align=L, inputBehaviour=E, maxLength=35, sysNumber=2.0, t24Name=ACTIVITY) 
 
 /* PW.ACTIVITY.TXN           OWNER           The PW.PARTICIPANT key which defines which USER/ DEPT.ACCT.OFFICER group is responsible for this activity transaction.           Defaulted from the PW.PROCESS record but can be changed to allocate the activity transaction record to another group.           Validation Rules     A valid key of PW.PARTICIPANT */ 
 OWNER -> PW_Foundation:PW_PARTICIPANT 
 @i18n:Label (en=Owner) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=3.0, t24Name=OWNER) 
 
 ASSIGN_DATE -> byValue PW_Foundation:PW_ACTIVITY_TXN__ASSIGN_DATE * 
 
 /* PW.ACTIVITY.TXN           START.DATE           THE date the PW.PROCESS record was created by the system is defaulted into the START.DATE on this PW.ACTIVITY.TXN record.           Validation Rules       Standard Date Field. */ 
 START_DATE : mml:string 
 @i18n:Label (en="Start Date") 
 @i18n:Tooltip (en="Start Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=7.0, t24Name=START.DATE) 
 
 /* PW.ACTIVITY.TXN           DUE.DATE           The date on which the activity is due is defaulted to this field. This date is calculated by adding the value of the fields DEF.DURATION,EXPIRATION.HOURS and EXPIRATION.MINS from the PW.ACTIVITY record to the MONITOR.INIT.DATE           Validation Rules      This is a non-mandatory field.      Standard Date Type */ 
 DUE_DATE : mml:string 
 @i18n:Label (en="Due Date") 
 @i18n:Tooltip (en="Due Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=8.0, t24Name=DUE.DATE) 
 
 /* PW.ACTIVITY.TXN           COMPLETION.DATE           THE date the PW.ACTIVITY.TXN record is complete. This date is automatically defaulted onto the record when the record is complete &#8211; when the PW.ACTIVITY STATUS.CODES and STATUS.RULES have been met and the complete flag for those fields is set to &#8216;Yes&#8217;.           When the corresponding transaction has been run and it meets the STATUS.RULES set in the PW.ACTIVITY record which in turn changes the STATUS.CODES. When this STATUS.CODE matches what is defined in the PW.PROCESS.DEFINITION as COMPLETE.STAT and the PW.ACTIVITY COMPLETE flag for this STATUS.RULES is set to Yes, then this transaction will be seen as complete.           Validation Rules      This is a non-mandatory field.      Standard Date Type */ 
 COMPLETION_DATE : mml:string 
 @i18n:Label (en="Completion Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=9.0, t24Name=COMPLETION.DATE) 
 
 /* PW.ACTIVITY.TXN           TRANSACTION.REF           The Transaction reference or key to the activity/application that was just run for the activity.           IE. If a new ACCOUNT record was created the new ACCOUNT number would appear in this field           Validation Rules       System maintained and no-input field. */ 
 TRANSACTION_REF : mml:string 
 @i18n:Label (en="Transaction Ref") 
 @i18n:Tooltip (en="Transaction Reference") 
 @t24:i (align=L, inputBehaviour=E, maxLength=35, sysNumber=10.0, t24Name=TRANSACTION.REF) 
 
 /* PW.ACTIVITY.TXN           TARGET           This is the target from the associated PW.ACTIVITY record, that would normally be run from the T24 command line.           EG. ACCOUNT, I F3           Validation Rules         Standard T24 application/version mentioned in PW.ACTIVITY       System maintained and no-input field. */ 
 TARGET : mml:string 
 @i18n:Label (en=Target) 
 @i18n:Tooltip (en=Target) 
 @t24:i (align=L, inputBehaviour=I, maxLength=99, sysNumber=11.0, t24Name=TARGET) 
 
 /* PW.ACTIVITY.TXN           PATTERN.CONSTRUCT           The PATTERN.CONSTRUCT key that holds name of the current construct which is being processed.            Validation Rules       System maintained. This is a NOINPUT field. */ 
 PATTERN_CONSTRUCT : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=12.0, t24Name=PATTERN.CONSTRUCT) 
 
 /* PW.ACTIVITY.TXN           ROUTE.RULE.VALN           This holds the result of EVAL.RULE/EVAL.COND of corresponding ROUTE.TO construct. It has Boolean value either TRUE or FALSE.           Validation Rules       System maintained. This is a NOINPUT field. */ 
 ROUTE_RULE_VALN : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=13.0, t24Name=ROUTE.RULE.VALN) 
 
 /* PW.ACTIVITY.TXN          ROUTE.TO.ACTIVITY          The activity stage in a process to which the process loops back.           Validation Rules       System maintained. This is a NOINPUT field. */ 
 ROUTE_TO_ACTIVITY : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=14.0, t24Name=ROUTE.TO.ACTIVITY) 
 
 /* PW.ACTIVITY.TXN            CONSTRUCT.STATUS            This denotes the status of corresponding pattern construct at runtime. It can either have the status of PENDING or COMPLETED.            Validation Rules       System maintained. This is a NOINPUT field. */ 
 CONSTRUCT_STATUS : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=15.0, t24Name=CONSTRUCT.STATUS) 
 
 /* PW.ACTIVITY.TXN           PW.ACTIVITY.STATUS           The last status of this activity transaction.           This can be the PW.ACTIVITY DEF.STATUS when the PW.ACTIVITY.TXN record is first created or the PW.ACTIVITY STATUS.CODES when a transaction has met a certain condition set out in the associated PW.ACTIVITY STATUS.RULES.           Validation Rules       System maintained. This is a NOINPUT field. */ 
 PW_ACTIVITY_STATUS -> PW_Foundation:PW_STATUS 
 @i18n:Label (en="Activity Status") 
 @i18n:Tooltip (en="Pw Activity Status") 
 @t24:i (align=R, inputBehaviour=E, maxLength=35, sysNumber=16.0, t24Name=PW.ACTIVITY.STATUS) 
 
 /* PW.ACTIVITY.TXN           ACTIVITY.TYPE           Automatically defaulted from the ACTIVITY.TYPE field off the PW.ACTIVITY record.           Validation Rules     System maintained and no-input field.     Either MANUAL or AUTO ( as specified in PW.ACTIVITY) */ 
 ACTIVITY_TYPE : mml:string 
 @i18n:Label (en=Type) 
 @t24:i (align=R, inputBehaviour=E, maxLength=35, sysNumber=17.0, t24Name=ACTIVITY.TYPE) 
 
 RESULT_DATE -> byValue PW_Foundation:PW_ACTIVITY_TXN__RESULT_DATE * 
 
 /* PW.ACTIVITY.TXN           MAPPING.COMP           This is field is set to 'Y' when the activity gets executed for the first time and mapping is done.            This is to avoid doing the mapping again when the activity is re-executed.        Validation Rules        System maintained. This is a no-input field. */ 
 MAPPING_COMP : PW_Foundation:PW_ACTIVITY_TXN__MAPPING_COMP 
 @i18n:Label (en="Mapping Comp") 
 @i18n:Tooltip (en="Mapping Comp") 
 @t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=20.0, t24Name=MAPPING.COMP) 
 
 /* PW.ACTIVITY.TXN           START.TIME         To meet some of the statistical reporting requirements additional duration data needs to be stored on each PW.ACTIVITY.TXN record.  We record Earliest possible start time:         When the activity could have been started ie when the pre requisite tasks had been completed         Validation Rules         System maintained. This is a NOINPUT field. Standard Time format. */ 
 START_TIME : mml:string 
 @i18n:Label (en="Start Time") 
 @i18n:Tooltip (en="Start Time") 
 @t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=21.0, t24Name=START.TIME) 
 
 STATUS -> byValue PW_Foundation:PW_ACTIVITY_TXN__STATUS * 
 
 /* PW.ACTIVITY.TXN           TXN.ITERATION           This denotes the the iteration no. if the current activity is a part of an iteration pattern.           Validation Rules       System maintained. This is a NOINPUT field. */ 
 TXN_ITERATION : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=5, sysNumber=25.0, t24Name=TXN.ITERATION) 
 
 /* PW.ACTIVITY.TXN           PARENT.ACT.TXN           This holds the PW.ACTIVITY.TXN ID of corresponding construct.           This can populated only at the time of the PARALLER.FLOW or SWITCH or RECURSIVE construct in process.           Validation Rules       System maintained. This is a NOINPUT field. */ 
 PARENT_ACT_TXN : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=26.0, t24Name=PARENT.ACT.TXN) 
 
 /* PW.ACTIVITY.TXN           UNIQUE.NAME           This can be used when two or more identical ACTIVITY names are defined in the PW.PROCESS.DEFINITION. The UNIQUE.NAME is also used in conjunction with the workflow pattern consructs.           UNIQUE.NAME is mandatory for every workflow pattern construct defined in the process.            Validation Rules       System maintained. This is a NOINPUT field. */ 
 UNIQUE_NAME : mml:string 
 @i18n:Label (en="Unique Name") 
 @t24:i (align=R, inputBehaviour=N, maxLength=50, sysNumber=27.0, t24Name=UNIQUE.NAME) 
 
 /* PW.PROCESS         PARENT.PROCESS         PW.PROCESS Id in this field denotes the PARENT.PROCESS field value of the PW.PROCESS record which created this activity record.         This is used for enquiry purposes.      Validation Rules      System maintained. This is a NOINPUT field. */ 
 PARENT_PROCESS -> PW_Foundation:PW_PROCESS 
 @i18n:Label (en="Parent Process") 
 @i18n:Tooltip (en="Parent Process") 
 @t24:i (align=R, inputBehaviour=E, maxLength=35, sysNumber=28.0, t24Name=PARENT.PROCESS) 
 
 /* PW.ACTIVITY.TXN           ORIGINATE.PROCESS         PW.PROCESS Id in this field has the PROCESS id which created the entire PW instance.  This field is used to fetch all the ACTIVITY.TXN records of a particular PW instance. This is used for enquiry purposes.         Validation Rules         System maintained. These are NOINPUT fields. */ 
 ORIGINATE_PROCESS -> PW_Foundation:PW_PROCESS 
 @i18n:Label (en="Originate Process") 
 @i18n:Tooltip (en="Originate Process") 
 @t24:i (align=R, inputBehaviour=E, maxLength=35, sysNumber=29.0, t24Name=ORIGINATE.PROCESS) 
 
 /* Holds the Process name of the Activity triggered from BPEL */ 
 EXTERNAL_PROCESS : mml:string 
 @i18n:Label (en="External Process") 
 @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=30.0, t24Name=EXTERNAL.PROCESS) 
 
 /* Holds the Process ID of the Activity triggered from BPEL */ 
 EXT_PROCESS_ID : mml:string 
 @i18n:Label (en="External Process Id") 
 @t24:i (align=L, inputBehaviour=I, maxLength=50, sysNumber=31.0, t24Name=EXT.PROCESS.ID) 
 
 /* PW.ACTIVITY.TXN            MONITOR.INIT.TIME            The Time at which the activity is started is recorded and defaulted in this field.            The Time should be read along with the MONITOR.INIT.DATE field.        Validation Rules        System maintained. */ 
 MONITOR_INIT_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=6, sysNumber=32.0, t24Name=MONITOR.INIT.TIME) 
 
 /* PW.ACTIVITY.TXN            MONITOR.INIT.DATE            The date at which the activity was started is recorded and defaulted in this field.        Validation Rules        System maintained. */ 
 MONITOR_INIT_DATE : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=33.0, t24Name=MONITOR.INIT.DATE) 
 
 /* PW.ACTIVITY.TXN            DUE.TIME            The time at which the activity has to be completed is calculated and defaulted to this field. The due time is read along with the DUE.DATE field        Validation Rules        System maintained. */ 
 DUE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=11, sysNumber=34.0, t24Name=DUE.TIME) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=35.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=36.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=37.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=38.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=39.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=40.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=41.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=42.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_ACTIVITY_TXN__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=45.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=46.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_ACTIVITY_TXN__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_ACTIVITY_TXN__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=49.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=50.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=51.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=52.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=53.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_ACTIVITY_TXN__ASSIGN_DATE 
 { 
 /* PW.ACTIVITY.TXN           ASSIGN.DATE           THE USER automatically allocated to this record can changed or re-allocated to another USER. The date that the USER is manually re-allocated should be added here for audit reasons.           Validation Rules      This is a non-mandatory field.      Standard Date Type */ 
 ASSIGN_DATE : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=4.0, t24Name=ASSIGN.DATE) 
 
 ASSIGN_REASON -> byValue PW_Foundation:PW_ACTIVITY_TXN__ASSIGN_DATE__ASSIGN_REASON * 
 } 
 PW_ACTIVITY_TXN__ASSIGN_DATE__ASSIGN_REASON 
 { 
 /* PW.ACTIVITY.TXN           ASSIGN.REASON           THE reason the USER that was automatically allocated to this record was manually changed to another USER should be stated here.            IE. If the USER that was originally allocated to this record goes on leave or is sick, another USER can be allocated this activity transaction and the reason can be added to the ASSIGN.REASON.           Validation Rules      This is a non-mandatory field.      Standard TEXT Type */ 
 ASSIGN_REASON : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=40, sysNumber=5.0, t24Name=ASSIGN.REASON) 
 
 /* PW.ACTIVITY.TXN           USER           THE USER that was automatically allocated to this record can changed or re-allocated to another USER. This may need to be changed if the original USER is on leave or is sick etc.           Validation Rules     A valid key of PW.PARTICIPANT */ 
 USER : mml:string required 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=6.0, t24Name=USER) 
 } 
 PW_ACTIVITY_TXN__RESULT_DATE 
 { 
 /* PW.ACTIVITY.TXN           RESULT.DATE           Can be populated for audit reasons. To keep a track of when actions were taken for this transaction or activity.            EG. If this activity was to call a client or call for a reference letter, this field can be used to state which date the call was made and along with the corresponding ACTIVITY.RESULT field what the result of the call was. If many calls were made this field can be multi-valued to indicate the various dates the calls were made.           Validation Rules       Standard Date Field. */ 
 RESULT_DATE : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=18.0, t24Name=RESULT.DATE) 
 
 /* PW.ACTIVITY.TXN           ACTIVITY.RESULT           Can be populated for audit reasons. To keep a track of when actions were taken for this transaction or activity.            EG. If this activity was to call a client or call for a reference letter, this field can be used to state what the result of the call was. If many calls were made this field can be used to indicate the various calls were made.           Validation Rules     This is a non-mandatory TEXT type field. */ 
 ACTIVITY_RESULT : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=40, sysNumber=19.0, t24Name=ACTIVITY.RESULT) 
 } 
 PW_ACTIVITY_TXN__STATUS 
 { 
 /* PW.ACTIVITY.TXN           STATUS         To meet some of the statistical reporting requirements additional duration data needs to be stored on each PW.ACTIVITY.TXN record.  We record:         Status, Date & Times of status change - Every time the status changes on, we record the date and time so that we can determine how long the activity was in a specific state – so that we  can easily calculate duration in an enquiry without having to write routines.         STATUS, END.DATE, END.TIME is an associated m/v set.          STATUS – One of the PW.STATUS values which the associated Activity had been         Validation Rules         System maintained. These are NOINPUT field fields.         A valid PW.STATUS */ 
 STATUS : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=22.0, t24Name=STATUS) 
 
 /* PW.ACTIVITY.TXN           END.DATE         To meet some of the statistical reporting requirements additional duration data needs to be stored on each PW.ACTIVITY.TXN record.  We record:         Status, Date & Times of status change - Every time the status changes on, we record the date and time so that we can determine how long the activity was in a specific state – so that we  can easily calculate duration in an enquiry without having to write routines.         STATUS, END.DATE, END.TIME is an associated m/v set.          END.DATE denotes the Date until which Activity was in specific status          Validation Rules         System maintained. These are NOINPUT field fields.         Standard Date Format. */ 
 END_DATE : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=23.0, t24Name=END.DATE) 
 
 /* PW.ACTIVITY.TXN           END.TIME         To meet some of the statistical reporting requirements additional duration data needs to be stored on each PW.ACTIVITY.TXN record.  We record:         Status, Date & Times of status change - Every time the status changes on, we record the date and time so that we can determine how long the activity was in a specific state – so that we  can easily calculate duration in an enquiry without having to write routines.         STATUS, END.DATE, END.TIME is an associated m/v set.          END.TIME denotes the Time until which Activity was in specific status          Validation Rules         System maintained. These are NOINPUT field fields.         Standard Time Format. */ 
 END_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=24.0, t24Name=END.TIME) 
 } 
 PW_ACTIVITY_TXN__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=44.0, t24Name=OVERRIDE) 
 } 
 PW_ACTIVITY_TXN__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=47.0, t24Name=INPUTTER) 
 } 
 PW_ACTIVITY_TXN__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=48.0, t24Name=DATE.TIME) 
 } 
 PW_ACTIVITY_OBJECT 
 @t24:i (level=I, type=U, localRefAllowed=true) 
 { 
 PW_ACTIVITY_OBJECT_ID : mml:string PK required 
 @i18n:Label (en="Pw Activity Object Id") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=PW.ACTIVITY.OBJECT.ID) 
 
 DESCRIPTION -> byValue PW_Foundation:PW_ACTIVITY_OBJECT__DESCRIPTION * 
 
 DEFAULT_TARGET : mml:string 
 @i18n:Label (en="Default Target") 
 @i18n:Tooltip (en="Default Target") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=2.0, t24Name=DEFAULT.TARGET) 
 
 RESERVED_10 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=3.0, t24Name=RESERVED.10) 
 
 RESERVED_9 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=4.0, t24Name=RESERVED.9) 
 
 RESERVED_8 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=5.0, t24Name=RESERVED.8) 
 
 RESERVED_7 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=6.0, t24Name=RESERVED.7) 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=7.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=8.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=9.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=10.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=11.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=12.0, t24Name=RESERVED.1) 
 
 OVERRIDE -> byValue PW_Foundation:PW_ACTIVITY_OBJECT__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=15.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=16.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue PW_Foundation:PW_ACTIVITY_OBJECT__INPUTTER * 
 
 DATE_TIME -> byValue PW_Foundation:PW_ACTIVITY_OBJECT__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=19.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=20.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=21.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=22.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=23.0, t24Name=AUDIT.DATE.TIME) 
 } 
 PW_ACTIVITY_OBJECT__DESCRIPTION 
 { 
 DESCRIPTION : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, multiLanguage=true, sysNumber=1.0, t24Name=DESCRIPTION) 
 } 
 PW_ACTIVITY_OBJECT__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=14.0, t24Name=OVERRIDE) 
 } 
 PW_ACTIVITY_OBJECT__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=17.0, t24Name=INPUTTER) 
 } 
 PW_ACTIVITY_OBJECT__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=18.0, t24Name=DATE.TIME) 
 } 
 } 
 Enumerations { 
 PW_TRANSITION__SELECTION_FIELD__OPERAND : mml:string 
 EQ=EQ 
 NE=NE 
 GT=GT 
 GE=GE 
 LT=LT 
 LE=LE 
 LK=LK 
 UL=UL 
 
 PW_TRANSITION__SELECTION_OPERAND : mml:string 
 AND=AND 
 OR=OR 
 
 PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT__OPERATION : mml:string 
 AND=AND 
 OR=OR 
 
 PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT__TIME_TRIGGER : mml:string 
 YES=YES 
 NO=NO 
 
 PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT__FOLLOW_ON_ACT : mml:string 
 NO=NO 
 YES=YES 
 
 PW_PROCESS_DEFINITION__ACTIVITY__PRE_REQ_ACT__PATTERN_CONSTR : mml:string 
 ROUTE_TO=ROUTE.TO 
 PARALLEL_FLOW=PARALLEL.FLOW 
 SWITCH=SWITCH 
 
 PW_PARTICIPANT__ALLOW_EXT_USR : mml:string 
 Y=Y 
 N=N 
 
 PW_PARAMETER__SYSTEM : mml:string 
 SYSTEM=SYSTEM 
 
 PW_PARAMETER__USE_WFLOW_PATTERNS : mml:string 
 YES=YES 
 NO=NO 
 
 PW_MAPPING__OVERWRITE : mml:string 
 YES=YES 
 NO=NO 
 
 PW_ACTIVITY__ACTIVITY_TYPE : mml:string 
 MANUAL=MANUAL 
 AUTO=AUTO 
 
 PW_ACTIVITY__PRIORITY : mml:string 
 n1=1 
 n2=2 
 n3=3 
 n4=4 
 n5=5 
 
 PW_ACTIVITY__MONITOR_STAGE : mml:string 
 START=START 
 COMPENSATE=COMPENSATE 
 FAULT=FAULT 
 
 PW_ACTIVITY_TXN__MAPPING_COMP : mml:string 
 Y=Y 
 
 } 
