# UTF-8
 /* Template Servicing Of Teller */ 
 Domain TT_Contract 
 @t24:i (module=TT) 
 @java:Package (value=com.temenos.t24.datamodel.tt.tt_contract) 
 namespace "http://www.temenos.com/t24/TT_Contract" 
 metamodelVersion 4.3.0.20110527 
 Classes { 
 /* The TELLER application processes all retail transactions and generates self-balancing entries to the main accounting system.    There are two sides to each transaction, the input side (1) and the balancing side (2). Although there are many types of transaction (cash deposit, buy foreign currency etc) they are all processed in the same way. The TELLER.TRANSACTION file determines default account numbers, charges, value dates, advice printing etc.    In order to input a transaction the current user must be assigned to an open till number (see TELLER.ID) and it is this number which will determine the internal cash account to be maintained. This number is prompted for on entry of the user's first transaction.    Teller can now handle transactions with multiple buy and/or sell transactions within one overall deal. This allows the bank to perform more complex 'Bureau de Change' transactions within a single stream transaction.    Automatic calculation of commissions and charges is provided and (for more awkward requirements) the ability to provide the nearest matches above/below currency amounts, for example 'Approx GBP 50 of French Francs' taking into account the actual stock of French banknotes held.    When a type of charge or commission is included in a multi-line deal it is applied once for the deal. If the type of charge or commission is dependant on the deal amount then it is calculated once on the total of the amounts in individual lines of the deal with maximum and minimum restrictions applied. More than one charge or commission type may be applied to a deal. When each line is committed the opportunity is presented to specify a single charge amount which replaces all the other charges for a deal. */ 
 TELLER 
 @t24:i (level=F, type=H, localRefAllowed=true) 
 { 
 /* This is the reference to the TELLER transaction. It can be in one of two formats; one the standard T24 transaction format means the contract is what may be termed a 'single-leg transaction' where the details of the transaction are on a single TELLER record. Alternatively, there can be transactions which we will refer to as multi-line (meaning there is normally more than one line or leg) and the details of each leg are recorded on a Master record (which shows all the legs and the total charges).    The purpose of the multi-line contracts is to allow a client to purchase (or sell) several currencies and be charged commission based on the entire deal rather than several unconnected transactions which could impose the minimum charge for each trade.    Single Leg and Master deal references appear as TTyydddnnnnn    Multi-line deals appear as TTyydddnnnnn-nn    Where yyddd is the Year and day number (Julian date format) and nnnnn/nnnnn-nn are 00001/00001-01 to 99999/99999-99    References can be entered manually or you can allow the system to generate the next one automatically. The COMPANY record must have the TELLER application included in the field PGM.AUTOM.ID and have had the first value set via a valid AUTO.ID.START record. Single legs can than be generated with the 'Next record' icon or F3 function key. Multi-line deals are normally invoked by using a '-' character (without the quotes), with further leg id's being prompted for.    It should be noted that the multi-line deals are considered as a 'single entity' by the system. Accounting/charges are still made Real -Time for each leg with Position and PM movements, so T24 is always up to date, but from the Client point of view the transaction is a single deal. If the Version is set for zero authorisation the Teller will see a prompt to 'Finish' the input. If, however, the Version is set for 1 authoriser then if the Teller exits the deal it is not deemed complete, more legs can be added or a separate authorisation process is required.    Validation Rules    The date must be TODAY for all functions except S, D         & P.    The id must be prefixed by TT.    Cannot add legs to a fully authorised deal */ 
 TRANSACTION_NUMBER : mml:string PK required 
 @i18n:Label (en=Description) 
 @t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=0.0, t24Name=TRANSACTION.NUMBER) 
 
 /* The actual type of deal is controlled by the value entered here. The record entered must be present on an application file called TELLER.TRANSACTION and it is this underlying record which affects the currencies permitted, which accounts are allowed, whether charges are to be defaulted and so on.    Each TELLER deal has two sides; one will be the Debit and the other side the Credit. It is the TELLER.TRANSACTION record which controls which becomes which. Please refer to the Helptext for TELLER.TRANSACTION for more details on how this control works.    Validation Rules    3 Numeric characters. (Mandatory)    Must be a valid entry on the TELLER.TRANSACTION file. */ 
 TRANSACTION_CODE -> TT_Config:TELLER_TRANSACTION 
 @i18n:Label (en="Transaction Code") 
 @i18n:Tooltip (en="Indicates the Transaction Type") 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=1.0, t24Name=TRANSACTION.CODE) 
 
 /* For side 1 of the TELLER deal there may be a requirement to use an Internal Account for Cash or Clearing. Where the Account is specific to one TELLER then the value here will be used.    For example in transfering cash from one Till to another this field would contain the TELLER.ID of one of the Tills, the other Till would appear in the field TELLER.ID.2.    Validation Rules    Mandatory Input. 4 Numeric characters. (Defaults to         current signed on teller)    Must be current signed on Teller unless the transaction         is a Teller transfer.    Teller id must be open (unless it's the vault) to perform         transfers.    Must be a valid entry on the TELLER.ID file. */ 
 TELLER_ID_1 : mml:string 
 @i18n:Label (en="Teller Id") 
 @t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=2.0, t24Name=TELLER.ID.1) 
 
 /* Determines if side 1 is a debit or credit.    Defaulted from the TELLER.TRANSACTION file (see transaction field).    Validation Rules    DEBIT CREDIT (No-input) */ 
 DR_CR_MARKER : TT_Contract:TELLER__DR_CR_MARKER 
 @i18n:Label (en="Dr / Cr Marker") 
 @i18n:Tooltip (en="Debit Credit indicator") 
 @t24:i (align=L, inputBehaviour=N, maxLength=6, sysNumber=3.0, t24Name=DR.CR.MARKER) 
 
 /* Specifies the Currency code for the side 1 entry.    Validation Rules    3 Alpha characters. (Mandatory - defaults to local)    Will be validated against VALID.CURRENCIES in TELLER.TRANSACTION.    Must be the same as the currency of ACCOUNT.1.    Must be valid entry on the CURRENCY file.    If side 2 is a foreign ccy PL category then side 1 ccy should be of the same ccy. */ 
 CURRENCY_1 -> FIN_CurrencyConfig:CURRENCY 
 @i18n:Label (en=Currency) 
 @i18n:Tooltip (en=Currency) 
 @t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=4.0, t24Name=CURRENCY.1) 
 
 /* The customer number from ACCOUNT.1    Used as an enrichment if the account number is a customer account.    Validation Rules    Standard Customer code (No-input) */ 
 CUSTOMER_1 -> ST_Customer:CUSTOMER 
 @i18n:Label (en=Customer) 
 @t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=5.0, t24Name=CUSTOMER.1) 
 
 ACCOUNT_1 -> byValue TT_Contract:TELLER__ACCOUNT_1 * 
 
 /* Specifies the local equivalent rate used between AMOUNT.FCY.1 and AMOUNT.LOCAL.1    Validation Rules    1-12 type R (Standard Rate Format - up to 8 integer and 6 decimal) characters plus a decimal point or 1-15 type R (Up to 8 integer and 9 decimal) characters plus a decimal point when EXTENDED.PREC in SPF is set to Y. (No-input) */ 
 RATE_1 : mml:string 
 @i18n:Label (en=Rate) 
 @t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=10.0, t24Name=RATE.1) 
 
 /* Defines the date when the entry is to be given value for interest purposes.    Validation Rules    11 Date type characters.    Should be a working day between the back value and forward value minimum - Over-Ride.    Cannot be earlier than the back value maximum or later than the forward value maximum.    Mandatory for customer account entries - defaulted from the TRANSACTION defined on the TELLER.TRANSACTION record. Noinput for internal accounts. */ 
 VALUE_DATE_1 : mml:string 
 @i18n:Label (en="Value Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=11.0, t24Name=VALUE.DATE.1) 
 
 /* Defines the date on which the available balance will be credited.    Defaulted from the TRANSACTION  defined on the TELLER.TRANSACTION record.    Validation Rules    11 Date type characters No Input for debit or internal accounts.    Should be a working day between the back value and forward value minimum - Over-Ride.    Cannot be earlier than the back value maximum or later than the forward value maximum. */ 
 EXPOSURE_DATE_1 : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=12.0, t24Name=EXPOSURE.DATE.1) 
 
 /* Specifies the currency market applicable to this entry.    Defaulted from the TELLER.TRANSACTION file.    Validation Rules    2 Numeric characters. (No-input) */ 
 CURR_MARKET_1 -> FIN_CurrencyConfig:CURRENCY_MARKET 
 @t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=13.0, t24Name=CURR.MARKET.1) 
 
 /* Identifies the type of foreign exchange position for this entry.    Defaulted from the TELLER.TRANSACTION file.    Validation Rules    2 Alpha characters. (No-input) */ 
 POS_TYPE_1 -> ST_Config:FX_POS_TYPE 
 @i18n:Label (en="Position Type 1") 
 @i18n:Tooltip (en="Position Type for Side 1") 
 @t24:i (align=L, inputBehaviour=N, maxLength=2, sysNumber=14.0, t24Name=POS.TYPE.1) 
 
 /* The rate applied between the side 1 and side 2 currencies .    When defaulting rates the following rules will apply:    1.        The debit currency is the BUY and the credit currency is           the SELL. 2.        The local equivalent of the BASE currency will be used to           default both side 1 and side 2 local amounts. 3.        The DEAL.RATE is defaulted from the mid-rate +/- the           treasury and customer spread defined for the currency           market of the transaction. See DEAL.MARKET in the           TELLER.TRANSACTION file. 4.        If one side is local then this is used as the local amount for           the other side and then the equivalent rate is the same as           the deal rate.    Validation Rules    11 Numeric characters. (Mandatory if account currencies are different. Defaulted from currency file.)    Should be within rate tolerance - override. */ 
 DEAL_RATE : mml:string 
 @i18n:Label (en="Exchange Rate") 
 @i18n:Tooltip (en="Exchange Rate for the transaction") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=15.0, t24Name=DEAL.RATE) 
 
 /* Specifies the Currency code for the side 2 entry.    Validation Rules    3 Alpha characters. (Mandatory - defaults to local)    Will be validated against VALID.CURRENCIES in TELLER.TRANSACTION. These can be defined as : L   local currency only F   foreign currency only A   any currency    Must be the same as the currency of ACCOUNT.2.    Must be valid entry on the CURRENCY file.    If side 1 is a foreign ccy PL category then side 2 ccy should be of the same ccy. */ 
 CURRENCY_2 -> FIN_CurrencyConfig:CURRENCY 
 @i18n:Label (en=Ccy) 
 @t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=16.0, t24Name=CURRENCY.2) 
 
 /* For side 2 of the TELLER deal there may be a requirement to use an Internal Account for Cash or Clearing. Where the Account is specific to one TELLER then the value here will be used.    For example in transfering cash from one Till to another this field would contain the TELLER.ID of one of the Tills, the other Till would appear in the field TELLER.ID.1.    Validation Rules    Mandatory Input. 4 Numeric characters. (Defaults to         current signed on teller)    Must be current signed on Teller unless the transaction         is a Teller transfer.    Teller id must be open (unless it's the vault) to perform         transfers.    Must be a valid entry on the TELLER.ID file. */ 
 TELLER_ID_2 : mml:string 
 @i18n:Label (en="Teller 2") 
 @t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=17.0, t24Name=TELLER.ID.2) 
 
 /* Specifies the account to which the side 2 amount will be posted.    Defaulted from TELLER.TRANSACTION. Internal accounts are defaulted from CAT.DEPT.CODE.2 on the TELLER.TRANSACTION file and the currency code. If no dept. code is specified then the teller id is used.    P&L categories are defaulted from the CAT.DEPT.CODE.1 on the TELLER.TRANSACTION file. If a department code is specified then this will be used in the ACCOUNT.OFFICER field of the entry.    Validation Rules    Customer account Internal account P & L category (Mandatory         Input)    Will be validated against VALID.ACCOUNTS.2 in the TELLER.TRANSACTION         file. This can be defined as Internal, Customer, P&L         category or Any    Must be a valid entry on the ACCOUNT file (unless it is a         p&l category or new internal account).    P&L categories must be entered in the format         PLnnnnnXXXX where nnnnn is a valid category in the range         60000 - 69999 and XXXX is an optional DEPT.ACCT.OFFICER         code. */ 
 ACCOUNT_2 : mml:string 
 @i18n:Label (en=Account) 
 @i18n:Tooltip (en=Account) 
 @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=18.0, t24Name=ACCOUNT.2) 
 
 /* Specifies the customer number from ACCOUNT.2    Used as an enrichment if the account number is a customer account.    Validation Rules    Standard Customer code. (No-input) */ 
 CUSTOMER_2 -> ST_Customer:CUSTOMER 
 @i18n:Label (en=Customer) 
 @t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=19.0, t24Name=CUSTOMER.2) 
 
 /* Specifies the amount to be debited/credited to the side 2 account.    Will be defaulted from the side 1 transaction only when the MKT.EXCH.METHOD field in the TELLER.PARAMETER is 'NONE'.    If the MKT.EXCH.METHOD in TELLER.PARAMETER is 'MIDDLE' then AMOUNT.LOCAL.2 will indicate that local equivalents will be calculated using middle rates for corresponding currency markets.    Validation Rules    18 Numeric characters. (No-input) */ 
 AMOUNT_LOCAL_2 : mml:string 
 @i18n:Label (en="Chq Amt") 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=20.0, t24Name=AMOUNT.LOCAL.2) 
 
 /* Specifies the local equivalent rate used between AMOUNT.FCY.2 and AMOUNT.LOCAL.2    Validation Rules    1-12 type R (Standard Rate Format - up to 8 integer and 6 decimal) characters plus a decimal point or 1-15 type R (Up to 8 integer and 9 decimal) characters plus a decimal point when EXTENDED.PREC in SPF is set to Y. (No-input) */ 
 RATE_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=16, sysNumber=21.0, t24Name=RATE.2) 
 
 /* Specifies the foreign currency amount to be posted to side 2.    Will be defaulted from the side 1 transaction.    Validation Rules    18 Numeric characters. (No-input) */ 
 AMOUNT_FCY_2 : mml:string 
 @i18n:Label (en="Amount Fcy 2") 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=22.0, t24Name=AMOUNT.FCY.2) 
 
 /* Specifies the balancing amount +/- any charges and rounding amount.    The side 2 amount (foreign or local) plus/minus any transaction charges and rounded to the local cash minimum (See ROUNDING.AMOUNT).    In case SPLIT.CHARGE.ENTRIES in related teller transaction is YES & ACCOUNT.2 is a non-customer account  and ACCOUNT.1 is customer account, then the charges will not be included in NET.AMOUNT as it will be collected/paid from ACCOUNT.1.    This is the amount which will be paid to or should be received from the customer.    Validation Rules    18 Numeric characters. (No-input)    The net amount cannot be negative - ie the charges are greater than the amount to be paid out. */ 
 NET_AMOUNT : mml:string 
 @i18n:Label (en="Net Amount") 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=23.0, t24Name=NET.AMOUNT) 
 
 /* Defines the date when the entry is to be given value for interest purposes.    Validation Rules    11 Date type characters    Should be a working day between the back value and forward value minimum - Over-Ride.    Cannot be earlier than the back value maximum or later than the forward value maximum.    Mandatory for customer account entries - defaulted from the TRANSACTION defined on the TELLER.TRANSACTION record. Noinput for internal accounts. */ 
 VALUE_DATE_2 : mml:string 
 @i18n:Label (en="Value Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=24.0, t24Name=VALUE.DATE.2) 
 
 /* Defines the date on which the available balance will be credited.    Defaulted from the TRANSACTION  defined on the TELLER.TRANSACTION record.    Validation Rules    11 Date type characters. Noinput for debit or internal accounts.    Should be a working day between the back value and forward value minimum - Over-Ride.    Cannot be earlier than the back value maximum or later than the forward value maximum. */ 
 EXPOSURE_DATE_2 : mml:string 
 @i18n:Label (en="Exposure Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=25.0, t24Name=EXPOSURE.DATE.2) 
 
 /* Specifies the currency market applicable to this entry.    Defaulted from the TELLER.TRANSACTION file.    Validation Rules    2 Numeric characters. (No-input) */ 
 CURR_MARKET_2 -> FIN_CurrencyConfig:CURRENCY_MARKET 
 @t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=26.0, t24Name=CURR.MARKET.2) 
 
 /* Identifies the type of foreign exchange position for this entry.    Defaulted from the TELLER.TRANSACTION file.    Validation Rules    2 Alpha characters. (No-input) */ 
 POS_TYPE_2 -> ST_Config:FX_POS_TYPE 
 @i18n:Label (en="Position Type 2") 
 @i18n:Tooltip (en="Position Type for Side 2") 
 @t24:i (align=L, inputBehaviour=N, maxLength=2, sysNumber=27.0, t24Name=POS.TYPE.2) 
 
 NARRATIVE_2 -> byValue TT_Contract:TELLER__NARRATIVE_2 * 
 
 CHEQUE_NUMBER -> byValue TT_Contract:TELLER__CHEQUE_NUMBER * 
 
 CHARGE_CUSTOMER -> byValue TT_Contract:TELLER__CHARGE_CUSTOMER * 
 
 /* This field is used to Waive any transaction charges.    If set to Y - will waive any charges that have been defined in the TELLER.TRANSACTION record.    This does not apply to multi-line Teller inputs. To waive charges in multi-line input use the "Replace charge" option which appears after each line and type a currency code and zero.    Validation Rules    Y YES N NO (Optional) */ 
 WAIVE_CHARGES : TT_Contract:TELLER__WAIVE_CHARGES 
 @i18n:Label (en="Waive Charges") 
 @i18n:Tooltip (en="Waive charges Y/N?") 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=40.0, t24Name=WAIVE.CHARGES) 
 
 /* Specifies the reference given to the entry by the customer involved.    If the transaction is a cheque encashment then this field will contain the cheque number, defaulted from the CHEQUE.NUMBER field.    Validation Rules    16 SWIFT characters (Alphanumeric) (Optional) */ 
 THEIR_REFERENCE : mml:string 
 @i18n:Label (en="Their Ref") 
 @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=41.0, t24Name=THEIR.REFERENCE) 
 
 /* Specifies the bank's reference to this transaction.    This field also provides the link to TELLER.DEFAULT.  If data is entered here, prior to any other information, then the system will attempt to default all fields from the TELLER.DEFAULT record whose id is OUR.REFERENCE.  See the overview of TELLER.DEFAULT for more details.    Validation Rules    16 SWIFT Characters (Alphanumeric) (Optional). */ 
 OUR_REFERENCE : mml:string 
 @i18n:Label (en="Transaction Ref") 
 @i18n:Tooltip (en="Our Reference") 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=42.0, t24Name=OUR.REFERENCE) 
 
 DENOMINATION -> byValue TT_Contract:TELLER__DENOMINATION * 
 
 DR_DENOM -> byValue TT_Contract:TELLER__DR_DENOM * 
 
 /* Indicates the customer to whom the stock is sold in trust.    This will be used to flag the stock as being held in trust by the TRUST.CUSTOMER.    Validation Rules    Must be a valid CUSTOMER. */ 
 TRUST_CUSTOMER -> ST_Customer:CUSTOMER 
 @t24:i (align=R, inputBehaviour=F, maxLength=10, sysNumber=49.0, t24Name=TRUST.CUSTOMER) 
 
 /* Specifies the amunt required to round (up or down) the net amount figure to the local cash minimum.    The amount is only calculated if a minimum round amount has been specified in the CURRENCY file and if the net amount is a payment across the local currency cash account.    The rounding amount is debited/credited to the P&L category defined in the TELLER.PARAMETER file.    Eg. Local Cash Minimum set to 0.05    Original Net        Rounding Amount             New Net 501.52cr            0.02cr                     501.50cr 501.54cr            0.01dr                     501.55cr 501.52dr            0.02dr                     501.50dr 501.54dr            0.01cr                     501.55dr    Validation Rules    (No-input) */ 
 ROUNDING_AMOUNT : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=50.0, t24Name=ROUNDING.AMOUNT) 
 
 NEW_CUST_BAL -> byValue TT_Contract:TELLER__NEW_CUST_BAL * 
 
 /* The cash amount paid by the customer can be entered in this field.    This amount represents the amount received from the customer.  With an autocash interface installed this amount will be used in calculating the change to be paid to the customer.  The denomination units will also be defaulted based on the change rather than the net amount.    Eg.  Customer wishes to deposit 400CHF into his account and offers a 500CHF note.  400 would be entered in AMOUNT.LOCAL.1, as the amount to be credited to his account, 500 would be entered into AMOUNT.DEPOSITED and the change to be paid by the autocash dispenser (if installed) is calculated at 100CHF.    Validation Rules    18 numeric characters (Optional) */ 
 AMOUNT_DEPOSITED : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=52.0, t24Name=AMOUNT.DEPOSITED) 
 
 /* The amount of marketing exchange profit calculated in local currency. Is calculated when MKT.EXCH.METHOD field in TELLER.TRA- NSACTION is set to "MIDDLE".    Validation Rules    Type AMT field with '-' allowed. NOINPUT field. */ 
 MKT_EXCH_PROFIT : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=53.0, t24Name=MKT.EXCH.PROFIT) 
 
 /* Shows the customer with whom the stock in retailer trust is settled.    This field will be used to verify the stock entered on the TELLER transaction is held in trust by the same customer. The stock will then be removed from the retailer trust if there is no validation error.    Input to this field will also inhibit the defaulting of serial nos.    Validation Rules    Must be a valid CUSTOMER. */ 
 TRUST_SETTLE_CUST -> ST_Customer:CUSTOMER 
 @t24:i (align=R, inputBehaviour=F, maxLength=10, sysNumber=54.0, t24Name=TRUST.SETTLE.CUST) 
 
 /* This field contains the currency in which the exposure amount split information has been specified.    Validation Rules    No Input Allowed */ 
 EXPOSURE_CCY -> FIN_CurrencyConfig:CURRENCY 
 @i18n:Label (en="Exposure CCY") 
 @t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=55.0, t24Name=EXPOSURE.CCY) 
 
 EXP_ACCT -> byValue TT_Contract:TELLER__EXP_ACCT * 
 
 /* TELLER    DEALER.DESK    Identifies the dealer desk position which needs to be updated by the deal being created. The dealer desk code is held on the position record so that the exchange position can be displayed at dealer desk level.    Validation Rules    2 alphanumeric character dealer code in the range A-Z, a-z, plus 0-9.     Optional Input; Default = '00'.    The code entered must appear on the DEALER.DESK table.    The field cannot be changed once the deal has been authorised. */ 
 DEALER_DESK -> ST_Config:DEALER_DESK 
 @i18n:Label (en="Dealer Desk") 
 @i18n:Tooltip (en="Specifies the Dealer Desk handling the transaction") 
 @t24:i (align=L, inputBehaviour=F, maxLength=2, sysNumber=59.0, t24Name=DEALER.DESK) 
 
 /* Specify the type of cheque used in the transaction.    Below mentioned cheque Type defaulting mechanism will be used if the Cheque.Register in ACCOUNT.PARAMETER is set as "Yes". Otherwise it will default to NULL.    DEFAULTING MECHANISM    If the Cheque.Register is set as Yes,    If the transaction code used in DC/FT/TT, has cheque indicator as Yes in TRANSACTION file, then cheque.type will be defaulted as per the following:    1.    2.    3.    4.    5.    If Cheque.Register set as NO or NULL then the cheque type will defaults to NULL.    Validation Rules    Optional field    Must be a valid record in CHEQUE.TYPE. */ 
 CHEQ_TYPE -> CHQ_Config:CHEQUE_TYPE 
 @i18n:Label (en="Cheque Type") 
 @t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=60.0, t24Name=CHEQ.TYPE) 
 
 /* In this field valid stock register can be entered and if entered, next field (Series id) becomes mandatory.    On entering a valid stock register, series id and stock number system changes the range of stock number for the appropriate record in STOCK.REGISTER.    Validation Rules    Optional field    If entered must be a valid record id in STOCK REGISTER    If entered next field (Series id ) is mandatory */ 
 STOCK_REGISTER -> CHQ_StockControl:STOCK_REGISTER 
 @t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=61.0, t24Name=STOCK.REGISTER) 
 
 /* This field is used to enter the series id of the stock register.    Validation Rules    Mandatory if stock register is entered in previous field    If entered must be a valid stock series from STOCK.REGISTER */ 
 SERIES_ID : mml:string 
 @i18n:Label (en="Series ID") 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=62.0, t24Name=SERIES.ID) 
 
 /* Specifies the Stock Number to be processed.    On entering a valid stock register, series id and stock number system changes the range of stock number for the appropriate record in STOCK.REGISTER.    Validation Rules    Mandatory if stock register and series id is entered in the previous     fields. */ 
 STOCK_NUMBER : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=20, sysNumber=63.0, t24Name=STOCK.NUMBER) 
 
 /* Noinput field. Used to store Contract group based on setup in APPL.GEN.CONDITION */ 
 CONTRACT_GRP : mml:string 
 @i18n:Label (en="Contract Group") 
 @i18n:Tooltip (en="Contract group based on a set of conditions") 
 @t24:i (align=L, inputBehaviour=N, maxLength=20, sysNumber=64.0, t24Name=CONTRACT.GRP) 
 
 /* Noinput field. Used to store System date during authorisation of a TELLER */ 
 AUTH_DATE : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=66.0, t24Name=AUTH.DATE) 
 
 /* TELLER    CONTRACT. MAT. DATE    This field is invoked for input if the AZ.ACCOUNT is input on the credit side with an intent to create a deposit- Suitable Teller. Transaction codes and txn codes should be used for the invocation.    This field is opened up for multi FIXED deposits only.  Since for Multi-Savings type - the maturity date is already specified in the Main a/c itself.    Validation Rules    Enter any valid date format.. */ 
 CONTRACT_MAT_DATE : mml:string 
 @i18n:Label (en="Maturity Date") 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=67.0, t24Name=CONTRACT.MAT.DATE) 
 
 /* For use in connection with the Branch Resilience (BR) product. i.e this field gets enabled only when BR is installed.  When a breakdown in server communications occurs, at a time when the Teller is finishing a deal, it may not be evident that the deal has completed successfully. Branch Resilience requires the deal to be completed both on the Head Office server and on the backup branch system before it is considered successful. In this event the Teller will re-enter the deal after logging onto the branch backup server, but must flag the deal as a possible duplicate by using this field. The value entered must be the booking date at the branch (this information will be needed when communications are re-established and the deal is also updated at the Head Office).   With a value in this field set the system will check for other Teller transactions with the same account numbers, value dates and amounts. If one or more is found an override will be raised allowing the user to investigate before committing it or if approved the investigation can be done later.    When the deal update is posted on the Head Office server the POSS.DUP.DATE field being present will do the same checking and raise an override - since this is part of an automated process the investigation of the duplicate is done by looking for any deals with POSS.DUP.DATE set and with the warning override present. The system cannot be 100% certain of the deal being a duplicate or whether there are legitimately two exact copy deals, hence user intervention is necessary. */ 
 POSS_DUP_DATE : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=68.0, t24Name=POSS.DUP.DATE) 
 
 /* Holds the card number that has been used for Debiting the account and shall be populated in the debit side statement entriesValidation Rules Should hold a valid CARD.ISSUE record */ 
 CARD_NUMBER -> ST_Cards:CARD_ISSUE 
 @i18n:Label (en="Card Number") 
 @t24:i (align=L, inputBehaviour=I, maxLength=21, sysNumber=69.0, t24Name=CARD.NUMBER) 
 
 CARD_TXN_DETAIL -> byValue TT_Contract:TELLER__CARD_TXN_DETAIL * 
 
 TFS_REFERENCE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=71.0, t24Name=TFS.REFERENCE) 
 
 CHEQUE_DRAWN : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=72.0, t24Name=CHEQUE.DRAWN) 
 
 /* Field to configure which Account is to be defaulted as charge account either Account.1 or Account.2If ACCOUNT.1 is Multi-valued, system will default the first account(in ACCOUNT.1) in CHARGE.ACCOUNT fieldThis field will be defaulted from TELLER.TRANSACTION fileValidation RulesIt will be allowed for only customer to customer transfer i.e.CUST.AC.TRANSFER field set as YES in TELLER.TRANSACTION fileCan accept value as DEBIT PLUS CHARGES or CREDIT LESS CHARGES or Null. */ 
 CHG_TYPE : TT_Contract:TELLER__CHG_TYPE 
 @i18n:Label (en="Charge Type") 
 @i18n:Tooltip (en="Indicates what type of charge is being collected") 
 @t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=73.0, t24Name=CHG.TYPE) 
 
 ISSUE_CHEQUE_TYPE -> CHQ_Config:CHEQUE_TYPE 
 @t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=74.0, t24Name=ISSUE.CHEQUE.TYPE) 
 
 PAYEE_NAME : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=75.0, t24Name=PAYEE.NAME) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=76.0, t24Name=RESERVED.1) 
 
 STMT_NO -> byValue TT_Contract:TELLER__STMT_NO * 
 
 OVERRIDE -> byValue TT_Contract:TELLER__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=79.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=80.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue TT_Contract:TELLER__INPUTTER * 
 
 DATE_TIME -> byValue TT_Contract:TELLER__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=83.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=84.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=85.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=86.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=87.0, t24Name=AUDIT.DATE.TIME) 
 
 CHK_REC_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=65.1, t24Name=CHK.REC.RTN.FLD) 
 
 INP_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=65.2, t24Name=INP.RTN.FLD) 
 
 AUTH_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=65.3, t24Name=AUTH.RTN.FLD) 
 
 BEF_AUT_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=65.4, t24Name=BEF.AUT.RTN.FLD) 
 
 VAL_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=65.5, t24Name=VAL.RTN.FLD) 
 } 
 TELLER__ACCOUNT_1 
 { 
 /* Specifies the account to which the side 1 amount will be posted.    Defaulted from TELLER. TRANSACTION. Internal accounts are defaulted from CAT.DEPT.CODE.1 on the TELLER.TRANSACTION file and the currency code. If no dept. code is specified then the teller id is used.    P&L categories are defaulted from the CAT.DEPT.CODE.1 on the TELLER. TRANSACTION file. If a department code is specified then this will be used in the ACCOUNT. OFFICER field of the entry.    From the release G14.1.00, this field can be multi-valued AND can be input with more than one account. The fields ACCOUNT.1, AMOUNT.LOCAL.1, AMOUNT.FCY.1 and NARRATIVE.1 are associated fields and whenever this field is multi-valued these associated fields also get multi-valued and need to be input accordingly.    However, the accounts inputs and its currency should be same.    In a multivalued teller transaction , the accounts in the multi value set should not contain STOCK.CONTROL.TYPE set as it is not possible to update stocks    Validation Rules    Customer account Internal account P & L category (Mandatory         Input)    Will be validated against VALID.ACCOUNTS.1 in the TELLER. TRANSACTION         file. This can be defined as Internal, Customer, P&L         category or Any    Must be a valid entry on the ACCOUNT file (unless it is a         p&l category or new internal account).    P&L categories must be entered in the format         PLnnnnnXXXX where nnnnn is a valid category in the range         60000 - 69999 and XXXX is an optional DEPT.ACCT.OFFICER         code. */ 
 ACCOUNT_1 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=6.0, t24Name=ACCOUNT.1) 
 
 /* Specifies the Amount to be debited/credited to the side 1 account.    Must be input if the side 1 account is local, otherwise this field will contain the local equivalent of AMOUNT.FCY.1.    Input is not allowed if side 1 is a foreign currency account.    From 14.1.00 release this field is part of the associated multi valued fields.    Validation Rules    18 Numeric characters. (Mandatory Input) */ 
 AMOUNT_LOCAL_1 : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=7.0, t24Name=AMOUNT.LOCAL.1) 
 
 /* Specifies the foreign currency amount to be posted to side 1.    Input not allowed if the side 1 account is local.    From 14.1.00 release this field is part of the associated multi valued fields    Validation Rules    18 Numeric characters. (Mandatory Input) */ 
 AMOUNT_FCY_1 : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=21, sysNumber=8.0, t24Name=AMOUNT.FCY.1) 
 
 /* Defines the Narrative text to be passed to the statement entry.    From 14.1.00 release this field is part of the associated multi valued fields    Validation Rules    Up to 34 Swift Characters (Optional Input) */ 
 NARRATIVE_1 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=9.0, t24Name=NARRATIVE.1) 
 } 
 TELLER__NARRATIVE_2 
 { 
 /* Defines the Narrative text to be passed to the statement entry.    Validation Rules    Up to 34 Swift Characters (Optional Input) */ 
 NARRATIVE_2 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=28.0, t24Name=NARRATIVE.2) 
 } 
 TELLER__CHEQUE_NUMBER 
 { 
 /* Specifies the Number of the cheque to be processed.    If this is a cheque drawn on this branch then this will be passed in the statement entry for the customer account as THEIR REFERENCE.If CHEQUE.NUMBER is alphanumeric, then the system shall not validate against CHEQUE.REGISTER.     Validation Rules    20 Alphanumeric characters. (Optional Input)    Mandatory if the cheque indicator is set by the TRANSACTION defined on the TELLER.TRANSACTION record. */ 
 CHEQUE_NUMBER : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=29.0, t24Name=CHEQUE.NUMBER) 
 
 /* Specifies the sort code on a cheque drawn on another bank.    Processing can be associated with this field if the number entered corresponds with an existing BC.SORT.CODE    Otherwise, it's used for notation only.    Validation Rules    20 Alphanumeric characters, (Optional Input) */ 
 CHEQUE_BANK_CDE : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=30.0, t24Name=CHEQUE.BANK.CDE) 
 
 /* Records the account number of a cheque drawn on another bank.    No processing is associated with this field. Used for notation only.    Validation Rules    20 Alphanumeric characters. (Optional Input) */ 
 CHEQUE_ACCT_NO : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=31.0, t24Name=CHEQUE.ACCT.NO) 
 } 
 TELLER__CHARGE_CUSTOMER 
 { 
 /* This is the Customer a given charge is to be applied to. Only used on a Multi Line deal Header record. System will default the CHARGE.CUSTOMER field based on CHARGE.ACCOUNT defaulted or User entered CHARGE.ACCOUNT    Validation Rules    No Input */ 
 CHARGE_CUSTOMER -> ST_Customer:CUSTOMER 
 @t24:i (align=R, inputBehaviour=N, maxLength=12, sysNumber=32.0, t24Name=CHARGE.CUSTOMER) 
 
 /* This is the Account a given charge is to be applied to. CHARGE.ACCOUNT  is generally set as ACCOUNT.2.    Only exception is when SPLIT.CHARGE.ENTRIES in related teller transaction is YES & ACCOUNT.2 is Internal/PL and ACCOUNT.1 is customer account. In this case CHARGE.ACCOUNT will be set to ACCOUNT.1 If CHG.TYPE field has a value, CUST.AC.TRANSFER set as YES and CHARGE.CODE attached in TELLER.TRANSACTION file, below is the combination system will default the CHARGE.ACCOUNT If DR.CR.MARKER is DEBIT,CHG.TYPE is DEBIT PLUS CHARGES or DR.CR.MARKER is CREDIT,CHG.TYPE is CREDIT LESS CHARGES system will default ACCOUNT.1 as CHARGE.ACCOUNT, ACCOUNT.1 is multi-valued, system will default the CHARGE.ACCOUNT as first account in ACCOUNT.1  If DR.CR.MARKER is CREDIT,CHG.TYPE is DEBIT PLUS CHARGES or DR.CR.MARKER is DEBIT,CHG.TYPE is CREDIT LESS CHARGES system will default ACCOUNT.2 as CHARGE.ACCOUNT User Can Overwrite the system defaulted CHARGE.ACCOUNT with Third Account or any Customer Account. For Customer to Customer transfer, if CHG.TYPE field is changed from DEBIT PLUS CHARGES or CREDIT LESS CHARGES to Null system will default ACCOUNT.2 as CHARGE.ACCOUNT.    Only used on a Multi Line deal Header record.    Validation Rules User Overwrites the system defaulted CHARGE.ACCOUNT, it must be either of ACCOUNT.1 Currency or ACCOUNT.2 Currency If more than one CHARGE.CODE exists, all the CHARGE.ACCOUNT's must be Same */ 
 CHARGE_ACCOUNT : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=33.0, t24Name=CHARGE.ACCOUNT) 
 
 /* Determines the P&L category or the local currency internal account where the teller charge should be posted.    Defaulted from the TELLER.TRANSACTION record.    Validation Rules    5 Numeric characters. (Optional - if there are no charges) */ 
 CHARGE_CATEGORY : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=34.0, t24Name=CHARGE.CATEGORY) 
 
 /* The Debit transaction code for a given charge. Only relevant on a Multi Line deal.    Validation Rules    Must be a valid Debit Transaction code */ 
 CHRG_DR_TXN_CDE -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=N, maxLength=3, sysNumber=35.0, t24Name=CHRG.DR.TXN.CDE) 
 
 /* The Debit transaction code for a given charge. Only relevant on a Multi Line deal.    Validation Rules    Must be a valid Debit Transaction code */ 
 CHRG_CR_TXN_CDE -> ST_Config:TRANSACTION 
 @t24:i (align=R, inputBehaviour=N, maxLength=3, sysNumber=36.0, t24Name=CHRG.CR.TXN.CDE) 
 
 /* Specifies the charge amount in local currency which will be credited to the P&L defined in CHARGE.CATEGORY.    Defaulted from the TELLER.TRANSACTION record. Charge amounts can be altered from this definition (even set to zero) or all charges can be waived - see WAIVE.CHARGES.    Input in this field is valid only if charges are present in TELLER.TRANSACTION.    Validation Rules    18 Numeric characters. (Optional - if there are no charges). */ 
 CHRG_AMT_LOCAL : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=37.0, t24Name=CHRG.AMT.LOCAL) 
 
 /* Specifies the charge amount in foreign currency (if side 2 is foreign) which will be credited to the P&L defined in CHARGE.CATEGORY.    Defaulted from the CHARGE.AMT.LOCAL field converted at the mid rate. Charge amounts can be altered from this definition (even set to zero) or all charges can be waived - see WAIVE.CHARGES.    Input in this field is valid only if charges are present in TELLER.TRANSACTION.    Validation Rules    18 Numeric characters. (Optional - if there are no charges). */ 
 CHRG_AMT_FCCY : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=38.0, t24Name=CHRG.AMT.FCCY) 
 
 /* This field contains a multivalue list of the charge and/or commission codes to be applied to this transaction.    Defaulted from the TELLER.TRANSACTION record, or if the Teller had chosen the option to Modify the charges then the code from the field    MODIFY.CHARGE.CODE    ModCharge    ModCharge- MODIFIED    Validation Rules    System Generated */ 
 CHARGE_CODE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=39.0, t24Name=CHARGE.CODE) 
 } 
 TELLER__DENOMINATION 
 { 
 /* Specifies the denomination to be used for paying out cash.    Defaulted on entry of transaction amount. It will contain all the denominations defined for the credit side currency in the TELLER.DENOMINATION file.    All multivalue with zero units are removed at authorisation.    Validation Rules    12    Alphanumeric (No-input) */ 
 DENOMINATION -> TT_Config:TELLER_DENOMINATION 
 @t24:i (align=L, inputBehaviour=N, maxLength=12, sysNumber=43.0, t24Name=DENOMINATION) 
 
 /* Specifies the number of units of the corresponding denomination to pay to the customer.    On input of a transaction amount the units are defaulted to 0 for each denomination defined for the credit currency.    If you wish to pay out specific denominations (and have this recorded on the transaction record) then you should enter the number of units required of the highest denomination required. Whenever a unit is entered all lower denominations are defaulted.    All zero units will be removed from the transaction record at authorisation.    Validation Rules    9     Numeric    If units are entered their total value must equal the credit amount (the amount paid to the customer). */ 
 UNIT : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=9, sysNumber=44.0, t24Name=UNIT) 
 
 /* This field shows the serial number information corresponding to the internal ACCOUNT of the credit side. This may be either a single number or as a range, e.g. NO.1 - NO.2.    The format (mask) of the serial number must be already defined in the ACCOUNT file.    Validation Rules    Valid input must be confined to the format defined in the ACCOUNT file.    Optional input field.    Mandatory field if ACCOUNT>STOCK.CONTROL.TYPE is SERIAL. */ 
 SERIAL_NO : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=45.0, t24Name=SERIAL.NO) 
 } 
 TELLER__DR_DENOM 
 { 
 /* As the DENOMINATION field but for the debit side. */ 
 DR_DENOM -> TT_Config:TELLER_DENOMINATION 
 @t24:i (align=L, inputBehaviour=N, maxLength=12, sysNumber=46.0, t24Name=DR.DENOM) 
 
 /* As for UNIT but for the debit side. */ 
 DR_UNIT : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=9, sysNumber=47.0, t24Name=DR.UNIT) 
 
 /* As for SERIAL.NO but for the debit side. */ 
 DR_SERIAL_NO : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=48.0, t24Name=DR.SERIAL.NO) 
 } 
 TELLER__NEW_CUST_BAL 
 { 
 /* Indicates the customers new working balance as a result of this transaction.    Defaulted for the customer side of the transaction. If it's a customer account transfer then it reflects the new account balance of side 1.    It is provided for information only (used for outputing on advices for example) and indicates the new working (uncleared) balance at the time of the transaction.    Noinput field. */ 
 NEW_CUST_BAL : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=51.0, t24Name=NEW.CUST.BAL) 
 } 
 TELLER__EXP_ACCT 
 { 
 /* TELLER    EXP. ACCT    This field is defaulted with the account on the credit side.    The account may be either customer or internal account.    Validation Rules    Any valid account no input on the credit side. */ 
 EXP_ACCT : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=16, sysNumber=56.0, t24Name=EXP.ACCT) 
 
 EXP_SPT_DAT -> byValue TT_Contract:TELLER__EXP_ACCT__EXP_SPT_DAT * 
 } 
 TELLER__EXP_ACCT__EXP_SPT_DAT 
 { 
 /* TELLER    EXP. SPT. DAT    The dates and the relative amount/percentage given in the exposure ladder will be populated once the transaction is committed.    This is an associated multi-value field and depending on the exposure ladder this field will be multi-valued.    To illustrate    If the T24 date is 10.12.2003 and the exposure ladder is defined as 02Days 20% and 04Days 30%    Then in this case - the exposure ladder will be multi-valued three times  and the EXP. SPT. DAT field will be updated with 10.12.2003, 12.12.2003 and 14.12.2003    Validation Rules    Date in standard format. */ 
 EXP_SPT_DAT : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=57.0, t24Name=EXP.SPT.DAT) 
 
 /* TELLER    EXP. SPT. AMT    This field will be updated with the relative amount based on the exposure conditions.    This is an associated multi-value field and depending on the exposure ladder this field will be multi-valued.    To illustrate    If the T24 date is 10.12.2003 and the exposure ladder is defined as 02Days 20% and 04Days 30% for an amount of say 100000 USD    Then in this case - the exposure ladder will be multi-valued three times and the EXP. SPT. AMT  field will be updated with 50000, 20000 and 30000.    Validation Rules    Field can be input with amount. */ 
 EXP_SPT_AMT : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=19, sysNumber=58.0, t24Name=EXP.SPT.AMT) 
 } 
 TELLER__CARD_TXN_DETAIL 
 { 
 /* Holds the card transaction details like merchant , location etcValidation Rules Free Text Multi-value field Applicable only when CARD.NUMBER is present */ 
 CARD_TXN_DETAIL : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=70.0, t24Name=CARD.TXN.DETAIL) 
 } 
 TELLER__STMT_NO 
 { 
 /* A number Generated automatically by the system after authorisation which identifies either a statement entry or a category entry in respect of a transaction. After validation but before authorisation, the value 'VAL' will be inserted in this field to indicate that the transaction has been validated successfully but is still waiting authorisation.    After authorisation of a Teller transaction, the system will automatically insert a number into this field and this number may refer to a statement entry or a category entry depending on the value contained in the corresponding multivalue fields. The following examples will illustrate the use of this field.    Example 1:    On the execution date of a transaction there will normally be an entry on a Customer account and the following type of number will be generated at this field:    39.1  STMT.NO ............ 673732684.48           39.2  STMT.NO ............ 1    The number automatically generated in field 39.1 is unique to the transaction in question and is built in the following way:    1.        The first four digits '6737' indicate the number of days           since the 1st of January 1968. In our example, it           corresponds to the 11th of June 1986.    2.        The next five digits '32684' indicate the number of seconds           since midnight. In our example, it corresponds to an entry           generated on line at 09:04:44 AM.    3.        The last two digits '48' indicate the number of hundreds of           seconds.    The value assigned (again automatically) to field 39.2 identifies the number in 39.1 as a statement entry number. If the User wishes to call this statement entry record on to the screen the User will invoke the STMT.ENTRY Application and the type the following at 'Awaiting ID' :-    673732684.480001    where the suffix '0001' identifies it as the first statement entry (there will normally be more than one as the next example will illustrate).    Example 2:    A second example outlined here is similar to that in example 1, in that there is a statement entry on value date for both the our account and the customer account. The system handles this case as follows:    39.1  STMT.NO .......... 673732684.48                 39.2  STMT.NO .......... 1-2    Once again field 39.1 contains the identification number automatically generated by the system while field 39.2 now contains two separate numbers signifying that there are infact two separate statement entries, one in respect of the our account pay and one in respect of the our account receive. If the User wishes to see either of these he must first of all invoke STMT.ENTRY followed by the desired function and then at 'Awaiting ID' type EITHER:    673732684.480001    where the addition of the suffix '0001' identifies the statement entry in respect of the our account OR    673732684.480002    where the addition of the suffix '0002' identifies the statement entry in respect of the customer account.    Example 3:    A third example might be that of a category entry generated at initiation of a transaction where commission or charges have been debited to the customer and credited to a profit and loss category code. In this case the following entries are generated on the transaction:    39.1  STMT.NO .......... 673732684.48                 39.3  STMT.NO .......... 1    Once again the standard type number is generated and inserted at field 39.1    Now, however, field 39.2 is replaced by field 39.3 which now identifies the number in 39.1 as a category entry and not a statement entry.    To call this category entry record onto the screen the User must now type:    CATEG.ENTRY at 'Awaiting Application'    followed by:    673732684.480001 at 'Awaiting ID'.    Validation Rules    Internal Multivalue field. */ 
 STMT_NO : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=77.0, t24Name=STMT.NO) 
 } 
 TELLER__OVERRIDE 
 { 
 /* Contains details of any overrides applicable to this Transaction.    Validation Rules    Up to 35 type A (alphanumeric) characters. Multivalue field. (Internal field.) */ 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=78.0, t24Name=OVERRIDE) 
 } 
 TELLER__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=81.0, t24Name=INPUTTER) 
 } 
 TELLER__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=82.0, t24Name=DATE.TIME) 
 } 
 TELLER_USER 
 @t24:i (level=F, type=T, localRefAllowed=false) 
 { 
 ID : mml:string PK required 
 @i18n:Label (en="Transaction Ref") 
 @i18n:Tooltip (en="Transaction Reference") 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=0.0, t24Name=ID) 
 
 TELLER_NO : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=14, sysNumber=1.0, t24Name=TELLER.NO) 
 } 
 TELLER_ID 
 @t24:i (level=F, type=H, localRefAllowed=true) 
 { 
 TELLER_ID : mml:string PK required 
 @i18n:Label (en="Teller Id") 
 @i18n:Tooltip (en="Teller id") 
 @t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=0.0, t24Name=TELLER.ID) 
 
 STATUS : TT_Contract:TELLER_ID__STATUS 
 @i18n:Label (en=Status) 
 @t24:i (align=L, inputBehaviour=I, maxLength=5, sysNumber=1.0, t24Name=STATUS) 
 
 USER -> EB_Security:USER 
 @i18n:Label (en=Teller) 
 @i18n:Tooltip (en="Till User") 
 @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=2.0, t24Name=USER) 
 
 DATE_OF_OPEN : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=3.0, t24Name=DATE.OF.OPEN) 
 
 TIME_OF_OPEN : mml:string 
 @i18n:Label (en="Time Opened") 
 @t24:i (align=R, inputBehaviour=N, maxLength=8, sysNumber=4.0, t24Name=TIME.OF.OPEN) 
 
 DATE_OF_CLOSE : mml:string 
 @i18n:Label (en="Date Last Closed") 
 @i18n:Tooltip (en="Indicates date last closed") 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=5.0, t24Name=DATE.OF.CLOSE) 
 
 TIME_OF_CLOSE : mml:string 
 @i18n:Label (en="Time Last Closed") 
 @i18n:Tooltip (en="Indicates time last closed") 
 @t24:i (align=R, inputBehaviour=N, maxLength=8, sysNumber=6.0, t24Name=TIME.OF.CLOSE) 
 
 CATEGORY -> byValue TT_Contract:TELLER_ID__CATEGORY * 
 
 NOTES -> byValue TT_Contract:TELLER_ID__NOTES * 
 
 AUTOCASH_DEVICE : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=9, sysNumber=16.0, t24Name=AUTOCASH.DEVICE) 
 
 PASSBOOK_DEVICE : mml:string 
 @i18n:Label (en="Passbook Device") 
 @i18n:Tooltip (en="ID of the passbook device to be used") 
 @t24:i (align=L, inputBehaviour=I, maxLength=9, sysNumber=17.0, t24Name=PASSBOOK.DEVICE) 
 
 TELLER_OFFICE -> ST_Config:DEPT_ACCT_OFFICER 
 @t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=18.0, t24Name=TELLER.OFFICE) 
 
 DEALER_DESK -> ST_Config:DEALER_DESK 
 @i18n:Label (en="Dealer Desk") 
 @i18n:Tooltip (en="Specifies the Dealer Desk handling the transaction") 
 @t24:i (align=L, inputBehaviour=I, maxLength=2, sysNumber=19.0, t24Name=DEALER.DESK) 
 
 LINKED_TILLS -> byValue TT_Contract:TELLER_ID__LINKED_TILLS * 
 
 TILL_TFR_ONLY : TT_Contract:TELLER_ID__TILL_TFR_ONLY 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=21.0, t24Name=TILL.TFR.ONLY) 
 
 STOCK_UPD : TT_Contract:TELLER_ID__STOCK_UPD 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=22.0, t24Name=STOCK.UPD) 
 
 TILL_LIMIT : TT_Contract:TELLER_ID__TILL_LIMIT 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=23.0, t24Name=TILL.LIMIT) 
 
 LIMIT_CATEGORY -> byValue TT_Contract:TELLER_ID__LIMIT_CATEGORY * 
 
 RESERVED_6 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=30.0, t24Name=RESERVED.6) 
 
 RESERVED_5 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=31.0, t24Name=RESERVED.5) 
 
 RESERVED_4 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=32.0, t24Name=RESERVED.4) 
 
 RESERVED_3 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=33.0, t24Name=RESERVED.3) 
 
 RESERVED_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=34.0, t24Name=RESERVED.2) 
 
 RESERVED_1 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=1, sysNumber=35.0, t24Name=RESERVED.1) 
 
 STMT_NO -> byValue TT_Contract:TELLER_ID__STMT_NO * 
 
 OVERRIDE -> byValue TT_Contract:TELLER_ID__OVERRIDE * 
 
 RECORD_STATUS : mml:string 
 @i18n:Label (en="Record Status") 
 @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=39.0, t24Name=RECORD.STATUS) 
 
 CURR_NO : mml:string 
 @i18n:Label (en="Curr No") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=40.0, t24Name=CURR.NO) 
 
 INPUTTER -> byValue TT_Contract:TELLER_ID__INPUTTER * 
 
 DATE_TIME -> byValue TT_Contract:TELLER_ID__DATE_TIME * 
 
 AUTHORISER : mml:string 
 @i18n:Label (en=Authoriser) 
 @i18n:Tooltip (en="Indicates the User who Authorises the record") 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=43.0, t24Name=AUTHORISER) 
 
 CO_CODE -> ST_CompanyCreation:COMPANY 
 @i18n:Label (en=Company) 
 @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=44.0, t24Name=CO.CODE) 
 
 DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER 
 @i18n:Label (en="Dept Code") 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=45.0, t24Name=DEPT.CODE) 
 
 AUDITOR_CODE : mml:string 
 @i18n:Label (en="Auditor Code") 
 @i18n:Tooltip (en="Auditor Code") 
 @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=46.0, t24Name=AUDITOR.CODE) 
 
 AUDIT_DATE_TIME : mml:string 
 @i18n:Label (en="Audit Date Time") 
 @i18n:Tooltip (en="Date and time when record was audited") 
 @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=47.0, t24Name=AUDIT.DATE.TIME) 
 
 CHK_REC_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=36.1, t24Name=CHK.REC.RTN.FLD) 
 
 INP_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=36.2, t24Name=INP.RTN.FLD) 
 
 AUTH_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=36.3, t24Name=AUTH.RTN.FLD) 
 
 BEF_AUT_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=36.4, t24Name=BEF.AUT.RTN.FLD) 
 
 VAL_RTN_FLD : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=30, sysNumber=36.5, t24Name=VAL.RTN.FLD) 
 } 
 TELLER_ID__CATEGORY 
 { 
 CATEGORY -> ST_Config:CATEGORY 
 @t24:i (align=R, inputBehaviour=N, maxLength=6, sysNumber=7.0, t24Name=CATEGORY) 
 
 CURRENCY -> FIN_CurrencyConfig:CURRENCY 
 @t24:i (align=L, inputBehaviour=N, maxLength=8, sysNumber=8.0, t24Name=CURRENCY) 
 
 OPENING_BALANCE : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=9.0, t24Name=OPENING.BALANCE) 
 
 TILL_CLOS_BAL : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=10.0, t24Name=TILL.CLOS.BAL) 
 
 TILL_BALANCE : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=11.0, t24Name=TILL.BALANCE) 
 
 DENOMINATION -> byValue TT_Contract:TELLER_ID__CATEGORY__DENOMINATION * 
 } 
 TELLER_ID__CATEGORY__DENOMINATION 
 { 
 DENOMINATION -> TT_Config:TELLER_DENOMINATION 
 @t24:i (align=L, inputBehaviour=N, maxLength=12, sysNumber=12.0, t24Name=DENOMINATION) 
 
 UNIT : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=9, sysNumber=13.0, t24Name=UNIT) 
 
 DIFFERENCE : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=14.0, t24Name=DIFFERENCE) 
 } 
 TELLER_ID__NOTES 
 { 
 DENOMINATION -> byValue TT_Contract:TELLER_ID__NOTES__DENOMINATION * 
 } 
 TELLER_ID__NOTES__DENOMINATION 
 { 
 NOTES : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=15.0, t24Name=NOTES) 
 } 
 TELLER_ID__LINKED_TILLS 
 { 
 LINKED_TILLS : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=20.0, t24Name=LINKED.TILLS) 
 } 
 TELLER_ID__LIMIT_CATEGORY 
 { 
 LIMIT_CATEGORY -> ST_Config:CATEGORY 
 @t24:i (align=R, inputBehaviour=I, maxLength=6, sysNumber=24.0, t24Name=LIMIT.CATEGORY) 
 
 EXCLUDE_CCY -> byValue TT_Contract:TELLER_ID__LIMIT_CATEGORY__EXCLUDE_CCY * 
 
 LIMIT_CCY -> byValue TT_Contract:TELLER_ID__LIMIT_CATEGORY__LIMIT_CCY * 
 } 
 TELLER_ID__LIMIT_CATEGORY__EXCLUDE_CCY 
 { 
 EXCLUDE_CCY -> FIN_CurrencyConfig:CURRENCY 
 @t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=25.0, t24Name=EXCLUDE.CCY) 
 
 DEF_FCY_EQV_LIM : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=26.0, t24Name=DEF.FCY.EQV.LIM) 
 
 LOCAL_CCY_LIMIT : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=27.0, t24Name=LOCAL.CCY.LIMIT) 
 } 
 TELLER_ID__LIMIT_CATEGORY__LIMIT_CCY 
 { 
 LIMIT_CCY -> FIN_CurrencyConfig:CURRENCY 
 @t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=28.0, t24Name=LIMIT.CCY) 
 
 LIMIT_AMT : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=29.0, t24Name=LIMIT.AMT) 
 } 
 TELLER_ID__STMT_NO 
 { 
 STMT_NO : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=14, sysNumber=37.0, t24Name=STMT.NO) 
 } 
 TELLER_ID__OVERRIDE 
 { 
 OVERRIDE : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=38.0, t24Name=OVERRIDE) 
 } 
 TELLER_ID__INPUTTER 
 { 
 INPUTTER : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=41.0, t24Name=INPUTTER) 
 } 
 TELLER_ID__DATE_TIME 
 { 
 DATE_TIME : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=42.0, t24Name=DATE.TIME) 
 } 
 /* TELLER DEFAULT 
      This application provides an interface between other modules within T24 and TELLER. Essentially it provides the ability for a TELLER transaction to be created automatically, thus containing all necessary information - accounts, amounts, rates, charges etc, which can then be accessed by the teller by simply entering a reference number. For example, closing an account. If a customer wishes to close his account the teller must perform two transactions within T24. Firstly the ACCOUNT record must be closed. This will inform the teller of all outstanding credit/debit interest, charges, tax etc and secondly the teller must pay the customer the amount due. However, in order to perform the latter he would have to enter the details from the account closure screen into TELLER. What the account closure procedure actually does is to record the details in TELLER.DEFAULT (id of account number) and the teller pulls the details automatically into a TELLER transaction by entering the account number into the OUR.REFERENCE field. Currently the only other example of the use of TELLER.DEFAULT is in the processing of coupon repayments for certificates of deposit. Once the TELLER.DEFAULT record has been processed it cannot be reprocessed. The layout of TELLER.DEFAULT is exactly the same as TELLER itself but includes ten additional fields which can include free format data and two fields to record that the record has been processed, the process date and the transaction reference number. The link to TELLER.DEFAULT is through the OUR.REFERENCE field in TELLER. If this is entered prior to any other data then the associated TELLER.DEFAULT record will be loaded. */ 
 TELLER_DEFAULT 
 @t24:i (level=F, type=L, localRefAllowed=false) 
 { 
 /* Standard T24 alphanumeric field. Validation RulesMandatory input.A maximum of 16 characters may be entered. */ 
 REFERENCE_NUMBER : mml:string PK required 
 @i18n:Label (en=Reference) 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=0.0, t24Name=REFERENCE.NUMBER) 
 
 /* Standard T24 numeric field. Validation RulesA maximum of 3 characters may be entered.Must be the key to a valid entry on the TELLER.TRANSACTION file. */ 
 TRANSACTION_CODE -> TT_Config:TELLER_TRANSACTION 
 @i18n:Label (en="Transaction Code") 
 @i18n:Tooltip (en="Indicates the Transaction Type") 
 @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=1.0, t24Name=TRANSACTION.CODE) 
 
 /* Standard T24 numeric field. Validation RulesA maximum of 0004 characters may be entered. */ 
 TELLER_ID_1 : mml:string 
 @i18n:Label (en="Teller Id") 
 @t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=2.0, t24Name=TELLER.ID.1) 
 
 /* Validation RulesA maximum of 6 characters may be entered.This is a NOINPUT field.The following values are permitted:       DEBIT      CREDIT */ 
 DR_CR_MARKER : TT_Contract:TELLER_DEFAULT__DR_CR_MARKER 
 @i18n:Label (en="Dr / Cr Marker") 
 @i18n:Tooltip (en="Debit Credit indicator") 
 @t24:i (align=L, inputBehaviour=N, maxLength=6, sysNumber=3.0, t24Name=DR.CR.MARKER) 
 
 /* Standard T24 currency field. Validation RulesA maximum of 8 characters may be entered.Must be the key to a valid entry on the CURRENCY file. */ 
 CURRENCY_1 -> FIN_CurrencyConfig:CURRENCY 
 @i18n:Label (en=Ccy) 
 @t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=4.0, t24Name=CURRENCY.1) 
 
 /* Validation RulesA maximum of 16 characters may be entered. */ 
 ACCOUNT_1 : mml:string 
 @i18n:Label (en="Account No") 
 @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=5.0, t24Name=ACCOUNT.1) 
 
 /* Standard T24 customer field. Validation RulesA maximum of 10 characters may be entered.This is a NOINPUT field.Must be the key to a valid entry on the CUSTOMER file. */ 
 CUSTOMER_1 -> ST_Customer:CUSTOMER 
 @i18n:Label (en=Customer) 
 @t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=6.0, t24Name=CUSTOMER.1) 
 
 /* Validation RulesA maximum of 18 characters may be entered. */ 
 AMOUNT_LOCAL_1 : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=7.0, t24Name=AMOUNT.LOCAL.1) 
 
 /* Standard T24 rate field. Validation RulesA maximum of 11 characters may be entered.This is a NOINPUT field. */ 
 RATE_1 : mml:string 
 @i18n:Label (en=Rate) 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=8.0, t24Name=RATE.1) 
 
 /* Validation RulesA maximum of 18 characters may be entered. */ 
 AMOUNT_FCY_1 : mml:string 
 @i18n:Label (en="Amount Fcy 1") 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=9.0, t24Name=AMOUNT.FCY.1) 
 
 /* Standard T24 date field. Validation RulesA maximum of 11 characters may be entered. */ 
 VALUE_DATE_1 : mml:string 
 @i18n:Label (en="Value Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=10.0, t24Name=VALUE.DATE.1) 
 
 /* Standard T24 date field. Validation RulesA maximum of 11 characters may be entered. */ 
 EXPOSURE_DATE_1 : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=11.0, t24Name=EXPOSURE.DATE.1) 
 
 /* Standard T24 alphanumeric field. Validation RulesA maximum of 1 characters may be entered.This is a NOINPUT field. */ 
 CURR_MARKET_1 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=12.0, t24Name=CURR.MARKET.1) 
 
 /* Standard T24 alphanumeric field. Validation RulesA maximum of 2 characters may be entered.This is a NOINPUT field.Must be the key to a valid entry on the FX.POS.TYPE file. */ 
 POS_TYPE_1 -> ST_Config:FX_POS_TYPE 
 @i18n:Label (en="Position Type 1") 
 @i18n:Tooltip (en="Position Type for Side 1") 
 @t24:i (align=L, inputBehaviour=N, maxLength=2, sysNumber=13.0, t24Name=POS.TYPE.1) 
 
 /* Standard T24 alphanumeric field. Validation RulesA maximum of 34 characters may be entered. */ 
 NARRATIVE_1 : mml:string 
 @i18n:Label (en=Narrative) 
 @t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=14.0, t24Name=NARRATIVE.1) 
 
 /* Standard T24 rate field. Validation RulesA maximum of 11 characters may be entered. */ 
 DEAL_RATE : mml:string 
 @i18n:Label (en="Exchange Rate") 
 @i18n:Tooltip (en="Exchange Rate for the transaction") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=15.0, t24Name=DEAL.RATE) 
 
 /* Standard T24 currency field. Validation RulesA maximum of 8 characters may be entered.Must be the key to a valid entry on the CURRENCY file. */ 
 CURRENCY_2 -> FIN_CurrencyConfig:CURRENCY 
 @i18n:Label (en=Ccy) 
 @t24:i (align=L, inputBehaviour=I, maxLength=8, sysNumber=16.0, t24Name=CURRENCY.2) 
 
 /* Standard T24 numeric field. Validation RulesA maximum of 0004 characters may be entered. */ 
 TELLER_ID_2 : mml:string 
 @i18n:Label (en="Teller 2") 
 @t24:i (align=R, inputBehaviour=I, maxLength=4, sysNumber=17.0, t24Name=TELLER.ID.2) 
 
 /* Validation RulesA maximum of 16 characters may be entered. */ 
 ACCOUNT_2 : mml:string 
 @i18n:Label (en="Account No") 
 @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=18.0, t24Name=ACCOUNT.2) 
 
 /* Standard T24 customer field. Validation RulesA maximum of 10 characters may be entered.This is a NOINPUT field.Must be the key to a valid entry on the CUSTOMER file. */ 
 CUSTOMER_2 -> ST_Customer:CUSTOMER 
 @i18n:Label (en=Customer) 
 @t24:i (align=R, inputBehaviour=N, maxLength=10, sysNumber=19.0, t24Name=CUSTOMER.2) 
 
 /* Validation RulesA maximum of 18 characters may be entered.This is a NOINPUT field. */ 
 AMOUNT_LOCAL_2 : mml:string 
 @i18n:Label (en="Chq Amt") 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=20.0, t24Name=AMOUNT.LOCAL.2) 
 
 /* Standard T24 rate field. Validation RulesA maximum of 11 characters may be entered.This is a NOINPUT field. */ 
 RATE_2 : mml:string 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=21.0, t24Name=RATE.2) 
 
 /* Validation RulesA maximum of 18 characters may be entered.This is a NOINPUT field. */ 
 AMOUNT_FCY_2 : mml:string 
 @i18n:Label (en="Amount Fcy 2") 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=22.0, t24Name=AMOUNT.FCY.2) 
 
 /* Validation RulesA maximum of 18 characters may be entered.This is a NOINPUT field. */ 
 NET_AMOUNT : mml:string 
 @i18n:Label (en="Net Amount") 
 @t24:i (align=R, inputBehaviour=N, maxLength=18, sysNumber=23.0, t24Name=NET.AMOUNT) 
 
 /* Standard T24 date field. Validation RulesA maximum of 11 characters may be entered. */ 
 VALUE_DATE_2 : mml:string 
 @i18n:Label (en="Value Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=24.0, t24Name=VALUE.DATE.2) 
 
 /* Standard T24 date field. Validation RulesA maximum of 11 characters may be entered. */ 
 EXPOSURE_DATE_2 : mml:string 
 @i18n:Label (en="Exposure Date") 
 @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=25.0, t24Name=EXPOSURE.DATE.2) 
 
 /* Standard T24 alphanumeric field. Validation RulesA maximum of 1 characters may be entered.This is a NOINPUT field. */ 
 CURR_MARKET_2 : mml:string 
 @t24:i (align=L, inputBehaviour=N, maxLength=1, sysNumber=26.0, t24Name=CURR.MARKET.2) 
 
 /* Standard T24 alphanumeric field. Validation RulesA maximum of 2 characters may be entered.This is a NOINPUT field.Must be the key to a valid entry on the FX.POS.TYPE file. */ 
 POS_TYPE_2 -> ST_Config:FX_POS_TYPE 
 @i18n:Label (en="Position Type 2") 
 @i18n:Tooltip (en="Position Type for Side 2") 
 @t24:i (align=L, inputBehaviour=N, maxLength=2, sysNumber=27.0, t24Name=POS.TYPE.2) 
 
 /* Standard T24 alphanumeric field. Validation RulesA maximum of 34 characters may be entered. */ 
 NARRATIVE_2 : mml:string 
 @i18n:Label (en=Narrative) 
 @t24:i (align=L, inputBehaviour=I, maxLength=34, sysNumber=28.0, t24Name=NARRATIVE.2) 
 
 CHEQUE_NUMBER -> byValue TT_Contract:TELLER_DEFAULT__CHEQUE_NUMBER * 
 
 CHARGE_CATEGORY -> byValue TT_Contract:TELLER_DEFAULT__CHARGE_CATEGORY * 
 
 /* Validation RulesA maximum of 3 characters may be entered.The following values are permitted:       YES      NO */ 
 PRODUCE_ADVICE : TT_Contract:TELLER_DEFAULT__PRODUCE_ADVICE 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=35.0, t24Name=PRODUCE.ADVICE) 
 
 /* Validation RulesA maximum of 3 characters may be entered.The following values are permitted:       YES      NO */ 
 WAIVE_CHARGES : TT_Contract:TELLER_DEFAULT__WAIVE_CHARGES 
 @i18n:Label (en="Waive Charges") 
 @i18n:Tooltip (en="Waive charges Y/N?") 
 @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=36.0, t24Name=WAIVE.CHARGES) 
 
 /* Standard T24 alphanumeric field. Validation RulesA maximum of 16 characters may be entered. */ 
 THEIR_REFERENCE : mml:string 
 @i18n:Label (en="Their Ref") 
 @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=37.0, t24Name=THEIR.REFERENCE) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_1 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=38.0, t24Name=ADDITIONAL.DATA.1) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_2 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=39.0, t24Name=ADDITIONAL.DATA.2) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_3 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=40.0, t24Name=ADDITIONAL.DATA.3) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_4 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=41.0, t24Name=ADDITIONAL.DATA.4) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_5 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=42.0, t24Name=ADDITIONAL.DATA.5) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_6 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=43.0, t24Name=ADDITIONAL.DATA.6) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_7 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=44.0, t24Name=ADDITIONAL.DATA.7) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_8 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=45.0, t24Name=ADDITIONAL.DATA.8) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_9 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=46.0, t24Name=ADDITIONAL.DATA.9) 
 
 /* Validation RulesA maximum of 25 characters may be entered. */ 
 ADDITIONAL_DATA_10 : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=25, sysNumber=47.0, t24Name=ADDITIONAL.DATA.10) 
 
 /* Standard T24 date field. Validation RulesA maximum of 11 characters may be entered.This is a NOINPUT field. */ 
 PROCESS_DATE : mml:string 
 @i18n:Label (en="Process Date") 
 @t24:i (align=R, inputBehaviour=N, maxLength=11, sysNumber=48.0, t24Name=PROCESS.DATE) 
 
 /* This field gets automatically populated with the Teller transaction number,  when the TELLER.DEFAULT  is processed by the system.Example: TT0034300014Validation Rules
        system generated data */ 
 TRANSACTION_REF : mml:string 
 @i18n:Label (en="Transaction Ref") 
 @i18n:Tooltip (en="Transaction Reference") 
 @t24:i (align=L, inputBehaviour=N, maxLength=14, sysNumber=49.0, t24Name=TRANSACTION.REF) 
 } 
 TELLER_DEFAULT__CHEQUE_NUMBER 
 { 
 /* Fields CHEQUE.NUMBER to CHEQUE.ACCT.NO form a related multi value set. Standard T24 alphanumeric field. Validation RulesA maximum of 20 characters may be entered. */ 
 CHEQUE_NUMBER : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=29.0, t24Name=CHEQUE.NUMBER) 
 
 /* Fields CHEQUE.NUMBER to CHEQUE.ACCT.NO form a related multi value set. Standard T24 alphanumeric field. Validation RulesA maximum of 20 characters may be entered. */ 
 CHEQUE_BANK_CDE : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=30.0, t24Name=CHEQUE.BANK.CDE) 
 
 /* Fields CHEQUE.NUMBER to CHEQUE.ACCT.NO form a related multi value set. Standard T24 alphanumeric field. Validation RulesA maximum of 20 characters may be entered. */ 
 CHEQUE_ACCT_NO : mml:string 
 @t24:i (align=L, inputBehaviour=I, maxLength=20, sysNumber=31.0, t24Name=CHEQUE.ACCT.NO) 
 } 
 TELLER_DEFAULT__CHARGE_CATEGORY 
 { 
 /* Fields CHARGE.CATEGORY to CHRG.AMT.FCCY form a related multi value set. Standard T24 numeric field. Validation RulesA maximum of 6 characters may be entered.This is a NOINPUT field.Must be the key to a valid entry on the CATEGORY file. */ 
 CHARGE_CATEGORY -> ST_Config:CATEGORY 
 @t24:i (align=R, inputBehaviour=N, maxLength=6, sysNumber=32.0, t24Name=CHARGE.CATEGORY) 
 
 /* Fields CHARGE.CATEGORY to CHRG.AMT.FCCY form a related multi value set. Validation RulesA maximum of 018 characters may be entered. */ 
 CHRG_AMT_LOCAL : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=33.0, t24Name=CHRG.AMT.LOCAL) 
 
 /* Fields CHARGE.CATEGORY to CHRG.AMT.FCCY form a related multi value set. Validation RulesA maximum of 018 characters may be entered. */ 
 CHRG_AMT_FCCY : mml:string 
 @t24:i (align=R, inputBehaviour=I, maxLength=18, sysNumber=34.0, t24Name=CHRG.AMT.FCCY) 
 } 
 } 
 Enumerations { 
 TELLER__DR_CR_MARKER : mml:string 
 DEBIT=DEBIT 
 CREDIT=CREDIT 
 
 TELLER__WAIVE_CHARGES : mml:string 
 YES=YES 
 NO=NO 
 
 TELLER__CHG_TYPE : mml:string 
 DEBIT_PLUS_CHARGES="DEBIT PLUS CHARGES" 
 CREDIT_LESS_CHARGES="CREDIT LESS CHARGES" 
 
 TELLER_ID__STATUS : mml:string 
 OPEN=OPEN 
 CLOSE=CLOSE 
 
 TELLER_ID__TILL_TFR_ONLY : mml:string 
 YES=YES 
 NULL=NULL 
 
 TELLER_ID__STOCK_UPD : mml:string 
 YES=YES 
 NULL=NULL 
 
 TELLER_ID__TILL_LIMIT : mml:string 
 YES=YES 
 NO=NO 
 
 TELLER_DEFAULT__DR_CR_MARKER : mml:string 
 DEBIT=DEBIT 
 CREDIT=CREDIT 
 
 TELLER_DEFAULT__PRODUCE_ADVICE : mml:string 
 YES=YES 
 NO=NO 
 
 TELLER_DEFAULT__WAIVE_CHARGES : mml:string 
 YES=YES 
 NO=NO 
 
 } 
