<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.zealcore.se.core">
   <annotation>
      <appInfo>
         <meta.schema plugin="com.zealcore.se.core" id="com.zealcore.se.core.typepackages"
            name="TypePackages"/>
      </appInfo>
      <documentation> Extensions to this extension point will be able to contribute logmessage-types
         to the core type-register. These classes must extend types in the core.model package.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="typePackage" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation> </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation> </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation> </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="typePackage">
      <complexType>
         <attribute name="id" type="string">
            <annotation>
               <documentation> </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation> </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string">
            <annotation>
               <documentation> </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":com.zealcore.se.core.dl.ITypePackage"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation> Optima Log Analyzer 1.0 </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation><![CDATA[
         &lt;br&gt;
This is a tutorial to write an Type package plugin upon the &lt;i&gt;com.zealcore.se.core.typepackages extension&lt;i&gt; point. This extension point requires that the type package class implements the ITypePackage interface, but we recommened to extend com.zealcore.se.core.dl.AbstractTypePackage instead. This makes it much easier!
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;&lt;b&gt;1.&lt;/b&gt; Create a new empty Plugin-Project
&lt;br&gt;&lt;br&gt;&lt;b&gt;2.&lt;/b&gt;  Open the manifest click on the &lt;i&gt;Extensions&lt;/i&gt;-tab.
&lt;br&gt;&lt;br&gt;&lt;b&gt;3.&lt;/b&gt;  Click on the &lt;i&gt;Add&lt;/i&gt;-button to create an extension.
&lt;br&gt;&lt;br&gt;&lt;b&gt;4.&lt;/b&gt;  Uncheck the checkbox with text &lt;i&gt;Show only extionion points from the required plug-ins&lt;/i&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;5.&lt;/b&gt;  Type &quot;com.zealcore&quot; in the &lt;i&gt;Extension Point filter&lt;/i&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;6.&lt;/b&gt;  Choose &lt;i&gt;com.zealcore.se.core.typepackages&lt;/i&gt; from the list and click &lt;i&gt;Finish&lt;/i&gt;
&lt;br&gt;&lt;br&gt;&lt;b&gt;7.&lt;/b&gt;  A dialog will appear with the question if you want to add the required plug-in to the list of plug-in dependencies. Click &lt;i&gt;yes&lt;/i&gt;.
&lt;br&gt;&lt;br&gt;&lt;b&gt;8.&lt;/b&gt;  Fill in a name of the importer class and id in the &lt;i&gt;Extension Element Details&lt;/i&gt; fields and save the changes.
&lt;br&gt;&lt;br&gt;&lt;b&gt;9.&lt;/b&gt;  Click the highlighted &lt;i&gt;class*:&lt;/i&gt; in the &lt;i&gt;Extension Element Details&lt;/i&gt; to create the importer class.
&lt;br&gt;&lt;br&gt;&lt;b&gt;10.&lt;/b&gt;  Now you will see the &lt;i&gt;New Class Wizard&lt;/i&gt;. Add &lt;i&gt;com.zealcore.se.core.dl.AbstractTypePackage&lt;/i&gt; to the &lt;i&gt;Superclass:&lt;/i&gt; field. 
Remove &lt;i&gt;com.zealcore.se.core.dl.ITypePackage&lt;/i&gt; from the &lt;i&gt;Interfaces:&lt;/i&gt; field. &lt;br&gt;. Press OK to continue.
&lt;br&gt;&lt;br&gt;&lt;b&gt;11.&lt;/b&gt;  Now we have a Typepackage class. You will now only have to edit the code. We will explain all methods that are derived from the AbstractTypePackage-class.
&lt;br&gt;&lt;br&gt;
&lt;b&gt;getTypes()&lt;/b&gt;&lt;br&gt;Returns: a list of data types in this type package. &lt;br&gt;
Minimalistic exampel code:&lt;br&gt;&lt;code&gt;&lt;pre&gt;
    public Collection&lt;IType&gt; getTypes() {
        return Collections.EMPTY_LIST;
    }
&lt;/pre&gt;
&lt;/code&gt;
&lt;br&gt;

&lt;b&gt;processLogEvent()&lt;/b&gt;&lt;br&gt;Process log events and creates refined information that cannot be set by the importer. Example of such data is durations, state-transitions, CPU-load and so on.
Minimalistic exampel code:&lt;br&gt;&lt;code&gt;&lt;pre&gt;
    public void processLogEvent(AbstractLogEvent abstractLogEvent) {
    }
&lt;/pre&gt;
&lt;/code&gt;

&lt;br&gt;&lt;br&gt;&lt;b&gt;12.&lt;/b&gt;Override the &lt;i&gt;toString&lt;/i&gt; method and return the name of the type package Example:&lt;br&gt;
&lt;/pre&gt;
&lt;/code&gt;
    @Override
    public String toString() {
            return &quot;Example Importer (c) Enea ZealCore AB&quot;;
    }
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;]]>
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation><![CDATA[
         &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;
&lt;!--NewPage--&gt;
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;!-- Generated by javadoc (build 1.6.0) on Thu Sep 20 16:46:38 CEST 2007 --&gt;
&lt;TITLE&gt;
ITypePackage
&lt;/TITLE&gt;

&lt;META NAME=&quot;date&quot; CONTENT=&quot;2007-09-20&quot;&gt;

&lt;LINK REL =&quot;stylesheet&quot; TYPE=&quot;text/css&quot; HREF=&quot;../../../../stylesheet.css&quot; TITLE=&quot;Style&quot;&gt;

&lt;SCRIPT type=&quot;text/javascript&quot;&gt;
function windowTitle()
{
    if (location.href.indexOf(&apos;is-external=true&apos;) == -1) {
        parent.document.title=&quot;ITypePackage&quot;;
    }
}
&lt;/SCRIPT&gt;
&lt;NOSCRIPT&gt;
&lt;/NOSCRIPT&gt;

&lt;/HEAD&gt;

&lt;BODY BGCOLOR=&quot;white&quot; onload=&quot;windowTitle();&quot;&gt;
&lt;HR&gt;


&lt;!-- ========= START OF TOP NAVBAR ======= --&gt;
&lt;A NAME=&quot;navbar_top&quot;&gt;&lt;!-- --&gt;&lt;/A&gt;
&lt;A HREF=&quot;#skip-navbar_top&quot; title=&quot;Skip navigation links&quot;&gt;&lt;/A&gt;
&lt;TABLE BORDER=&quot;0&quot; WIDTH=&quot;100%&quot; CELLPADDING=&quot;1&quot; CELLSPACING=&quot;0&quot; SUMMARY=&quot;&quot;&gt;
&lt;TR&gt;
&lt;TD COLSPAN=2 BGCOLOR=&quot;#EEEEFF&quot; CLASS=&quot;NavBarCell1&quot;&gt;
&lt;A NAME=&quot;navbar_top_firstrow&quot;&gt;&lt;!-- --&gt;&lt;/A&gt;
&lt;TABLE BORDER=&quot;0&quot; CELLPADDING=&quot;0&quot; CELLSPACING=&quot;3&quot; SUMMARY=&quot;&quot;&gt;
  &lt;TR ALIGN=&quot;center&quot; VALIGN=&quot;top&quot;&gt;
  &lt;TD BGCOLOR=&quot;#EEEEFF&quot; CLASS=&quot;NavBarCell1&quot;&gt;    &lt;A HREF=&quot;../../../../com/zealcore/se/core/package-summary.html&quot;&gt;&lt;FONT CLASS=&quot;NavBarFont1&quot;&gt;&lt;B&gt;Package&lt;/B&gt;&lt;/FONT&gt;&lt;/A&gt;&amp;nbsp;&lt;/TD&gt;
  &lt;TD BGCOLOR=&quot;#FFFFFF&quot; CLASS=&quot;NavBarCell1Rev&quot;&gt; &amp;nbsp;&lt;FONT CLASS=&quot;NavBarFont1Rev&quot;&gt;&lt;B&gt;Class&lt;/B&gt;&lt;/FONT&gt;&amp;nbsp;&lt;/TD&gt;
  &lt;TD BGCOLOR=&quot;#EEEEFF&quot; CLASS=&quot;NavBarCell1&quot;&gt;    &lt;A HREF=&quot;package-tree.html&quot;&gt;&lt;FONT CLASS=&quot;NavBarFont1&quot;&gt;&lt;B&gt;Tree&lt;/B&gt;&lt;/FONT&gt;&lt;/A&gt;&amp;nbsp;&lt;/TD&gt;
  &lt;TD BGCOLOR=&quot;#EEEEFF&quot; CLASS=&quot;NavBarCell1&quot;&gt;    &lt;A HREF=&quot;../../../../deprecated-list.html&quot;&gt;&lt;FONT CLASS=&quot;NavBarFont1&quot;&gt;&lt;B&gt;Deprecated&lt;/B&gt;&lt;/FONT&gt;&lt;/A&gt;&amp;nbsp;&lt;/TD&gt;
  &lt;TD BGCOLOR=&quot;#EEEEFF&quot; CLASS=&quot;NavBarCell1&quot;&gt;    &lt;A HREF=&quot;../../../../index-all.html&quot;&gt;&lt;FONT CLASS=&quot;NavBarFont1&quot;&gt;&lt;B&gt;Index&lt;/B&gt;&lt;/FONT&gt;&lt;/A&gt;&amp;nbsp;&lt;/TD&gt;
  &lt;TD BGCOLOR=&quot;#EEEEFF&quot; CLASS=&quot;NavBarCell1&quot;&gt;    &lt;A HREF=&quot;../../../../help-doc.html&quot;&gt;&lt;FONT CLASS=&quot;NavBarFont1&quot;&gt;&lt;B&gt;Help&lt;/B&gt;&lt;/FONT&gt;&lt;/A&gt;&amp;nbsp;&lt;/TD&gt;
  &lt;/TR&gt;
&lt;/TABLE&gt;
&lt;/TD&gt;
&lt;TD ALIGN=&quot;right&quot; VALIGN=&quot;top&quot; ROWSPAN=3&gt;&lt;EM&gt;
&lt;/EM&gt;
&lt;/TD&gt;
&lt;/TR&gt;

&lt;TR&gt;
&lt;TD BGCOLOR=&quot;white&quot; CLASS=&quot;NavBarCell2&quot;&gt;&lt;FONT SIZE=&quot;-2&quot;&gt;
&amp;nbsp;PREV CLASS&amp;nbsp;
&amp;nbsp;NEXT CLASS&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD BGCOLOR=&quot;white&quot; CLASS=&quot;NavBarCell2&quot;&gt;&lt;FONT SIZE=&quot;-2&quot;&gt;
  &lt;A HREF=&quot;../../../../index.html?com/zealcore/se/core/ITypePackage.html&quot; target=&quot;_top&quot;&gt;&lt;B&gt;FRAMES&lt;/B&gt;&lt;/A&gt;  &amp;nbsp;
&amp;nbsp;&lt;A HREF=&quot;ITypePackage.html&quot; target=&quot;_top&quot;&gt;&lt;B&gt;NO FRAMES&lt;/B&gt;&lt;/A&gt;  &amp;nbsp;
&amp;nbsp;&lt;SCRIPT type=&quot;text/javascript&quot;&gt;
  &lt;!--
  if(window==top) {
    document.writeln(&apos;&lt;A HREF=&quot;../../../../allclasses-noframe.html&quot;&gt;&lt;B&gt;All Classes&lt;/B&gt;&lt;/A&gt;&apos;);
  }
  //--&gt;
&lt;/SCRIPT&gt;
&lt;NOSCRIPT&gt;
  &lt;A HREF=&quot;../../../../allclasses-noframe.html&quot;&gt;&lt;B&gt;All Classes&lt;/B&gt;&lt;/A&gt;
&lt;/NOSCRIPT&gt;


&lt;/FONT&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt;
&lt;TD VALIGN=&quot;top&quot; CLASS=&quot;NavBarCell3&quot;&gt;&lt;FONT SIZE=&quot;-2&quot;&gt;
  SUMMARY:&amp;nbsp;NESTED&amp;nbsp;|&amp;nbsp;FIELD&amp;nbsp;|&amp;nbsp;CONSTR&amp;nbsp;|&amp;nbsp;&lt;A HREF=&quot;#method_summary&quot;&gt;METHOD&lt;/A&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD VALIGN=&quot;top&quot; CLASS=&quot;NavBarCell3&quot;&gt;&lt;FONT SIZE=&quot;-2&quot;&gt;
DETAIL:&amp;nbsp;FIELD&amp;nbsp;|&amp;nbsp;CONSTR&amp;nbsp;|&amp;nbsp;&lt;A HREF=&quot;#method_detail&quot;&gt;METHOD&lt;/A&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;/TABLE&gt;
&lt;A NAME=&quot;skip-navbar_top&quot;&gt;&lt;/A&gt;
&lt;!-- ========= END OF TOP NAVBAR ========= --&gt;

&lt;HR&gt;
&lt;!-- ======== START OF CLASS DATA ======== --&gt;
&lt;H2&gt;
&lt;FONT SIZE=&quot;-1&quot;&gt;
com.zealcore.se.core&lt;/FONT&gt;
&lt;BR&gt;
Interface ITypePackage&lt;/H2&gt;
&lt;HR&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;PRE&gt;public interface &lt;B&gt;ITypePackage&lt;/B&gt;&lt;/DL&gt;
&lt;/PRE&gt;

&lt;P&gt;
&lt;HR&gt;

&lt;P&gt;

&lt;!-- ========== METHOD SUMMARY =========== --&gt;

&lt;A NAME=&quot;method_summary&quot;&gt;&lt;!-- --&gt;&lt;/A&gt;
&lt;TABLE BORDER=&quot;1&quot; WIDTH=&quot;100%&quot; CELLPADDING=&quot;3&quot; CELLSPACING=&quot;0&quot; SUMMARY=&quot;&quot;&gt;
&lt;TR BGCOLOR=&quot;#CCCCFF&quot; CLASS=&quot;TableHeadingColor&quot;&gt;
&lt;TH ALIGN=&quot;left&quot; COLSPAN=&quot;2&quot;&gt;&lt;FONT SIZE=&quot;+2&quot;&gt;
&lt;B&gt;Method Summary&lt;/B&gt;&lt;/FONT&gt;&lt;/TH&gt;
&lt;/TR&gt;
&lt;TR BGCOLOR=&quot;white&quot; CLASS=&quot;TableRowColor&quot;&gt;
&lt;TD ALIGN=&quot;right&quot; VALIGN=&quot;top&quot; WIDTH=&quot;1%&quot;&gt;&lt;FONT SIZE=&quot;-1&quot;&gt;
&lt;CODE&gt;&amp;nbsp;void&lt;/CODE&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;CODE&gt;&lt;B&gt;&lt;A HREF=&quot;../../../../com/zealcore/se/core/ITypePackage.html#addLogsessionItemListener(ILogSessionItemListener)&quot;&gt;addLogsessionItemListener&lt;/A&gt;&lt;/B&gt;(ILogSessionItemListener&amp;nbsp;listener)&lt;/CODE&gt;

&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR BGCOLOR=&quot;white&quot; CLASS=&quot;TableRowColor&quot;&gt;
&lt;TD ALIGN=&quot;right&quot; VALIGN=&quot;top&quot; WIDTH=&quot;1%&quot;&gt;&lt;FONT SIZE=&quot;-1&quot;&gt;
&lt;CODE&gt;&amp;nbsp;void&lt;/CODE&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;CODE&gt;&lt;B&gt;&lt;A HREF=&quot;../../../../com/zealcore/se/core/ITypePackage.html#begin()&quot;&gt;begin&lt;/A&gt;&lt;/B&gt;()&lt;/CODE&gt;

&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is invoked before processing log events for a part of the log set&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR BGCOLOR=&quot;white&quot; CLASS=&quot;TableRowColor&quot;&gt;
&lt;TD ALIGN=&quot;right&quot; VALIGN=&quot;top&quot; WIDTH=&quot;1%&quot;&gt;&lt;FONT SIZE=&quot;-1&quot;&gt;
&lt;CODE&gt;&amp;nbsp;void&lt;/CODE&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;CODE&gt;&lt;B&gt;&lt;A HREF=&quot;../../../../com/zealcore/se/core/ITypePackage.html#beginFull()&quot;&gt;beginFull&lt;/A&gt;&lt;/B&gt;()&lt;/CODE&gt;

&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is invoked before processing log events for the entire log set&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR BGCOLOR=&quot;white&quot; CLASS=&quot;TableRowColor&quot;&gt;
&lt;TD ALIGN=&quot;right&quot; VALIGN=&quot;top&quot; WIDTH=&quot;1%&quot;&gt;&lt;FONT SIZE=&quot;-1&quot;&gt;
&lt;CODE&gt;&amp;nbsp;void&lt;/CODE&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;CODE&gt;&lt;B&gt;&lt;A HREF=&quot;../../../../com/zealcore/se/core/ITypePackage.html#end()&quot;&gt;end&lt;/A&gt;&lt;/B&gt;()&lt;/CODE&gt;

&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is invoked after processing log events for a part of the log set&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR BGCOLOR=&quot;white&quot; CLASS=&quot;TableRowColor&quot;&gt;
&lt;TD ALIGN=&quot;right&quot; VALIGN=&quot;top&quot; WIDTH=&quot;1%&quot;&gt;&lt;FONT SIZE=&quot;-1&quot;&gt;
&lt;CODE&gt;&amp;nbsp;void&lt;/CODE&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;CODE&gt;&lt;B&gt;&lt;A HREF=&quot;../../../../com/zealcore/se/core/ITypePackage.html#endFull()&quot;&gt;endFull&lt;/A&gt;&lt;/B&gt;()&lt;/CODE&gt;

&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is invoked after processing log events for the entire log set&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR BGCOLOR=&quot;white&quot; CLASS=&quot;TableRowColor&quot;&gt;
&lt;TD ALIGN=&quot;right&quot; VALIGN=&quot;top&quot; WIDTH=&quot;1%&quot;&gt;&lt;FONT SIZE=&quot;-1&quot;&gt;
&lt;CODE&gt;&amp;nbsp;java.util.Collection&amp;lt;IType&amp;gt;&lt;/CODE&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;CODE&gt;&lt;B&gt;&lt;A HREF=&quot;../../../../com/zealcore/se/core/ITypePackage.html#getTypes()&quot;&gt;getTypes&lt;/A&gt;&lt;/B&gt;()&lt;/CODE&gt;

&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR BGCOLOR=&quot;white&quot; CLASS=&quot;TableRowColor&quot;&gt;
&lt;TD ALIGN=&quot;right&quot; VALIGN=&quot;top&quot; WIDTH=&quot;1%&quot;&gt;&lt;FONT SIZE=&quot;-1&quot;&gt;
&lt;CODE&gt;&amp;nbsp;void&lt;/CODE&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;CODE&gt;&lt;B&gt;&lt;A HREF=&quot;../../../../com/zealcore/se/core/ITypePackage.html#processLogEvent(AbstractLogEvent)&quot;&gt;processLogEvent&lt;/A&gt;&lt;/B&gt;(AbstractLogEvent&amp;nbsp;abstractLogEvent)&lt;/CODE&gt;

&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is invoked for each event that is created by setLogfile.&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR BGCOLOR=&quot;white&quot; CLASS=&quot;TableRowColor&quot;&gt;
&lt;TD ALIGN=&quot;right&quot; VALIGN=&quot;top&quot; WIDTH=&quot;1%&quot;&gt;&lt;FONT SIZE=&quot;-1&quot;&gt;
&lt;CODE&gt;&amp;nbsp;void&lt;/CODE&gt;&lt;/FONT&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;CODE&gt;&lt;B&gt;&lt;A HREF=&quot;../../../../com/zealcore/se/core/ITypePackage.html#removeLogsessionItemListener(ILogSessionItemListener)&quot;&gt;removeLogsessionItemListener&lt;/A&gt;&lt;/B&gt;(ILogSessionItemListener&amp;nbsp;listener)&lt;/CODE&gt;

&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/TD&gt;
&lt;/TR&gt;
&lt;/TABLE&gt;
&amp;nbsp;
&lt;P&gt;

&lt;HR&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;]]>
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation><![CDATA[
         &lt;code&gt;&lt;pre&gt;
/**
 * 
 */
package com.zealcore.sd.mintypepackage;

import java.util.Collection;
import java.util.Collections;

import com.zealcore.se.core.dl.AbstractTypePackage;
import com.zealcore.se.core.model.AbstractLogEvent;
import com.zealcore.se.core.model.IType;

/**
 * @author pasa
 * 
 */
public class MinimalTypepackage extends AbstractTypePackage {

    /**
     * 
     */
    public MinimalTypepackage() {
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.zealcore.se.core.dl.ITypePackage#getTypes()
     */
    public Collection&lt;IType&gt; getTypes() {
        return Collections.EMPTY_LIST;
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.zealcore.se.core.dl.ITypePackage#processLogEvent(com.zealcore.se.core.model.AbstractLogEvent)
     */
    public void processLogEvent(AbstractLogEvent abstractLogEvent) {
    }

    @Override
    public String toString() {
        return &quot;Minimalistic Typepackage (c) Enea ZealCore AB&quot;;
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;]]>
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation><![CDATA[
         Intellectual Property Ownership, Copyright Protection
The Software and any authorized copies that you make are the
intellectual property of and are owned by ZealCore. The structure,
organization and code of the Software are the valuable trade
secrets and confidential information of ZealCore. The Software
is protected by law, including without limitation the copyright
laws of the United States and other countries, and by international
treaty provisions. Except as expressly stated herein, this Agreement
does not grant you any intellectual property rights in the Software
and all rights not expressly granted are reserved by ZealCore
and its suppliers.]]>
      </documentation>
   </annotation>
</schema>
