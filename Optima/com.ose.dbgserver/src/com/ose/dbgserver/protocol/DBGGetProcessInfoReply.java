/*
     This module was generated automatically from /vobs/ose5/core_ext/dbgserver/private/dbgserverinterface.stl.
                DO NOT EDIT THIS FILE
*/



package com.ose.dbgserver.protocol;
import java.io.*;

public class DBGGetProcessInfoReply extends Message implements dbgserverinterfaceConstants{
   public int pid;
   public int bid;
   public int parent;
   public short procType;
   public short status;
   public short priority;
   public byte unused1;
   public byte unused2;
   public String processName;


   public DBGGetProcessInfoReply(int _pid, int _bid, int _parent, short _procType, short _status, short _priority, byte _unused1, byte _unused2, String _processName) {
      pid = _pid;
      bid = _bid;
      parent = _parent;
      procType = _procType;
      status = _status;
      priority = _priority;
      unused1 = _unused1;
      unused2 = _unused2;
      processName = _processName;
   }

   public DBGGetProcessInfoReply(DataInputStream _s) throws IOException { signalNo = 32961; read(_s);}
   public final void sendMessage(DataOutputStream _s) throws IOException { write(_s, this.pid, this.bid, this.parent, this.procType, this.status, this.priority, this.unused1, this.unused2, this.processName);}
   public final static void write(DataOutputStream _s, int _pid, int _bid, int _parent, short _procType, short _status, short _priority, byte _unused1, byte _unused2, String _processName   ) throws IOException {
         int _i;
         int _processNameSize=_processName.length()+1;
         _s.writeInt(DBGGETPROCESSINFOREPLY);
         int _size=28
            +4+_processNameSize
            ;
         _s.writeInt(_size);
         _s.writeInt(_pid);
         _s.writeInt(_bid);
         _s.writeInt(_parent);
         _s.writeShort(_procType);
         _s.writeShort(_status);
         _s.writeShort(_priority);
         _s.writeByte(_unused1);
         _s.writeByte(_unused2);
         int _dynSize=28;
         int _bytes2Skip;

         // write processName
         _bytes2Skip=4-_dynSize&3;
         for(_i=0;_i<_bytes2Skip;_i++) _s.writeByte(0);
         _dynSize+=_bytes2Skip;
         _s.writeInt(_processNameSize);
         _dynSize+=_processNameSize;
         _s.writeBytes(_processName);
         _s.writeByte(0);
   }
   public final void read(DataInputStream _s) throws IOException {
         int _i;
         int _size=_s.readInt();
         pid=_s.readInt();
         bid=_s.readInt();
         parent=_s.readInt();
         procType=_s.readShort();
         status=_s.readShort();
         priority=_s.readShort();
         unused1=_s.readByte();
         unused2=_s.readByte();
         int _dynSize=28;
         int _bytes2Skip;

         // read processName
         _bytes2Skip=4-_dynSize&3;
         if(_bytes2Skip!=0) {_s.skipBytes(_bytes2Skip);_dynSize+=_bytes2Skip;}
         _size=_s.readInt();
         _dynSize+=_size;
         byte _processName[] = new byte[_size];
         _s.readFully(_processName, 0, _size);
         processName=new String(_processName, 0,0, _processName.length-1);
   }
}
