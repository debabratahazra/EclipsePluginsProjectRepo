/*
     This module was generated automatically from /vobs/ose5/core_ext/dbgserver/private/dbgserverinterface.stl.
                DO NOT EDIT THIS FILE
*/



package com.ose.dbgserver.protocol;
import java.io.*;

public class DBGInitConnection extends Message implements dbgserverinterfaceConstants{
   public int majorInterfaceVersion;
   public int minorInterfaceVersion;
   public int slidingWindowSize;
   public int connectionBrokenTimeout;
   public String userHostIdName;


   public DBGInitConnection(int _majorInterfaceVersion, int _minorInterfaceVersion, int _slidingWindowSize, int _connectionBrokenTimeout, String _userHostIdName) {
      majorInterfaceVersion = _majorInterfaceVersion;
      minorInterfaceVersion = _minorInterfaceVersion;
      slidingWindowSize = _slidingWindowSize;
      connectionBrokenTimeout = _connectionBrokenTimeout;
      userHostIdName = _userHostIdName;
   }

   public DBGInitConnection(DataInputStream _s) throws IOException { signalNo = 32902; read(_s);}
   public final void sendMessage(DataOutputStream _s) throws IOException { write(_s, this.majorInterfaceVersion, this.minorInterfaceVersion, this.slidingWindowSize, this.connectionBrokenTimeout, this.userHostIdName);}
   public final static void write(DataOutputStream _s, int _majorInterfaceVersion, int _minorInterfaceVersion, int _slidingWindowSize, int _connectionBrokenTimeout, String _userHostIdName   ) throws IOException {
         int _i;
         int _userHostIdNameSize=_userHostIdName.length()+1;
         _s.writeInt(DBGINITCONNECTION);
         int _size=24
            +4+_userHostIdNameSize
            ;
         _s.writeInt(_size);
         _s.writeInt(_majorInterfaceVersion);
         _s.writeInt(_minorInterfaceVersion);
         _s.writeInt(_slidingWindowSize);
         _s.writeInt(_connectionBrokenTimeout);
         int _dynSize=24;
         int _bytes2Skip;

         // write userHostIdName
         _bytes2Skip=4-_dynSize&3;
         for(_i=0;_i<_bytes2Skip;_i++) _s.writeByte(0);
         _dynSize+=_bytes2Skip;
         _s.writeInt(_userHostIdNameSize);
         _dynSize+=_userHostIdNameSize;
         _s.writeBytes(_userHostIdName);
         _s.writeByte(0);
   }
   public final void read(DataInputStream _s) throws IOException {
         int _i;
         int _size=_s.readInt();
         majorInterfaceVersion=_s.readInt();
         minorInterfaceVersion=_s.readInt();
         slidingWindowSize=_s.readInt();
         connectionBrokenTimeout=_s.readInt();
         int _dynSize=24;
         int _bytes2Skip;

         // read userHostIdName
         _bytes2Skip=4-_dynSize&3;
         if(_bytes2Skip!=0) {_s.skipBytes(_bytes2Skip);_dynSize+=_bytes2Skip;}
         _size=_s.readInt();
         _dynSize+=_size;
         byte _userHostIdName[] = new byte[_size];
         _s.readFully(_userHostIdName, 0, _size);
         userHostIdName=new String(_userHostIdName, 0,0, _userHostIdName.length-1);
   }
}
