/*
     This module was generated automatically from /vobs/ose5/core_ext/dbgserver/private/dbgserverinterface.stl.
                DO NOT EDIT THIS FILE
*/



package com.ose.dbgserver.protocol;
import java.io.*;

public class DBGInitConnectionReply extends Message implements dbgserverinterfaceConstants{
   public int connectionAccepted;
   public int majorInterfaceVersion;
   public int minorInterfaceVersion;
   public int tickLength;
   public int traceBufSize;
   public int evactMemorySize;


   public DBGInitConnectionReply(int _connectionAccepted, int _majorInterfaceVersion, int _minorInterfaceVersion, int _tickLength, int _traceBufSize, int _evactMemorySize) {
      connectionAccepted = _connectionAccepted;
      majorInterfaceVersion = _majorInterfaceVersion;
      minorInterfaceVersion = _minorInterfaceVersion;
      tickLength = _tickLength;
      traceBufSize = _traceBufSize;
      evactMemorySize = _evactMemorySize;
   }

   public DBGInitConnectionReply(DataInputStream _s) throws IOException { signalNo = 32903; read(_s);}
   public final void sendMessage(DataOutputStream _s) throws IOException { write(_s, this.connectionAccepted, this.majorInterfaceVersion, this.minorInterfaceVersion, this.tickLength, this.traceBufSize, this.evactMemorySize);}
   public final static void write(DataOutputStream _s, int _connectionAccepted, int _majorInterfaceVersion, int _minorInterfaceVersion, int _tickLength, int _traceBufSize, int _evactMemorySize   ) throws IOException {
         int _i;
         _s.writeInt(DBGINITCONNECTIONREPLY);
         int _size=32;
         _s.writeInt(_size);
         _s.writeInt(_connectionAccepted);
         _s.writeInt(_majorInterfaceVersion);
         _s.writeInt(_minorInterfaceVersion);
         _s.writeInt(_tickLength);
         _s.writeInt(_traceBufSize);
         _s.writeInt(_evactMemorySize);
   }
   public final void read(DataInputStream _s) throws IOException {
         int _i;
         int _size=_s.readInt();
         connectionAccepted=_s.readInt();
         majorInterfaceVersion=_s.readInt();
         minorInterfaceVersion=_s.readInt();
         tickLength=_s.readInt();
         traceBufSize=_s.readInt();
         evactMemorySize=_s.readInt();
   }
}
