/*
     This module was generated automatically from /vobs/ose5/core_ext/dbgserver/private/dbgserverinterface.stl.
                DO NOT EDIT THIS FILE
*/



package com.ose.dbgserver.protocol;
import java.io.*;

public class DBGNewDbgServer extends Message implements dbgserverinterfaceConstants{
   public int serverPort;
   public int broadcastPort;
   public int priority;
   public String huntPath;


   public DBGNewDbgServer(int _serverPort, int _broadcastPort, int _priority, String _huntPath) {
      serverPort = _serverPort;
      broadcastPort = _broadcastPort;
      priority = _priority;
      huntPath = _huntPath;
   }

   public DBGNewDbgServer(DataInputStream _s) throws IOException { signalNo = 32992; read(_s);}
   public final void sendMessage(DataOutputStream _s) throws IOException { write(_s, this.serverPort, this.broadcastPort, this.priority, this.huntPath);}
   public final static void write(DataOutputStream _s, int _serverPort, int _broadcastPort, int _priority, String _huntPath   ) throws IOException {
         int _i;
         int _huntPathSize=_huntPath.length()+1;
         _s.writeInt(DBGNEWDBGSERVER);
         int _size=20
            +4+_huntPathSize
            ;
         _s.writeInt(_size);
         _s.writeInt(_serverPort);
         _s.writeInt(_broadcastPort);
         _s.writeInt(_priority);
         int _dynSize=20;
         int _bytes2Skip;

         // write huntPath
         _bytes2Skip=4-_dynSize&3;
         for(_i=0;_i<_bytes2Skip;_i++) _s.writeByte(0);
         _dynSize+=_bytes2Skip;
         _s.writeInt(_huntPathSize);
         _dynSize+=_huntPathSize;
         _s.writeBytes(_huntPath);
         _s.writeByte(0);
   }
   public final void read(DataInputStream _s) throws IOException {
         int _i;
         int _size=_s.readInt();
         serverPort=_s.readInt();
         broadcastPort=_s.readInt();
         priority=_s.readInt();
         int _dynSize=20;
         int _bytes2Skip;

         // read huntPath
         _bytes2Skip=4-_dynSize&3;
         if(_bytes2Skip!=0) {_s.skipBytes(_bytes2Skip);_dynSize+=_bytes2Skip;}
         _size=_s.readInt();
         _dynSize+=_size;
         byte _huntPath[] = new byte[_size];
         _s.readFully(_huntPath, 0, _size);
         huntPath=new String(_huntPath, 0,0, _huntPath.length-1);
   }
}
