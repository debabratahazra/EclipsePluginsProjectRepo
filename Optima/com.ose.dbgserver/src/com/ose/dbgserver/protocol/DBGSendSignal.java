/*
     This module was generated automatically from /vobs/ose5/core_ext/dbgserver/private/dbgserverinterface.stl.
                DO NOT EDIT THIS FILE
*/



package com.ose.dbgserver.protocol;
import java.io.*;

public class DBGSendSignal extends Message implements dbgserverinterfaceConstants{
   public int receiverPid;
   public int senderPid;
   public int signalNo;
   public byte signalData[];


   public DBGSendSignal(int _receiverPid, int _senderPid, int _signalNo, byte _signalData[]) {
      receiverPid = _receiverPid;
      senderPid = _senderPid;
      signalNo = _signalNo;
      signalData = _signalData;
   }

   public DBGSendSignal(DataInputStream _s) throws IOException { signalNo = 32990; read(_s);}
   public final void sendMessage(DataOutputStream _s) throws IOException { write(_s, this.receiverPid, this.senderPid, this.signalNo, this.signalData);}
   public final static void write(DataOutputStream _s, int _receiverPid, int _senderPid, int _signalNo, byte _signalData[]   ) throws IOException {
         int _i;
         _s.writeInt(DBGSENDSIGNAL);
         int _size=20
            +4+_signalData.length
            ;
         _s.writeInt(_size);
         _s.writeInt(_receiverPid);
         _s.writeInt(_senderPid);
         _s.writeInt(_signalNo);
         int _dynSize=20;
         int _bytes2Skip;

         // write signalData
         _bytes2Skip=4-_dynSize&3;
         for(_i=0;_i<_bytes2Skip;_i++) _s.writeByte(0);
         _dynSize+=_bytes2Skip;
         _s.writeInt(_signalData.length);
         _dynSize+=_signalData.length;
         _s.write(_signalData);
   }
   public final void read(DataInputStream _s) throws IOException {
         int _i;
         int _size=_s.readInt();
         receiverPid=_s.readInt();
         senderPid=_s.readInt();
         signalNo=_s.readInt();
         int _dynSize=20;
         int _bytes2Skip;

         // read signalData
         _bytes2Skip=4-_dynSize&3;
         if(_bytes2Skip!=0) {_s.skipBytes(_bytes2Skip);_dynSize+=_bytes2Skip;}
         _size=_s.readInt();
         _dynSize+=_size;
         signalData=new byte[_size];
         _s.readFully(signalData,0,_size);
   }
}
