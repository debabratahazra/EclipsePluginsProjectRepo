/*
     This module was generated automatically from /vobs/ose5/core_ext/dbgserver/private/dbgserverinterface.stl.
                DO NOT EDIT THIS FILE
*/



package com.ose.dbgserver.protocol;
import java.io.*;

public class DBGSetBp extends Message implements dbgserverinterfaceConstants{
   public int address;
   public int mainBid;
   public int tagList[]=new int[17];
   public byte triggCatch[];


   public DBGSetBp(int _address, int _mainBid, int _tagList[], byte _triggCatch[]) {
      address = _address;
      mainBid = _mainBid;
      tagList = _tagList;
      triggCatch = _triggCatch;
   }

   public DBGSetBp(DataInputStream _s) throws IOException { signalNo = 33050; read(_s);}
   public final void sendMessage(DataOutputStream _s) throws IOException { write(_s, this.address, this.mainBid, this.tagList, this.triggCatch);}
   public final static void write(DataOutputStream _s, int _address, int _mainBid, int _tagList[], byte _triggCatch[]   ) throws IOException {
         int _i;
         _s.writeInt(DBGSETBP);
         int _size=84
            +4+_triggCatch.length
            ;
         _s.writeInt(_size);
         _s.writeInt(_address);
         _s.writeInt(_mainBid);
         for(_i = 0 ; _i < 17 ; _i++) 
            _s.writeInt(_tagList[_i]);
         int _dynSize=84;
         int _bytes2Skip;

         // write triggCatch
         _bytes2Skip=4-_dynSize&3;
         for(_i=0;_i<_bytes2Skip;_i++) _s.writeByte(0);
         _dynSize+=_bytes2Skip;
         _s.writeInt(_triggCatch.length);
         _dynSize+=_triggCatch.length;
         _s.write(_triggCatch);
   }
   public final void read(DataInputStream _s) throws IOException {
         int _i;
         int _size=_s.readInt();
         address=_s.readInt();
         mainBid=_s.readInt();
         for(_i = 0 ; _i < 17 ; _i++) 
            tagList[_i]=_s.readInt();
         int _dynSize=84;
         int _bytes2Skip;

         // read triggCatch
         _bytes2Skip=4-_dynSize&3;
         if(_bytes2Skip!=0) {_s.skipBytes(_bytes2Skip);_dynSize+=_bytes2Skip;}
         _size=_s.readInt();
         _dynSize+=_size;
         triggCatch=new byte[_size];
         _s.readFully(triggCatch,0,_size);
   }
}
