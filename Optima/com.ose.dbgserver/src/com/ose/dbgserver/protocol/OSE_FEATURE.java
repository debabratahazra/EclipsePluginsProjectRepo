/*
     This module was generated automatically from /vobs/ose5/core_ext/dbgserver/private/dbgserverinterface.stl.
                DO NOT EDIT THIS FILE
*/




package com.ose.dbgserver.protocol;

/**
 * OSE dbgserver interface features.
 */
interface OSE_FEATURE
{
    public final int END = 0;
    public final int BASIC_EVACT = 1; //  The evact system is supported.
    public final int BASIC_MEMORY_PROF_FEATURE = 2; //  Memory profiler is supported.
    public final int BASIC_CPU_PROF = 3; //  CPU profiler is supported.
    public final int BASIC_PRH = 4; //  List programs are supported.
    public final int SIGNAL_SENDING = 5; //  Signal sendings are supported.
    public final int CHILD_SPAWN = 6; //  The dbgserver can spawn itself.
    public final int READ_MEMORY = 7; //  Can read memory.
    public final int FULL_SIG_QUEUE = 8; //  List verbose signal queues.
    public final int BASIC_SLD = 9; //  == LIMITED_SLD + SLD_APPL_SCOPE + SLD_CATCH_SCOPE + SLD_TRIGG_SCOPE + SLD_PROC_STEP + SLD_FULL_SCOPE_SYNTAX
    public final int WRITE_MEMORY = 10; //  Can write memory.
    public final int BASIC_IOPC = 11; //  IOPC is supported.
    public final int EVACT_SCOPES = 12; //  Evact scopes are supported.
    public final int DBG_SET_BP = 13; //  The new more advanced set bp
    public final int NO_EVACT_CREATE_KILL = 14; //  NEGATIVE no create/kill evacts.
    public final int EVACT_CREATE_KILL = 15; //  create / kill evacts
    public final int NO_EVACT_STATES = 16; //  NEGATIVE evact states.
    public final int EVACT_STATES = 17; //  evact states.
    public final int DEBUG_CONSOLE = 18; //  The debug console is supported.
    public final int LIMITED_SLD = 19; //  Fundamental source level debug (includes SLD_READ_REGISTERS).
    public final int SLD_APPL_SCOPE = 20; //  Source code application scope.
    public final int SLD_CATCH_SCOPE = 21; //  SLD breakpoints supports catch scopes.
    public final int SLD_TRIGG_SCOPE = 22; //  SLD breakpoints supports trigg scopes.
    public final int SLD_SINGLE_STEP = 23; //  SLD single step (if SLD_CATCH_SCOPE then this is process aware).
    public final int SLD_FULL_SCOPE_SYNTAX = 24; //  The scopes that are used supports both wild card strings and list of ids.
    public final int LDM_VARS = 25; //  LDM mode variables can be read and set
    public final int CURRENT_PROCESS = 26; //  The DBGGetCurrentProcess signal is supported
    public final int SLD_READ_REGISTERS = 27; //  Support reading of registers.
}
